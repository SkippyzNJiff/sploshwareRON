#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_VKS

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ANIMBP_VKS_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_VKS.ANIMBP_VKS_C
// 0x06C0 (0x0A30 - 0x0370)
class UANIMBP_VKS_C final : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ANIMBP_VKS::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                   // 0x0378(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0380(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0388(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0390(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x03B0(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x03D0(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x04C0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0508(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0530(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0558(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0680(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x06A0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x06E8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0730(0x0080)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_1;                      // 0x07B0(0x0010)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x07C0(0x0010)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x07D0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x08F8(0x0128)()
	double                                        Mag01Alpha;                                        // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScopeAdjustAlpha;                                  // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_DropSpeedReloadMagazine();
	void AnimNotify_ShowMag();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_VKS_AnimGraphNode_BlendListByBool_28F8CEA94DB40D8573439F813FDB66AE();
	void ExecuteUbergraph_ANIMBP_VKS(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_VKS_C">();
	}
	static class UANIMBP_VKS_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_VKS_C>();
	}
};
static_assert(alignof(UANIMBP_VKS_C) == 0x000010, "Wrong alignment on UANIMBP_VKS_C");
static_assert(sizeof(UANIMBP_VKS_C) == 0x000A30, "Wrong size on UANIMBP_VKS_C");
static_assert(offsetof(UANIMBP_VKS_C, UberGraphFrame) == 0x000370, "Member 'UANIMBP_VKS_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, __AnimBlueprintMutables) == 0x000378, "Member 'UANIMBP_VKS_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimBlueprintExtension_PropertyAccess) == 0x000380, "Member 'UANIMBP_VKS_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimBlueprintExtension_Base) == 0x000388, "Member 'UANIMBP_VKS_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_Root) == 0x000390, "Member 'UANIMBP_VKS_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_LocalToComponentSpace) == 0x0003B0, "Member 'UANIMBP_VKS_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_LayeredBoneBlend) == 0x0003D0, "Member 'UANIMBP_VKS_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_Slot_1) == 0x0004C0, "Member 'UANIMBP_VKS_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_UseCachedPose_1) == 0x000508, "Member 'UANIMBP_VKS_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_UseCachedPose) == 0x000530, "Member 'UANIMBP_VKS_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_ModifyBone_2) == 0x000558, "Member 'UANIMBP_VKS_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_ComponentToLocalSpace) == 0x000680, "Member 'UANIMBP_VKS_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_Slot) == 0x0006A0, "Member 'UANIMBP_VKS_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_BlendListByBool) == 0x0006E8, "Member 'UANIMBP_VKS_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_SaveCachedPose) == 0x000730, "Member 'UANIMBP_VKS_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_LocalRefPose_1) == 0x0007B0, "Member 'UANIMBP_VKS_C::AnimGraphNode_LocalRefPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_LocalRefPose) == 0x0007C0, "Member 'UANIMBP_VKS_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_ModifyBone_1) == 0x0007D0, "Member 'UANIMBP_VKS_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, AnimGraphNode_ModifyBone) == 0x0008F8, "Member 'UANIMBP_VKS_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, Mag01Alpha) == 0x000A20, "Member 'UANIMBP_VKS_C::Mag01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_VKS_C, ScopeAdjustAlpha) == 0x000A28, "Member 'UANIMBP_VKS_C::ScopeAdjustAlpha' has a wrong offset!");

}

