#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScoreboardEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ScoreboardEntry.W_ScoreboardEntry_C
// 0x00F8 (0x03B8 - 0x02C0)
class UW_ScoreboardEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Arrested_Text;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Arrests_Text;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Image;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BoardRank_Text;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Damage_Text;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Deaths_Text;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               HighlightSelf_Box;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Incapacitations_Text;                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Kills_Text;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Ping_Text;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerName_Text;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerRank_Text;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Score_Text;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Status_Text;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ETeamType                                     Team;                                              // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bSelf;                                             // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x2];                                      // 0x033A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BoardRank;                                         // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         PlayerRank;                                        // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Name_0;                                            // 0x0348(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         Score;                                             // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Kills;                                             // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Deaths;                                            // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Arrests;                                           // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Arrested;                                          // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Incapacitations;                                   // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EPlayerHealthStatus                           Status;                                            // 0x037C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ping;                                              // 0x0380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateColor                            DefaultColor;                                      // 0x0384(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            SelfColor;                                         // 0x0398(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 PlayerState;                                       // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_ScoreboardEntry(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetScoreboardText(class UTextBlock* InTextWidget, const class FText& InText);
	void UpdateEntry();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ScoreboardEntry_C">();
	}
	static class UW_ScoreboardEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ScoreboardEntry_C>();
	}
};
static_assert(alignof(UW_ScoreboardEntry_C) == 0x000008, "Wrong alignment on UW_ScoreboardEntry_C");
static_assert(sizeof(UW_ScoreboardEntry_C) == 0x0003B8, "Wrong size on UW_ScoreboardEntry_C");
static_assert(offsetof(UW_ScoreboardEntry_C, UberGraphFrame) == 0x0002C0, "Member 'UW_ScoreboardEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Arrested_Text) == 0x0002C8, "Member 'UW_ScoreboardEntry_C::Arrested_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Arrests_Text) == 0x0002D0, "Member 'UW_ScoreboardEntry_C::Arrests_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, BG_Image) == 0x0002D8, "Member 'UW_ScoreboardEntry_C::BG_Image' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, BoardRank_Text) == 0x0002E0, "Member 'UW_ScoreboardEntry_C::BoardRank_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Damage_Text) == 0x0002E8, "Member 'UW_ScoreboardEntry_C::Damage_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Deaths_Text) == 0x0002F0, "Member 'UW_ScoreboardEntry_C::Deaths_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, HighlightSelf_Box) == 0x0002F8, "Member 'UW_ScoreboardEntry_C::HighlightSelf_Box' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Incapacitations_Text) == 0x000300, "Member 'UW_ScoreboardEntry_C::Incapacitations_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Kills_Text) == 0x000308, "Member 'UW_ScoreboardEntry_C::Kills_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Ping_Text) == 0x000310, "Member 'UW_ScoreboardEntry_C::Ping_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, PlayerName_Text) == 0x000318, "Member 'UW_ScoreboardEntry_C::PlayerName_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, PlayerRank_Text) == 0x000320, "Member 'UW_ScoreboardEntry_C::PlayerRank_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Score_Text) == 0x000328, "Member 'UW_ScoreboardEntry_C::Score_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Status_Text) == 0x000330, "Member 'UW_ScoreboardEntry_C::Status_Text' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Team) == 0x000338, "Member 'UW_ScoreboardEntry_C::Team' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, bSelf) == 0x000339, "Member 'UW_ScoreboardEntry_C::bSelf' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, BoardRank) == 0x00033C, "Member 'UW_ScoreboardEntry_C::BoardRank' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, PlayerRank) == 0x000340, "Member 'UW_ScoreboardEntry_C::PlayerRank' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Name_0) == 0x000348, "Member 'UW_ScoreboardEntry_C::Name_0' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Score) == 0x000360, "Member 'UW_ScoreboardEntry_C::Score' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Damage) == 0x000364, "Member 'UW_ScoreboardEntry_C::Damage' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Kills) == 0x000368, "Member 'UW_ScoreboardEntry_C::Kills' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Deaths) == 0x00036C, "Member 'UW_ScoreboardEntry_C::Deaths' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Arrests) == 0x000370, "Member 'UW_ScoreboardEntry_C::Arrests' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Arrested) == 0x000374, "Member 'UW_ScoreboardEntry_C::Arrested' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Incapacitations) == 0x000378, "Member 'UW_ScoreboardEntry_C::Incapacitations' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Status) == 0x00037C, "Member 'UW_ScoreboardEntry_C::Status' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, Ping) == 0x000380, "Member 'UW_ScoreboardEntry_C::Ping' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, DefaultColor) == 0x000384, "Member 'UW_ScoreboardEntry_C::DefaultColor' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, SelfColor) == 0x000398, "Member 'UW_ScoreboardEntry_C::SelfColor' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardEntry_C, PlayerState) == 0x0003B0, "Member 'UW_ScoreboardEntry_C::PlayerState' has a wrong offset!");

}

