#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SubObjective_Entry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ST_SubObjective_Entry_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_SubObjective_Entry.W_SubObjective_Entry_C
// 0x00B0 (0x0370 - 0x02C0)
class UW_SubObjective_Entry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 div;                                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ObjectiveNotice;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Instruction;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_ObjState;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FST_SubObjective_Entry                 EntryData;                                         // 0x02E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Complete;                                          // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Failed;                                            // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          LastEntry;                                         // 0x0302(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHideInstruction;                                  // 0x0303(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CompletedIndent;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CompletedTextOpacity;                              // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ObjectiveDescription;                              // 0x0318(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FLinearColor                           col_FontFailed;                                    // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           col_FontNormal;                                    // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           col_FontInProgress;                                // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           col_FontComplete;                                  // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_SubObjective_Entry(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetState();
	void Update(bool Complete_0, bool Failed_0, const class FText& ObjectiveDescription_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_SubObjective_Entry_C">();
	}
	static class UW_SubObjective_Entry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_SubObjective_Entry_C>();
	}
};
static_assert(alignof(UW_SubObjective_Entry_C) == 0x000008, "Wrong alignment on UW_SubObjective_Entry_C");
static_assert(sizeof(UW_SubObjective_Entry_C) == 0x000370, "Wrong size on UW_SubObjective_Entry_C");
static_assert(offsetof(UW_SubObjective_Entry_C, UberGraphFrame) == 0x0002C0, "Member 'UW_SubObjective_Entry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, div) == 0x0002C8, "Member 'UW_SubObjective_Entry_C::div' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, ObjectiveNotice) == 0x0002D0, "Member 'UW_SubObjective_Entry_C::ObjectiveNotice' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, txt_Instruction) == 0x0002D8, "Member 'UW_SubObjective_Entry_C::txt_Instruction' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, txt_ObjState) == 0x0002E0, "Member 'UW_SubObjective_Entry_C::txt_ObjState' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, EntryData) == 0x0002E8, "Member 'UW_SubObjective_Entry_C::EntryData' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, Complete) == 0x000300, "Member 'UW_SubObjective_Entry_C::Complete' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, Failed) == 0x000301, "Member 'UW_SubObjective_Entry_C::Failed' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, LastEntry) == 0x000302, "Member 'UW_SubObjective_Entry_C::LastEntry' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, bHideInstruction) == 0x000303, "Member 'UW_SubObjective_Entry_C::bHideInstruction' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, CompletedIndent) == 0x000308, "Member 'UW_SubObjective_Entry_C::CompletedIndent' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, CompletedTextOpacity) == 0x000310, "Member 'UW_SubObjective_Entry_C::CompletedTextOpacity' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, ObjectiveDescription) == 0x000318, "Member 'UW_SubObjective_Entry_C::ObjectiveDescription' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, col_FontFailed) == 0x000330, "Member 'UW_SubObjective_Entry_C::col_FontFailed' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, col_FontNormal) == 0x000340, "Member 'UW_SubObjective_Entry_C::col_FontNormal' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, col_FontInProgress) == 0x000350, "Member 'UW_SubObjective_Entry_C::col_FontInProgress' has a wrong offset!");
static_assert(offsetof(UW_SubObjective_Entry_C, col_FontComplete) == 0x000360, "Member 'UW_SubObjective_Entry_C::col_FontComplete' has a wrong offset!");

}

