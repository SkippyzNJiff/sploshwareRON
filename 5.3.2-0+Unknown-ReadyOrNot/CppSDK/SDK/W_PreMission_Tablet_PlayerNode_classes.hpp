#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_PlayerNode

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "st_PreMissionPlayerNode_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet_PlayerNode.W_PreMission_Tablet_PlayerNode_C
// 0x0090 (0x0350 - 0x02C0)
class UW_PreMission_Tablet_PlayerNode_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animReveal;                                        // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Dot;                                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Designation;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Designation;                                       // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 PlayerName;                                        // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct Fst_PreMissionPlayerNode               PlayerInfo;                                        // 0x0310(0x0030)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerState*                 AssignedPlayerState;                               // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_PreMission_Tablet_PlayerNode(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetupWidget(int32 NewParam, const struct FLinearColor& NewParam2);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_PlayerNode_C">();
	}
	static class UW_PreMission_Tablet_PlayerNode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_PlayerNode_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_PlayerNode_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_PlayerNode_C");
static_assert(sizeof(UW_PreMission_Tablet_PlayerNode_C) == 0x000350, "Wrong size on UW_PreMission_Tablet_PlayerNode_C");
static_assert(offsetof(UW_PreMission_Tablet_PlayerNode_C, UberGraphFrame) == 0x0002C0, "Member 'UW_PreMission_Tablet_PlayerNode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_PlayerNode_C, animReveal) == 0x0002C8, "Member 'UW_PreMission_Tablet_PlayerNode_C::animReveal' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_PlayerNode_C, Dot) == 0x0002D0, "Member 'UW_PreMission_Tablet_PlayerNode_C::Dot' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_PlayerNode_C, txt_Designation) == 0x0002D8, "Member 'UW_PreMission_Tablet_PlayerNode_C::txt_Designation' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_PlayerNode_C, Color) == 0x0002E0, "Member 'UW_PreMission_Tablet_PlayerNode_C::Color' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_PlayerNode_C, Designation) == 0x0002F0, "Member 'UW_PreMission_Tablet_PlayerNode_C::Designation' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_PlayerNode_C, PlayerName) == 0x000300, "Member 'UW_PreMission_Tablet_PlayerNode_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_PlayerNode_C, PlayerInfo) == 0x000310, "Member 'UW_PreMission_Tablet_PlayerNode_C::PlayerInfo' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_PlayerNode_C, ID) == 0x000340, "Member 'UW_PreMission_Tablet_PlayerNode_C::ID' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_PlayerNode_C, AssignedPlayerState) == 0x000348, "Member 'UW_PreMission_Tablet_PlayerNode_C::AssignedPlayerState' has a wrong offset!");

}

