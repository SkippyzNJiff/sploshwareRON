#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_MP510

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "ANIMBP_MP510_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_MP510.ANIMBP_MP510_C
// 0x0B70 (0x0EE0 - 0x0370)
class UANIMBP_MP510_C final : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ANIMBP_MP510::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                 // 0x0378(0x0003)(HasGetValueTypeHash)
	uint8                                         Pad_37B[0x5];                                      // 0x037B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0380(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0388(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0390(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x03B0(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x04D8(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x04F8(0x00F0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x05E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0630(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0678(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x07A0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x07C0(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x0808(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0828(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0950(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0970(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x09B8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x09D8(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0B00(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0B20(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0B68(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0B88(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0BD0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0C18(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0C60(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0CA8(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0D28(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0E18(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0E60(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0E88(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0EB0(0x0020)()
	double                                        Mag_01Alpha;                                       // 0x0ED0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CurrentFireMode;                                   // 0x0ED8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_DropSpeedReloadMagazine();
	void AnimNotify_ShowMag();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_MP510_AnimGraphNode_BlendListByBool_046358884859E10A31499EB86A49D5E0();
	void ExecuteUbergraph_ANIMBP_MP510(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_MP510_C">();
	}
	static class UANIMBP_MP510_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_MP510_C>();
	}
};
static_assert(alignof(UANIMBP_MP510_C) == 0x000010, "Wrong alignment on UANIMBP_MP510_C");
static_assert(sizeof(UANIMBP_MP510_C) == 0x000EE0, "Wrong size on UANIMBP_MP510_C");
static_assert(offsetof(UANIMBP_MP510_C, UberGraphFrame) == 0x000370, "Member 'UANIMBP_MP510_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, __AnimBlueprintMutables) == 0x000378, "Member 'UANIMBP_MP510_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimBlueprintExtension_PropertyAccess) == 0x000380, "Member 'UANIMBP_MP510_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimBlueprintExtension_Base) == 0x000388, "Member 'UANIMBP_MP510_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_Root) == 0x000390, "Member 'UANIMBP_MP510_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ModifyBone_3) == 0x0003B0, "Member 'UANIMBP_MP510_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x0004D8, "Member 'UANIMBP_MP510_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0004F8, "Member 'UANIMBP_MP510_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_BlendListByEnum) == 0x0005E8, "Member 'UANIMBP_MP510_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer_5) == 0x000630, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ModifyBone_2) == 0x000678, "Member 'UANIMBP_MP510_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0007A0, "Member 'UANIMBP_MP510_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer_4) == 0x0007C0, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LocalToComponentSpace_3) == 0x000808, "Member 'UANIMBP_MP510_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ModifyBone_1) == 0x000828, "Member 'UANIMBP_MP510_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000950, "Member 'UANIMBP_MP510_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer_3) == 0x000970, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LocalToComponentSpace_2) == 0x0009B8, "Member 'UANIMBP_MP510_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ModifyBone) == 0x0009D8, "Member 'UANIMBP_MP510_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_ComponentToLocalSpace) == 0x000B00, "Member 'UANIMBP_MP510_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer_2) == 0x000B20, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000B68, "Member 'UANIMBP_MP510_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_Slot_1) == 0x000B88, "Member 'UANIMBP_MP510_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_BlendListByBool) == 0x000BD0, "Member 'UANIMBP_MP510_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer_1) == 0x000C18, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SequencePlayer) == 0x000C60, "Member 'UANIMBP_MP510_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_SaveCachedPose) == 0x000CA8, "Member 'UANIMBP_MP510_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LayeredBoneBlend) == 0x000D28, "Member 'UANIMBP_MP510_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_Slot) == 0x000E18, "Member 'UANIMBP_MP510_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_UseCachedPose_1) == 0x000E60, "Member 'UANIMBP_MP510_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_UseCachedPose) == 0x000E88, "Member 'UANIMBP_MP510_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, AnimGraphNode_LocalToComponentSpace) == 0x000EB0, "Member 'UANIMBP_MP510_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, Mag_01Alpha) == 0x000ED0, "Member 'UANIMBP_MP510_C::Mag_01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP510_C, CurrentFireMode) == 0x000ED8, "Member 'UANIMBP_MP510_C::CurrentFireMode' has a wrong offset!");

}

