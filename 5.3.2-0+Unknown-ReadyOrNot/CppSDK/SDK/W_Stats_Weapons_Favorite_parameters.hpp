#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Stats_Weapons_Favorite

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_Weapons_Favorite_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_BackPage) == 0x000001, "Wrong alignment on W_Stats_Weapons_Favorite_C_BackPage");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_BackPage) == 0x000001, "Wrong size on W_Stats_Weapons_Favorite_C_BackPage");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_BackPage, Handled) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_BackPage::Handled' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_Weapons_Favorite_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_ChangePage) == 0x000004, "Wrong alignment on W_Stats_Weapons_Favorite_C_ChangePage");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_ChangePage) == 0x000008, "Wrong size on W_Stats_Weapons_Favorite_C_ChangePage");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ChangePage, PageName) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_ChangePage::PageName' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.CompareWithFriend
// 0x01C8 (0x01C8 - 0x0000)
struct W_Stats_Weapons_Favorite_C_CompareWithFriend final
{
public:
	struct FFriend                                Friend;                                            // 0x0000(0x01C8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_CompareWithFriend) == 0x000008, "Wrong alignment on W_Stats_Weapons_Favorite_C_CompareWithFriend");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_CompareWithFriend) == 0x0001C8, "Wrong size on W_Stats_Weapons_Favorite_C_CompareWithFriend");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_CompareWithFriend, Friend) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_CompareWithFriend::Friend' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.ExecuteUbergraph_W_Stats_Weapons_Favorite
// 0x0230 (0x0230 - 0x0000)
struct W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInitialized_ReturnValue;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatSubsystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_StatID;                               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFriend                                K2Node_Event_Friend;                               // 0x0068(0x01C8)()
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite) == 0x000008, "Wrong alignment on W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite) == 0x000230, "Wrong size on W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, EntryPoint) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, CallFunc_GetStatSubsystem_ReturnValue) == 0x000008, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::CallFunc_GetStatSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, CallFunc_IsInitialized_ReturnValue) == 0x000024, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::CallFunc_IsInitialized_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, K2Node_Event_Delay_1) == 0x000038, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, K2Node_Event_Delay) == 0x000040, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, K2Node_Event_Collapse) == 0x000048, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, K2Node_Event_IsGamepad) == 0x000049, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, K2Node_Event_PageName) == 0x00004C, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, K2Node_Event_IsDesignTime) == 0x000054, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, K2Node_Event_StatID) == 0x000058, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::K2Node_Event_StatID' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite, K2Node_Event_Friend) == 0x000068, "Member 'W_Stats_Weapons_Favorite_C_ExecuteUbergraph_W_Stats_Weapons_Favorite::K2Node_Event_Friend' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Stats_Weapons_Favorite_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_Hide) == 0x000008, "Wrong alignment on W_Stats_Weapons_Favorite_C_Hide");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_Hide) == 0x000010, "Wrong size on W_Stats_Weapons_Favorite_C_Hide");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_Hide, Delay) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_Hide, Collapse) == 0x000008, "Member 'W_Stats_Weapons_Favorite_C_Hide::Collapse' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.OnStatChanged
// 0x0010 (0x0010 - 0x0000)
struct W_Stats_Weapons_Favorite_C_OnStatChanged final
{
public:
	class FString                                 StatID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_OnStatChanged) == 0x000008, "Wrong alignment on W_Stats_Weapons_Favorite_C_OnStatChanged");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_OnStatChanged) == 0x000010, "Wrong size on W_Stats_Weapons_Favorite_C_OnStatChanged");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_OnStatChanged, StatID) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_OnStatChanged::StatID' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_Weapons_Favorite_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_PreConstruct) == 0x000001, "Wrong alignment on W_Stats_Weapons_Favorite_C_PreConstruct");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_PreConstruct) == 0x000001, "Wrong size on W_Stats_Weapons_Favorite_C_PreConstruct");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_Weapons_Favorite_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_Reveal) == 0x000008, "Wrong alignment on W_Stats_Weapons_Favorite_C_Reveal");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_Reveal) == 0x000008, "Wrong size on W_Stats_Weapons_Favorite_C_Reveal");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_Reveal, Delay) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_Reveal::Delay' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_Weapons_Favorite_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_SetInputMode) == 0x000001, "Wrong alignment on W_Stats_Weapons_Favorite_C_SetInputMode");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_SetInputMode) == 0x000001, "Wrong size on W_Stats_Weapons_Favorite_C_SetInputMode");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.UpdateStats
// 0x0248 (0x0248 - 0x0000)
struct W_Stats_Weapons_Favorite_C_UpdateStats final
{
public:
	class FString                                 WeaponName_Compare;                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 WeaponName;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class ABaseItem*>                      Itemlist;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ERONStatType                                  Temp_wildcard_Variable;                            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0060(0x0018)()
	class FString                                 Temp_string_Variable_1;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Temp_int64_Variable;                               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetFriendStatString_ReturnValue;          // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0110(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0128(0x0018)()
	class ABaseItem*                              CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoadoutManager*                        CallFunc_Get_ReturnValue;                          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABaseItem*>                      CallFunc_GetLongTacticalItems_ReturnValue;         // 0x0178(0x0010)(ConstParm, ReferenceParm)
	TArray<class ABaseItem*>                      CallFunc_GetSecondaryWeapons_ReturnValue;          // 0x0188(0x0010)(ConstParm, ReferenceParm)
	TArray<class ABaseItem*>                      CallFunc_GetPrimaryWeapons_ReturnValue;            // 0x0198(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_GetStatString_ReturnValue;                // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item_2;                         // 0x01D0(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatDefinition                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x01E8(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_UpdateStats) == 0x000008, "Wrong alignment on W_Stats_Weapons_Favorite_C_UpdateStats");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_UpdateStats) == 0x000248, "Wrong size on W_Stats_Weapons_Favorite_C_UpdateStats");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, WeaponName_Compare) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::WeaponName_Compare' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, WeaponName) == 0x000010, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::WeaponName' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Itemlist) == 0x000020, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Itemlist' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_int_Array_Index_Variable) == 0x000034, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_MakeLiteralByte_ReturnValue) == 0x000039, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_string_Variable) == 0x000040, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_wildcard_Variable) == 0x000050, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_text_Variable) == 0x000060, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_string_Variable_1) == 0x000078, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000088, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_int64_Variable) == 0x000090, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_int64_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Not_PreBool_ReturnValue_1) == 0x000098, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_bool_Variable) == 0x000099, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_bool_Variable_1) == 0x00009A, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_int_Array_Index_Variable_1) == 0x00009C, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_int_Loop_Counter_Variable_1) == 0x0000A0, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B8, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000C9, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_BooleanAND_ReturnValue) == 0x0000CA, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_GetStatSubsystem_ReturnValue) == 0x0000D0, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_GetStatSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_GetStatSubsystem_ReturnValue_1) == 0x0000D8, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_GetStatSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_GetFriendStatString_ReturnValue) == 0x0000E0, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_GetFriendStatString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_IsEmpty_ReturnValue) == 0x0000F0, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F8, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, Temp_text_Variable_1) == 0x000110, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, K2Node_Select_Default) == 0x000128, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Array_Length_ReturnValue_1) == 0x000148, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Less_IntInt_ReturnValue_1) == 0x00014C, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_BooleanAND_ReturnValue_1) == 0x00014D, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000150, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000160, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Get_ReturnValue) == 0x000168, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, K2Node_SwitchString_CmpSuccess) == 0x000170, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_GetLongTacticalItems_ReturnValue) == 0x000178, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_GetLongTacticalItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_GetSecondaryWeapons_ReturnValue) == 0x000188, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_GetSecondaryWeapons_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_GetPrimaryWeapons_ReturnValue) == 0x000198, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_GetPrimaryWeapons_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_GetStatString_ReturnValue) == 0x0001A8, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_GetStatString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_SelectString_ReturnValue) == 0x0001B8, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001C8, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_Array_Get_Item_2) == 0x0001D0, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_IsValid_ReturnValue) == 0x0001E0, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001E8, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStats, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000240, "Member 'W_Stats_Weapons_Favorite_C_UpdateStats::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.UpdateStyle
// 0x0058 (0x0058 - 0x0000)
struct W_Stats_Weapons_Favorite_C_UpdateStyle final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x001C(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0030(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0044(0x0014)()
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_UpdateStyle) == 0x000004, "Wrong alignment on W_Stats_Weapons_Favorite_C_UpdateStyle");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_UpdateStyle) == 0x000058, "Wrong size on W_Stats_Weapons_Favorite_C_UpdateStyle");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStyle, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_UpdateStyle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStyle, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'W_Stats_Weapons_Favorite_C_UpdateStyle::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStyle, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'W_Stats_Weapons_Favorite_C_UpdateStyle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStyle, K2Node_MakeStruct_SlateColor_1) == 0x00001C, "Member 'W_Stats_Weapons_Favorite_C_UpdateStyle::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStyle, K2Node_MakeStruct_SlateColor_2) == 0x000030, "Member 'W_Stats_Weapons_Favorite_C_UpdateStyle::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_UpdateStyle, K2Node_MakeStruct_SlateColor_3) == 0x000044, "Member 'W_Stats_Weapons_Favorite_C_UpdateStyle::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");

// Function W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_Weapons_Favorite_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Weapons_Favorite_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Stats_Weapons_Favorite_C_GetFocusTarget");
static_assert(sizeof(W_Stats_Weapons_Favorite_C_GetFocusTarget) == 0x000008, "Wrong size on W_Stats_Weapons_Favorite_C_GetFocusTarget");
static_assert(offsetof(W_Stats_Weapons_Favorite_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Stats_Weapons_Favorite_C_GetFocusTarget::Focus' has a wrong offset!");

}

