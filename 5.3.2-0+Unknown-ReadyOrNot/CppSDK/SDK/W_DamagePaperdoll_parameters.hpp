#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DamagePaperdoll

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.Apply Damage State
// 0x0058 (0x0058 - 0x0000)
struct W_DamagePaperdoll_C_Apply_Damage_State final
{
public:
	class UImage*                                 InImage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bDamagedLimb;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFlashingLimb;                                     // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LimbHealth;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             Event;                                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetLimbDamaged_bNewlyDamaged;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_Apply_Damage_State) == 0x000008, "Wrong alignment on W_DamagePaperdoll_C_Apply_Damage_State");
static_assert(sizeof(W_DamagePaperdoll_C_Apply_Damage_State) == 0x000058, "Wrong size on W_DamagePaperdoll_C_Apply_Damage_State");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, InImage) == 0x000000, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::InImage' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, bDamagedLimb) == 0x000008, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::bDamagedLimb' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, bFlashingLimb) == 0x000009, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::bFlashingLimb' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, LimbHealth) == 0x000010, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::LimbHealth' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, Event) == 0x000018, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::Event' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, CallFunc_SetLimbDamaged_bNewlyDamaged) == 0x000030, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::CallFunc_SetLimbDamaged_bNewlyDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, CallFunc_LinearColorLerp_ReturnValue) == 0x000034, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000050, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Apply_Damage_State, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000054, "Member 'W_DamagePaperdoll_C_Apply_Damage_State::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.bodyPartDamaged
// 0x0008 (0x0008 - 0x0000)
struct W_DamagePaperdoll_C_bodyPartDamaged final
{
public:
	bool                                          bHeadDamaged;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBodyDamaged;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeftArmDamaged;                                   // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRightArmDamaged;                                  // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeftLegDamaged;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRightLegDamaged;                                  // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeftFootDamaged;                                  // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRightFootDamaged;                                 // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_bodyPartDamaged) == 0x000001, "Wrong alignment on W_DamagePaperdoll_C_bodyPartDamaged");
static_assert(sizeof(W_DamagePaperdoll_C_bodyPartDamaged) == 0x000008, "Wrong size on W_DamagePaperdoll_C_bodyPartDamaged");
static_assert(offsetof(W_DamagePaperdoll_C_bodyPartDamaged, bHeadDamaged) == 0x000000, "Member 'W_DamagePaperdoll_C_bodyPartDamaged::bHeadDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_bodyPartDamaged, bBodyDamaged) == 0x000001, "Member 'W_DamagePaperdoll_C_bodyPartDamaged::bBodyDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_bodyPartDamaged, bLeftArmDamaged) == 0x000002, "Member 'W_DamagePaperdoll_C_bodyPartDamaged::bLeftArmDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_bodyPartDamaged, bRightArmDamaged) == 0x000003, "Member 'W_DamagePaperdoll_C_bodyPartDamaged::bRightArmDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_bodyPartDamaged, bLeftLegDamaged) == 0x000004, "Member 'W_DamagePaperdoll_C_bodyPartDamaged::bLeftLegDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_bodyPartDamaged, bRightLegDamaged) == 0x000005, "Member 'W_DamagePaperdoll_C_bodyPartDamaged::bRightLegDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_bodyPartDamaged, bLeftFootDamaged) == 0x000006, "Member 'W_DamagePaperdoll_C_bodyPartDamaged::bLeftFootDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_bodyPartDamaged, bRightFootDamaged) == 0x000007, "Member 'W_DamagePaperdoll_C_bodyPartDamaged::bRightFootDamaged' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.ExecuteUbergraph_W_DamagePaperdoll
// 0x0268 (0x0268 - 0x0000)
struct W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_Event_Player;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABasePlayer_C*                          K2Node_DynamicCast_AsBase_Player;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bHeadDamaged, bool bBodyDamaged, bool bLeftArmDamaged, bool bRightArmDamaged, bool bLeftLegDamaged, bool bRightLegDamaged, bool bLeftFootDamaged, bool bRightFootDamaged)> K2Node_CreateDelegate_OutputDelegate_2; // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABaseItem* Item)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Health;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UImage*>                         K2Node_MakeArray_Array_1;                          // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UImage*>                         K2Node_MakeArray_Array_2;                          // 0x00F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UImage*>                         K2Node_MakeArray_Array_3;                          // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UImage*>                         K2Node_MakeArray_Array_4;                          // 0x0118(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UImage*>                         K2Node_MakeArray_Array_5;                          // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UImage*>                         K2Node_MakeArray_Array_6;                          // 0x0138(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHeadDamaged;                   // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bBodyDamaged;                   // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLeftArmDamaged;                // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRightArmDamaged;               // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLeftLegDamaged;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRightLegDamaged;               // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLeftFootDamaged;               // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bRightFootDamaged;              // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadShowHealthIconSetting_bShowHealthIcons; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadShowHealthIconSetting_ReturnValue;    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              K2Node_CustomEvent_Item;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNormalizedResource_ReturnValue;        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01B0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_2;                         // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_3;                         // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_4;                         // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_5;                         // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_6;                         // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateHealthBP_Health_ImplicitCast;       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll) == 0x000008, "Wrong alignment on W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll");
static_assert(sizeof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll) == 0x000268, "Wrong size on W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, EntryPoint) == 0x000000, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_Event_Player) == 0x000008, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_DynamicCast_AsBase_Player) == 0x000020, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_DynamicCast_AsBase_Player' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Array_Index_Variable) == 0x000034, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Array_Index_Variable_2) == 0x000064, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CreateDelegate_OutputDelegate_3) == 0x000068, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Loop_Counter_Variable_2) == 0x000078, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Array_Index_Variable_3) == 0x000080, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CreateDelegate_OutputDelegate_4) == 0x000084, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Loop_Counter_Variable_3) == 0x000094, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Array_Index_Variable_4) == 0x000098, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Add_IntInt_ReturnValue_3) == 0x00009C, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Array_Index_Variable_5) == 0x0000A0, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Loop_Counter_Variable_4) == 0x0000A4, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000A8, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CustomEvent_Health) == 0x0000B0, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CustomEvent_Health' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_byte_Variable) == 0x0000B8, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_LinearColorLerp_ReturnValue) == 0x0000BC, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Array_Index_Variable_6) == 0x0000CC, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Loop_Counter_Variable_5) == 0x0000D0, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000D4, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_MakeArray_Array) == 0x0000D8, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_MakeArray_Array_1) == 0x0000E8, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_MakeArray_Array_2) == 0x0000F8, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_MakeArray_Array_3) == 0x000108, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_MakeArray_Array_4) == 0x000118, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_MakeArray_Array_5) == 0x000128, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_MakeArray_Array_6) == 0x000138, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Get_Item) == 0x000148, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CustomEvent_bHeadDamaged) == 0x000154, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CustomEvent_bHeadDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CustomEvent_bBodyDamaged) == 0x000155, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CustomEvent_bBodyDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CustomEvent_bLeftArmDamaged) == 0x000156, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CustomEvent_bLeftArmDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CustomEvent_bRightArmDamaged) == 0x000157, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CustomEvent_bRightArmDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CustomEvent_bLeftLegDamaged) == 0x000158, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CustomEvent_bLeftLegDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CustomEvent_bRightLegDamaged) == 0x000159, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CustomEvent_bRightLegDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CustomEvent_bLeftFootDamaged) == 0x00015A, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CustomEvent_bLeftFootDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CustomEvent_bRightFootDamaged) == 0x00015B, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CustomEvent_bRightFootDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Less_IntInt_ReturnValue) == 0x00015C, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_BooleanOR_ReturnValue) == 0x00015D, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_BooleanOR_ReturnValue_1) == 0x00015E, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_BooleanOR_ReturnValue_2) == 0x00015F, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_BooleanOR_ReturnValue_3) == 0x000160, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_BooleanOR_ReturnValue_4) == 0x000161, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000168, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000178, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_LoadShowHealthIconSetting_bShowHealthIcons) == 0x000180, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_LoadShowHealthIconSetting_bShowHealthIcons' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_LoadShowHealthIconSetting_ReturnValue) == 0x000181, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_LoadShowHealthIconSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_DynamicCast_AsPlayer_Character) == 0x000188, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_CustomEvent_Item) == 0x000198, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_GetNormalizedResource_ReturnValue) == 0x0001A4, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_GetNormalizedResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_byte_Variable_1) == 0x0001A8, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_bool_Variable) == 0x0001A9, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_Select_Default) == 0x0001AA, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001AB, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0001AC, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_Event_MyGeometry) == 0x0001B0, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, K2Node_Event_InDeltaTime) == 0x0001E8, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, Temp_int_Loop_Counter_Variable_6) == 0x0001EC, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Get_Item_1) == 0x0001F0, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Add_IntInt_ReturnValue_6) == 0x0001F8, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Length_ReturnValue_1) == 0x0001FC, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Less_IntInt_ReturnValue_1) == 0x000200, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Get_Item_2) == 0x000208, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Length_ReturnValue_2) == 0x000210, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Less_IntInt_ReturnValue_2) == 0x000214, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Get_Item_3) == 0x000218, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Length_ReturnValue_3) == 0x000220, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Less_IntInt_ReturnValue_3) == 0x000224, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Get_Item_4) == 0x000228, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Length_ReturnValue_4) == 0x000230, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Less_IntInt_ReturnValue_4) == 0x000234, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Get_Item_5) == 0x000238, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Length_ReturnValue_5) == 0x000240, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Less_IntInt_ReturnValue_5) == 0x000244, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Get_Item_6) == 0x000248, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Array_Length_ReturnValue_6) == 0x000250, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_Less_IntInt_ReturnValue_6) == 0x000254, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000258, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll, CallFunc_UpdateHealthBP_Health_ImplicitCast) == 0x000260, "Member 'W_DamagePaperdoll_C_ExecuteUbergraph_W_DamagePaperdoll::CallFunc_UpdateHealthBP_Health_ImplicitCast' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.GetArmDmgLeftVisibility
// 0x0003 (0x0003 - 0x0000)
struct W_DamagePaperdoll_C_GetArmDmgLeftVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_GetArmDmgLeftVisibility) == 0x000001, "Wrong alignment on W_DamagePaperdoll_C_GetArmDmgLeftVisibility");
static_assert(sizeof(W_DamagePaperdoll_C_GetArmDmgLeftVisibility) == 0x000003, "Wrong size on W_DamagePaperdoll_C_GetArmDmgLeftVisibility");
static_assert(offsetof(W_DamagePaperdoll_C_GetArmDmgLeftVisibility, ReturnValue) == 0x000000, "Member 'W_DamagePaperdoll_C_GetArmDmgLeftVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetArmDmgLeftVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_DamagePaperdoll_C_GetArmDmgLeftVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetArmDmgLeftVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'W_DamagePaperdoll_C_GetArmDmgLeftVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.GetArmDmgRightVisibility
// 0x0003 (0x0003 - 0x0000)
struct W_DamagePaperdoll_C_GetArmDmgRightVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_GetArmDmgRightVisibility) == 0x000001, "Wrong alignment on W_DamagePaperdoll_C_GetArmDmgRightVisibility");
static_assert(sizeof(W_DamagePaperdoll_C_GetArmDmgRightVisibility) == 0x000003, "Wrong size on W_DamagePaperdoll_C_GetArmDmgRightVisibility");
static_assert(offsetof(W_DamagePaperdoll_C_GetArmDmgRightVisibility, ReturnValue) == 0x000000, "Member 'W_DamagePaperdoll_C_GetArmDmgRightVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetArmDmgRightVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_DamagePaperdoll_C_GetArmDmgRightVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetArmDmgRightVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'W_DamagePaperdoll_C_GetArmDmgRightVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.GetHeadDmgVisibility
// 0x0003 (0x0003 - 0x0000)
struct W_DamagePaperdoll_C_GetHeadDmgVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_GetHeadDmgVisibility) == 0x000001, "Wrong alignment on W_DamagePaperdoll_C_GetHeadDmgVisibility");
static_assert(sizeof(W_DamagePaperdoll_C_GetHeadDmgVisibility) == 0x000003, "Wrong size on W_DamagePaperdoll_C_GetHeadDmgVisibility");
static_assert(offsetof(W_DamagePaperdoll_C_GetHeadDmgVisibility, ReturnValue) == 0x000000, "Member 'W_DamagePaperdoll_C_GetHeadDmgVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetHeadDmgVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_DamagePaperdoll_C_GetHeadDmgVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetHeadDmgVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'W_DamagePaperdoll_C_GetHeadDmgVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.GetLegDmgLeftVisibility
// 0x0003 (0x0003 - 0x0000)
struct W_DamagePaperdoll_C_GetLegDmgLeftVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_GetLegDmgLeftVisibility) == 0x000001, "Wrong alignment on W_DamagePaperdoll_C_GetLegDmgLeftVisibility");
static_assert(sizeof(W_DamagePaperdoll_C_GetLegDmgLeftVisibility) == 0x000003, "Wrong size on W_DamagePaperdoll_C_GetLegDmgLeftVisibility");
static_assert(offsetof(W_DamagePaperdoll_C_GetLegDmgLeftVisibility, ReturnValue) == 0x000000, "Member 'W_DamagePaperdoll_C_GetLegDmgLeftVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetLegDmgLeftVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_DamagePaperdoll_C_GetLegDmgLeftVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetLegDmgLeftVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'W_DamagePaperdoll_C_GetLegDmgLeftVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.GetLegDmgRightVisibility
// 0x0003 (0x0003 - 0x0000)
struct W_DamagePaperdoll_C_GetLegDmgRightVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_GetLegDmgRightVisibility) == 0x000001, "Wrong alignment on W_DamagePaperdoll_C_GetLegDmgRightVisibility");
static_assert(sizeof(W_DamagePaperdoll_C_GetLegDmgRightVisibility) == 0x000003, "Wrong size on W_DamagePaperdoll_C_GetLegDmgRightVisibility");
static_assert(offsetof(W_DamagePaperdoll_C_GetLegDmgRightVisibility, ReturnValue) == 0x000000, "Member 'W_DamagePaperdoll_C_GetLegDmgRightVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetLegDmgRightVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_DamagePaperdoll_C_GetLegDmgRightVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetLegDmgRightVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'W_DamagePaperdoll_C_GetLegDmgRightVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.GetTorsoDmgVisibility
// 0x0002 (0x0002 - 0x0000)
struct W_DamagePaperdoll_C_GetTorsoDmgVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_GetTorsoDmgVisibility) == 0x000001, "Wrong alignment on W_DamagePaperdoll_C_GetTorsoDmgVisibility");
static_assert(sizeof(W_DamagePaperdoll_C_GetTorsoDmgVisibility) == 0x000002, "Wrong size on W_DamagePaperdoll_C_GetTorsoDmgVisibility");
static_assert(offsetof(W_DamagePaperdoll_C_GetTorsoDmgVisibility, ReturnValue) == 0x000000, "Member 'W_DamagePaperdoll_C_GetTorsoDmgVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_GetTorsoDmgVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_DamagePaperdoll_C_GetTorsoDmgVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.OnItemAddedToInventory_Event_0
// 0x0008 (0x0008 - 0x0000)
struct W_DamagePaperdoll_C_OnItemAddedToInventory_Event_0 final
{
public:
	class ABaseItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_OnItemAddedToInventory_Event_0) == 0x000008, "Wrong alignment on W_DamagePaperdoll_C_OnItemAddedToInventory_Event_0");
static_assert(sizeof(W_DamagePaperdoll_C_OnItemAddedToInventory_Event_0) == 0x000008, "Wrong size on W_DamagePaperdoll_C_OnItemAddedToInventory_Event_0");
static_assert(offsetof(W_DamagePaperdoll_C_OnItemAddedToInventory_Event_0, Item) == 0x000000, "Member 'W_DamagePaperdoll_C_OnItemAddedToInventory_Event_0::Item' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.OnPlayerReady
// 0x0008 (0x0008 - 0x0000)
struct W_DamagePaperdoll_C_OnPlayerReady final
{
public:
	class APlayerCharacter*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_OnPlayerReady) == 0x000008, "Wrong alignment on W_DamagePaperdoll_C_OnPlayerReady");
static_assert(sizeof(W_DamagePaperdoll_C_OnPlayerReady) == 0x000008, "Wrong size on W_DamagePaperdoll_C_OnPlayerReady");
static_assert(offsetof(W_DamagePaperdoll_C_OnPlayerReady, Player) == 0x000000, "Member 'W_DamagePaperdoll_C_OnPlayerReady::Player' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.SetDamageState
// 0x02C0 (0x02C0 - 0x0000)
struct W_DamagePaperdoll_C_SetDamageState final
{
public:
	bool                                          bHeadHit;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBodyHit;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeftArmHit;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRightArmHit;                                      // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeftLegHit;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRightLegHit;                                      // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_3;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_4;                         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_5;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLimbHealthData                        CallFunc_GetLimbHealth_ReturnValue;                // 0x00DC(0x0034)(NoDestructor)
	struct FLimbHealthData                        CallFunc_GetLimbHealth_ReturnValue_1;              // 0x0110(0x0034)(NoDestructor)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLimbHealthData                        CallFunc_GetLimbHealth_ReturnValue_2;              // 0x0178(0x0034)(NoDestructor)
	struct FLimbHealthData                        CallFunc_GetLimbHealth_ReturnValue_3;              // 0x01AC(0x0034)(NoDestructor)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_6;           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_7;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLimbHealthData                        CallFunc_GetLimbHealth_ReturnValue_4;              // 0x0208(0x0034)(NoDestructor)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_8;           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNormalizedResource_ReturnValue;        // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_9;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0268(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0278(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0288(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0298(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x02A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Damage_State_LimbHealth_ImplicitCast; // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_SetDamageState) == 0x000008, "Wrong alignment on W_DamagePaperdoll_C_SetDamageState");
static_assert(sizeof(W_DamagePaperdoll_C_SetDamageState) == 0x0002C0, "Wrong size on W_DamagePaperdoll_C_SetDamageState");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, bHeadHit) == 0x000000, "Member 'W_DamagePaperdoll_C_SetDamageState::bHeadHit' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, bBodyHit) == 0x000001, "Member 'W_DamagePaperdoll_C_SetDamageState::bBodyHit' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, bLeftArmHit) == 0x000002, "Member 'W_DamagePaperdoll_C_SetDamageState::bLeftArmHit' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, bRightArmHit) == 0x000003, "Member 'W_DamagePaperdoll_C_SetDamageState::bRightArmHit' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, bLeftLegHit) == 0x000004, "Member 'W_DamagePaperdoll_C_SetDamageState::bLeftLegHit' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, bRightLegHit) == 0x000005, "Member 'W_DamagePaperdoll_C_SetDamageState::bRightLegHit' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Length_ReturnValue_1) == 0x00000C, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Length_ReturnValue_2) == 0x000010, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Length_ReturnValue_3) == 0x000014, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Array_Index_Variable) == 0x000018, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'W_DamagePaperdoll_C_SetDamageState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Array_Index_Variable_2) == 0x000050, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Loop_Counter_Variable_2) == 0x000054, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Array_Index_Variable_3) == 0x000058, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Array_Index_Variable_4) == 0x00006C, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Loop_Counter_Variable_3) == 0x000078, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Array_Index_Variable_5) == 0x00007C, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Get_Item_3) == 0x000080, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Add_IntInt_ReturnValue_3) == 0x00008C, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Loop_Counter_Variable_4) == 0x000090, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Less_IntInt_ReturnValue_2) == 0x000094, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Add_IntInt_ReturnValue_4) == 0x000098, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, Temp_int_Loop_Counter_Variable_5) == 0x00009C, "Member 'W_DamagePaperdoll_C_SetDamageState::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Get_Item_4) == 0x0000A0, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Length_ReturnValue_4) == 0x0000A8, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000AC, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000AD, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000B0, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x0000B8, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Get_Item_5) == 0x0000C0, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, K2Node_DynamicCast_AsPlayer_Character) == 0x0000C8, "Member 'W_DamagePaperdoll_C_SetDamageState::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'W_DamagePaperdoll_C_SetDamageState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Array_Length_ReturnValue_5) == 0x0000D4, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Less_IntInt_ReturnValue_5) == 0x0000D9, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_GetLimbHealth_ReturnValue) == 0x0000DC, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_GetLimbHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_GetLimbHealth_ReturnValue_1) == 0x000110, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_GetLimbHealth_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000148, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000150, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000158, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000160, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000168, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_GetLimbHealth_ReturnValue_2) == 0x000178, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_GetLimbHealth_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_GetLimbHealth_ReturnValue_3) == 0x0001AC, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_GetLimbHealth_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x0001E0, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x0001E8, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Conv_IntToDouble_ReturnValue_6) == 0x0001F0, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Conv_IntToDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0001F8, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Conv_IntToDouble_ReturnValue_7) == 0x000200, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Conv_IntToDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_GetLimbHealth_ReturnValue_4) == 0x000208, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_GetLimbHealth_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000240, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Conv_IntToDouble_ReturnValue_8) == 0x000248, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Conv_IntToDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_GetNormalizedResource_ReturnValue) == 0x000250, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_GetNormalizedResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Conv_IntToDouble_ReturnValue_9) == 0x000258, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Conv_IntToDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000260, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, K2Node_CreateDelegate_OutputDelegate_1) == 0x000268, "Member 'W_DamagePaperdoll_C_SetDamageState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, K2Node_CreateDelegate_OutputDelegate_2) == 0x000278, "Member 'W_DamagePaperdoll_C_SetDamageState::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, K2Node_CreateDelegate_OutputDelegate_3) == 0x000288, "Member 'W_DamagePaperdoll_C_SetDamageState::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, K2Node_CreateDelegate_OutputDelegate_4) == 0x000298, "Member 'W_DamagePaperdoll_C_SetDamageState::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002A8, "Member 'W_DamagePaperdoll_C_SetDamageState::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetDamageState, CallFunc_Apply_Damage_State_LimbHealth_ImplicitCast) == 0x0002B8, "Member 'W_DamagePaperdoll_C_SetDamageState::CallFunc_Apply_Damage_State_LimbHealth_ImplicitCast' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.SetLimbDamaged
// 0x0003 (0x0003 - 0x0000)
struct W_DamagePaperdoll_C_SetLimbDamaged final
{
public:
	bool                                          bLimb;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewlyDamaged;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_SetLimbDamaged) == 0x000001, "Wrong alignment on W_DamagePaperdoll_C_SetLimbDamaged");
static_assert(sizeof(W_DamagePaperdoll_C_SetLimbDamaged) == 0x000003, "Wrong size on W_DamagePaperdoll_C_SetLimbDamaged");
static_assert(offsetof(W_DamagePaperdoll_C_SetLimbDamaged, bLimb) == 0x000000, "Member 'W_DamagePaperdoll_C_SetLimbDamaged::bLimb' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetLimbDamaged, bNewlyDamaged) == 0x000001, "Member 'W_DamagePaperdoll_C_SetLimbDamaged::bNewlyDamaged' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_SetLimbDamaged, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'W_DamagePaperdoll_C_SetLimbDamaged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_DamagePaperdoll_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_Tick) == 0x000004, "Wrong alignment on W_DamagePaperdoll_C_Tick");
static_assert(sizeof(W_DamagePaperdoll_C_Tick) == 0x00003C, "Wrong size on W_DamagePaperdoll_C_Tick");
static_assert(offsetof(W_DamagePaperdoll_C_Tick, MyGeometry) == 0x000000, "Member 'W_DamagePaperdoll_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_Tick, InDeltaTime) == 0x000038, "Member 'W_DamagePaperdoll_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.UpdateHealthBP
// 0x0008 (0x0008 - 0x0000)
struct W_DamagePaperdoll_C_UpdateHealthBP final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_UpdateHealthBP) == 0x000008, "Wrong alignment on W_DamagePaperdoll_C_UpdateHealthBP");
static_assert(sizeof(W_DamagePaperdoll_C_UpdateHealthBP) == 0x000008, "Wrong size on W_DamagePaperdoll_C_UpdateHealthBP");
static_assert(offsetof(W_DamagePaperdoll_C_UpdateHealthBP, Health) == 0x000000, "Member 'W_DamagePaperdoll_C_UpdateHealthBP::Health' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.UpdatePaperdollPartToHealedColor
// 0x00B8 (0x00B8 - 0x0000)
struct W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor final
{
public:
	bool                                          bRightArm;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LeftArm;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Torso;                                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Head;                                              // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Right_Leg;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Left_Leg;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_2;  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_3;  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_4;  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_5;  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor) == 0x000008, "Wrong alignment on W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor");
static_assert(sizeof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor) == 0x0000B8, "Wrong size on W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, bRightArm) == 0x000000, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::bRightArm' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, LeftArm) == 0x000001, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::LeftArm' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, Torso) == 0x000002, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::Torso' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, Head) == 0x000003, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::Head' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, Right_Leg) == 0x000004, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::Right_Leg' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, Left_Leg) == 0x000005, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::Left_Leg' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_Not_PreBool_ReturnValue_1) == 0x000007, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_Not_PreBool_ReturnValue_2) == 0x000008, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_Not_PreBool_ReturnValue_3) == 0x000009, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_Not_PreBool_ReturnValue_4) == 0x00000A, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, K2Node_CreateDelegate_OutputDelegate_3) == 0x00003C, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, K2Node_CreateDelegate_OutputDelegate_4) == 0x00004C, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, K2Node_CreateDelegate_OutputDelegate_5) == 0x00005C, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000078, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000080, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000088, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x000090, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x000098, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0000A0, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x0000A4, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_2) == 0x0000A8, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_3) == 0x0000AC, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_4) == 0x0000B0, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_5) == 0x0000B4, "Member 'W_DamagePaperdoll_C_UpdatePaperdollPartToHealedColor::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_5' has a wrong offset!");

// Function W_DamagePaperdoll.W_DamagePaperdoll_C.UpdatePartsVisibility
// 0x00A8 (0x00A8 - 0x0000)
struct W_DamagePaperdoll_C_UpdatePartsVisibility final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_3;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_4;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_5;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetTorsoDmgVisibility_ReturnValue;        // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetLegDmgRightVisibility_ReturnValue;     // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetLegDmgLeftVisibility_ReturnValue;      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetArmDmgRightVisibility_ReturnValue;     // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetHeadDmgVisibility_ReturnValue;         // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetArmDmgLeftVisibility_ReturnValue;      // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DamagePaperdoll_C_UpdatePartsVisibility) == 0x000008, "Wrong alignment on W_DamagePaperdoll_C_UpdatePartsVisibility");
static_assert(sizeof(W_DamagePaperdoll_C_UpdatePartsVisibility) == 0x0000A8, "Wrong size on W_DamagePaperdoll_C_UpdatePartsVisibility");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Loop_Counter_Variable_3) == 0x000024, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Loop_Counter_Variable_4) == 0x000028, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Add_IntInt_ReturnValue_3) == 0x00002C, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Add_IntInt_ReturnValue_4) == 0x000030, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Array_Index_Variable_3) == 0x000034, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Loop_Counter_Variable_5) == 0x000038, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Add_IntInt_ReturnValue_5) == 0x00003C, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Array_Index_Variable_4) == 0x000040, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, Temp_int_Array_Index_Variable_5) == 0x000044, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Get_Item) == 0x000048, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x000061, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Get_Item_3) == 0x000070, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Length_ReturnValue_3) == 0x00007C, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Less_IntInt_ReturnValue_2) == 0x000080, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Less_IntInt_ReturnValue_3) == 0x000081, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Get_Item_4) == 0x000088, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Get_Item_5) == 0x000090, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Length_ReturnValue_4) == 0x000098, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Array_Length_ReturnValue_5) == 0x00009C, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000A0, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_Less_IntInt_ReturnValue_5) == 0x0000A1, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_GetTorsoDmgVisibility_ReturnValue) == 0x0000A2, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_GetTorsoDmgVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_GetLegDmgRightVisibility_ReturnValue) == 0x0000A3, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_GetLegDmgRightVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_GetLegDmgLeftVisibility_ReturnValue) == 0x0000A4, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_GetLegDmgLeftVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_GetArmDmgRightVisibility_ReturnValue) == 0x0000A5, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_GetArmDmgRightVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_GetHeadDmgVisibility_ReturnValue) == 0x0000A6, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_GetHeadDmgVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DamagePaperdoll_C_UpdatePartsVisibility, CallFunc_GetArmDmgLeftVisibility_ReturnValue) == 0x0000A7, "Member 'W_DamagePaperdoll_C_UpdatePartsVisibility::CallFunc_GetArmDmgLeftVisibility_ReturnValue' has a wrong offset!");

}

