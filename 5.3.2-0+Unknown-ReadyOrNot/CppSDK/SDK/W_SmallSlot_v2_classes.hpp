#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SmallSlot_v2

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_SmallSlot_v2.W_SmallSlot_v2_C
// 0x0140 (0x0438 - 0x02F8)
class UW_SmallSlot_v2_C final : public USmallSlot_V2
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimClicked;                                       // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundGradient;                                // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundGradientLeftGP;                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundGradientRightGP;                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomBar;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomLine;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomLineGP;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedGradient;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedLine;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           EquippedPanel;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedSelectedGradient;                          // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButton_C*                        FocusButton;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sidebar;                                           // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLine;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLineGP;                                         // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_SmallSlot_v2_C* TriggeringSlot)> OnClick;                 // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSlateColor                            EquippedGreen;                                     // 0x0388(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            NormalGrey;                                        // 0x039C(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            SelectedRed;                                       // 0x03B0(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            HoveredWhite;                                      // 0x03C4(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            DefaultWhite;                                      // 0x03D8(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            White_30_;                                         // 0x03EC(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            WhiteText;                                         // 0x0400(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnHover;                                           // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnUnhover;                                         // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_LoadoutSlot_v2_CommonButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_LoadoutSlot_v2_FocusButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_SmallSlot_v2_FocusButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_SmallSlot_v2_FocusButton_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void Construct();
	void ExecuteUbergraph_W_SmallSlot_v2(int32 EntryPoint);
	void On_Preset_Equipped();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnEquipped();
	void PreConstruct(bool IsDesignTime);
	void SetVisualState(bool Hovered, bool Equipped_0, bool Selected);
	void SetVisualStateGamepadPreset(bool Hovered, bool Selected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_SmallSlot_v2_C">();
	}
	static class UW_SmallSlot_v2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_SmallSlot_v2_C>();
	}
};
static_assert(alignof(UW_SmallSlot_v2_C) == 0x000008, "Wrong alignment on UW_SmallSlot_v2_C");
static_assert(sizeof(UW_SmallSlot_v2_C) == 0x000438, "Wrong size on UW_SmallSlot_v2_C");
static_assert(offsetof(UW_SmallSlot_v2_C, UberGraphFrame) == 0x0002F8, "Member 'UW_SmallSlot_v2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, AnimClicked) == 0x000300, "Member 'UW_SmallSlot_v2_C::AnimClicked' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, BackgroundGradient) == 0x000308, "Member 'UW_SmallSlot_v2_C::BackgroundGradient' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, BackgroundGradientLeftGP) == 0x000310, "Member 'UW_SmallSlot_v2_C::BackgroundGradientLeftGP' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, BackgroundGradientRightGP) == 0x000318, "Member 'UW_SmallSlot_v2_C::BackgroundGradientRightGP' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, BottomBar) == 0x000320, "Member 'UW_SmallSlot_v2_C::BottomBar' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, BottomLine) == 0x000328, "Member 'UW_SmallSlot_v2_C::BottomLine' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, BottomLineGP) == 0x000330, "Member 'UW_SmallSlot_v2_C::BottomLineGP' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, EquippedGradient) == 0x000338, "Member 'UW_SmallSlot_v2_C::EquippedGradient' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, EquippedLine) == 0x000340, "Member 'UW_SmallSlot_v2_C::EquippedLine' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, EquippedPanel) == 0x000348, "Member 'UW_SmallSlot_v2_C::EquippedPanel' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, EquippedSelectedGradient) == 0x000350, "Member 'UW_SmallSlot_v2_C::EquippedSelectedGradient' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, FocusButton) == 0x000358, "Member 'UW_SmallSlot_v2_C::FocusButton' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, Sidebar) == 0x000360, "Member 'UW_SmallSlot_v2_C::Sidebar' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, TopLine) == 0x000368, "Member 'UW_SmallSlot_v2_C::TopLine' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, TopLineGP) == 0x000370, "Member 'UW_SmallSlot_v2_C::TopLineGP' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, OnClick) == 0x000378, "Member 'UW_SmallSlot_v2_C::OnClick' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, EquippedGreen) == 0x000388, "Member 'UW_SmallSlot_v2_C::EquippedGreen' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, NormalGrey) == 0x00039C, "Member 'UW_SmallSlot_v2_C::NormalGrey' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, SelectedRed) == 0x0003B0, "Member 'UW_SmallSlot_v2_C::SelectedRed' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, HoveredWhite) == 0x0003C4, "Member 'UW_SmallSlot_v2_C::HoveredWhite' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, DefaultWhite) == 0x0003D8, "Member 'UW_SmallSlot_v2_C::DefaultWhite' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, White_30_) == 0x0003EC, "Member 'UW_SmallSlot_v2_C::White_30_' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, WhiteText) == 0x000400, "Member 'UW_SmallSlot_v2_C::WhiteText' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, OnHover) == 0x000418, "Member 'UW_SmallSlot_v2_C::OnHover' has a wrong offset!");
static_assert(offsetof(UW_SmallSlot_v2_C, OnUnhover) == 0x000428, "Member 'UW_SmallSlot_v2_C::OnUnhover' has a wrong offset!");

}

