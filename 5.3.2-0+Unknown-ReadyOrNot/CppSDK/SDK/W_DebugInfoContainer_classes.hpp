#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DebugInfoContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_DebugInfoContainer.W_DebugInfoContainer_C
// 0x01A8 (0x0468 - 0x02C0)
class UW_DebugInfoContainer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBackgroundBlur*                        BG_Blur;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Image;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           DebugInfo_Container;                               // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Title_Text;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         TitleFont;                                         // 0x02E8(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FMargin                                TitlePadding;                                      // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	EHorizontalAlignment                          TitleHorizontalAlignment;                          // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EVerticalAlignment                            TitleVerticalAlignment;                            // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_352[0x6];                                      // 0x0352(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         DebugNameFont;                                     // 0x0358(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateFontInfo                         DebugValueFont;                                    // 0x03B0(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bEnableBackgroundEffects;                          // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x0410(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<class FText>                           DebugItems;                                        // 0x0428(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<double>                                Spacing;                                           // 0x0438(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          bUseUniformSpacing;                                // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DefaultSpacing;                                    // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UW_DebugInfo_C*>                 DebugInfoWidgets;                                  // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void AddDebugItem(const class FText& Label, const class FText& Value);
	void AddDebugItems(int32 Num);
	void Clear();
	void ExecuteUbergraph_W_DebugInfoContainer(int32 EntryPoint);
	void Get_Debug_Item__Index_(int32 Index_0, class UW_DebugInfo_C** DebugInfoWidget);
	void Get_Debug_Item__Name_(const class FText& Debug_Name, class UW_DebugInfo_C** DebugInfoWidget);
	void GetNumDebugEntries(int32* Return_Value);
	void PreConstruct(bool IsDesignTime);
	void Refresh();
	void SetDebugItemValue(int32 Index_0, const class FText& DebugText);

	void GetTitle(class FText* Return_Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_DebugInfoContainer_C">();
	}
	static class UW_DebugInfoContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_DebugInfoContainer_C>();
	}
};
static_assert(alignof(UW_DebugInfoContainer_C) == 0x000008, "Wrong alignment on UW_DebugInfoContainer_C");
static_assert(sizeof(UW_DebugInfoContainer_C) == 0x000468, "Wrong size on UW_DebugInfoContainer_C");
static_assert(offsetof(UW_DebugInfoContainer_C, UberGraphFrame) == 0x0002C0, "Member 'UW_DebugInfoContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, BG_Blur) == 0x0002C8, "Member 'UW_DebugInfoContainer_C::BG_Blur' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, BG_Image) == 0x0002D0, "Member 'UW_DebugInfoContainer_C::BG_Image' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DebugInfo_Container) == 0x0002D8, "Member 'UW_DebugInfoContainer_C::DebugInfo_Container' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, Title_Text) == 0x0002E0, "Member 'UW_DebugInfoContainer_C::Title_Text' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, TitleFont) == 0x0002E8, "Member 'UW_DebugInfoContainer_C::TitleFont' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, TitlePadding) == 0x000340, "Member 'UW_DebugInfoContainer_C::TitlePadding' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, TitleHorizontalAlignment) == 0x000350, "Member 'UW_DebugInfoContainer_C::TitleHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, TitleVerticalAlignment) == 0x000351, "Member 'UW_DebugInfoContainer_C::TitleVerticalAlignment' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DebugNameFont) == 0x000358, "Member 'UW_DebugInfoContainer_C::DebugNameFont' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DebugValueFont) == 0x0003B0, "Member 'UW_DebugInfoContainer_C::DebugValueFont' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, bEnableBackgroundEffects) == 0x000408, "Member 'UW_DebugInfoContainer_C::bEnableBackgroundEffects' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, Title) == 0x000410, "Member 'UW_DebugInfoContainer_C::Title' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DebugItems) == 0x000428, "Member 'UW_DebugInfoContainer_C::DebugItems' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, Spacing) == 0x000438, "Member 'UW_DebugInfoContainer_C::Spacing' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, bUseUniformSpacing) == 0x000448, "Member 'UW_DebugInfoContainer_C::bUseUniformSpacing' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DefaultSpacing) == 0x000450, "Member 'UW_DebugInfoContainer_C::DefaultSpacing' has a wrong offset!");
static_assert(offsetof(UW_DebugInfoContainer_C, DebugInfoWidgets) == 0x000458, "Member 'UW_DebugInfoContainer_C::DebugInfoWidgets' has a wrong offset!");

}

