#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "Slate_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.AudioPlayerVisible
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_C_AudioPlayerVisible final
{
public:
	class UW_AudioPlayer_C*                       PlayerWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerVisible;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_AudioPlayerVisible) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_AudioPlayerVisible");
static_assert(sizeof(W_PreMission_Tablet_C_AudioPlayerVisible) == 0x000010, "Wrong size on W_PreMission_Tablet_C_AudioPlayerVisible");
static_assert(offsetof(W_PreMission_Tablet_C_AudioPlayerVisible, PlayerWidget) == 0x000000, "Member 'W_PreMission_Tablet_C_AudioPlayerVisible::PlayerWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_AudioPlayerVisible, PlayerVisible) == 0x000008, "Member 'W_PreMission_Tablet_C_AudioPlayerVisible::PlayerVisible' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BackPage) == 0x000001, "Wrong alignment on W_PreMission_Tablet_C_BackPage");
static_assert(sizeof(W_PreMission_Tablet_C_BackPage) == 0x000001, "Wrong size on W_PreMission_Tablet_C_BackPage");
static_assert(offsetof(W_PreMission_Tablet_C_BackPage, Handled) == 0x000000, "Member 'W_PreMission_Tablet_C_BackPage::Handled' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BindHelictoperEvents
// 0x0028 (0x0028 - 0x0000)
struct W_PreMission_Tablet_C_BindHelictoperEvents final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHelicopter*                            CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTrackingCameraComponent*               CallFunc_GetTrackingCameraComponent_ReturnValue;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BindHelictoperEvents) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BindHelictoperEvents");
static_assert(sizeof(W_PreMission_Tablet_C_BindHelictoperEvents) == 0x000028, "Wrong size on W_PreMission_Tablet_C_BindHelictoperEvents");
static_assert(offsetof(W_PreMission_Tablet_C_BindHelictoperEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'W_PreMission_Tablet_C_BindHelictoperEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_BindHelictoperEvents, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_C_BindHelictoperEvents::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_BindHelictoperEvents, CallFunc_GetTrackingCameraComponent_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_C_BindHelictoperEvents::CallFunc_GetTrackingCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_BindHelictoperEvents, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_PreMission_Tablet_C_BindHelictoperEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_BindHelictoperEvents, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'W_PreMission_Tablet_C_BindHelictoperEvents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BndEvt__W_PreMission_Tablet_btn_Brief_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Brief_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature final
{
public:
	class UW_PremissionTablet_Button_C*           TriggeringButton;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Brief_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Brief_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Brief_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Brief_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Brief_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature, TriggeringButton) == 0x000000, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Brief_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature::TriggeringButton' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BndEvt__W_PreMission_Tablet_btn_Camera_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Camera_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature final
{
public:
	class UW_PremissionTablet_Button_C*           TriggeringButton;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Camera_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Camera_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Camera_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Camera_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Camera_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature, TriggeringButton) == 0x000000, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Camera_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature::TriggeringButton' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BndEvt__W_PreMission_Tablet_btn_Helicopter_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Helicopter_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature final
{
public:
	class UW_PremissionTablet_Button_C*           TriggeringButton;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Helicopter_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Helicopter_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Helicopter_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Helicopter_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Helicopter_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature, TriggeringButton) == 0x000000, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Helicopter_K2Node_ComponentBoundEvent_10_OnClicked__DelegateSignature::TriggeringButton' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BndEvt__W_PreMission_Tablet_btn_Map_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Map_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature final
{
public:
	class UW_PremissionTablet_Button_C*           TriggeringButton;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Map_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Map_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Map_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Map_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Map_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature, TriggeringButton) == 0x000000, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Map_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature::TriggeringButton' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BndEvt__W_PreMission_Tablet_btn_Team_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Team_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature final
{
public:
	class UW_PremissionTablet_Button_C*           TriggeringButton;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Team_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Team_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Team_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Team_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Team_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature, TriggeringButton) == 0x000000, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_btn_Team_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature::TriggeringButton' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BndEvt__W_PreMission_Tablet_ExitTabletButton_K2Node_ComponentBoundEvent_9_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_ExitTabletButton_K2Node_ComponentBoundEvent_9_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_ExitTabletButton_K2Node_ComponentBoundEvent_9_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_ExitTabletButton_K2Node_ComponentBoundEvent_9_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_ExitTabletButton_K2Node_ComponentBoundEvent_9_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_ExitTabletButton_K2Node_ComponentBoundEvent_9_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_ExitTabletButton_K2Node_ComponentBoundEvent_9_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_ExitTabletButton_K2Node_ComponentBoundEvent_9_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BndEvt__W_PreMission_Tablet_NextScreenButton_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_NextScreenButton_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_NextScreenButton_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_NextScreenButton_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_NextScreenButton_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_NextScreenButton_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_NextScreenButton_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_NextScreenButton_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BndEvt__W_PreMission_Tablet_PreviousScreen_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_PreviousScreen_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_PreviousScreen_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_PreviousScreen_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_PreviousScreen_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_PreviousScreen_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_PreviousScreen_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_PreviousScreen_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BndEvt__W_PreMission_Tablet_W_OpenChatButton_K2Node_ComponentBoundEvent_11_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_OpenChatButton_K2Node_ComponentBoundEvent_11_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_OpenChatButton_K2Node_ComponentBoundEvent_11_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_OpenChatButton_K2Node_ComponentBoundEvent_11_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_OpenChatButton_K2Node_ComponentBoundEvent_11_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_OpenChatButton_K2Node_ComponentBoundEvent_11_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_OpenChatButton_K2Node_ComponentBoundEvent_11_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_OpenChatButton_K2Node_ComponentBoundEvent_11_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature final
{
public:
	class FString                                 MissionURL;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLevelFloor                            FloorData;                                         // 0x0010(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature) == 0x000078, "Wrong size on W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature, MissionURL) == 0x000000, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature::MissionURL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature, FloorData) == 0x000010, "Member 'W_PreMission_Tablet_C_BndEvt__W_PreMission_Tablet_W_PreMission_PlanningMap_K2Node_ComponentBoundEvent_6_OnMapLevelChanged__DelegateSignature::FloorData' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BP_OnHandleBackAction
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_C_BP_OnHandleBackAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on W_PreMission_Tablet_C_BP_OnHandleBackAction");
static_assert(sizeof(W_PreMission_Tablet_C_BP_OnHandleBackAction) == 0x000001, "Wrong size on W_PreMission_Tablet_C_BP_OnHandleBackAction");
static_assert(offsetof(W_PreMission_Tablet_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_ChangePage) == 0x000004, "Wrong alignment on W_PreMission_Tablet_C_ChangePage");
static_assert(sizeof(W_PreMission_Tablet_C_ChangePage) == 0x000008, "Wrong size on W_PreMission_Tablet_C_ChangePage");
static_assert(offsetof(W_PreMission_Tablet_C_ChangePage, PageName) == 0x000000, "Member 'W_PreMission_Tablet_C_ChangePage::PageName' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.DisplayNoDataScreen
// 0x0009 (0x0009 - 0x0000)
struct W_PreMission_Tablet_C_DisplayNoDataScreen final
{
public:
	bool                                          NoData_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_DisplayNoDataScreen) == 0x000001, "Wrong alignment on W_PreMission_Tablet_C_DisplayNoDataScreen");
static_assert(sizeof(W_PreMission_Tablet_C_DisplayNoDataScreen) == 0x000009, "Wrong size on W_PreMission_Tablet_C_DisplayNoDataScreen");
static_assert(offsetof(W_PreMission_Tablet_C_DisplayNoDataScreen, NoData_0) == 0x000000, "Member 'W_PreMission_Tablet_C_DisplayNoDataScreen::NoData_0' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_DisplayNoDataScreen, Temp_byte_Variable) == 0x000001, "Member 'W_PreMission_Tablet_C_DisplayNoDataScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_DisplayNoDataScreen, Temp_byte_Variable_1) == 0x000002, "Member 'W_PreMission_Tablet_C_DisplayNoDataScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_DisplayNoDataScreen, Temp_bool_Variable) == 0x000003, "Member 'W_PreMission_Tablet_C_DisplayNoDataScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_DisplayNoDataScreen, Temp_byte_Variable_2) == 0x000004, "Member 'W_PreMission_Tablet_C_DisplayNoDataScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_DisplayNoDataScreen, Temp_byte_Variable_3) == 0x000005, "Member 'W_PreMission_Tablet_C_DisplayNoDataScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_DisplayNoDataScreen, K2Node_Select_Default) == 0x000006, "Member 'W_PreMission_Tablet_C_DisplayNoDataScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_DisplayNoDataScreen, Temp_bool_Variable_1) == 0x000007, "Member 'W_PreMission_Tablet_C_DisplayNoDataScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_DisplayNoDataScreen, K2Node_Select_Default_1) == 0x000008, "Member 'W_PreMission_Tablet_C_DisplayNoDataScreen::K2Node_Select_Default_1' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.ExecuteUbergraph_W_PreMission_Tablet
// 0x1430 (0x1430 - 0x0000)
struct W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Premission_Tablet_Overlay_C*         K2Node_DynamicCast_AsW_Premission_Tablet_Overlay;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PremissionTablet_Button_C*           K2Node_ComponentBoundEvent_TriggeringButton_4;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_PremissionTablet_Button_C*           K2Node_ComponentBoundEvent_TriggeringButton_3;     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_PremissionTablet_Button_C*           K2Node_ComponentBoundEvent_TriggeringButton_2;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_MissionURL;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLevelFloor                            K2Node_ComponentBoundEvent_FloorData;              // 0x0060(0x0068)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PreMission_Tablet_Floors_C*          K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors;  // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_URL;                                  // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  K2Node_Event_LevelData_1;                          // 0x0108(0x0880)(ConstParm)
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets;  // 0x0988(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C[0x4];                                      // 0x099C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A9[0x7];                                      // 0x09A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_AudioPlayer_C*                       K2Node_Event_PlayerWidget;                         // 0x09B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PlayerVisible;                        // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_UseDarkTheme;                         // 0x09B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BA[0x6];                                      // 0x09BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_MissionURL;                           // 0x09C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  K2Node_Event_LevelData;                            // 0x09D0(0x0880)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x1250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1254[0x4];                                     // 0x1254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x1258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x1260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MissionPlanning_C> K2Node_DynamicCast_AsBPI_Mission_Planning;        // 0x1268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x1278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1279[0x7];                                     // 0x1279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x1280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x1288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x1290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x1291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1292[0x6];                                     // 0x1292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PremissionTablet_Button_C*           K2Node_ComponentBoundEvent_TriggeringButton_1;     // 0x1298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_2;    // 0x12A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_1;        // 0x12A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A9[0x3];                                     // 0x12A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;            // 0x12AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x12BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12BD[0x3];                                     // 0x12BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x12C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsAwake;                              // 0x12C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C5[0x3];                                     // 0x12C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x12C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x12D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12DC[0x4];                                     // 0x12DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x12E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITabletUI_C>           K2Node_DynamicCast_AsTablet_UI;                    // 0x12E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x12F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x12F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12FA[0x2];                                     // 0x12FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x12FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x1300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMultiplayer_ReturnValue;                // 0x1304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x1305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1306[0x2];                                     // 0x1306(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_3;               // 0x1308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_2;               // 0x1310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x1318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x1320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1321[0x7];                                     // 0x1321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x1328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x1330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x1338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1339[0x7];                                     // 0x1339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue_1; // 0x1340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x1348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character_1;           // 0x1350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x1358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1359[0x3];                                     // 0x1359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x135C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x1360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x1361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1362[0x2];                                     // 0x1362(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x1364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x1368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1369[0x3];                                     // 0x1369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x136C(0x0008)(NoDestructor)
	uint8                                         Pad_1374[0x4];                                     // 0x1374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x1378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue_2; // 0x1380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x1388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x1389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x138A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_138B[0x5];                                     // 0x138B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets_1; // 0x1390(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x13A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A4[0x4];                                     // 0x13A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_PremissionTablet_Button_C*>   CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x13A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x13B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x13C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13CC[0x4];                                     // 0x13CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x13D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UW_PremissionTablet_Button_C*           K2Node_ComponentBoundEvent_TriggeringButton;       // 0x13E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHelicopterAvailable_ReturnValue;        // 0x13E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x13E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EA[0x6];                                     // 0x13EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Premission_Tablet_Overlay_C*         K2Node_DynamicCast_AsW_Premission_Tablet_Overlay_1; // 0x13F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x13F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13F9[0x7];                                     // 0x13F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x1400(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMultiplayer_ReturnValue_1;              // 0x1408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x1409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x140A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x140B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue_1;                  // 0x140C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x140D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x140E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_140F[0x1];                                     // 0x140F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Premission_Tablet_Overlay_C*         K2Node_DynamicCast_AsW_Premission_Tablet_Overlay_2; // 0x1410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x1418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1419[0x7];                                     // 0x1419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Premission_Tablet_Overlay_C*         K2Node_DynamicCast_AsW_Premission_Tablet_Overlay_3; // 0x1420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue_1;                // 0x1429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue_2;                // 0x142A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet");
static_assert(sizeof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet) == 0x001430, "Wrong size on W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, EntryPoint) == 0x000000, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_AsW_Premission_Tablet_Overlay) == 0x000008, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_AsW_Premission_Tablet_Overlay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_TriggeringButton_4) == 0x000018, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_TriggeringButton_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000020, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_TriggeringButton_3) == 0x000028, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_TriggeringButton_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_TriggeringButton_2) == 0x000030, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_TriggeringButton_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_IsDesignTime) == 0x000038, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_PageName) == 0x00003C, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_IsGamepad) == 0x000044, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_PlayAnimationForward_ReturnValue) == 0x000048, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_MissionURL) == 0x000050, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_MissionURL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_FloorData) == 0x000060, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_FloorData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x0000C8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, Temp_byte_Variable) == 0x0000D0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors) == 0x0000D8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, Temp_byte_Variable_1) == 0x0000E1, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_Delay_1) == 0x0000E8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_Collapse) == 0x0000F0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_URL) == 0x0000F8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_URL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_LevelData_1) == 0x000108, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_LevelData_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetAllWidgetsWithInterface_FoundWidgets) == 0x000988, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetAllWidgetsWithInterface_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Array_Length_ReturnValue) == 0x000998, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_Delay) == 0x0009A0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, Temp_bool_Variable) == 0x0009A8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_PlayerWidget) == 0x0009B0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_PlayerWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_PlayerVisible) == 0x0009B8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_PlayerVisible' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_UseDarkTheme) == 0x0009B9, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_UseDarkTheme' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_MissionURL) == 0x0009C0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_MissionURL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_LevelData) == 0x0009D0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_LevelData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, Temp_int_Array_Index_Variable) == 0x001250, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x001258, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Array_Get_Item) == 0x001260, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_AsBPI_Mission_Planning) == 0x001268, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_AsBPI_Mission_Planning' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_bSuccess_2) == 0x001278, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x001280, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x001288, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetCurrentInputType_ReturnValue) == 0x001290, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_SwitchEnum_CmpSuccess) == 0x001291, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_TriggeringButton_1) == 0x001298, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_TriggeringButton_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetLocalPlayerSubsystem_ReturnValue_2) == 0x0012A0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetLocalPlayerSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetCurrentInputType_ReturnValue_1) == 0x0012A8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetCurrentInputType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_CreateDelegate_OutputDelegate) == 0x0012AC, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_CustomEvent_bNewInputType) == 0x0012BC, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, Temp_int_Array_Index_Variable_1) == 0x0012C0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_IsAwake) == 0x0012C4, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_IsAwake' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetAllChildren_ReturnValue) == 0x0012C8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, Temp_int_Loop_Counter_Variable) == 0x0012D8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Array_Get_Item_1) == 0x0012E0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_AsTablet_UI) == 0x0012E8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_AsTablet_UI' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_bSuccess_3) == 0x0012F8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Less_IntInt_ReturnValue) == 0x0012F9, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Add_IntInt_ReturnValue) == 0x0012FC, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Array_Length_ReturnValue_1) == 0x001300, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsMultiplayer_ReturnValue) == 0x001304, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsMultiplayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsEmpty_ReturnValue) == 0x001305, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_Button_3) == 0x001308, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_Button_2) == 0x001310, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x001318, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, Temp_byte_Variable_2) == 0x001320, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_K2_GetPawn_ReturnValue) == 0x001328, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_AsPlayer_Character) == 0x001330, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_bSuccess_4) == 0x001338, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetReadyOrNotPlayerController_ReturnValue_1) == 0x001340, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetReadyOrNotPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_K2_GetPawn_ReturnValue_1) == 0x001348, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_AsPlayer_Character_1) == 0x001350, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_AsPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_bSuccess_5) == 0x001358, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, Temp_int_Loop_Counter_Variable_1) == 0x00135C, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsValid_ReturnValue) == 0x001360, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Less_IntInt_ReturnValue_1) == 0x001361, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Add_IntInt_ReturnValue_1) == 0x001364, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsActivated_ReturnValue) == 0x001368, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Event_InFocusEvent) == 0x00136C, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_Button_1) == 0x001378, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetReadyOrNotPlayerController_ReturnValue_2) == 0x001380, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetReadyOrNotPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsValid_ReturnValue_1) == 0x001388, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsValid_ReturnValue_2) == 0x001389, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, Temp_byte_Variable_3) == 0x00138A, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetAllWidgetsWithInterface_FoundWidgets_1) == 0x001390, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetAllWidgetsWithInterface_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Array_Length_ReturnValue_2) == 0x0013A0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x0013A8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Conv_IntToString_ReturnValue) == 0x0013B8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Array_Length_ReturnValue_3) == 0x0013C8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0013D0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_TriggeringButton) == 0x0013E0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_TriggeringButton' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsHelicopterAvailable_ReturnValue) == 0x0013E8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsHelicopterAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Select_Default) == 0x0013E9, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_AsW_Premission_Tablet_Overlay_1) == 0x0013F0, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_AsW_Premission_Tablet_Overlay_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_bSuccess_6) == 0x0013F8, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_ComponentBoundEvent_Button) == 0x001400, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsMultiplayer_ReturnValue_1) == 0x001408, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsMultiplayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsConsole_ReturnValue) == 0x001409, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsConsole_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, Temp_bool_Variable_1) == 0x00140A, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00140B, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsConsole_ReturnValue_1) == 0x00140C, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsConsole_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_BooleanAND_ReturnValue) == 0x00140D, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_Select_Default_1) == 0x00140E, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_AsW_Premission_Tablet_Overlay_2) == 0x001410, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_AsW_Premission_Tablet_Overlay_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_bSuccess_7) == 0x001418, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_AsW_Premission_Tablet_Overlay_3) == 0x001420, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_AsW_Premission_Tablet_Overlay_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, K2Node_DynamicCast_bSuccess_8) == 0x001428, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsActivated_ReturnValue_1) == 0x001429, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsActivated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet, CallFunc_IsActivated_ReturnValue_2) == 0x00142A, "Member 'W_PreMission_Tablet_C_ExecuteUbergraph_W_PreMission_Tablet::CallFunc_IsActivated_ReturnValue_2' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.GetRosterEnabled
// 0x0007 (0x0007 - 0x0000)
struct W_PreMission_Tablet_C_GetRosterEnabled final
{
public:
	bool                                          RosterEnabled;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLobby_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMultiplayer_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCommanderMode_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_GetRosterEnabled) == 0x000001, "Wrong alignment on W_PreMission_Tablet_C_GetRosterEnabled");
static_assert(sizeof(W_PreMission_Tablet_C_GetRosterEnabled) == 0x000007, "Wrong size on W_PreMission_Tablet_C_GetRosterEnabled");
static_assert(offsetof(W_PreMission_Tablet_C_GetRosterEnabled, RosterEnabled) == 0x000000, "Member 'W_PreMission_Tablet_C_GetRosterEnabled::RosterEnabled' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_GetRosterEnabled, CallFunc_IsLobby_ReturnValue) == 0x000001, "Member 'W_PreMission_Tablet_C_GetRosterEnabled::CallFunc_IsLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_GetRosterEnabled, CallFunc_IsMultiplayer_ReturnValue) == 0x000002, "Member 'W_PreMission_Tablet_C_GetRosterEnabled::CallFunc_IsMultiplayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_GetRosterEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'W_PreMission_Tablet_C_GetRosterEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_GetRosterEnabled, CallFunc_IsCommanderMode_ReturnValue) == 0x000004, "Member 'W_PreMission_Tablet_C_GetRosterEnabled::CallFunc_IsCommanderMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_GetRosterEnabled, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'W_PreMission_Tablet_C_GetRosterEnabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_GetRosterEnabled, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'W_PreMission_Tablet_C_GetRosterEnabled::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_Hide) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_Hide");
static_assert(sizeof(W_PreMission_Tablet_C_Hide) == 0x000010, "Wrong size on W_PreMission_Tablet_C_Hide");
static_assert(offsetof(W_PreMission_Tablet_C_Hide, Delay) == 0x000000, "Member 'W_PreMission_Tablet_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Hide, Collapse) == 0x000008, "Member 'W_PreMission_Tablet_C_Hide::Collapse' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.InitNavigation
// 0x0070 (0x0070 - 0x0000)
struct W_PreMission_Tablet_C_InitNavigation final
{
public:
	class FString                                 Temp_string_Variable;                              // 0x0000(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0010(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0020(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0030(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_TeamView_Tablet_C*                   K2Node_DynamicCast_AsW_Team_View_Tablet;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_4;                            // 0x0058(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_ReturnValue;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRosterEnabled_RosterEnabled;           // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_InitNavigation) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_InitNavigation");
static_assert(sizeof(W_PreMission_Tablet_C_InitNavigation) == 0x000070, "Wrong size on W_PreMission_Tablet_C_InitNavigation");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, Temp_string_Variable) == 0x000000, "Member 'W_PreMission_Tablet_C_InitNavigation::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, Temp_string_Variable_1) == 0x000010, "Member 'W_PreMission_Tablet_C_InitNavigation::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, Temp_string_Variable_2) == 0x000020, "Member 'W_PreMission_Tablet_C_InitNavigation::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, Temp_string_Variable_3) == 0x000030, "Member 'W_PreMission_Tablet_C_InitNavigation::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, Temp_bool_Variable) == 0x000040, "Member 'W_PreMission_Tablet_C_InitNavigation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, Temp_byte_Variable) == 0x000041, "Member 'W_PreMission_Tablet_C_InitNavigation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, Temp_byte_Variable_1) == 0x000042, "Member 'W_PreMission_Tablet_C_InitNavigation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, K2Node_DynamicCast_AsW_Team_View_Tablet) == 0x000048, "Member 'W_PreMission_Tablet_C_InitNavigation::K2Node_DynamicCast_AsW_Team_View_Tablet' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'W_PreMission_Tablet_C_InitNavigation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'W_PreMission_Tablet_C_InitNavigation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'W_PreMission_Tablet_C_InitNavigation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, Temp_string_Variable_4) == 0x000058, "Member 'W_PreMission_Tablet_C_InitNavigation::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, CallFunc_IsInLobby_ReturnValue) == 0x000068, "Member 'W_PreMission_Tablet_C_InitNavigation::CallFunc_IsInLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, K2Node_Select_Default) == 0x000069, "Member 'W_PreMission_Tablet_C_InitNavigation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_InitNavigation, CallFunc_GetRosterEnabled_RosterEnabled) == 0x00006A, "Member 'W_PreMission_Tablet_C_InitNavigation::CallFunc_GetRosterEnabled_RosterEnabled' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.IsActiveScreen
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_C_IsActiveScreen final
{
public:
	class UWidget*                                Screen;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_IsActiveScreen) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_IsActiveScreen");
static_assert(sizeof(W_PreMission_Tablet_C_IsActiveScreen) == 0x000010, "Wrong size on W_PreMission_Tablet_C_IsActiveScreen");
static_assert(offsetof(W_PreMission_Tablet_C_IsActiveScreen, Screen) == 0x000000, "Member 'W_PreMission_Tablet_C_IsActiveScreen::Screen' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_IsActiveScreen, IsActive) == 0x000008, "Member 'W_PreMission_Tablet_C_IsActiveScreen::IsActive' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_IsActiveScreen, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'W_PreMission_Tablet_C_IsActiveScreen::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.LoadScreen
// 0x0028 (0x0028 - 0x0000)
struct W_PreMission_Tablet_C_LoadScreen final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRosterEnabled_RosterEnabled;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IReadyOrNotUI_C>       K2Node_DynamicCast_AsReady_or_Not_UI;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_LoadScreen) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_LoadScreen");
static_assert(sizeof(W_PreMission_Tablet_C_LoadScreen) == 0x000028, "Wrong size on W_PreMission_Tablet_C_LoadScreen");
static_assert(offsetof(W_PreMission_Tablet_C_LoadScreen, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_C_LoadScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_LoadScreen, CallFunc_GetRosterEnabled_RosterEnabled) == 0x000001, "Member 'W_PreMission_Tablet_C_LoadScreen::CallFunc_GetRosterEnabled_RosterEnabled' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_LoadScreen, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000002, "Member 'W_PreMission_Tablet_C_LoadScreen::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_LoadScreen, CallFunc_IsEmpty_ReturnValue) == 0x000003, "Member 'W_PreMission_Tablet_C_LoadScreen::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_LoadScreen, CallFunc_GetActiveWidget_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_C_LoadScreen::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_LoadScreen, K2Node_DynamicCast_AsReady_or_Not_UI) == 0x000010, "Member 'W_PreMission_Tablet_C_LoadScreen::K2Node_DynamicCast_AsReady_or_Not_UI' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_LoadScreen, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_PreMission_Tablet_C_LoadScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.MissionChanged
// 0x0890 (0x0890 - 0x0000)
struct W_PreMission_Tablet_C_MissionChanged final
{
public:
	class FString                                 MissionURL;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  LevelData;                                         // 0x0010(0x0880)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_PreMission_Tablet_C_MissionChanged) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_MissionChanged");
static_assert(sizeof(W_PreMission_Tablet_C_MissionChanged) == 0x000890, "Wrong size on W_PreMission_Tablet_C_MissionChanged");
static_assert(offsetof(W_PreMission_Tablet_C_MissionChanged, MissionURL) == 0x000000, "Member 'W_PreMission_Tablet_C_MissionChanged::MissionURL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_MissionChanged, LevelData) == 0x000010, "Member 'W_PreMission_Tablet_C_MissionChanged::LevelData' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.NextTabletScreen
// 0x0060 (0x0060 - 0x0000)
struct W_PreMission_Tablet_C_NextTabletScreen final
{
public:
	TArray<bool>                                  buttonVisibilities;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveButton_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_PremissionTablet_Button_C*>   CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PremissionTablet_Button_C*           CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_NextTabletScreen) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_NextTabletScreen");
static_assert(sizeof(W_PreMission_Tablet_C_NextTabletScreen) == 0x000060, "Wrong size on W_PreMission_Tablet_C_NextTabletScreen");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, buttonVisibilities) == 0x000000, "Member 'W_PreMission_Tablet_C_NextTabletScreen::buttonVisibilities' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_PreMission_Tablet_C_NextTabletScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_PreMission_Tablet_C_NextTabletScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_GetActiveButton_ReturnValue) == 0x00001C, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_GetActiveButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x000020, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_GetVisibility_ReturnValue) == 0x000041, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000042, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_NextTabletScreen, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'W_PreMission_Tablet_C_NextTabletScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.OnInputChange
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_C_OnInputChange final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_OnInputChange) == 0x000001, "Wrong alignment on W_PreMission_Tablet_C_OnInputChange");
static_assert(sizeof(W_PreMission_Tablet_C_OnInputChange) == 0x000001, "Wrong size on W_PreMission_Tablet_C_OnInputChange");
static_assert(offsetof(W_PreMission_Tablet_C_OnInputChange, bNewInputType) == 0x000000, "Member 'W_PreMission_Tablet_C_OnInputChange::bNewInputType' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.OnKeyDown
// 0x03F0 (0x03F0 - 0x0000)
struct W_PreMission_Tablet_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0148(0x00B8)()
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue_1; // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0238(0x00B8)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKeyFromInputActionName_ReturnValue;    // 0x0318(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0338(0x00B8)()
};
static_assert(alignof(W_PreMission_Tablet_C_OnKeyDown) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_OnKeyDown");
static_assert(sizeof(W_PreMission_Tablet_C_OnKeyDown) == 0x0003F0, "Wrong size on W_PreMission_Tablet_C_OnKeyDown");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'W_PreMission_Tablet_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'W_PreMission_Tablet_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'W_PreMission_Tablet_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000148, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x000200, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_GetReadyOrNotPlayerController_ReturnValue_1) == 0x000208, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_GetReadyOrNotPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_K2_GetPawn_ReturnValue) == 0x000210, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_IsUsingGamepad_ReturnValue) == 0x000218, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, K2Node_DynamicCast_AsPlayer_Character) == 0x000220, "Member 'W_PreMission_Tablet_C_OnKeyDown::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, K2Node_DynamicCast_bSuccess) == 0x000228, "Member 'W_PreMission_Tablet_C_OnKeyDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000230, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_Handled_ReturnValue_1) == 0x000238, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002F0, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000300, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_MakeLiteralName_ReturnValue) == 0x000308, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000310, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_GetKeyFromInputActionName_ReturnValue) == 0x000318, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_GetKeyFromInputActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000330, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000338, "Member 'W_PreMission_Tablet_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.OnKeyUp
// 0x0608 (0x0608 - 0x0000)
struct W_PreMission_Tablet_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_4;          // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0150(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0208(0x00B8)()
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue_1; // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x02EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKeyFromInputActionName_ReturnValue;    // 0x02F8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_5;          // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PreMission_Tablet_Floors_C*          K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors;  // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_NavigateFloors_ReturnValue;               // 0x0328(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x03E0(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x0498(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x0550(0x00B8)()
};
static_assert(alignof(W_PreMission_Tablet_C_OnKeyUp) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_OnKeyUp");
static_assert(sizeof(W_PreMission_Tablet_C_OnKeyUp) == 0x000608, "Wrong size on W_PreMission_Tablet_C_OnKeyUp");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'W_PreMission_Tablet_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'W_PreMission_Tablet_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'W_PreMission_Tablet_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000148, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000149, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00014A, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_BooleanOR_ReturnValue) == 0x00014B, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x00014C, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue_4) == 0x00014D, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_Unhandled_ReturnValue) == 0x000150, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x000208, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x0002C0, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_GetReadyOrNotPlayerController_ReturnValue_1) == 0x0002C8, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_GetReadyOrNotPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_K2_GetPawn_ReturnValue) == 0x0002D0, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_IsUsingGamepad_ReturnValue) == 0x0002D8, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, K2Node_DynamicCast_AsPlayer_Character) == 0x0002E0, "Member 'W_PreMission_Tablet_C_OnKeyUp::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, K2Node_DynamicCast_bSuccess) == 0x0002E8, "Member 'W_PreMission_Tablet_C_OnKeyUp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_MakeLiteralName_ReturnValue) == 0x0002EC, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_GetKeyFromInputActionName_ReturnValue) == 0x0002F8, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_GetKeyFromInputActionName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue_5) == 0x000310, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors) == 0x000318, "Member 'W_PreMission_Tablet_C_OnKeyUp::K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, K2Node_DynamicCast_bSuccess_1) == 0x000320, "Member 'W_PreMission_Tablet_C_OnKeyUp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_NavigateFloors_ReturnValue) == 0x000328, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_NavigateFloors_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_Handled_ReturnValue_1) == 0x0003E0, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_Unhandled_ReturnValue_1) == 0x000498, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnKeyUp, CallFunc_Handled_ReturnValue_2) == 0x000550, "Member 'W_PreMission_Tablet_C_OnKeyUp::CallFunc_Handled_ReturnValue_2' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.OnMissionChanged
// 0x0890 (0x0890 - 0x0000)
struct W_PreMission_Tablet_C_OnMissionChanged final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  LevelData;                                         // 0x0010(0x0880)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_PreMission_Tablet_C_OnMissionChanged) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_OnMissionChanged");
static_assert(sizeof(W_PreMission_Tablet_C_OnMissionChanged) == 0x000890, "Wrong size on W_PreMission_Tablet_C_OnMissionChanged");
static_assert(offsetof(W_PreMission_Tablet_C_OnMissionChanged, URL) == 0x000000, "Member 'W_PreMission_Tablet_C_OnMissionChanged::URL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnMissionChanged, LevelData) == 0x000010, "Member 'W_PreMission_Tablet_C_OnMissionChanged::LevelData' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.OnMouseButtonUp
// 0x0220 (0x0220 - 0x0000)
struct W_PreMission_Tablet_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0168(0x00B8)()
};
static_assert(alignof(W_PreMission_Tablet_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_OnMouseButtonUp");
static_assert(sizeof(W_PreMission_Tablet_C_OnMouseButtonUp) == 0x000220, "Wrong size on W_PreMission_Tablet_C_OnMouseButtonUp");
static_assert(offsetof(W_PreMission_Tablet_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'W_PreMission_Tablet_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'W_PreMission_Tablet_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'W_PreMission_Tablet_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x000168, "Member 'W_PreMission_Tablet_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_PreMission_Tablet_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on W_PreMission_Tablet_C_OnRemovedFromFocusPath");
static_assert(sizeof(W_PreMission_Tablet_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on W_PreMission_Tablet_C_OnRemovedFromFocusPath");
static_assert(offsetof(W_PreMission_Tablet_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'W_PreMission_Tablet_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.OpenRadial
// 0x00A8 (0x00A8 - 0x0000)
struct W_PreMission_Tablet_C_OpenRadial final
{
public:
	struct FVector2D                              Coordinates;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0010(0x0020)(NoDestructor)
	struct FAnchorData                            K2Node_MakeStruct_AnchorData;                      // 0x0030(0x0040)(NoDestructor)
	class UW_Radial_MapMarking_C*                 CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName Category, class FName MarkerName)> K2Node_CreateDelegate_OutputDelegate_1; // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_OpenRadial) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_OpenRadial");
static_assert(sizeof(W_PreMission_Tablet_C_OpenRadial) == 0x0000A8, "Wrong size on W_PreMission_Tablet_C_OpenRadial");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRadial, Coordinates) == 0x000000, "Member 'W_PreMission_Tablet_C_OpenRadial::Coordinates' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRadial, K2Node_MakeStruct_Anchors) == 0x000010, "Member 'W_PreMission_Tablet_C_OpenRadial::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRadial, K2Node_MakeStruct_AnchorData) == 0x000030, "Member 'W_PreMission_Tablet_C_OpenRadial::K2Node_MakeStruct_AnchorData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRadial, CallFunc_Create_ReturnValue) == 0x000070, "Member 'W_PreMission_Tablet_C_OpenRadial::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRadial, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'W_PreMission_Tablet_C_OpenRadial::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRadial, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'W_PreMission_Tablet_C_OpenRadial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRadial, K2Node_CreateDelegate_OutputDelegate_1) == 0x00008C, "Member 'W_PreMission_Tablet_C_OpenRadial::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRadial, CallFunc_AddChildToCanvas_ReturnValue) == 0x0000A0, "Member 'W_PreMission_Tablet_C_OpenRadial::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.OpenRoster
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_C_OpenRoster final
{
public:
	class UWidget*                                CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_OpenRoster) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_OpenRoster");
static_assert(sizeof(W_PreMission_Tablet_C_OpenRoster) == 0x000010, "Wrong size on W_PreMission_Tablet_C_OpenRoster");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRoster, CallFunc_Map_Find_Value) == 0x000000, "Member 'W_PreMission_Tablet_C_OpenRoster::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRoster, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_C_OpenRoster::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_OpenRoster, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'W_PreMission_Tablet_C_OpenRoster::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_PreConstruct) == 0x000001, "Wrong alignment on W_PreMission_Tablet_C_PreConstruct");
static_assert(sizeof(W_PreMission_Tablet_C_PreConstruct) == 0x000001, "Wrong size on W_PreMission_Tablet_C_PreConstruct");
static_assert(offsetof(W_PreMission_Tablet_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_PreMission_Tablet_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.PreviousTabletScreen
// 0x0060 (0x0060 - 0x0000)
struct W_PreMission_Tablet_C_PreviousTabletScreen final
{
public:
	TArray<bool>                                  buttonVisibilities;                                // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveButton_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_PremissionTablet_Button_C*>   CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PremissionTablet_Button_C*           CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_PreviousTabletScreen) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_PreviousTabletScreen");
static_assert(sizeof(W_PreMission_Tablet_C_PreviousTabletScreen) == 0x000060, "Wrong size on W_PreMission_Tablet_C_PreviousTabletScreen");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, buttonVisibilities) == 0x000000, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::buttonVisibilities' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_GetActiveButton_ReturnValue) == 0x000014, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_GetActiveButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x000020, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_GetVisibility_ReturnValue) == 0x000041, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000042, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_PreviousTabletScreen, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'W_PreMission_Tablet_C_PreviousTabletScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.RadialMarkerSelected
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_C_RadialMarkerSelected final
{
public:
	class FName                                   CategoryName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MarkerName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_RadialMarkerSelected) == 0x000004, "Wrong alignment on W_PreMission_Tablet_C_RadialMarkerSelected");
static_assert(sizeof(W_PreMission_Tablet_C_RadialMarkerSelected) == 0x000010, "Wrong size on W_PreMission_Tablet_C_RadialMarkerSelected");
static_assert(offsetof(W_PreMission_Tablet_C_RadialMarkerSelected, CategoryName) == 0x000000, "Member 'W_PreMission_Tablet_C_RadialMarkerSelected::CategoryName' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_RadialMarkerSelected, MarkerName) == 0x000008, "Member 'W_PreMission_Tablet_C_RadialMarkerSelected::MarkerName' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_Reveal) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_Reveal");
static_assert(sizeof(W_PreMission_Tablet_C_Reveal) == 0x000008, "Wrong size on W_PreMission_Tablet_C_Reveal");
static_assert(offsetof(W_PreMission_Tablet_C_Reveal, Delay) == 0x000000, "Member 'W_PreMission_Tablet_C_Reveal::Delay' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.SetActiveNavButton
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_C_SetActiveNavButton final
{
public:
	class UW_PremissionTablet_Button_C*           NewActiveButton;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_SetActiveNavButton) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_SetActiveNavButton");
static_assert(sizeof(W_PreMission_Tablet_C_SetActiveNavButton) == 0x000010, "Wrong size on W_PreMission_Tablet_C_SetActiveNavButton");
static_assert(offsetof(W_PreMission_Tablet_C_SetActiveNavButton, NewActiveButton) == 0x000000, "Member 'W_PreMission_Tablet_C_SetActiveNavButton::NewActiveButton' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_SetActiveNavButton, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_C_SetActiveNavButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_SetActiveNavButton, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'W_PreMission_Tablet_C_SetActiveNavButton::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.SetActiveScreen
// 0x0020 (0x0020 - 0x0000)
struct W_PreMission_Tablet_C_SetActiveScreen final
{
public:
	class UWidget*                                NewActiveScreen;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IReadyOrNotUI_C>       K2Node_DynamicCast_AsReady_or_Not_UI;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_SetActiveScreen) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_SetActiveScreen");
static_assert(sizeof(W_PreMission_Tablet_C_SetActiveScreen) == 0x000020, "Wrong size on W_PreMission_Tablet_C_SetActiveScreen");
static_assert(offsetof(W_PreMission_Tablet_C_SetActiveScreen, NewActiveScreen) == 0x000000, "Member 'W_PreMission_Tablet_C_SetActiveScreen::NewActiveScreen' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_SetActiveScreen, K2Node_DynamicCast_AsReady_or_Not_UI) == 0x000008, "Member 'W_PreMission_Tablet_C_SetActiveScreen::K2Node_DynamicCast_AsReady_or_Not_UI' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_SetActiveScreen, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PreMission_Tablet_C_SetActiveScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.SetInitialActiveScreen
// 0x0003 (0x0003 - 0x0000)
struct W_PreMission_Tablet_C_SetInitialActiveScreen final
{
public:
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRosterEnabled_RosterEnabled;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_SetInitialActiveScreen) == 0x000001, "Wrong alignment on W_PreMission_Tablet_C_SetInitialActiveScreen");
static_assert(sizeof(W_PreMission_Tablet_C_SetInitialActiveScreen) == 0x000003, "Wrong size on W_PreMission_Tablet_C_SetInitialActiveScreen");
static_assert(offsetof(W_PreMission_Tablet_C_SetInitialActiveScreen, CallFunc_IsEmpty_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_C_SetInitialActiveScreen::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_SetInitialActiveScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_PreMission_Tablet_C_SetInitialActiveScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_SetInitialActiveScreen, CallFunc_GetRosterEnabled_RosterEnabled) == 0x000002, "Member 'W_PreMission_Tablet_C_SetInitialActiveScreen::CallFunc_GetRosterEnabled_RosterEnabled' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_SetInputMode) == 0x000001, "Wrong alignment on W_PreMission_Tablet_C_SetInputMode");
static_assert(sizeof(W_PreMission_Tablet_C_SetInputMode) == 0x000001, "Wrong size on W_PreMission_Tablet_C_SetInputMode");
static_assert(offsetof(W_PreMission_Tablet_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_PreMission_Tablet_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.SetNavigationButtonColors
// 0x0034 (0x0034 - 0x0000)
struct W_PreMission_Tablet_C_SetNavigationButtonColors final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_SetNavigationButtonColors) == 0x000004, "Wrong alignment on W_PreMission_Tablet_C_SetNavigationButtonColors");
static_assert(sizeof(W_PreMission_Tablet_C_SetNavigationButtonColors) == 0x000034, "Wrong size on W_PreMission_Tablet_C_SetNavigationButtonColors");
static_assert(offsetof(W_PreMission_Tablet_C_SetNavigationButtonColors, Color) == 0x000000, "Member 'W_PreMission_Tablet_C_SetNavigationButtonColors::Color' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_SetNavigationButtonColors, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'W_PreMission_Tablet_C_SetNavigationButtonColors::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_SetNavigationButtonColors, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'W_PreMission_Tablet_C_SetNavigationButtonColors::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_SetNavigationButtonColors, K2Node_MakeStruct_LinearColor_1) == 0x000024, "Member 'W_PreMission_Tablet_C_SetNavigationButtonColors::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.SetTabletState
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_C_SetTabletState final
{
public:
	bool                                          IsAwake;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_SetTabletState) == 0x000001, "Wrong alignment on W_PreMission_Tablet_C_SetTabletState");
static_assert(sizeof(W_PreMission_Tablet_C_SetTabletState) == 0x000001, "Wrong size on W_PreMission_Tablet_C_SetTabletState");
static_assert(offsetof(W_PreMission_Tablet_C_SetTabletState, IsAwake) == 0x000000, "Member 'W_PreMission_Tablet_C_SetTabletState::IsAwake' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.SetVisualTheme
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_C_SetVisualTheme final
{
public:
	bool                                          UseDarkTheme;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_SetVisualTheme) == 0x000001, "Wrong alignment on W_PreMission_Tablet_C_SetVisualTheme");
static_assert(sizeof(W_PreMission_Tablet_C_SetVisualTheme) == 0x000001, "Wrong size on W_PreMission_Tablet_C_SetVisualTheme");
static_assert(offsetof(W_PreMission_Tablet_C_SetVisualTheme, UseDarkTheme) == 0x000000, "Member 'W_PreMission_Tablet_C_SetVisualTheme::UseDarkTheme' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.UnbindHelicopterEvents
// 0x0028 (0x0028 - 0x0000)
struct W_PreMission_Tablet_C_UnbindHelicopterEvents final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHelicopter*                            CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTrackingCameraComponent*               CallFunc_GetTrackingCameraComponent_ReturnValue;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_UnbindHelicopterEvents) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_UnbindHelicopterEvents");
static_assert(sizeof(W_PreMission_Tablet_C_UnbindHelicopterEvents) == 0x000028, "Wrong size on W_PreMission_Tablet_C_UnbindHelicopterEvents");
static_assert(offsetof(W_PreMission_Tablet_C_UnbindHelicopterEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'W_PreMission_Tablet_C_UnbindHelicopterEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UnbindHelicopterEvents, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_C_UnbindHelicopterEvents::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UnbindHelicopterEvents, CallFunc_GetTrackingCameraComponent_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_C_UnbindHelicopterEvents::CallFunc_GetTrackingCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UnbindHelicopterEvents, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'W_PreMission_Tablet_C_UnbindHelicopterEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UnbindHelicopterEvents, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'W_PreMission_Tablet_C_UnbindHelicopterEvents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.Update Dpad Navigation
// 0x0088 (0x0088 - 0x0000)
struct W_PreMission_Tablet_C_Update_Dpad_Navigation final
{
public:
	int32                                         NewLocalVar_1;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraDataInterfaceArrayBool*         NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  buttonVisibilities;                                // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class UNiagaraDataInterfaceArrayBool*> AvailableButtons;                                  // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveButton_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_PremissionTablet_Button_C*>   CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_1;     // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PremissionTablet_Button_C*           CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_Update_Dpad_Navigation) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_Update_Dpad_Navigation");
static_assert(sizeof(W_PreMission_Tablet_C_Update_Dpad_Navigation) == 0x000088, "Wrong size on W_PreMission_Tablet_C_Update_Dpad_Navigation");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, NewLocalVar_1) == 0x000000, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, NewLocalVar_0) == 0x000008, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, buttonVisibilities) == 0x000010, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::buttonVisibilities' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, AvailableButtons) == 0x000020, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::AvailableButtons' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, Temp_int_Array_Index_Variable) == 0x000030, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_GetActiveButton_ReturnValue) == 0x00003C, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_GetActiveButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x000048, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x000058, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_Array_Get_Item) == 0x000060, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_WasInputKeyJustPressed_ReturnValue) == 0x000068, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_WasInputKeyJustPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000069, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_GetVisibility_ReturnValue) == 0x00006A, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_WasInputKeyJustPressed_ReturnValue_1) == 0x00006B, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_WasInputKeyJustPressed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006C, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_Update_Dpad_Navigation, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'W_PreMission_Tablet_C_Update_Dpad_Navigation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.UpdateNavigation
// 0x0030 (0x0030 - 0x0000)
struct W_PreMission_Tablet_C_UpdateNavigation final
{
public:
	class UW_PremissionTablet_Button_C*           NewActiveButton;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PreMission_Tablet_Floors_C*          K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_UpdateNavigation) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_UpdateNavigation");
static_assert(sizeof(W_PreMission_Tablet_C_UpdateNavigation) == 0x000030, "Wrong size on W_PreMission_Tablet_C_UpdateNavigation");
static_assert(offsetof(W_PreMission_Tablet_C_UpdateNavigation, NewActiveButton) == 0x000000, "Member 'W_PreMission_Tablet_C_UpdateNavigation::NewActiveButton' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UpdateNavigation, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_C_UpdateNavigation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UpdateNavigation, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000C, "Member 'W_PreMission_Tablet_C_UpdateNavigation::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UpdateNavigation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'W_PreMission_Tablet_C_UpdateNavigation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UpdateNavigation, K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors) == 0x000010, "Member 'W_PreMission_Tablet_C_UpdateNavigation::K2Node_DynamicCast_AsW_Pre_Mission_Tablet_Floors' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UpdateNavigation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PreMission_Tablet_C_UpdateNavigation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UpdateNavigation, CallFunc_Map_Find_Value) == 0x000020, "Member 'W_PreMission_Tablet_C_UpdateNavigation::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_C_UpdateNavigation, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'W_PreMission_Tablet_C_UpdateNavigation::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(W_PreMission_Tablet_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on W_PreMission_Tablet_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(W_PreMission_Tablet_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet.W_PreMission_Tablet_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_PreMission_Tablet_C_GetFocusTarget");
static_assert(sizeof(W_PreMission_Tablet_C_GetFocusTarget) == 0x000008, "Wrong size on W_PreMission_Tablet_C_GetFocusTarget");
static_assert(offsetof(W_PreMission_Tablet_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_PreMission_Tablet_C_GetFocusTarget::Focus' has a wrong offset!");

}

