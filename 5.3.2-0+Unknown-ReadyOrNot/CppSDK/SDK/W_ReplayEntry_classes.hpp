#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ReplayEntry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ReplayEntry.W_ReplayEntry_C
// 0x01E0 (0x17C0 - 0x15E0)
class UW_ReplayEntry_C final : public UCommonButtonImplementation
{
public:
	uint8                                         Pad_15D8[0x8];                                     // 0x15D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x15E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       txt_Date;                                          // 0x15E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Duration;                                      // 0x15F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_FileName;                                      // 0x15F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Grade;                                         // 0x1600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Level;                                         // 0x1608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Mission;                                       // 0x1610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 ReplayFileName;                                    // 0x1618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        ReplayLength;                                      // 0x1628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LetterScore;                                       // 0x1630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         NumericalScore;                                    // 0x1640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumPlayers;                                        // 0x1644(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LevelName;                                         // 0x1648(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 GameModeName;                                      // 0x1658(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Timestamp;                                         // 0x1668(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 GameVersion;                                       // 0x1678(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FReplayData                            ReplayData;                                        // 0x1688(0x0080)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          EvenRow;                                           // 0x1708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_1709[0x3];                                     // 0x1709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           col_EvenRow;                                       // 0x170C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           col_OddRow;                                        // 0x171C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Col_Hover;                                         // 0x172C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Col_Active;                                        // 0x173C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           col_ActiveHover;                                   // 0x174C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x175C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hovered;                                           // 0x175D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175E[0x2];                                     // 0x175E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         Current_Font;                                      // 0x1760(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void Construct();
	void Deselect();
	void ExecuteUbergraph_W_ReplayEntry(int32 EntryPoint);
	void GetReplayTimeFormat(double ReplayLength_0, class FString* Duration);
	void OnCurrentTextStyleChanged();
	void PreConstruct(bool IsDesignTime);
	void Select();
	void SetupData();
	void UpdateFileName(const class FString& ReplayFileName_0);
	void UpdateStyle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ReplayEntry_C">();
	}
	static class UW_ReplayEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ReplayEntry_C>();
	}
};
static_assert(alignof(UW_ReplayEntry_C) == 0x000010, "Wrong alignment on UW_ReplayEntry_C");
static_assert(sizeof(UW_ReplayEntry_C) == 0x0017C0, "Wrong size on UW_ReplayEntry_C");
static_assert(offsetof(UW_ReplayEntry_C, UberGraphFrame) == 0x0015E0, "Member 'UW_ReplayEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, txt_Date) == 0x0015E8, "Member 'UW_ReplayEntry_C::txt_Date' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, txt_Duration) == 0x0015F0, "Member 'UW_ReplayEntry_C::txt_Duration' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, txt_FileName) == 0x0015F8, "Member 'UW_ReplayEntry_C::txt_FileName' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, txt_Grade) == 0x001600, "Member 'UW_ReplayEntry_C::txt_Grade' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, txt_Level) == 0x001608, "Member 'UW_ReplayEntry_C::txt_Level' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, txt_Mission) == 0x001610, "Member 'UW_ReplayEntry_C::txt_Mission' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, ReplayFileName) == 0x001618, "Member 'UW_ReplayEntry_C::ReplayFileName' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, ReplayLength) == 0x001628, "Member 'UW_ReplayEntry_C::ReplayLength' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, LetterScore) == 0x001630, "Member 'UW_ReplayEntry_C::LetterScore' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, NumericalScore) == 0x001640, "Member 'UW_ReplayEntry_C::NumericalScore' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, NumPlayers) == 0x001644, "Member 'UW_ReplayEntry_C::NumPlayers' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, LevelName) == 0x001648, "Member 'UW_ReplayEntry_C::LevelName' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, GameModeName) == 0x001658, "Member 'UW_ReplayEntry_C::GameModeName' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, Timestamp) == 0x001668, "Member 'UW_ReplayEntry_C::Timestamp' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, GameVersion) == 0x001678, "Member 'UW_ReplayEntry_C::GameVersion' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, ReplayData) == 0x001688, "Member 'UW_ReplayEntry_C::ReplayData' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, EvenRow) == 0x001708, "Member 'UW_ReplayEntry_C::EvenRow' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, col_EvenRow) == 0x00170C, "Member 'UW_ReplayEntry_C::col_EvenRow' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, col_OddRow) == 0x00171C, "Member 'UW_ReplayEntry_C::col_OddRow' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, Col_Hover) == 0x00172C, "Member 'UW_ReplayEntry_C::Col_Hover' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, Col_Active) == 0x00173C, "Member 'UW_ReplayEntry_C::Col_Active' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, col_ActiveHover) == 0x00174C, "Member 'UW_ReplayEntry_C::col_ActiveHover' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, Active) == 0x00175C, "Member 'UW_ReplayEntry_C::Active' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, Hovered) == 0x00175D, "Member 'UW_ReplayEntry_C::Hovered' has a wrong offset!");
static_assert(offsetof(UW_ReplayEntry_C, Current_Font) == 0x001760, "Member 'UW_ReplayEntry_C::Current_Font' has a wrong offset!");

}

