#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardSlider

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_StandardSlider.W_StandardSlider_C.AddFloatValue
// 0x0020 (0x0020 - 0x0000)
struct W_StandardSlider_C_AddFloatValue final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetFloatValue_NewValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_AddFloatValue) == 0x000008, "Wrong alignment on W_StandardSlider_C_AddFloatValue");
static_assert(sizeof(W_StandardSlider_C_AddFloatValue) == 0x000020, "Wrong size on W_StandardSlider_C_AddFloatValue");
static_assert(offsetof(W_StandardSlider_C_AddFloatValue, Value) == 0x000000, "Member 'W_StandardSlider_C_AddFloatValue::Value' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddFloatValue, NewValue) == 0x000008, "Member 'W_StandardSlider_C_AddFloatValue::NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddFloatValue, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_AddFloatValue::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddFloatValue, CallFunc_SetFloatValue_NewValue) == 0x000018, "Member 'W_StandardSlider_C_AddFloatValue::CallFunc_SetFloatValue_NewValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.AddIntegralValue
// 0x0010 (0x0010 - 0x0000)
struct W_StandardSlider_C_AddIntegralValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetIntegralValue_NewValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_AddIntegralValue) == 0x000004, "Wrong alignment on W_StandardSlider_C_AddIntegralValue");
static_assert(sizeof(W_StandardSlider_C_AddIntegralValue) == 0x000010, "Wrong size on W_StandardSlider_C_AddIntegralValue");
static_assert(offsetof(W_StandardSlider_C_AddIntegralValue, Value) == 0x000000, "Member 'W_StandardSlider_C_AddIntegralValue::Value' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddIntegralValue, NewValue) == 0x000004, "Member 'W_StandardSlider_C_AddIntegralValue::NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddIntegralValue, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_AddIntegralValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_AddIntegralValue, CallFunc_SetIntegralValue_NewValue) == 0x00000C, "Member 'W_StandardSlider_C_AddIntegralValue::CallFunc_SetIntegralValue_NewValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'W_StandardSlider_C_BndEvt__TheSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.ExecuteUbergraph_W_StandardSlider
// 0x0478 (0x0478 - 0x0000)
struct W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumDlssQualityOptions_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_6;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_7;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumDlssQualityOptions_ReturnValue_1;   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_8;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue_2;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetFloatValue_NewValue;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetIntegralValue_NewValue;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumDlssQualityOptions_ReturnValue_2;   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_2;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_3;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_9;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_4;                      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_4;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetSupportedScreenResolutions_Resolutions; // 0x0120(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetSupportedScreenResolutions_ReturnValue; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNormalizedValue_ReturnValue;           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_10;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_ReturnValue;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_ReturnValue_1;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_ReturnValue_2;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0190(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_11;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_12;          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue_3;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_ReturnValue_3;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_13;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue_4;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_14;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumDlssQualityOptions_ReturnValue_3;   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_15;          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_ReturnValue_4;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue_5;           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_16;          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue_6;           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_17;          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0280(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x02B8(0x0078)(ConstParm)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0338(0x0078)(ConstParm)
	int32                                         CallFunc_Round_ReturnValue_5;                      // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_5;                      // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGamePlatform                                 CallFunc_GetPlatform_ReturnValue;                  // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsNotEmpty_NotEmpty;                  // 0x03BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast;         // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast_1;       // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast_2;       // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_B_ImplicitCast;         // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_Location_ImplicitCast;     // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_Location_ImplicitCast_1;   // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_Location_ImplicitCast_2;   // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3;   // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4;   // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5;   // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_Location_ImplicitCast_3;   // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_NewSliderValue_ImplicitCast;   // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_NewSliderValue_ImplicitCast_1; // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_NewSliderValue_ImplicitCast_2; // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CallDelegate_NewSliderValue_ImplicitCast_3; // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_Location_ImplicitCast_4;   // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_1;          // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_2;          // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Value_ImplicitCast;              // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast_3;       // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_3;          // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast_4;       // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_4;          // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast_5;       // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStepSize_InValue_ImplicitCast_6;       // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider) == 0x000008, "Wrong alignment on W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider");
static_assert(sizeof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider) == 0x000478, "Wrong size on W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, EntryPoint) == 0x000000, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetNumDlssQualityOptions_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetNumDlssQualityOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000018, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000020, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000028, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x000030, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x000038, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue) == 0x000040, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_6) == 0x000048, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_1) == 0x000050, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Array_Get_Item) == 0x000058, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_7) == 0x000068, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetNumDlssQualityOptions_ReturnValue_1) == 0x000070, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetNumDlssQualityOptions_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000074, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_Event_IsDesignTime) == 0x000078, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_8) == 0x000080, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_2) == 0x000088, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetFloatValue_NewValue) == 0x000098, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetFloatValue_NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetIntegralValue_NewValue) == 0x0000A0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetIntegralValue_NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_ComponentBoundEvent_Value) == 0x0000A4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000A8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue) == 0x0000C0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue_1) == 0x0000C4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000C8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue) == 0x0000D0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue_2) == 0x0000D4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue_1) == 0x0000D8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000E0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue_3) == 0x0000E8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetNumDlssQualityOptions_ReturnValue_2) == 0x0000EC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetNumDlssQualityOptions_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue_2) == 0x0000F0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000F4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue_3) == 0x0000F8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Array_Length_ReturnValue) == 0x0000FC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000100, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000108, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_9) == 0x000110, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue_4) == 0x000118, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue_4) == 0x00011C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetSupportedScreenResolutions_Resolutions) == 0x000120, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetSupportedScreenResolutions_Resolutions' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetSupportedScreenResolutions_ReturnValue) == 0x000130, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetSupportedScreenResolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Array_Length_ReturnValue_1) == 0x00014C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetNormalizedValue_ReturnValue) == 0x000150, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetNormalizedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000154, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_10) == 0x000158, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000160, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_ReturnValue) == 0x000168, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_ReturnValue_1) == 0x000178, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000180, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_ReturnValue_2) == 0x000188, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_MakeStruct_SlateChildSize) == 0x000190, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x000198, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Array_Length_ReturnValue_2) == 0x0001A4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_11) == 0x0001A8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x0001B0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_12) == 0x0001B8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_3) == 0x0001C0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0001C8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_ReturnValue_3) == 0x0001D0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_13) == 0x0001D8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_4) == 0x0001E0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_14) == 0x0001E8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetNumDlssQualityOptions_ReturnValue_3) == 0x0001F0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetNumDlssQualityOptions_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001F8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000200, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000208, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_15) == 0x000210, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000218, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000220, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_FClamp_ReturnValue) == 0x000228, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_ReturnValue_4) == 0x000230, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetValue_ReturnValue) == 0x000238, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000240, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_5) == 0x000248, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Add_IntInt_ReturnValue) == 0x000250, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_16) == 0x000258, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x000260, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_NormalizeToRange_ReturnValue_6) == 0x000268, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_NormalizeToRange_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Conv_IntToDouble_ReturnValue_17) == 0x000270, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Conv_IntToDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000278, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_Event_MyGeometry) == 0x000280, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_Event_MouseEvent_1) == 0x0002B8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000330, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_Event_MouseEvent) == 0x000338, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Round_ReturnValue_5) == 0x0003B0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Round_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Clamp_ReturnValue_5) == 0x0003B4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Clamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_IsValid_ReturnValue_1) == 0x0003B8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GetPlatform_ReturnValue) == 0x0003B9, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003BA, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_TextIsNotEmpty_NotEmpty) == 0x0003BB, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_TextIsNotEmpty_NotEmpty' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_BooleanAND_ReturnValue) == 0x0003BC, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetStepSize_InValue_ImplicitCast) == 0x0003C0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetStepSize_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetStepSize_InValue_ImplicitCast_1) == 0x0003C4, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetStepSize_InValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetStepSize_InValue_ImplicitCast_2) == 0x0003C8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetStepSize_InValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0003D0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0003D8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x0003E0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_IntFloat_B_ImplicitCast) == 0x0003E8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_IntFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_Location_ImplicitCast) == 0x0003F0, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_Location_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_Location_ImplicitCast_1) == 0x0003F8, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_Location_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_Location_ImplicitCast_2) == 0x000400, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_Location_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3) == 0x000408, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4) == 0x000410, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5) == 0x000418, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_Location_ImplicitCast_3) == 0x000420, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_Location_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_CallDelegate_NewSliderValue_ImplicitCast) == 0x000428, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_CallDelegate_NewSliderValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_CallDelegate_NewSliderValue_ImplicitCast_1) == 0x000430, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_CallDelegate_NewSliderValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_CallDelegate_NewSliderValue_ImplicitCast_2) == 0x000438, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_CallDelegate_NewSliderValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_CallDelegate_NewSliderValue_ImplicitCast_3) == 0x000440, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_CallDelegate_NewSliderValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_GridSnap_Float_Location_ImplicitCast_4) == 0x000448, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_GridSnap_Float_Location_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetValue_InValue_ImplicitCast) == 0x000450, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetValue_InValue_ImplicitCast_1) == 0x000454, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetValue_InValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetValue_InValue_ImplicitCast_2) == 0x000458, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetValue_InValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, K2Node_MakeStruct_Value_ImplicitCast) == 0x00045C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::K2Node_MakeStruct_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetStepSize_InValue_ImplicitCast_3) == 0x000460, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetStepSize_InValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetValue_InValue_ImplicitCast_3) == 0x000464, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetValue_InValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetStepSize_InValue_ImplicitCast_4) == 0x000468, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetStepSize_InValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetValue_InValue_ImplicitCast_4) == 0x00046C, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetValue_InValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetStepSize_InValue_ImplicitCast_5) == 0x000470, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetStepSize_InValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider, CallFunc_SetStepSize_InValue_ImplicitCast_6) == 0x000474, "Member 'W_StandardSlider_C_ExecuteUbergraph_W_StandardSlider::CallFunc_SetStepSize_InValue_ImplicitCast_6' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.Navigate Left
// 0x0040 (0x0040 - 0x0000)
struct W_StandardSlider_C_Navigate_Left final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_Navigate_Left) == 0x000008, "Wrong alignment on W_StandardSlider_C_Navigate_Left");
static_assert(sizeof(W_StandardSlider_C_Navigate_Left) == 0x000040, "Wrong size on W_StandardSlider_C_Navigate_Left");
static_assert(offsetof(W_StandardSlider_C_Navigate_Left, Navigation_0) == 0x000000, "Member 'W_StandardSlider_C_Navigate_Left::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Left, ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_Navigate_Left::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Left, CallFunc_GetValue_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_Navigate_Left::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Left, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'W_StandardSlider_C_Navigate_Left::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Left, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'W_StandardSlider_C_Navigate_Left::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Left, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'W_StandardSlider_C_Navigate_Left::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Left, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'W_StandardSlider_C_Navigate_Left::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Left, CallFunc_SetValue_InValue_ImplicitCast) == 0x000038, "Member 'W_StandardSlider_C_Navigate_Left::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.Navigate Right
// 0x0040 (0x0040 - 0x0000)
struct W_StandardSlider_C_Navigate_Right final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_Navigate_Right) == 0x000008, "Wrong alignment on W_StandardSlider_C_Navigate_Right");
static_assert(sizeof(W_StandardSlider_C_Navigate_Right) == 0x000040, "Wrong size on W_StandardSlider_C_Navigate_Right");
static_assert(offsetof(W_StandardSlider_C_Navigate_Right, Navigation_0) == 0x000000, "Member 'W_StandardSlider_C_Navigate_Right::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Right, ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_Navigate_Right::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Right, CallFunc_GetValue_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_Navigate_Right::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Right, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'W_StandardSlider_C_Navigate_Right::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Right, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'W_StandardSlider_C_Navigate_Right::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Right, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'W_StandardSlider_C_Navigate_Right::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Right, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'W_StandardSlider_C_Navigate_Right::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_Navigate_Right, CallFunc_SetValue_InValue_ImplicitCast) == 0x000038, "Member 'W_StandardSlider_C_Navigate_Right::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct W_StandardSlider_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_StandardSlider_C_OnMouseEnter) == 0x000008, "Wrong alignment on W_StandardSlider_C_OnMouseEnter");
static_assert(sizeof(W_StandardSlider_C_OnMouseEnter) == 0x0000B0, "Wrong size on W_StandardSlider_C_OnMouseEnter");
static_assert(offsetof(W_StandardSlider_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'W_StandardSlider_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'W_StandardSlider_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct W_StandardSlider_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_StandardSlider_C_OnMouseLeave) == 0x000008, "Wrong alignment on W_StandardSlider_C_OnMouseLeave");
static_assert(sizeof(W_StandardSlider_C_OnMouseLeave) == 0x000078, "Wrong size on W_StandardSlider_C_OnMouseLeave");
static_assert(offsetof(W_StandardSlider_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'W_StandardSlider_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.OnPreviewMouseButtonDown
// 0x02F0 (0x02F0 - 0x0000)
struct W_StandardSlider_C_OnPreviewMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0168(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0220(0x00B8)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_OnPreviewMouseButtonDown) == 0x000008, "Wrong alignment on W_StandardSlider_C_OnPreviewMouseButtonDown");
static_assert(sizeof(W_StandardSlider_C_OnPreviewMouseButtonDown) == 0x0002F0, "Wrong size on W_StandardSlider_C_OnPreviewMouseButtonDown");
static_assert(offsetof(W_StandardSlider_C_OnPreviewMouseButtonDown, MyGeometry) == 0x000000, "Member 'W_StandardSlider_C_OnPreviewMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnPreviewMouseButtonDown, MouseEvent) == 0x000038, "Member 'W_StandardSlider_C_OnPreviewMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnPreviewMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'W_StandardSlider_C_OnPreviewMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnPreviewMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000168, "Member 'W_StandardSlider_C_OnPreviewMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnPreviewMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000220, "Member 'W_StandardSlider_C_OnPreviewMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnPreviewMouseButtonDown, CallFunc_GetOwningPlayer_ReturnValue) == 0x0002D8, "Member 'W_StandardSlider_C_OnPreviewMouseButtonDown::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnPreviewMouseButtonDown, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x0002E0, "Member 'W_StandardSlider_C_OnPreviewMouseButtonDown::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnPreviewMouseButtonDown, CallFunc_GetCurrentInputType_ReturnValue) == 0x0002E8, "Member 'W_StandardSlider_C_OnPreviewMouseButtonDown::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_OnPreviewMouseButtonDown, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002E9, "Member 'W_StandardSlider_C_OnPreviewMouseButtonDown::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_StandardSlider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_PreConstruct) == 0x000001, "Wrong alignment on W_StandardSlider_C_PreConstruct");
static_assert(sizeof(W_StandardSlider_C_PreConstruct) == 0x000001, "Wrong size on W_StandardSlider_C_PreConstruct");
static_assert(offsetof(W_StandardSlider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_StandardSlider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetDLSSQualityValue
// 0x0040 (0x0040 - 0x0000)
struct W_StandardSlider_C_SetDLSSQualityValue final
{
public:
	int32                                         NewQuality;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumDlssQualityOptions_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumDlssQualityOptions_ReturnValue_1;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_SetDLSSQualityValue) == 0x000008, "Wrong alignment on W_StandardSlider_C_SetDLSSQualityValue");
static_assert(sizeof(W_StandardSlider_C_SetDLSSQualityValue) == 0x000040, "Wrong size on W_StandardSlider_C_SetDLSSQualityValue");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, NewQuality) == 0x000000, "Member 'W_StandardSlider_C_SetDLSSQualityValue::NewQuality' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_GetNumDlssQualityOptions_ReturnValue) == 0x000004, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_GetNumDlssQualityOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_GetNumDlssQualityOptions_ReturnValue_1) == 0x000008, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_GetNumDlssQualityOptions_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000010, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_Clamp_ReturnValue) == 0x000020, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_NormalizeToRange_ReturnValue) == 0x000030, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetDLSSQualityValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x00003C, "Member 'W_StandardSlider_C_SetDLSSQualityValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetFloatValue
// 0x0028 (0x0028 - 0x0000)
struct W_StandardSlider_C_SetFloatValue final
{
public:
	double                                        NewFloat;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_SetFloatValue) == 0x000008, "Wrong alignment on W_StandardSlider_C_SetFloatValue");
static_assert(sizeof(W_StandardSlider_C_SetFloatValue) == 0x000028, "Wrong size on W_StandardSlider_C_SetFloatValue");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, NewFloat) == 0x000000, "Member 'W_StandardSlider_C_SetFloatValue::NewFloat' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, NewValue) == 0x000008, "Member 'W_StandardSlider_C_SetFloatValue::NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetFloatValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, CallFunc_NormalizeToRange_ReturnValue) == 0x000018, "Member 'W_StandardSlider_C_SetFloatValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'W_StandardSlider_C_SetFloatValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFloatValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x000024, "Member 'W_StandardSlider_C_SetFloatValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetFrameGenerationValue
// 0x0020 (0x0020 - 0x0000)
struct W_StandardSlider_C_SetFrameGenerationValue final
{
public:
	int32                                         NewQuality;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_SetFrameGenerationValue) == 0x000008, "Wrong alignment on W_StandardSlider_C_SetFrameGenerationValue");
static_assert(sizeof(W_StandardSlider_C_SetFrameGenerationValue) == 0x000020, "Wrong size on W_StandardSlider_C_SetFrameGenerationValue");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, NewQuality) == 0x000000, "Member 'W_StandardSlider_C_SetFrameGenerationValue::NewQuality' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, CallFunc_Clamp_ReturnValue) == 0x000004, "Member 'W_StandardSlider_C_SetFrameGenerationValue::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_SetFrameGenerationValue::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, CallFunc_NormalizeToRange_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetFrameGenerationValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'W_StandardSlider_C_SetFrameGenerationValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFrameGenerationValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x00001C, "Member 'W_StandardSlider_C_SetFrameGenerationValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetFSRQualityValue
// 0x0020 (0x0020 - 0x0000)
struct W_StandardSlider_C_SetFSRQualityValue final
{
public:
	int32                                         NewQuality;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_SetFSRQualityValue) == 0x000008, "Wrong alignment on W_StandardSlider_C_SetFSRQualityValue");
static_assert(sizeof(W_StandardSlider_C_SetFSRQualityValue) == 0x000020, "Wrong size on W_StandardSlider_C_SetFSRQualityValue");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, NewQuality) == 0x000000, "Member 'W_StandardSlider_C_SetFSRQualityValue::NewQuality' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, CallFunc_Clamp_ReturnValue) == 0x000004, "Member 'W_StandardSlider_C_SetFSRQualityValue::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_SetFSRQualityValue::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, CallFunc_NormalizeToRange_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetFSRQualityValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'W_StandardSlider_C_SetFSRQualityValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetFSRQualityValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x00001C, "Member 'W_StandardSlider_C_SetFSRQualityValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetIntegralValue
// 0x0038 (0x0038 - 0x0000)
struct W_StandardSlider_C_SetIntegralValue final
{
public:
	int32                                         NewInteger;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_SetIntegralValue) == 0x000008, "Wrong alignment on W_StandardSlider_C_SetIntegralValue");
static_assert(sizeof(W_StandardSlider_C_SetIntegralValue) == 0x000038, "Wrong size on W_StandardSlider_C_SetIntegralValue");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, NewInteger) == 0x000000, "Member 'W_StandardSlider_C_SetIntegralValue::NewInteger' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, NewValue) == 0x000004, "Member 'W_StandardSlider_C_SetIntegralValue::NewValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000010, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_Clamp_ReturnValue) == 0x000018, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000020, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_NormalizeToRange_ReturnValue) == 0x000028, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetIntegralValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x000034, "Member 'W_StandardSlider_C_SetIntegralValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetQualityValue
// 0x0020 (0x0020 - 0x0000)
struct W_StandardSlider_C_SetQualityValue final
{
public:
	int32                                         NewQuality;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_SetQualityValue) == 0x000008, "Wrong alignment on W_StandardSlider_C_SetQualityValue");
static_assert(sizeof(W_StandardSlider_C_SetQualityValue) == 0x000020, "Wrong size on W_StandardSlider_C_SetQualityValue");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, NewQuality) == 0x000000, "Member 'W_StandardSlider_C_SetQualityValue::NewQuality' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, CallFunc_Clamp_ReturnValue) == 0x000004, "Member 'W_StandardSlider_C_SetQualityValue::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'W_StandardSlider_C_SetQualityValue::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, CallFunc_NormalizeToRange_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetQualityValue::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'W_StandardSlider_C_SetQualityValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetQualityValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x00001C, "Member 'W_StandardSlider_C_SetQualityValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetResolutionValue
// 0x0058 (0x0058 - 0x0000)
struct W_StandardSlider_C_SetResolutionValue final
{
public:
	class FString                                 Resolution;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_SetResolutionValue) == 0x000008, "Wrong alignment on W_StandardSlider_C_SetResolutionValue");
static_assert(sizeof(W_StandardSlider_C_SetResolutionValue) == 0x000058, "Wrong size on W_StandardSlider_C_SetResolutionValue");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, Resolution) == 0x000000, "Member 'W_StandardSlider_C_SetResolutionValue::Resolution' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Array_Find_ReturnValue) == 0x000028, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Array_Contains_ReturnValue) == 0x00002C, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000040, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_SetResolutionValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x000050, "Member 'W_StandardSlider_C_SetResolutionValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct W_StandardSlider_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_StandardSlider_C_SetText) == 0x000008, "Wrong alignment on W_StandardSlider_C_SetText");
static_assert(sizeof(W_StandardSlider_C_SetText) == 0x000018, "Wrong size on W_StandardSlider_C_SetText");
static_assert(offsetof(W_StandardSlider_C_SetText, InText) == 0x000000, "Member 'W_StandardSlider_C_SetText::InText' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.SetupDescription
// 0x0008 (0x0008 - 0x0000)
struct W_StandardSlider_C_SetupDescription final
{
public:
	class UW_Options_UE5_C*                       CallFunc_FindParentWidgetOfType_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_SetupDescription) == 0x000008, "Wrong alignment on W_StandardSlider_C_SetupDescription");
static_assert(sizeof(W_StandardSlider_C_SetupDescription) == 0x000008, "Wrong size on W_StandardSlider_C_SetupDescription");
static_assert(offsetof(W_StandardSlider_C_SetupDescription, CallFunc_FindParentWidgetOfType_ReturnValue) == 0x000000, "Member 'W_StandardSlider_C_SetupDescription::CallFunc_FindParentWidgetOfType_ReturnValue' has a wrong offset!");

// Function W_StandardSlider.W_StandardSlider_C.UpdateSliderText
// 0x01A0 (0x01A0 - 0x0000)
struct W_StandardSlider_C_UpdateSliderText final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0058(0x0018)()
	float                                         CallFunc_GetNormalizedValue_ReturnValue;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GenerateFSRQualityString_ReturnValue;     // 0x0078(0x0018)()
	class FText                                   CallFunc_GenerateDlssQualityString_ReturnValue;    // 0x0090(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A8(0x0018)()
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x00C8(0x0018)()
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0140(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
	class FText                                   CallFunc_GenerateQualityString_ReturnValue;        // 0x0180(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardSlider_C_UpdateSliderText) == 0x000008, "Wrong alignment on W_StandardSlider_C_UpdateSliderText");
static_assert(sizeof(W_StandardSlider_C_UpdateSliderText) == 0x0001A0, "Wrong size on W_StandardSlider_C_UpdateSliderText");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, Temp_int_Variable) == 0x000000, "Member 'W_StandardSlider_C_UpdateSliderText::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, Temp_text_Variable) == 0x000008, "Member 'W_StandardSlider_C_UpdateSliderText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, Temp_text_Variable_1) == 0x000020, "Member 'W_StandardSlider_C_UpdateSliderText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, Temp_text_Variable_2) == 0x000038, "Member 'W_StandardSlider_C_UpdateSliderText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, K2Node_Select_Default) == 0x000058, "Member 'W_StandardSlider_C_UpdateSliderText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_GetNormalizedValue_ReturnValue) == 0x000070, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_GetNormalizedValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_GenerateFSRQualityString_ReturnValue) == 0x000078, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_GenerateFSRQualityString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_GenerateDlssQualityString_ReturnValue) == 0x000090, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_GenerateDlssQualityString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A8, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0000C8, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Round_ReturnValue) == 0x0000E0, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000E8, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, K2Node_MakeStruct_FormatArgumentData) == 0x0000F0, "Member 'W_StandardSlider_C_UpdateSliderText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Conv_IntToText_ReturnValue) == 0x000140, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, K2Node_MakeArray_Array) == 0x000158, "Member 'W_StandardSlider_C_UpdateSliderText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_Format_ReturnValue) == 0x000168, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, CallFunc_GenerateQualityString_ReturnValue) == 0x000180, "Member 'W_StandardSlider_C_UpdateSliderText::CallFunc_GenerateQualityString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardSlider_C_UpdateSliderText, K2Node_SwitchEnum_CmpSuccess) == 0x000198, "Member 'W_StandardSlider_C_UpdateSliderText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

