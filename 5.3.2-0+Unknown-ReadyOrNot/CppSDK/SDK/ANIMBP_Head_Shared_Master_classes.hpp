#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Head_Shared_Master

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ANIMBP_Head_Shared_Master_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_Head_Shared_Master.ANIMBP_Head_Shared_Master_C
// 0x0ED0 (0x12B0 - 0x03E0)
class UANIMBP_Head_Shared_Master_C final : public UReadyOrNotFaceAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ANIMBP_Head_Shared_Master::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;    // 0x03E8(0x0018)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0400(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0408(0x0008)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0410(0x0040)()
	struct FAnimNode_Inertialization              AnimGraphNode_Inertialization;                     // 0x0450(0x0110)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_3;                       // 0x0560(0x0120)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x0680(0x0048)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_2;                       // 0x06C8(0x0120)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x07E8(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x08D8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0920(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0968(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x09B0(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0A30(0x0028)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x0A58(0x0120)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0B78(0x0010)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0B88(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0BD0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0C18(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0D08(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0D50(0x0048)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode;                       // 0x0D98(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0E68(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0EB0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0EF8(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0F40(0x0048)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x0F88(0x0120)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x10A8(0x0158)(ContainsInstancedReference)
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1200(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1248(0x0020)()
	bool                                          IsPlayerDead;                                      // 0x1268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1269[0x7];                                     // 0x1269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EmotionWeight;                                     // 0x1270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookAtAlpha;                                       // 0x1278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocation;                                    // 0x1280(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BodyMeshRef;                                       // 0x1298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterEmotion                             Emotion;                                           // 0x12A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A1[0x7];                                     // 0x12A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LipSyncScale;                                      // 0x12A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ANIMBP_Head_Shared_Master(int32 EntryPoint);
	void On_Lip_Sync_Anim_Update(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_Head_Shared_Master_C">();
	}
	static class UANIMBP_Head_Shared_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_Head_Shared_Master_C>();
	}
};
static_assert(alignof(UANIMBP_Head_Shared_Master_C) == 0x000010, "Wrong alignment on UANIMBP_Head_Shared_Master_C");
static_assert(sizeof(UANIMBP_Head_Shared_Master_C) == 0x0012B0, "Wrong size on UANIMBP_Head_Shared_Master_C");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, UberGraphFrame) == 0x0003E0, "Member 'UANIMBP_Head_Shared_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, __AnimBlueprintMutables) == 0x0003E8, "Member 'UANIMBP_Head_Shared_Master_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimBlueprintExtension_PropertyAccess) == 0x000400, "Member 'UANIMBP_Head_Shared_Master_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimBlueprintExtension_Base) == 0x000408, "Member 'UANIMBP_Head_Shared_Master_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequenceEvaluator) == 0x000410, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Inertialization) == 0x000450, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Inertialization' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_ModifyCurve_3) == 0x000560, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_ModifyCurve_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_7) == 0x000680, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_ModifyCurve_2) == 0x0006C8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_ModifyCurve_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0007E8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Slot_1) == 0x0008D8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_6) == 0x000920, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_BlendListByBool_1) == 0x000968, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SaveCachedPose) == 0x0009B0, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_UseCachedPose) == 0x000A30, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_ModifyCurve_1) == 0x000A58, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_LocalRefPose) == 0x000B78, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_BlendListByBool) == 0x000B88, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_5) == 0x000BD0, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_LayeredBoneBlend) == 0x000C18, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_4) == 0x000D08, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_3) == 0x000D50, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_PoseBlendNode) == 0x000D98, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_PoseBlendNode' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_2) == 0x000E68, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer_1) == 0x000EB0, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_SequencePlayer) == 0x000EF8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_BlendListByEnum) == 0x000F40, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_ModifyCurve) == 0x000F88, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_CopyPoseFromMesh) == 0x0010A8, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Slot) == 0x001200, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, AnimGraphNode_Root) == 0x001248, "Member 'UANIMBP_Head_Shared_Master_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, IsPlayerDead) == 0x001268, "Member 'UANIMBP_Head_Shared_Master_C::IsPlayerDead' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, EmotionWeight) == 0x001270, "Member 'UANIMBP_Head_Shared_Master_C::EmotionWeight' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, LookAtAlpha) == 0x001278, "Member 'UANIMBP_Head_Shared_Master_C::LookAtAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, LookAtLocation) == 0x001280, "Member 'UANIMBP_Head_Shared_Master_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, BodyMeshRef) == 0x001298, "Member 'UANIMBP_Head_Shared_Master_C::BodyMeshRef' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, Emotion) == 0x0012A0, "Member 'UANIMBP_Head_Shared_Master_C::Emotion' has a wrong offset!");
static_assert(offsetof(UANIMBP_Head_Shared_Master_C, LipSyncScale) == 0x0012A8, "Member 'UANIMBP_Head_Shared_Master_C::LipSyncScale' has a wrong offset!");

}

