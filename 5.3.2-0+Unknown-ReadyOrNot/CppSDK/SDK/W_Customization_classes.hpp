#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Customization

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "E_CustomizationGroups_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "E_BoxShape_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Customization.W_Customization_C
// 0x04A0 (0x0EA8 - 0x0A08)
class UW_Customization_C final : public UCustomizationWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           AnimsVerticalBox;                                  // 0x0A10(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Armor_List;                                        // 0x0A18(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundGradientLeft;                            // 0x0A20(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundGradientRight;                           // 0x0A28(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Ballistic_List;                                    // 0x0A30(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Belt_List;                                         // 0x0A38(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Boots_List;                                        // 0x0A40(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Gamepad_GroupButton_C* btn_Group_Accessories;                             // 0x0A48(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Gamepad_GroupButton_C* btn_Group_Gear;                                    // 0x0A50(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Gamepad_GroupButton_C* btn_Group_Uniform;                                 // 0x0A58(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           CharacterVoiceSelectBox;                           // 0x0A60(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CustomizationSlots;                                // 0x0A68(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                DoneButton;                                        // 0x0A70(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                DoneButton_1;                                      // 0x0A78(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Eyewear_List;                                      // 0x0A80(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Facewear_List;                                     // 0x0A88(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Gloves_List;                                       // 0x0A90(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_AccessoySlots;                                  // 0x0A98(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_GearSlots;                                      // 0x0AA0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_GearSlots_1;                                    // 0x0AA8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Helmet_List;                                       // 0x0AB0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Itemlist;                                          // 0x0AB8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_Preset;                                        // 0x0AC0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               NVG_List;                                          // 0x0AC8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Pants_List;                                        // 0x0AD0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_Page_Preset_C*               PresetList;                                        // 0x0AD8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SmallSlot_v2_C*                      PresetName;                                        // 0x0AE0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             SB_Items;                                          // 0x0AE8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Selector_C*            Selector_Character;                                // 0x0AF0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Selector_C*            Selector_Voice;                                    // 0x0AF8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Shirt_List;                                        // 0x0B00(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_BallisticMask;                                // 0x0B08(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Belt;                                         // 0x0B10(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Boots;                                        // 0x0B18(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Eyewear;                                      // 0x0B20(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Facewear;                                     // 0x0B28(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Gloves;                                       // 0x0B30(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Helmet;                                       // 0x0B38(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_HelmetMount;                                  // 0x0B40(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Pants;                                        // 0x0B48(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Tattoos;                                      // 0x0B50(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Torso;                                        // 0x0B58(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Vest;                                         // 0x0B60(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                Slot_Watch;                                        // 0x0B68(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Tattoos_List;                                      // 0x0B70(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_VariantCarousel_C*     VariantList;                                       // 0x0B78(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_CategoryOverview;                               // 0x0B80(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_TacticalGearSlots;                              // 0x0B88(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_UniformSlots;                                   // 0x0B90(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Customization_InfoBox_C*             W_Customization_InfoBox;                           // 0x0B98(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Carousel_C*                          W_ItemCategoryCarousel;                            // 0x0BA0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_PresetDropdown_C*            W_Loadout_PresetDropdown;                          // 0x0BA8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_UnitSelect_C*                W_Loadout_UnitSelect;                              // 0x0BB0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Watch_List;                                        // 0x0BB8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       WidgetSwitcher;                                    // 0x0BC0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WS_ItemList;                                       // 0x0BC8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidget*                                LastHovered;                                       // 0x0BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<ECustomizationType, class FString>       CategoryPoses;                                     // 0x0BD8(0x0050)(Edit, BlueprintVisible)
	TMap<ECustomizationType, class FName>         CategoryCameraTags;                                // 0x0C28(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, class ULoadoutCustomization*> CharacterMap;                                    // 0x0C78(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FMargin                                ListMargin;                                        // 0x0CC8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          rot;                                               // 0x0CD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD9[0x7];                                      // 0x0CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Customization_Slot_C*>        AllSlots;                                          // 0x0CE0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bUseGamepad;                                       // 0x0CF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bItemListOpen;                                     // 0x0CF1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVariantListOpen;                                  // 0x0CF2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF3[0x5];                                      // 0x0CF3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Customization_Slot_C*>        UniformSlots;                                      // 0x0CF8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UW_Customization_Slot_C*>        GearSlots;                                         // 0x0D08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UW_Customization_Slot_C*>        AccessorySlots;                                    // 0x0D18(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bPresetListOpen;                                   // 0x0D28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECustomizationType                            CurrentCategory;                                   // 0x0D29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2A[0x6];                                      // 0x0D2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FText>                CarouselOptionsMap;                                // 0x0D30(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_CustomizationGroups                         BrowsingGroup;                                     // 0x0D80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D81[0x7];                                      // 0x0D81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Customization_Slot_C*                SelectedSlot;                                      // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class FName CameraTag, const class FString& CharacterPose)> OnCategorySelected; // 0x0D90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UW_Customization_Slot_C*                EquippedItemSlot;                                  // 0x0DA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Customization_Gamepad_GroupButton_C* SelectedGroupButton;                               // 0x0DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class ULoadoutCustomization*> VoiceMap;                                        // 0x0DB0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UW_Customization_Slot_C*                EquippedVariantSlot;                               // 0x0E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Customization_Slot_C*                HighlightedVariant;                                // 0x0E08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULoadoutCustomization*                  VariantParent;                                     // 0x0E10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacterMenuOpen;                                // 0x0E18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVoiceMenuOpen;                                    // 0x0E19(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1A[0x6];                                      // 0x0E1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ItemUnhoverTimer;                                  // 0x0E20(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ItemHoverTimer;                                    // 0x0E28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<ECustomizationType, class UFMODEvent*>   CategoryFMODTags;                                  // 0x0E30(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	ECustomizationType                            CurrentCategoryFMOD;                               // 0x0E80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E81[0x7];                                      // 0x0E81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECustomizationType>                    Categories;                                        // 0x0E88(0x0010)(Edit, BlueprintVisible)
	TArray<ECustomizationType>                    SkinCategories;                                    // 0x0E98(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BackPage(bool* Handled);
	void BndEvt__W_Customization_btn_Group_Accessories_K2Node_ComponentBoundEvent_13_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_btn_Group_Accessories_K2Node_ComponentBoundEvent_14_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_btn_Group_Gear_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_btn_Group_Gear_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_btn_Group_Uniform_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_btn_Group_Uniform_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_Customization_PresetList_K2Node_ComponentBoundEvent_33_OnCustomizationPresetHovered__DelegateSignature(const class FString& Name_0);
	void BndEvt__W_Customization_PresetList_K2Node_ComponentBoundEvent_34_OnPresetSelected__DelegateSignature(const class FString& Name_0);
	void BndEvt__W_Customization_PresetList_K2Node_ComponentBoundEvent_38_OnDefaultPresetSelected__DelegateSignature();
	void BndEvt__W_Customization_PresetName_K2Node_ComponentBoundEvent_31_OnClick__DelegateSignature(class UW_SmallSlot_v2_C* TriggeringSlot);
	void BndEvt__W_Customization_Selector_Character_K2Node_ComponentBoundEvent_1_OptionSelected__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_Selector_Character_K2Node_ComponentBoundEvent_35_OnMenuOpened__DelegateSignature();
	void BndEvt__W_Customization_Selector_Character_K2Node_ComponentBoundEvent_6_OnDropdownClosed__DelegateSignature(class Uw_Dropdown_C* TriggeringSelector);
	void BndEvt__W_Customization_Selector_Character_K2Node_ComponentBoundEvent_7_OnOptionHovered__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_Selector_Voice_K2Node_ComponentBoundEvent_15_OptionSelected__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_Selector_Voice_K2Node_ComponentBoundEvent_16_OnSelectorClicked__DelegateSignature(class UW_Customization_Selector_C* TriggeringSelector);
	void BndEvt__W_Customization_Selector_Voice_K2Node_ComponentBoundEvent_36_OnMenuOpened__DelegateSignature();
	void BndEvt__W_Customization_Selector_Voice_K2Node_ComponentBoundEvent_8_OnOptionHovered__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_Selector_Voice_K2Node_ComponentBoundEvent_9_OnDropdownClosed__DelegateSignature(class Uw_Dropdown_C* TriggeringSelector);
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_11_OnVariantClicked__DelegateSignature(class UW_Customization_Slot_C* TriggeringSlot);
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_17_OnVariantHovered__DelegateSignature(class UW_Customization_Slot_C* TriggeringSlot);
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_18_OnVariantUnhovered__DelegateSignature();
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_19_OnVariantHighlighted__DelegateSignature(class UW_Customization_Slot_C* NewParam);
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_20_OnVariantSlotEquipped__DelegateSignature(class UW_Customization_Slot_C* EquippedSlot);
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_29_OnNextHandled__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_VariantList_K2Node_ComponentBoundEvent_30_OnPreviousHandled__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_W_Customization_VariantCarousel_K2Node_ComponentBoundEvent_10_OnVariantListPopulated__DelegateSignature(bool HasVariants);
	void BndEvt__W_Customization_W_ItemCategoryCarousel_K2Node_ComponentBoundEvent_12_OnOptionSelected__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_W_ItemCategoryCarousel_K2Node_ComponentBoundEvent_32_OnNextHandled__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_W_ItemCategoryCarousel_K2Node_ComponentBoundEvent_37_OnPreviousHandled__DelegateSignature(class FName OptionID);
	void BndEvt__W_Customization_W_Loadout_PresetDropdown_K2Node_ComponentBoundEvent_22_OnPresetMenuClosed__DelegateSignature();
	void BndEvt__W_Customization_W_Loadout_PresetDropdown_K2Node_ComponentBoundEvent_23_OnCustomizationPresetHovered__DelegateSignature(const class FString& Name_0);
	void BndEvt__W_Customization_W_Loadout_PresetDropdown_K2Node_ComponentBoundEvent_24_OnSaveModifiedPresetClicked__DelegateSignature(const class FString& ModifiedPreset);
	void BndEvt__W_Customization_W_Loadout_PresetDropdown_K2Node_ComponentBoundEvent_25_OnSaveNewPresetClicked__DelegateSignature();
	void BndEvt__W_Customization_W_Loadout_PresetDropdown_K2Node_ComponentBoundEvent_26_OnDeletePresetClicked__DelegateSignature(const class FString& PresetName_0);
	void BndEvt__W_Customization_W_Loadout_PresetDropdown_K2Node_ComponentBoundEvent_27_OnPresetSelected__DelegateSignature(const class FString& PresetName_0);
	void BndEvt__W_Customization_W_Loadout_PresetDropdown_K2Node_ComponentBoundEvent_28_OnDefaultPresetSelected__DelegateSignature();
	void BndEvt__W_Customization_W_Loadout_UnitSelect_K2Node_ComponentBoundEvent_21_OnEquippingUnitSelected__DelegateSignature(const struct FST_EquippingUnit& EquippingUnitInfo);
	void BndEvt__W_CustomizationTest_DoneButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BP_OnActivated();
	bool BP_OnHandleBackAction();
	void CategorySlotClicked(class UW_Customization_Slot_C* TriggeringSlot);
	void CategorySlotHovered(class UW_Customization_Slot_C* TriggeringSlot);
	void CategorySlotUnhovered();
	void ChangeCurrentCategory(ECustomizationType CurrentCategory_0);
	void ChangePage(class FName PageName);
	void CheckItemEquipped(class ULoadoutCustomization* Item, bool* IsEquipped);
	void Close_Preset_List();
	void CloseCharacterMenu();
	void CloseItemList();
	void CloseVariantList(bool ReturnToItemList);
	void CloseVoiceMenu();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_W_Customization(int32 EntryPoint);
	class UWrapBox* Get_Category_List(ECustomizationType Index_0);
	void Get_Equipped_Slot(class UWidget* Item_List, class UW_Customization_Slot_C** Equipped_Slot);
	E_CustomizationGroups GetBrowsingGroupByCategory(ECustomizationType Category);
	void GetCategoryByName(class FName Name_0, ECustomizationType* Category);
	void GetCategoryNameID(ECustomizationType Category, class FName* NameID);
	void GetEquippedNameID(ECustomizationType Type, class FName* OutName);
	TArray<class UW_Customization_Slot_C*> GetGroupSlotsByCategory(ECustomizationType Category);
	void GetSlotShapeByCategory(ECustomizationType Category, E_BoxShape* Shape);
	void GroupAccessoryButton();
	void GroupGearButton();
	void GroupItemFamily(class ULoadoutCustomization* InItem, TArray<class ULoadoutCustomization*>* Family);
	void GroupUniformButton();
	void HasCustomizationItems(ECustomizationType Category, bool* HasItems);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Hide(double Delay, bool Collapse);
	void InputMethodChanged(ECommonInputType bNewInputType);
	bool IsHoveredEquipped();
	void IsItemFamilyEquipped(class ULoadoutCustomization* Item, bool* IsEquipped);
	void ItemHoverDelay();
	void ItemUnhoverDelay();
	void LeaveVariantList();
	void ListItemClicked(class UW_Customization_Slot_C* Slot_0);
	void ListItemHovered(class UW_Customization_Slot_C* TriggeringSlot);
	void ListItemRightClickPressed(class UW_Customization_Slot_C* TriggeringSlot);
	void ListItemRightClickReleased();
	void ListItemUnhovered();
	void OnCurrentCustomizationUpdated();
	void OnFocusLost(const struct FFocusEvent& InFocusEvent);
	void OnInitialized();
	struct FEventReply OnMouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OpenItemList();
	void OpenVariantList();
	void Populate_Categories();
	void Populate_Category_List(ECustomizationType Category);
	void Reveal(double Delay);
	void SelectItemSlot(class ULoadoutCustomization* SlotItem);
	void SelectSlot(class UW_Customization_Slot_C* Slot_0);
	void Set_Active_Category_List(ECustomizationType Selection);
	void Set_Current_Preset_Name(const class FString& Name_0);
	void Set_Current_Unit();
	void SetBrowsingGroupByCurrentCategory();
	void SetCarouselOptionMap(TArray<class UW_Customization_Slot_C*>& Slots);
	void SetCarouselOptions();
	void SetHoveredItem(class UW_Customization_Slot_C* Target);
	void SetInputMode(bool IsGamepad);
	bool Should_Preview(class ULoadoutCustomization* Item);
	void UngroupButtons();
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout);
	void UpdateCategorySlots();
	void UpdateCharacterSelector();
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateItemListEquipped(class UW_Customization_Slot_C* NewEquippedSlot);
	void UpdateStyle(bool bUseGamepad_0);
	void UpdateVariantListEquipped(class UW_Customization_Slot_C* NewEquippedSlot);
	void UpdateVoiceSelector();
	void ViewItemVariants(class ULoadoutCustomization* Item);

	class UWidget* BP_GetDesiredFocusTarget() const;
	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Customization_C">();
	}
	static class UW_Customization_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Customization_C>();
	}
};
static_assert(alignof(UW_Customization_C) == 0x000008, "Wrong alignment on UW_Customization_C");
static_assert(sizeof(UW_Customization_C) == 0x000EA8, "Wrong size on UW_Customization_C");
static_assert(offsetof(UW_Customization_C, UberGraphFrame) == 0x000A08, "Member 'UW_Customization_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, AnimsVerticalBox) == 0x000A10, "Member 'UW_Customization_C::AnimsVerticalBox' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Armor_List) == 0x000A18, "Member 'UW_Customization_C::Armor_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, BackgroundGradientLeft) == 0x000A20, "Member 'UW_Customization_C::BackgroundGradientLeft' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, BackgroundGradientRight) == 0x000A28, "Member 'UW_Customization_C::BackgroundGradientRight' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Ballistic_List) == 0x000A30, "Member 'UW_Customization_C::Ballistic_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Belt_List) == 0x000A38, "Member 'UW_Customization_C::Belt_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Boots_List) == 0x000A40, "Member 'UW_Customization_C::Boots_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, btn_Group_Accessories) == 0x000A48, "Member 'UW_Customization_C::btn_Group_Accessories' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, btn_Group_Gear) == 0x000A50, "Member 'UW_Customization_C::btn_Group_Gear' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, btn_Group_Uniform) == 0x000A58, "Member 'UW_Customization_C::btn_Group_Uniform' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CharacterVoiceSelectBox) == 0x000A60, "Member 'UW_Customization_C::CharacterVoiceSelectBox' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CustomizationSlots) == 0x000A68, "Member 'UW_Customization_C::CustomizationSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, DoneButton) == 0x000A70, "Member 'UW_Customization_C::DoneButton' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, DoneButton_1) == 0x000A78, "Member 'UW_Customization_C::DoneButton_1' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Eyewear_List) == 0x000A80, "Member 'UW_Customization_C::Eyewear_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Facewear_List) == 0x000A88, "Member 'UW_Customization_C::Facewear_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Gloves_List) == 0x000A90, "Member 'UW_Customization_C::Gloves_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, HB_AccessoySlots) == 0x000A98, "Member 'UW_Customization_C::HB_AccessoySlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, HB_GearSlots) == 0x000AA0, "Member 'UW_Customization_C::HB_GearSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, HB_GearSlots_1) == 0x000AA8, "Member 'UW_Customization_C::HB_GearSlots_1' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Helmet_List) == 0x000AB0, "Member 'UW_Customization_C::Helmet_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Itemlist) == 0x000AB8, "Member 'UW_Customization_C::Itemlist' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, lbl_Preset) == 0x000AC0, "Member 'UW_Customization_C::lbl_Preset' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, NVG_List) == 0x000AC8, "Member 'UW_Customization_C::NVG_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Pants_List) == 0x000AD0, "Member 'UW_Customization_C::Pants_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, PresetList) == 0x000AD8, "Member 'UW_Customization_C::PresetList' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, PresetName) == 0x000AE0, "Member 'UW_Customization_C::PresetName' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, SB_Items) == 0x000AE8, "Member 'UW_Customization_C::SB_Items' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Selector_Character) == 0x000AF0, "Member 'UW_Customization_C::Selector_Character' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Selector_Voice) == 0x000AF8, "Member 'UW_Customization_C::Selector_Voice' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Shirt_List) == 0x000B00, "Member 'UW_Customization_C::Shirt_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_BallisticMask) == 0x000B08, "Member 'UW_Customization_C::Slot_BallisticMask' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Belt) == 0x000B10, "Member 'UW_Customization_C::Slot_Belt' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Boots) == 0x000B18, "Member 'UW_Customization_C::Slot_Boots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Eyewear) == 0x000B20, "Member 'UW_Customization_C::Slot_Eyewear' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Facewear) == 0x000B28, "Member 'UW_Customization_C::Slot_Facewear' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Gloves) == 0x000B30, "Member 'UW_Customization_C::Slot_Gloves' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Helmet) == 0x000B38, "Member 'UW_Customization_C::Slot_Helmet' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_HelmetMount) == 0x000B40, "Member 'UW_Customization_C::Slot_HelmetMount' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Pants) == 0x000B48, "Member 'UW_Customization_C::Slot_Pants' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Tattoos) == 0x000B50, "Member 'UW_Customization_C::Slot_Tattoos' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Torso) == 0x000B58, "Member 'UW_Customization_C::Slot_Torso' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Vest) == 0x000B60, "Member 'UW_Customization_C::Slot_Vest' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Slot_Watch) == 0x000B68, "Member 'UW_Customization_C::Slot_Watch' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Tattoos_List) == 0x000B70, "Member 'UW_Customization_C::Tattoos_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VariantList) == 0x000B78, "Member 'UW_Customization_C::VariantList' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VB_CategoryOverview) == 0x000B80, "Member 'UW_Customization_C::VB_CategoryOverview' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VB_TacticalGearSlots) == 0x000B88, "Member 'UW_Customization_C::VB_TacticalGearSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VB_UniformSlots) == 0x000B90, "Member 'UW_Customization_C::VB_UniformSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, W_Customization_InfoBox) == 0x000B98, "Member 'UW_Customization_C::W_Customization_InfoBox' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, W_ItemCategoryCarousel) == 0x000BA0, "Member 'UW_Customization_C::W_ItemCategoryCarousel' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, W_Loadout_PresetDropdown) == 0x000BA8, "Member 'UW_Customization_C::W_Loadout_PresetDropdown' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, W_Loadout_UnitSelect) == 0x000BB0, "Member 'UW_Customization_C::W_Loadout_UnitSelect' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Watch_List) == 0x000BB8, "Member 'UW_Customization_C::Watch_List' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, WidgetSwitcher) == 0x000BC0, "Member 'UW_Customization_C::WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, WS_ItemList) == 0x000BC8, "Member 'UW_Customization_C::WS_ItemList' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, LastHovered) == 0x000BD0, "Member 'UW_Customization_C::LastHovered' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CategoryPoses) == 0x000BD8, "Member 'UW_Customization_C::CategoryPoses' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CategoryCameraTags) == 0x000C28, "Member 'UW_Customization_C::CategoryCameraTags' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CharacterMap) == 0x000C78, "Member 'UW_Customization_C::CharacterMap' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, ListMargin) == 0x000CC8, "Member 'UW_Customization_C::ListMargin' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, rot) == 0x000CD8, "Member 'UW_Customization_C::rot' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, AllSlots) == 0x000CE0, "Member 'UW_Customization_C::AllSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, bUseGamepad) == 0x000CF0, "Member 'UW_Customization_C::bUseGamepad' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, bItemListOpen) == 0x000CF1, "Member 'UW_Customization_C::bItemListOpen' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, bVariantListOpen) == 0x000CF2, "Member 'UW_Customization_C::bVariantListOpen' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, UniformSlots) == 0x000CF8, "Member 'UW_Customization_C::UniformSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, GearSlots) == 0x000D08, "Member 'UW_Customization_C::GearSlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, AccessorySlots) == 0x000D18, "Member 'UW_Customization_C::AccessorySlots' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, bPresetListOpen) == 0x000D28, "Member 'UW_Customization_C::bPresetListOpen' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CurrentCategory) == 0x000D29, "Member 'UW_Customization_C::CurrentCategory' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CarouselOptionsMap) == 0x000D30, "Member 'UW_Customization_C::CarouselOptionsMap' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, BrowsingGroup) == 0x000D80, "Member 'UW_Customization_C::BrowsingGroup' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, SelectedSlot) == 0x000D88, "Member 'UW_Customization_C::SelectedSlot' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, OnCategorySelected) == 0x000D90, "Member 'UW_Customization_C::OnCategorySelected' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, EquippedItemSlot) == 0x000DA0, "Member 'UW_Customization_C::EquippedItemSlot' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, SelectedGroupButton) == 0x000DA8, "Member 'UW_Customization_C::SelectedGroupButton' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VoiceMap) == 0x000DB0, "Member 'UW_Customization_C::VoiceMap' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, EquippedVariantSlot) == 0x000E00, "Member 'UW_Customization_C::EquippedVariantSlot' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, HighlightedVariant) == 0x000E08, "Member 'UW_Customization_C::HighlightedVariant' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, VariantParent) == 0x000E10, "Member 'UW_Customization_C::VariantParent' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, bCharacterMenuOpen) == 0x000E18, "Member 'UW_Customization_C::bCharacterMenuOpen' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, bVoiceMenuOpen) == 0x000E19, "Member 'UW_Customization_C::bVoiceMenuOpen' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, ItemUnhoverTimer) == 0x000E20, "Member 'UW_Customization_C::ItemUnhoverTimer' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, ItemHoverTimer) == 0x000E28, "Member 'UW_Customization_C::ItemHoverTimer' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CategoryFMODTags) == 0x000E30, "Member 'UW_Customization_C::CategoryFMODTags' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, CurrentCategoryFMOD) == 0x000E80, "Member 'UW_Customization_C::CurrentCategoryFMOD' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, Categories) == 0x000E88, "Member 'UW_Customization_C::Categories' has a wrong offset!");
static_assert(offsetof(UW_Customization_C, SkinCategories) == 0x000E98, "Member 'UW_Customization_C::SkinCategories' has a wrong offset!");

}

