#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MissionSelect_EntryPoint_Gamepad

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_MissionSelect_EntryPoint_Gamepad.W_MissionSelect_EntryPoint_Gamepad_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_MissionSelect_EntryPoint_Gamepad_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_EntryPoint_Gamepad_C_BackPage) == 0x000001, "Wrong alignment on W_MissionSelect_EntryPoint_Gamepad_C_BackPage");
static_assert(sizeof(W_MissionSelect_EntryPoint_Gamepad_C_BackPage) == 0x000001, "Wrong size on W_MissionSelect_EntryPoint_Gamepad_C_BackPage");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_BackPage, Handled) == 0x000000, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_BackPage::Handled' has a wrong offset!");

// Function W_MissionSelect_EntryPoint_Gamepad.W_MissionSelect_EntryPoint_Gamepad_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_EntryPoint_Gamepad_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_EntryPoint_Gamepad_C_ChangePage) == 0x000004, "Wrong alignment on W_MissionSelect_EntryPoint_Gamepad_C_ChangePage");
static_assert(sizeof(W_MissionSelect_EntryPoint_Gamepad_C_ChangePage) == 0x000008, "Wrong size on W_MissionSelect_EntryPoint_Gamepad_C_ChangePage");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ChangePage, PageName) == 0x000000, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ChangePage::PageName' has a wrong offset!");

// Function W_MissionSelect_EntryPoint_Gamepad.W_MissionSelect_EntryPoint_Gamepad_C.ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad
// 0x00F0 (0x00F0 - 0x0000)
struct W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad final
{
public:
	int32                                         EntryPoint_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEntryPoint                            K2Node_CustomEvent_NewEntryPoint;                  // 0x0048(0x00A8)()
};
static_assert(alignof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad) == 0x000008, "Wrong alignment on W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad");
static_assert(sizeof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad) == 0x0000F0, "Wrong size on W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, EntryPoint_0) == 0x000000, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::EntryPoint_0' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, K2Node_Event_Delay_1) == 0x000008, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, K2Node_Event_Collapse) == 0x000010, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, K2Node_Event_IsGamepad) == 0x000020, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, K2Node_Event_PageName) == 0x000024, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, K2Node_CustomEvent_InVisibility) == 0x00002C, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, K2Node_Event_Delay) == 0x000030, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000038, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad, K2Node_CustomEvent_NewEntryPoint) == 0x000048, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_ExecuteUbergraph_W_MissionSelect_EntryPoint_Gamepad::K2Node_CustomEvent_NewEntryPoint' has a wrong offset!");

// Function W_MissionSelect_EntryPoint_Gamepad.W_MissionSelect_EntryPoint_Gamepad_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_MissionSelect_EntryPoint_Gamepad_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_EntryPoint_Gamepad_C_Hide) == 0x000008, "Wrong alignment on W_MissionSelect_EntryPoint_Gamepad_C_Hide");
static_assert(sizeof(W_MissionSelect_EntryPoint_Gamepad_C_Hide) == 0x000010, "Wrong size on W_MissionSelect_EntryPoint_Gamepad_C_Hide");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_Hide, Delay) == 0x000000, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_Hide, Collapse) == 0x000008, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_Hide::Collapse' has a wrong offset!");

// Function W_MissionSelect_EntryPoint_Gamepad.W_MissionSelect_EntryPoint_Gamepad_C.OnEntryPointChanged
// 0x00A8 (0x00A8 - 0x0000)
struct W_MissionSelect_EntryPoint_Gamepad_C_OnEntryPointChanged final
{
public:
	struct FEntryPoint                            NewEntryPoint;                                     // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_MissionSelect_EntryPoint_Gamepad_C_OnEntryPointChanged) == 0x000008, "Wrong alignment on W_MissionSelect_EntryPoint_Gamepad_C_OnEntryPointChanged");
static_assert(sizeof(W_MissionSelect_EntryPoint_Gamepad_C_OnEntryPointChanged) == 0x0000A8, "Wrong size on W_MissionSelect_EntryPoint_Gamepad_C_OnEntryPointChanged");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_OnEntryPointChanged, NewEntryPoint) == 0x000000, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_OnEntryPointChanged::NewEntryPoint' has a wrong offset!");

// Function W_MissionSelect_EntryPoint_Gamepad.W_MissionSelect_EntryPoint_Gamepad_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_EntryPoint_Gamepad_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_EntryPoint_Gamepad_C_Reveal) == 0x000008, "Wrong alignment on W_MissionSelect_EntryPoint_Gamepad_C_Reveal");
static_assert(sizeof(W_MissionSelect_EntryPoint_Gamepad_C_Reveal) == 0x000008, "Wrong size on W_MissionSelect_EntryPoint_Gamepad_C_Reveal");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_Reveal, Delay) == 0x000000, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_Reveal::Delay' has a wrong offset!");

// Function W_MissionSelect_EntryPoint_Gamepad.W_MissionSelect_EntryPoint_Gamepad_C.SetImageVisibility
// 0x0001 (0x0001 - 0x0000)
struct W_MissionSelect_EntryPoint_Gamepad_C_SetImageVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_EntryPoint_Gamepad_C_SetImageVisibility) == 0x000001, "Wrong alignment on W_MissionSelect_EntryPoint_Gamepad_C_SetImageVisibility");
static_assert(sizeof(W_MissionSelect_EntryPoint_Gamepad_C_SetImageVisibility) == 0x000001, "Wrong size on W_MissionSelect_EntryPoint_Gamepad_C_SetImageVisibility");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_SetImageVisibility, InVisibility) == 0x000000, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_SetImageVisibility::InVisibility' has a wrong offset!");

// Function W_MissionSelect_EntryPoint_Gamepad.W_MissionSelect_EntryPoint_Gamepad_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_MissionSelect_EntryPoint_Gamepad_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_EntryPoint_Gamepad_C_SetInputMode) == 0x000001, "Wrong alignment on W_MissionSelect_EntryPoint_Gamepad_C_SetInputMode");
static_assert(sizeof(W_MissionSelect_EntryPoint_Gamepad_C_SetInputMode) == 0x000001, "Wrong size on W_MissionSelect_EntryPoint_Gamepad_C_SetInputMode");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_MissionSelect_EntryPoint_Gamepad.W_MissionSelect_EntryPoint_Gamepad_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_MissionSelect_EntryPoint_Gamepad_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MissionSelect_EntryPoint_Gamepad_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_MissionSelect_EntryPoint_Gamepad_C_GetFocusTarget");
static_assert(sizeof(W_MissionSelect_EntryPoint_Gamepad_C_GetFocusTarget) == 0x000008, "Wrong size on W_MissionSelect_EntryPoint_Gamepad_C_GetFocusTarget");
static_assert(offsetof(W_MissionSelect_EntryPoint_Gamepad_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_MissionSelect_EntryPoint_Gamepad_C_GetFocusTarget::Focus' has a wrong offset!");

}

