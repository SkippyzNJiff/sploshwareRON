#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AimAssistSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// ScriptStruct AimAssistSystem.UASAimAssistTargetData
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x04) FUASAimAssistTargetData final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUASAimAssistTargetData) == 0x000004, "Wrong alignment on FUASAimAssistTargetData");
static_assert(sizeof(FUASAimAssistTargetData) == 0x000010, "Wrong size on FUASAimAssistTargetData");

// ScriptStruct AimAssistSystem.UASStickinessZoneConfig
// 0x0118 (0x0118 - 0x0000)
struct FUASStickinessZoneConfig final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Multiplier;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     StickinessMultiplierCurvePitch;                    // 0x0008(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     StickinessMultiplierCurveYaw;                      // 0x0090(0x0088)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUASStickinessZoneConfig) == 0x000008, "Wrong alignment on FUASStickinessZoneConfig");
static_assert(sizeof(FUASStickinessZoneConfig) == 0x000118, "Wrong size on FUASStickinessZoneConfig");
static_assert(offsetof(FUASStickinessZoneConfig, Radius) == 0x000000, "Member 'FUASStickinessZoneConfig::Radius' has a wrong offset!");
static_assert(offsetof(FUASStickinessZoneConfig, Multiplier) == 0x000004, "Member 'FUASStickinessZoneConfig::Multiplier' has a wrong offset!");
static_assert(offsetof(FUASStickinessZoneConfig, StickinessMultiplierCurvePitch) == 0x000008, "Member 'FUASStickinessZoneConfig::StickinessMultiplierCurvePitch' has a wrong offset!");
static_assert(offsetof(FUASStickinessZoneConfig, StickinessMultiplierCurveYaw) == 0x000090, "Member 'FUASStickinessZoneConfig::StickinessMultiplierCurveYaw' has a wrong offset!");

// ScriptStruct AimAssistSystem.UASMagnetismZoneConfig
// 0x0008 (0x0008 - 0x0000)
struct FUASMagnetismZoneConfig final
{
public:
	float                                         StartRadius;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AimZoneRadius;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUASMagnetismZoneConfig) == 0x000004, "Wrong alignment on FUASMagnetismZoneConfig");
static_assert(sizeof(FUASMagnetismZoneConfig) == 0x000008, "Wrong size on FUASMagnetismZoneConfig");
static_assert(offsetof(FUASMagnetismZoneConfig, StartRadius) == 0x000000, "Member 'FUASMagnetismZoneConfig::StartRadius' has a wrong offset!");
static_assert(offsetof(FUASMagnetismZoneConfig, AimZoneRadius) == 0x000004, "Member 'FUASMagnetismZoneConfig::AimZoneRadius' has a wrong offset!");

// ScriptStruct AimAssistSystem.UASZonesScalingConfig
// 0x0088 (0x0088 - 0x0000)
struct FUASZonesScalingConfig final
{
public:
	struct FRuntimeFloatCurve                     ZonesScalingCurve;                                 // 0x0000(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUASZonesScalingConfig) == 0x000008, "Wrong alignment on FUASZonesScalingConfig");
static_assert(sizeof(FUASZonesScalingConfig) == 0x000088, "Wrong size on FUASZonesScalingConfig");
static_assert(offsetof(FUASZonesScalingConfig, ZonesScalingCurve) == 0x000000, "Member 'FUASZonesScalingConfig::ZonesScalingCurve' has a wrong offset!");

// ScriptStruct AimAssistSystem.UASAutoAimConfig
// 0x001C (0x001C - 0x0000)
struct FUASAutoAimConfig final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AutoAimZoneRadius;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ActivationDistance;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeWithoutCameraInputToEnableAutoAim;             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TimeWithMovementInputToEnableAutoAim;              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseOnlyWithInactiveMagnetism;                     // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeToBlockAfterChangeTarget;                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUASAutoAimConfig) == 0x000004, "Wrong alignment on FUASAutoAimConfig");
static_assert(sizeof(FUASAutoAimConfig) == 0x00001C, "Wrong size on FUASAutoAimConfig");
static_assert(offsetof(FUASAutoAimConfig, Speed) == 0x000000, "Member 'FUASAutoAimConfig::Speed' has a wrong offset!");
static_assert(offsetof(FUASAutoAimConfig, AutoAimZoneRadius) == 0x000004, "Member 'FUASAutoAimConfig::AutoAimZoneRadius' has a wrong offset!");
static_assert(offsetof(FUASAutoAimConfig, ActivationDistance) == 0x000008, "Member 'FUASAutoAimConfig::ActivationDistance' has a wrong offset!");
static_assert(offsetof(FUASAutoAimConfig, TimeWithoutCameraInputToEnableAutoAim) == 0x00000C, "Member 'FUASAutoAimConfig::TimeWithoutCameraInputToEnableAutoAim' has a wrong offset!");
static_assert(offsetof(FUASAutoAimConfig, TimeWithMovementInputToEnableAutoAim) == 0x000010, "Member 'FUASAutoAimConfig::TimeWithMovementInputToEnableAutoAim' has a wrong offset!");
static_assert(offsetof(FUASAutoAimConfig, bUseOnlyWithInactiveMagnetism) == 0x000014, "Member 'FUASAutoAimConfig::bUseOnlyWithInactiveMagnetism' has a wrong offset!");
static_assert(offsetof(FUASAutoAimConfig, TimeToBlockAfterChangeTarget) == 0x000018, "Member 'FUASAutoAimConfig::TimeToBlockAfterChangeTarget' has a wrong offset!");

// ScriptStruct AimAssistSystem.UASSnapToTargetConfig
// 0x001C (0x001C - 0x0000)
struct FUASSnapToTargetConfig final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeMoveSpeed;                                 // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MoveSpeedCoefficient;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SnapToTargetZoneRadius;                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SnapToTargetDuration;                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxActivationDistance;                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinActivationDistance;                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUASSnapToTargetConfig) == 0x000004, "Wrong alignment on FUASSnapToTargetConfig");
static_assert(sizeof(FUASSnapToTargetConfig) == 0x00001C, "Wrong size on FUASSnapToTargetConfig");
static_assert(offsetof(FUASSnapToTargetConfig, Speed) == 0x000000, "Member 'FUASSnapToTargetConfig::Speed' has a wrong offset!");
static_assert(offsetof(FUASSnapToTargetConfig, bIncludeMoveSpeed) == 0x000004, "Member 'FUASSnapToTargetConfig::bIncludeMoveSpeed' has a wrong offset!");
static_assert(offsetof(FUASSnapToTargetConfig, MoveSpeedCoefficient) == 0x000008, "Member 'FUASSnapToTargetConfig::MoveSpeedCoefficient' has a wrong offset!");
static_assert(offsetof(FUASSnapToTargetConfig, SnapToTargetZoneRadius) == 0x00000C, "Member 'FUASSnapToTargetConfig::SnapToTargetZoneRadius' has a wrong offset!");
static_assert(offsetof(FUASSnapToTargetConfig, SnapToTargetDuration) == 0x000010, "Member 'FUASSnapToTargetConfig::SnapToTargetDuration' has a wrong offset!");
static_assert(offsetof(FUASSnapToTargetConfig, MaxActivationDistance) == 0x000014, "Member 'FUASSnapToTargetConfig::MaxActivationDistance' has a wrong offset!");
static_assert(offsetof(FUASSnapToTargetConfig, MinActivationDistance) == 0x000018, "Member 'FUASSnapToTargetConfig::MinActivationDistance' has a wrong offset!");

// ScriptStruct AimAssistSystem.UASSocketData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FUASSocketData final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUASSocketData) == 0x000008, "Wrong alignment on FUASSocketData");
static_assert(sizeof(FUASSocketData) == 0x000020, "Wrong size on FUASSocketData");

}

