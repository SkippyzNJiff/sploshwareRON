#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_TCR

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_TCR.ANIMBP_TCR_C
// 0x06A0 (0x0A10 - 0x0370)
class UANIMBP_TCR_C final : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x03A8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x04D0(0x0128)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x05F8(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0620(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0640(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0688(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0778(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0798(0x0128)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x08C0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x08E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0930(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0978(0x0080)()
	double                                        Mag01Alpha;                                        // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScopeAdjustAlpha;                                  // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_DropSpeedReloadMagazine();
	void AnimNotify_ShowMag();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ANIMBP_TCR(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_TCR_C">();
	}
	static class UANIMBP_TCR_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_TCR_C>();
	}
};
static_assert(alignof(UANIMBP_TCR_C) == 0x000010, "Wrong alignment on UANIMBP_TCR_C");
static_assert(sizeof(UANIMBP_TCR_C) == 0x000A10, "Wrong size on UANIMBP_TCR_C");
static_assert(offsetof(UANIMBP_TCR_C, UberGraphFrame) == 0x000370, "Member 'UANIMBP_TCR_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UANIMBP_TCR_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UANIMBP_TCR_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_Root) == 0x000388, "Member 'UANIMBP_TCR_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_ModifyBone_2) == 0x0003A8, "Member 'UANIMBP_TCR_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_ModifyBone_1) == 0x0004D0, "Member 'UANIMBP_TCR_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_UseCachedPose_1) == 0x0005F8, "Member 'UANIMBP_TCR_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_ComponentToLocalSpace) == 0x000620, "Member 'UANIMBP_TCR_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_Slot_1) == 0x000640, "Member 'UANIMBP_TCR_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_LayeredBoneBlend) == 0x000688, "Member 'UANIMBP_TCR_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_LocalToComponentSpace) == 0x000778, "Member 'UANIMBP_TCR_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_ModifyBone) == 0x000798, "Member 'UANIMBP_TCR_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_UseCachedPose) == 0x0008C0, "Member 'UANIMBP_TCR_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_Slot) == 0x0008E8, "Member 'UANIMBP_TCR_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_SequencePlayer) == 0x000930, "Member 'UANIMBP_TCR_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, AnimGraphNode_SaveCachedPose) == 0x000978, "Member 'UANIMBP_TCR_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, Mag01Alpha) == 0x0009F8, "Member 'UANIMBP_TCR_C::Mag01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_TCR_C, ScopeAdjustAlpha) == 0x000A00, "Member 'UANIMBP_TCR_C::ScopeAdjustAlpha' has a wrong offset!");

}

