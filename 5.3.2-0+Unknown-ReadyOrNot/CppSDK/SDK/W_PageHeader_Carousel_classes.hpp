#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PageHeader_Carousel

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PageHeader_Carousel.W_PageHeader_Carousel_C
// 0x0120 (0x04E0 - 0x03C0)
class UW_PageHeader_Carousel_C final : public UCommonCarousel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animPrevPressed;                                   // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animNextPressed;                                   // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animSwitch;                                        // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Left;                                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Right;                                         // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Buttons;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    LeftActionWidget;                                  // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    RightActionWidget;                                 // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size;                                              // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Left;                                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_Right;                                        // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 SpacerTextStyle;                                   // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ClickableNavigation;                               // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IconHeight;                                        // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightActionIconRatio;                              // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftActionIconRatio;                               // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ButtonStyle;                                       // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UW_Button_C*, class FName>         ButtonMap;                                         // 0x0450(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_Button_C*                            ActiveButton;                                      // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                SpacerPadding;                                     // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   DisabledOption;                                    // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NextTerminated;                                    // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PrevTerminated;                                    // 0x04C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Next;                                              // 0x04C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Prev;                                              // 0x04C3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LastSelectedOption;                                // 0x04C4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingGamepad;                                      // 0x04CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SingleOption;                                      // 0x04CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreGamepad;                                     // 0x04CE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitialized;                                      // 0x04CF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWaitingForButton;                                 // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x3];                                      // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QueuedButton;                                      // 0x04D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ButtonClicked(class UW_Button_C* Button);
	void CheckForNewOptions();
	void Construct();
	void Destruct();
	void DisableOption(class FName OptionNameID);
	void EnableOption(class FName OptionNameID);
	void ExecuteUbergraph_W_PageHeader_Carousel(int32 EntryPoint);
	void GetActionIconSizeRatio(class UCommonActionWidget* CommonActionWidget, double* IconRatio);
	void GetButtonByOptionID(class FName OptionNameID, bool* ButtonFound, class UW_Button_C** Button);
	void GetInputIconVisibility(ESlateVisibility* Visibility_0);
	void IgnoreDisabledOption();
	void InputMethodChanged(ECommonInputType bNewInputType);
	void NavigateNextTerminated(bool Terminated);
	void NavigatePrevTerminated(bool Terminated);
	void NextNavigated(class FName OptionID);
	void OnInitialized();
	void OptionSelected(class FName OptionNameID);
	void PopulateButtons();
	void PreConstruct(bool IsDesignTime);
	void PrevNavigated(class FName OptionID);
	void SelectButton(class UW_Button_C* Button);
	void SetIconSize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PageHeader_Carousel_C">();
	}
	static class UW_PageHeader_Carousel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PageHeader_Carousel_C>();
	}
};
static_assert(alignof(UW_PageHeader_Carousel_C) == 0x000008, "Wrong alignment on UW_PageHeader_Carousel_C");
static_assert(sizeof(UW_PageHeader_Carousel_C) == 0x0004E0, "Wrong size on UW_PageHeader_Carousel_C");
static_assert(offsetof(UW_PageHeader_Carousel_C, UberGraphFrame) == 0x0003C0, "Member 'UW_PageHeader_Carousel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, animPrevPressed) == 0x0003C8, "Member 'UW_PageHeader_Carousel_C::animPrevPressed' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, animNextPressed) == 0x0003D0, "Member 'UW_PageHeader_Carousel_C::animNextPressed' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, animSwitch) == 0x0003D8, "Member 'UW_PageHeader_Carousel_C::animSwitch' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, btn_Left) == 0x0003E0, "Member 'UW_PageHeader_Carousel_C::btn_Left' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, btn_Right) == 0x0003E8, "Member 'UW_PageHeader_Carousel_C::btn_Right' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, HB_Buttons) == 0x0003F0, "Member 'UW_PageHeader_Carousel_C::HB_Buttons' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, LeftActionWidget) == 0x0003F8, "Member 'UW_PageHeader_Carousel_C::LeftActionWidget' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, RightActionWidget) == 0x000400, "Member 'UW_PageHeader_Carousel_C::RightActionWidget' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, Size) == 0x000408, "Member 'UW_PageHeader_Carousel_C::Size' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, Size_Left) == 0x000410, "Member 'UW_PageHeader_Carousel_C::Size_Left' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, Size_Right) == 0x000418, "Member 'UW_PageHeader_Carousel_C::Size_Right' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, SpacerTextStyle) == 0x000420, "Member 'UW_PageHeader_Carousel_C::SpacerTextStyle' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, ClickableNavigation) == 0x000428, "Member 'UW_PageHeader_Carousel_C::ClickableNavigation' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, IconHeight) == 0x000430, "Member 'UW_PageHeader_Carousel_C::IconHeight' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, RightActionIconRatio) == 0x000438, "Member 'UW_PageHeader_Carousel_C::RightActionIconRatio' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, LeftActionIconRatio) == 0x000440, "Member 'UW_PageHeader_Carousel_C::LeftActionIconRatio' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, ButtonStyle) == 0x000448, "Member 'UW_PageHeader_Carousel_C::ButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, ButtonMap) == 0x000450, "Member 'UW_PageHeader_Carousel_C::ButtonMap' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, ActiveButton) == 0x0004A0, "Member 'UW_PageHeader_Carousel_C::ActiveButton' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, SpacerPadding) == 0x0004A8, "Member 'UW_PageHeader_Carousel_C::SpacerPadding' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, DisabledOption) == 0x0004B8, "Member 'UW_PageHeader_Carousel_C::DisabledOption' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, NextTerminated) == 0x0004C0, "Member 'UW_PageHeader_Carousel_C::NextTerminated' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, PrevTerminated) == 0x0004C1, "Member 'UW_PageHeader_Carousel_C::PrevTerminated' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, Next) == 0x0004C2, "Member 'UW_PageHeader_Carousel_C::Next' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, Prev) == 0x0004C3, "Member 'UW_PageHeader_Carousel_C::Prev' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, LastSelectedOption) == 0x0004C4, "Member 'UW_PageHeader_Carousel_C::LastSelectedOption' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, UsingGamepad) == 0x0004CC, "Member 'UW_PageHeader_Carousel_C::UsingGamepad' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, SingleOption) == 0x0004CD, "Member 'UW_PageHeader_Carousel_C::SingleOption' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, IgnoreGamepad) == 0x0004CE, "Member 'UW_PageHeader_Carousel_C::IgnoreGamepad' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, bInitialized) == 0x0004CF, "Member 'UW_PageHeader_Carousel_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, bWaitingForButton) == 0x0004D0, "Member 'UW_PageHeader_Carousel_C::bWaitingForButton' has a wrong offset!");
static_assert(offsetof(UW_PageHeader_Carousel_C, QueuedButton) == 0x0004D4, "Member 'UW_PageHeader_Carousel_C::QueuedButton' has a wrong offset!");

}

