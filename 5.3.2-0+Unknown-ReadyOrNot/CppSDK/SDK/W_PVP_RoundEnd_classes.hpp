#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PVP_RoundEnd

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PVP_RoundEnd.W_PVP_RoundEnd_C
// 0x0068 (0x0358 - 0x02F0)
class UW_PVP_RoundEnd_C final : public URoundEndWidget_PVP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           Master_Container;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MLO_Container;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MLO_Label_Text;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MLO_Score_Text;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PVP_Ribbon_TeamColor;                              // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RoundStatus_Text;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RoundTagline_Text;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RoundTagline_Text_2;                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ScoreInfo_Container;                               // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SWAT_Container;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SWAT_Label_Text;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SWAT_Score_Text;                                   // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_PVP_RoundEnd(int32 EntryPoint);
	void GetLosingTeamRibbonColor(struct FLinearColor* Return_Value);
	void GetLosingTeamTextColor(struct FSlateColor* Return_Value);
	void GetMLOScore(int32* Return_Value);
	void GetRoundWinningTeamText(class FText* Return_Value);
	void GetSWATScore(int32* Return_Value);
	void GetWinningTaglineText(class FText* Return_Value);
	void GetWinningTeamRibbonColor(struct FLinearColor* Return_Value);
	void GetWinningTeamTextColor(struct FSlateColor* Return_Value);
	void OnWinsUpdated_Event_0();
	void SequenceEvent__ENTRYPOINTW_PVP_RoundEnd();
	void SequenceEvent__ENTRYPOINTW_PVP_RoundEnd_0();
	void SequenceEvent__ENTRYPOINTW_PVP_RoundEnd_1();
	void SequenceEvent__ENTRYPOINTW_PVP_RoundEnd_2();
	void UpdateMLOScore();
	void UpdateRoundColors();
	void UpdateRoundTagline();
	void UpdateSWATScore();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PVP_RoundEnd_C">();
	}
	static class UW_PVP_RoundEnd_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PVP_RoundEnd_C>();
	}
};
static_assert(alignof(UW_PVP_RoundEnd_C) == 0x000008, "Wrong alignment on UW_PVP_RoundEnd_C");
static_assert(sizeof(UW_PVP_RoundEnd_C) == 0x000358, "Wrong size on UW_PVP_RoundEnd_C");
static_assert(offsetof(UW_PVP_RoundEnd_C, UberGraphFrame) == 0x0002F0, "Member 'UW_PVP_RoundEnd_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, Master_Container) == 0x0002F8, "Member 'UW_PVP_RoundEnd_C::Master_Container' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, MLO_Container) == 0x000300, "Member 'UW_PVP_RoundEnd_C::MLO_Container' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, MLO_Label_Text) == 0x000308, "Member 'UW_PVP_RoundEnd_C::MLO_Label_Text' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, MLO_Score_Text) == 0x000310, "Member 'UW_PVP_RoundEnd_C::MLO_Score_Text' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, PVP_Ribbon_TeamColor) == 0x000318, "Member 'UW_PVP_RoundEnd_C::PVP_Ribbon_TeamColor' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, RoundStatus_Text) == 0x000320, "Member 'UW_PVP_RoundEnd_C::RoundStatus_Text' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, RoundTagline_Text) == 0x000328, "Member 'UW_PVP_RoundEnd_C::RoundTagline_Text' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, RoundTagline_Text_2) == 0x000330, "Member 'UW_PVP_RoundEnd_C::RoundTagline_Text_2' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, ScoreInfo_Container) == 0x000338, "Member 'UW_PVP_RoundEnd_C::ScoreInfo_Container' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, SWAT_Container) == 0x000340, "Member 'UW_PVP_RoundEnd_C::SWAT_Container' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, SWAT_Label_Text) == 0x000348, "Member 'UW_PVP_RoundEnd_C::SWAT_Label_Text' has a wrong offset!");
static_assert(offsetof(UW_PVP_RoundEnd_C, SWAT_Score_Text) == 0x000350, "Member 'UW_PVP_RoundEnd_C::SWAT_Score_Text' has a wrong offset!");

}

