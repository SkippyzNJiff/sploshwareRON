#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_VotePopUp_gamepad

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_VotePopUp_gamepad.W_VotePopUp_gamepad_C
// 0x0118 (0x03D8 - 0x02C0)
class UW_VotePopUp_gamepad_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_OnShow;                                       // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animReveal;                                        // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_1;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_RedLine;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Gamepad;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RedLine_Image;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         rtxt_FooterText;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   rtxt_VoteQuestion;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   rtxt_Votes;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Title;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_TutContent;                                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Tutorial;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            W_Button;                                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PlayerActionText_C*                  W_PlayerActionText;                                // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         VoteState;                                         // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Current_Vote_Reason;                               // 0x0348(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          VoteEnabled;                                       // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Yes_Votes;                                         // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WidgetActive;                                      // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CurrentVoteQuestion;                               // 0x0370(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 ReadyUpActionName;                                 // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	EInputEvent                                   ReadyUpAction;                                     // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GamepadActive;                                     // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Shown;                                             // 0x039A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B[0x5];                                      // 0x039B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoteData                              VoteResult;                                        // 0x03A0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         YesVotes;                                          // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NoVotes;                                           // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_VotePopUp_gamepad(int32 EntryPoint);
	class FText GetAvailableVotes();
	bool GetbIsEnabled();
	class FText GetText();
	class FText GetText_4();
	class FText GetVotesRequired();
	void GetVoteState(bool* VotedYes);
	void Hide_Widget();
	void NewFunction();
	void OnInputChange(ECommonInputType bNewInputType);
	void OnLocalPlayerReadyChange(bool bReady);
	void SetVoteResult(const struct FVoteData& VoteResult_0, int32 YesVotes_0, int32 NoVotes_0);
	void ShowWidget(bool Show_Widget);
	void StartVote(const class FText& VoteReason_0, const class FText& VoteQuestion, bool bCanVoteNo);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateText();
	void UpdateVote();
	void UpdateWidget();
	void VoteEnd();
	class FText VoteReason();

	class FText GetVoteQuestion() const;
	class FText GetYesVotes() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_VotePopUp_gamepad_C">();
	}
	static class UW_VotePopUp_gamepad_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_VotePopUp_gamepad_C>();
	}
};
static_assert(alignof(UW_VotePopUp_gamepad_C) == 0x000008, "Wrong alignment on UW_VotePopUp_gamepad_C");
static_assert(sizeof(UW_VotePopUp_gamepad_C) == 0x0003D8, "Wrong size on UW_VotePopUp_gamepad_C");
static_assert(offsetof(UW_VotePopUp_gamepad_C, UberGraphFrame) == 0x0002C0, "Member 'UW_VotePopUp_gamepad_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, Anim_OnShow) == 0x0002C8, "Member 'UW_VotePopUp_gamepad_C::Anim_OnShow' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, animReveal) == 0x0002D0, "Member 'UW_VotePopUp_gamepad_C::animReveal' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, Border_1) == 0x0002D8, "Member 'UW_VotePopUp_gamepad_C::Border_1' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, img_RedLine) == 0x0002E0, "Member 'UW_VotePopUp_gamepad_C::img_RedLine' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, ProgressBar_Gamepad) == 0x0002E8, "Member 'UW_VotePopUp_gamepad_C::ProgressBar_Gamepad' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, RedLine_Image) == 0x0002F0, "Member 'UW_VotePopUp_gamepad_C::RedLine_Image' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, rtxt_FooterText) == 0x0002F8, "Member 'UW_VotePopUp_gamepad_C::rtxt_FooterText' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, rtxt_VoteQuestion) == 0x000300, "Member 'UW_VotePopUp_gamepad_C::rtxt_VoteQuestion' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, rtxt_Votes) == 0x000308, "Member 'UW_VotePopUp_gamepad_C::rtxt_Votes' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, ScaleBox) == 0x000310, "Member 'UW_VotePopUp_gamepad_C::ScaleBox' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, txt_Title) == 0x000318, "Member 'UW_VotePopUp_gamepad_C::txt_Title' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VB_TutContent) == 0x000320, "Member 'UW_VotePopUp_gamepad_C::VB_TutContent' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VB_Tutorial) == 0x000328, "Member 'UW_VotePopUp_gamepad_C::VB_Tutorial' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, W_Button) == 0x000330, "Member 'UW_VotePopUp_gamepad_C::W_Button' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, W_PlayerActionText) == 0x000338, "Member 'UW_VotePopUp_gamepad_C::W_PlayerActionText' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VoteState) == 0x000340, "Member 'UW_VotePopUp_gamepad_C::VoteState' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, Current_Vote_Reason) == 0x000348, "Member 'UW_VotePopUp_gamepad_C::Current_Vote_Reason' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VoteEnabled) == 0x000360, "Member 'UW_VotePopUp_gamepad_C::VoteEnabled' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, Yes_Votes) == 0x000364, "Member 'UW_VotePopUp_gamepad_C::Yes_Votes' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, WidgetActive) == 0x000368, "Member 'UW_VotePopUp_gamepad_C::WidgetActive' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, CurrentVoteQuestion) == 0x000370, "Member 'UW_VotePopUp_gamepad_C::CurrentVoteQuestion' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, ReadyUpActionName) == 0x000388, "Member 'UW_VotePopUp_gamepad_C::ReadyUpActionName' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, ReadyUpAction) == 0x000398, "Member 'UW_VotePopUp_gamepad_C::ReadyUpAction' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, GamepadActive) == 0x000399, "Member 'UW_VotePopUp_gamepad_C::GamepadActive' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, Shown) == 0x00039A, "Member 'UW_VotePopUp_gamepad_C::Shown' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, VoteResult) == 0x0003A0, "Member 'UW_VotePopUp_gamepad_C::VoteResult' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, YesVotes) == 0x0003D0, "Member 'UW_VotePopUp_gamepad_C::YesVotes' has a wrong offset!");
static_assert(offsetof(UW_VotePopUp_gamepad_C, NoVotes) == 0x0003D4, "Member 'UW_VotePopUp_gamepad_C::NoVotes' has a wrong offset!");

}

