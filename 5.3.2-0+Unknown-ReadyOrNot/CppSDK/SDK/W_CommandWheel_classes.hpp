#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CommandWheel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FBasicIconSettings_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CommandWheel.W_CommandWheel_C
// 0x0148 (0x0678 - 0x0530)
class UW_CommandWheel_C final : public UCommandWheel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0530(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       anim_ShowBackStick;                                // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       anim_EnableOuter_backup;                           // 0x0540(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       anim_DisableOuter;                                 // 0x0548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       anim_EnableOuter;                                  // 0x0550(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       anim_OpenCloseWheel;                               // 0x0558(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CommandReticle_Image;                              // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HeaderTextBackground_1;                            // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HeaderTextBackground_2;                            // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_BgFade;                                        // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         QueueText_2;                                       // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ReticleScaleBox;                                   // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           RedTeamColor;                                      // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BlueTeamColor;                                     // 0x05A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           GoldTeamColor;                                     // 0x05B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 TestImage;                                         // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 NewVar_0;                                          // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFBasicIconSettings                    IconStyle;                                         // 0x05D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_WheelIcon_C*>                 InnerWheelIcons;                                   // 0x05F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        Icon_Size;                                         // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WheelIcon_C*                         SelectedIcon;                                      // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentOuterWheelIndex;                            // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_WheelIcon_C*>                 OuterWheelIcons;                                   // 0x0620(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          InDeadZone;                                        // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DeadZone;                                          // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedIconColor;                                 // 0x0640(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnselectedIconColor;                               // 0x0650(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadialHighlightBrightness;                         // 0x0660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RadialTintBrightness;                              // 0x0664(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimateWheelUpdate();
	void CommandWheelDisabled();
	void CommandWheelEnabled();
	void DisableOuterWheel();
	void ExecuteUbergraph_W_CommandWheel(int32 EntryPoint);
	void ForceSetInDeadzone(bool bInDeadzone);
	void GetCurentIndex(int32* CurrentIndex_0);
	void OnUpdateWheelColor(ETeamType Team);
	void SetInnerCommands(const TArray<struct FSwatCommand>& Options);
	void SetInnerSegments(int32 Num);
	void SetInnerWheelDirection(const struct FVector& Direction);
	void SetOuterSegments(int32 Num);
	void Update_Cursor_Visibility();
	void Update_Icons();
	void UpdateIconColors();
	void UpdateOuterWheel(const struct FVector& Direction, const TArray<struct FSwatCommand>& Options, const int32 SelectedIndex);
	void UpdateRadialMenu(const TArray<struct FSwatCommand>& Commands, class UUMG_RadialMenu_C* RadialMenu, int32 SelectedIndex);
	void UpdateWheelSelection(class UObject* Object, const struct FVector& InVector);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CommandWheel_C">();
	}
	static class UW_CommandWheel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CommandWheel_C>();
	}
};
static_assert(alignof(UW_CommandWheel_C) == 0x000008, "Wrong alignment on UW_CommandWheel_C");
static_assert(sizeof(UW_CommandWheel_C) == 0x000678, "Wrong size on UW_CommandWheel_C");
static_assert(offsetof(UW_CommandWheel_C, UberGraphFrame) == 0x000530, "Member 'UW_CommandWheel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, anim_ShowBackStick) == 0x000538, "Member 'UW_CommandWheel_C::anim_ShowBackStick' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, anim_EnableOuter_backup) == 0x000540, "Member 'UW_CommandWheel_C::anim_EnableOuter_backup' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, anim_DisableOuter) == 0x000548, "Member 'UW_CommandWheel_C::anim_DisableOuter' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, anim_EnableOuter) == 0x000550, "Member 'UW_CommandWheel_C::anim_EnableOuter' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, anim_OpenCloseWheel) == 0x000558, "Member 'UW_CommandWheel_C::anim_OpenCloseWheel' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, CommandReticle_Image) == 0x000560, "Member 'UW_CommandWheel_C::CommandReticle_Image' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, HeaderTextBackground_1) == 0x000568, "Member 'UW_CommandWheel_C::HeaderTextBackground_1' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, HeaderTextBackground_2) == 0x000570, "Member 'UW_CommandWheel_C::HeaderTextBackground_2' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, img_BgFade) == 0x000578, "Member 'UW_CommandWheel_C::img_BgFade' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, QueueText_2) == 0x000580, "Member 'UW_CommandWheel_C::QueueText_2' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, ReticleScaleBox) == 0x000588, "Member 'UW_CommandWheel_C::ReticleScaleBox' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, RedTeamColor) == 0x000590, "Member 'UW_CommandWheel_C::RedTeamColor' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, BlueTeamColor) == 0x0005A0, "Member 'UW_CommandWheel_C::BlueTeamColor' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, GoldTeamColor) == 0x0005B0, "Member 'UW_CommandWheel_C::GoldTeamColor' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, TestImage) == 0x0005C0, "Member 'UW_CommandWheel_C::TestImage' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, NewVar_0) == 0x0005C8, "Member 'UW_CommandWheel_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, IconStyle) == 0x0005D0, "Member 'UW_CommandWheel_C::IconStyle' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, InnerWheelIcons) == 0x0005F8, "Member 'UW_CommandWheel_C::InnerWheelIcons' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, Icon_Size) == 0x000608, "Member 'UW_CommandWheel_C::Icon_Size' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, SelectedIcon) == 0x000610, "Member 'UW_CommandWheel_C::SelectedIcon' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, CurrentOuterWheelIndex) == 0x000618, "Member 'UW_CommandWheel_C::CurrentOuterWheelIndex' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, OuterWheelIcons) == 0x000620, "Member 'UW_CommandWheel_C::OuterWheelIcons' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, InDeadZone) == 0x000630, "Member 'UW_CommandWheel_C::InDeadZone' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, DeadZone) == 0x000638, "Member 'UW_CommandWheel_C::DeadZone' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, SelectedIconColor) == 0x000640, "Member 'UW_CommandWheel_C::SelectedIconColor' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, UnselectedIconColor) == 0x000650, "Member 'UW_CommandWheel_C::UnselectedIconColor' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, RadialHighlightBrightness) == 0x000660, "Member 'UW_CommandWheel_C::RadialHighlightBrightness' has a wrong offset!");
static_assert(offsetof(UW_CommandWheel_C, RadialTintBrightness) == 0x000664, "Member 'UW_CommandWheel_C::RadialTintBrightness' has a wrong offset!");

}

