#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MissionSelect_Level

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MissionSelect_Level.W_MissionSelect_Level_C
// 0x0270 (0x0558 - 0x02E8)
class UW_MissionSelect_Level_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animExpand_0;                                      // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animExpand;                                        // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundAdditive;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundMultiply;                                // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Accept;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Level;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Carousel_C*                          EntryPointCarousel;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MissionSelect_EntryPoint_Gamepad_C*  EntryPointGamepad;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       EntryPointsWidgetSwitcher;                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_MissionDifficulty;                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_MissionGrade;                                   // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_MissionStats;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageBackgroundWhite;                              // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       img_Background;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_Address;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_Difficulty;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_EntryPoints;                                   // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_Grade;                                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_SitRep;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_Time;                                          // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockImage;                                         // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           retainer_Background;                               // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Address;                                       // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Grade;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_LevelName;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_MissionName;                                   // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_MissionStatus;                                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Sitrep;                                        // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Time;                                          // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_EntryPoints;                                    // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_GamepadEntryPoints;                             // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_KBMEntryPointList;                              // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_LevelDetails;                                   // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MissionSelect_EntryPoint_C*          W_MissionSelect_EntryPoint;                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MissionSelect_EntryPoint_C*          W_MissionSelect_EntryPoint_1;                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_MissionSelect_Level_C* Button, class UMissionSelectLevel* LevelData)> OnClicked; // 0x0408(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, AdvancedDisplay, BlueprintCallable)
	class UMissionSelectLevel*                    LevelData;                                         // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FLinearColor                           NormalColor;                                       // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HoveredColor;                                      // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PressedColor;                                      // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NormalTextColor;                                   // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PressedTextColor;                                  // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_MissionSelect_Level_C* Button)> OnHovered;                // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, AdvancedDisplay, BlueprintCallable)
	struct FLinearColor                           AdditiveNormalColor;                               // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           AdditiveHoveredColor;                              // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColorHovered;                                  // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColorNormal;                                   // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColorSelected;                                 // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelected;                                         // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          bHovered;                                          // 0x04D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_4D2[0x6];                                      // 0x04D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UW_MissionSelect_Level_C* SelectedButton)> OnSelected;       // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, AdvancedDisplay, BlueprintCallable)
	TMulticastInlineDelegate<void(class FName SelectedEntryPoint)> OnAcceptClicked;                  // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, AdvancedDisplay, BlueprintCallable)
	TArray<class UW_MissionSelect_EntryPoint_C*>  EntryPointWidgets;                                 // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay)
	class UW_MissionSelect_EntryPoint_C*          CurrentEntryPoint;                                 // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          bHasEntryPoints;                                   // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                SelectedPadding;                                   // 0x0514(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EntryPointSpacing;                                 // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EntryPoint;                                        // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnExpandAnimationFinished;                         // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnExpandAnimationStarted;                          // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BackPage(bool* Handled);
	void BndEvt__W_MissionSelect_Level_btn_Accept_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_MissionSelect_Level_btn_Level_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_MissionSelect_Level_btn_Level_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_MissionSelect_Level_EntryPointCarousel_K2Node_ComponentBoundEvent_2_OnNextHandled__DelegateSignature(class FName OptionID);
	void BndEvt__W_MissionSelect_Level_EntryPointCarousel_K2Node_ComponentBoundEvent_3_OnPreviousHandled__DelegateSignature(class FName OptionID);
	void BndEvt__W_MissionSelect_Level_EntryPointCarousel_K2Node_ComponentBoundEvent_5_OnOptionSelected__DelegateSignature(class FName OptionID);
	void ChangeEntryPointNavOverride_Gamepad(EUINavigation Navigation_0);
	void ChangePage(class FName PageName);
	void Construct();
	void CustomEvent();
	void CustomEvent_0();
	void Deselect();
	void EntryPointSelected(class UW_MissionSelect_EntryPoint_C* EntryPoint_0);
	void ExecuteUbergraph_W_MissionSelect_Level(int32 EntryPoint_0);
	void Expand();
	void GetAdjustedPadding(struct FMargin* Padding_0);
	void Hide(double Delay, bool Collapse);
	void InputChanged(ECommonInputType bNewInputType);
	bool IsLocked();
	void OnEntryPointCarouselChange(class FName OptionID);
	void PopulateEntryPoints();
	void PreConstruct(bool IsDesignTime);
	void Reveal(double Delay);
	void RevealEntryPoints();
	void Select(bool bInstant);
	void SelectNextEntrypoint();
	void SelectPreviousEntrypoint();
	void SequenceEvent__ENTRYPOINTW_MissionSelect_Level();
	void SequenceEvent__ENTRYPOINTW_MissionSelect_Level_0();
	void SetInputMode(bool IsGamepad);
	void SetLevelBackground();
	void SetLevelData(class UMissionSelectLevel* LevelData_0);
	void SetLevelStats();
	void SetLevelText();
	void SetState(const struct FLinearColor& ButtonColor, const struct FLinearColor& TextColor);
	void UpdateVisualState();

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MissionSelect_Level_C">();
	}
	static class UW_MissionSelect_Level_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MissionSelect_Level_C>();
	}
};
static_assert(alignof(UW_MissionSelect_Level_C) == 0x000008, "Wrong alignment on UW_MissionSelect_Level_C");
static_assert(sizeof(UW_MissionSelect_Level_C) == 0x000558, "Wrong size on UW_MissionSelect_Level_C");
static_assert(offsetof(UW_MissionSelect_Level_C, UberGraphFrame) == 0x0002E8, "Member 'UW_MissionSelect_Level_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, animExpand_0) == 0x0002F0, "Member 'UW_MissionSelect_Level_C::animExpand_0' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, animExpand) == 0x0002F8, "Member 'UW_MissionSelect_Level_C::animExpand' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, BackgroundAdditive) == 0x000300, "Member 'UW_MissionSelect_Level_C::BackgroundAdditive' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, BackgroundMultiply) == 0x000308, "Member 'UW_MissionSelect_Level_C::BackgroundMultiply' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, btn_Accept) == 0x000310, "Member 'UW_MissionSelect_Level_C::btn_Accept' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, btn_Level) == 0x000318, "Member 'UW_MissionSelect_Level_C::btn_Level' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, EntryPointCarousel) == 0x000320, "Member 'UW_MissionSelect_Level_C::EntryPointCarousel' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, EntryPointGamepad) == 0x000328, "Member 'UW_MissionSelect_Level_C::EntryPointGamepad' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, EntryPointsWidgetSwitcher) == 0x000330, "Member 'UW_MissionSelect_Level_C::EntryPointsWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, HB_MissionDifficulty) == 0x000338, "Member 'UW_MissionSelect_Level_C::HB_MissionDifficulty' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, HB_MissionGrade) == 0x000340, "Member 'UW_MissionSelect_Level_C::HB_MissionGrade' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, HB_MissionStats) == 0x000348, "Member 'UW_MissionSelect_Level_C::HB_MissionStats' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, ImageBackgroundWhite) == 0x000350, "Member 'UW_MissionSelect_Level_C::ImageBackgroundWhite' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, img_Background) == 0x000358, "Member 'UW_MissionSelect_Level_C::img_Background' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, lbl_Address) == 0x000360, "Member 'UW_MissionSelect_Level_C::lbl_Address' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, lbl_Difficulty) == 0x000368, "Member 'UW_MissionSelect_Level_C::lbl_Difficulty' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, lbl_EntryPoints) == 0x000370, "Member 'UW_MissionSelect_Level_C::lbl_EntryPoints' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, lbl_Grade) == 0x000378, "Member 'UW_MissionSelect_Level_C::lbl_Grade' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, lbl_SitRep) == 0x000380, "Member 'UW_MissionSelect_Level_C::lbl_SitRep' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, lbl_Time) == 0x000388, "Member 'UW_MissionSelect_Level_C::lbl_Time' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, LockImage) == 0x000390, "Member 'UW_MissionSelect_Level_C::LockImage' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, retainer_Background) == 0x000398, "Member 'UW_MissionSelect_Level_C::retainer_Background' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, txt_Address) == 0x0003A0, "Member 'UW_MissionSelect_Level_C::txt_Address' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, txt_Grade) == 0x0003A8, "Member 'UW_MissionSelect_Level_C::txt_Grade' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, txt_LevelName) == 0x0003B0, "Member 'UW_MissionSelect_Level_C::txt_LevelName' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, txt_MissionName) == 0x0003B8, "Member 'UW_MissionSelect_Level_C::txt_MissionName' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, txt_MissionStatus) == 0x0003C0, "Member 'UW_MissionSelect_Level_C::txt_MissionStatus' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, txt_Sitrep) == 0x0003C8, "Member 'UW_MissionSelect_Level_C::txt_Sitrep' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, txt_Time) == 0x0003D0, "Member 'UW_MissionSelect_Level_C::txt_Time' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, VB_EntryPoints) == 0x0003D8, "Member 'UW_MissionSelect_Level_C::VB_EntryPoints' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, VB_GamepadEntryPoints) == 0x0003E0, "Member 'UW_MissionSelect_Level_C::VB_GamepadEntryPoints' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, VB_KBMEntryPointList) == 0x0003E8, "Member 'UW_MissionSelect_Level_C::VB_KBMEntryPointList' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, VB_LevelDetails) == 0x0003F0, "Member 'UW_MissionSelect_Level_C::VB_LevelDetails' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, W_MissionSelect_EntryPoint) == 0x0003F8, "Member 'UW_MissionSelect_Level_C::W_MissionSelect_EntryPoint' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, W_MissionSelect_EntryPoint_1) == 0x000400, "Member 'UW_MissionSelect_Level_C::W_MissionSelect_EntryPoint_1' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, OnClicked) == 0x000408, "Member 'UW_MissionSelect_Level_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, LevelData) == 0x000418, "Member 'UW_MissionSelect_Level_C::LevelData' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, NormalColor) == 0x000420, "Member 'UW_MissionSelect_Level_C::NormalColor' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, HoveredColor) == 0x000430, "Member 'UW_MissionSelect_Level_C::HoveredColor' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, PressedColor) == 0x000440, "Member 'UW_MissionSelect_Level_C::PressedColor' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, NormalTextColor) == 0x000450, "Member 'UW_MissionSelect_Level_C::NormalTextColor' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, PressedTextColor) == 0x000460, "Member 'UW_MissionSelect_Level_C::PressedTextColor' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, OnHovered) == 0x000470, "Member 'UW_MissionSelect_Level_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, AdditiveNormalColor) == 0x000480, "Member 'UW_MissionSelect_Level_C::AdditiveNormalColor' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, AdditiveHoveredColor) == 0x000490, "Member 'UW_MissionSelect_Level_C::AdditiveHoveredColor' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, TextColorHovered) == 0x0004A0, "Member 'UW_MissionSelect_Level_C::TextColorHovered' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, TextColorNormal) == 0x0004B0, "Member 'UW_MissionSelect_Level_C::TextColorNormal' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, TextColorSelected) == 0x0004C0, "Member 'UW_MissionSelect_Level_C::TextColorSelected' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, bSelected) == 0x0004D0, "Member 'UW_MissionSelect_Level_C::bSelected' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, bHovered) == 0x0004D1, "Member 'UW_MissionSelect_Level_C::bHovered' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, OnSelected) == 0x0004D8, "Member 'UW_MissionSelect_Level_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, OnAcceptClicked) == 0x0004E8, "Member 'UW_MissionSelect_Level_C::OnAcceptClicked' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, EntryPointWidgets) == 0x0004F8, "Member 'UW_MissionSelect_Level_C::EntryPointWidgets' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, CurrentEntryPoint) == 0x000508, "Member 'UW_MissionSelect_Level_C::CurrentEntryPoint' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, bHasEntryPoints) == 0x000510, "Member 'UW_MissionSelect_Level_C::bHasEntryPoints' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, SelectedPadding) == 0x000514, "Member 'UW_MissionSelect_Level_C::SelectedPadding' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, EntryPointSpacing) == 0x000528, "Member 'UW_MissionSelect_Level_C::EntryPointSpacing' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, EntryPoint) == 0x000530, "Member 'UW_MissionSelect_Level_C::EntryPoint' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, OnExpandAnimationFinished) == 0x000538, "Member 'UW_MissionSelect_Level_C::OnExpandAnimationFinished' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_Level_C, OnExpandAnimationStarted) == 0x000548, "Member 'UW_MissionSelect_Level_C::OnExpandAnimationStarted' has a wrong offset!");

}

