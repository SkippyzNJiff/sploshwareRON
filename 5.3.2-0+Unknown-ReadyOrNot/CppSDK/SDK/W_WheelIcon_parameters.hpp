#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WheelIcon

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_WheelIcon.W_WheelIcon_C.ExecuteUbergraph_W_WheelIcon
// 0x00C0 (0x00C0 - 0x0000)
struct W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Selected;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Unselected;                           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_WheelIcon_Pip_C*                     CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Value;                          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWheelCardinalDirection                       Temp_byte_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWheelCardinalDirection                       K2Node_CustomEvent_Direction;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon) == 0x000008, "Wrong alignment on W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon");
static_assert(sizeof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon) == 0x0000C0, "Wrong size on W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, EntryPoint) == 0x000000, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, K2Node_Event_Selected) == 0x000004, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::K2Node_Event_Selected' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, K2Node_Event_Unselected) == 0x000005, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::K2Node_Event_Unselected' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Create_ReturnValue) == 0x000010, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, Temp_int_Array_Index_Variable) == 0x000034, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, K2Node_CustomEvent_Value) == 0x000038, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_GetAllChildren_ReturnValue) == 0x000048, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Array_Get_Item) == 0x000058, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, K2Node_DynamicCast_AsUser_Widget) == 0x000068, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, Temp_byte_Variable) == 0x000080, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, K2Node_CustomEvent_Direction) == 0x000081, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, Temp_int_Variable) == 0x000090, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000098, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000A1, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, K2Node_Select_Default) == 0x0000A8, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x0000B0, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x0000B4, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000B8, "Member 'W_WheelIcon_C_ExecuteUbergraph_W_WheelIcon::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.OnHighlight
// 0x0001 (0x0001 - 0x0000)
struct W_WheelIcon_C_OnHighlight final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_OnHighlight) == 0x000001, "Wrong alignment on W_WheelIcon_C_OnHighlight");
static_assert(sizeof(W_WheelIcon_C_OnHighlight) == 0x000001, "Wrong size on W_WheelIcon_C_OnHighlight");
static_assert(offsetof(W_WheelIcon_C_OnHighlight, Selected) == 0x000000, "Member 'W_WheelIcon_C_OnHighlight::Selected' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.OnUnhighlight
// 0x0001 (0x0001 - 0x0000)
struct W_WheelIcon_C_OnUnhighlight final
{
public:
	bool                                          Unselected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_OnUnhighlight) == 0x000001, "Wrong alignment on W_WheelIcon_C_OnUnhighlight");
static_assert(sizeof(W_WheelIcon_C_OnUnhighlight) == 0x000001, "Wrong size on W_WheelIcon_C_OnUnhighlight");
static_assert(offsetof(W_WheelIcon_C_OnUnhighlight, Unselected) == 0x000000, "Member 'W_WheelIcon_C_OnUnhighlight::Unselected' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.SetIconColorAndOpacity
// 0x0010 (0x0010 - 0x0000)
struct W_WheelIcon_C_SetIconColorAndOpacity final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_SetIconColorAndOpacity) == 0x000004, "Wrong alignment on W_WheelIcon_C_SetIconColorAndOpacity");
static_assert(sizeof(W_WheelIcon_C_SetIconColorAndOpacity) == 0x000010, "Wrong size on W_WheelIcon_C_SetIconColorAndOpacity");
static_assert(offsetof(W_WheelIcon_C_SetIconColorAndOpacity, Color) == 0x000000, "Member 'W_WheelIcon_C_SetIconColorAndOpacity::Color' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.SetPipsColor
// 0x0010 (0x0010 - 0x0000)
struct W_WheelIcon_C_SetPipsColor final
{
public:
	struct FLinearColor                           Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_SetPipsColor) == 0x000004, "Wrong alignment on W_WheelIcon_C_SetPipsColor");
static_assert(sizeof(W_WheelIcon_C_SetPipsColor) == 0x000010, "Wrong size on W_WheelIcon_C_SetPipsColor");
static_assert(offsetof(W_WheelIcon_C_SetPipsColor, Value) == 0x000000, "Member 'W_WheelIcon_C_SetPipsColor::Value' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.SetSelected
// 0x0028 (0x0028 - 0x0000)
struct W_WheelIcon_C_SetSelected final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0014(0x0014)()
};
static_assert(alignof(W_WheelIcon_C_SetSelected) == 0x000004, "Wrong alignment on W_WheelIcon_C_SetSelected");
static_assert(sizeof(W_WheelIcon_C_SetSelected) == 0x000028, "Wrong size on W_WheelIcon_C_SetSelected");
static_assert(offsetof(W_WheelIcon_C_SetSelected, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'W_WheelIcon_C_SetSelected::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_SetSelected, K2Node_MakeStruct_SlateColor_1) == 0x000014, "Member 'W_WheelIcon_C_SetSelected::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.SetTextColor
// 0x0018 (0x0018 - 0x0000)
struct W_WheelIcon_C_SetTextColor final
{
public:
	struct FSlateColor                            InColorAndOpacity;                                 // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_SetTextColor) == 0x000004, "Wrong alignment on W_WheelIcon_C_SetTextColor");
static_assert(sizeof(W_WheelIcon_C_SetTextColor) == 0x000018, "Wrong size on W_WheelIcon_C_SetTextColor");
static_assert(offsetof(W_WheelIcon_C_SetTextColor, InColorAndOpacity) == 0x000000, "Member 'W_WheelIcon_C_SetTextColor::InColorAndOpacity' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_SetTextColor, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'W_WheelIcon_C_SetTextColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.SetTitleDirection
// 0x0001 (0x0001 - 0x0000)
struct W_WheelIcon_C_SetTitleDirection final
{
public:
	EWheelCardinalDirection                       Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_C_SetTitleDirection) == 0x000001, "Wrong alignment on W_WheelIcon_C_SetTitleDirection");
static_assert(sizeof(W_WheelIcon_C_SetTitleDirection) == 0x000001, "Wrong size on W_WheelIcon_C_SetTitleDirection");
static_assert(offsetof(W_WheelIcon_C_SetTitleDirection, Direction) == 0x000000, "Member 'W_WheelIcon_C_SetTitleDirection::Direction' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.SetUnselected
// 0x0028 (0x0028 - 0x0000)
struct W_WheelIcon_C_SetUnselected final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0014(0x0014)()
};
static_assert(alignof(W_WheelIcon_C_SetUnselected) == 0x000004, "Wrong alignment on W_WheelIcon_C_SetUnselected");
static_assert(sizeof(W_WheelIcon_C_SetUnselected) == 0x000028, "Wrong size on W_WheelIcon_C_SetUnselected");
static_assert(offsetof(W_WheelIcon_C_SetUnselected, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'W_WheelIcon_C_SetUnselected::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_SetUnselected, K2Node_MakeStruct_SlateColor_1) == 0x000014, "Member 'W_WheelIcon_C_SetUnselected::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function W_WheelIcon.W_WheelIcon_C.UpdateColors
// 0x0044 (0x0044 - 0x0000)
struct W_WheelIcon_C_UpdateColors final
{
public:
	struct FLinearColor                           SelectedColor_0;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnselectedColor_0;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0014)()
};
static_assert(alignof(W_WheelIcon_C_UpdateColors) == 0x000004, "Wrong alignment on W_WheelIcon_C_UpdateColors");
static_assert(sizeof(W_WheelIcon_C_UpdateColors) == 0x000044, "Wrong size on W_WheelIcon_C_UpdateColors");
static_assert(offsetof(W_WheelIcon_C_UpdateColors, SelectedColor_0) == 0x000000, "Member 'W_WheelIcon_C_UpdateColors::SelectedColor_0' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_UpdateColors, UnselectedColor_0) == 0x000010, "Member 'W_WheelIcon_C_UpdateColors::UnselectedColor_0' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_UpdateColors, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'W_WheelIcon_C_UpdateColors::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_C_UpdateColors, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'W_WheelIcon_C_UpdateColors::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

