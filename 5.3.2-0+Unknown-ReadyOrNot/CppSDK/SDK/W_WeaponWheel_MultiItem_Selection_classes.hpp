#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WeaponWheel_MultiItem_Selection

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WeaponWheel_MultiItem_Selection.W_WeaponWheel_MultiItem_Selection_C
// 0x0078 (0x0338 - 0x02C0)
class UW_WeaponWheel_MultiItem_Selection_C final : public UUserWidget
{
public:
	class UHorizontalBox*                         Dots_Container;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               MultiItemVisual;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NextItemIcon;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PreviousItemIcon;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UImage*>                         Dots;                                              // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FLinearColor                           UnselectedColor;                                   // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedColor;                                     // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         ItemIndex;                                         // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightedIconColor;                              // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnhighlightedIconColor;                            // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CreateIndex();
	void Deselect(int32 Index_0);
	void DetermineIconColor(class UImage* Next_Icon, int32 IndexToCheck);
	void HighlightIcon(class UImage* Arrow);
	void NextItem(bool* bSuccess);
	void PreviousItem(bool* bSuccess);
	void Refresh(int32 NewAmount, int32 StartingItemIndex);
	void Select(int32 Index_0);
	void UnhighlightIcon(class UImage* Arrow);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WeaponWheel_MultiItem_Selection_C">();
	}
	static class UW_WeaponWheel_MultiItem_Selection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WeaponWheel_MultiItem_Selection_C>();
	}
};
static_assert(alignof(UW_WeaponWheel_MultiItem_Selection_C) == 0x000008, "Wrong alignment on UW_WeaponWheel_MultiItem_Selection_C");
static_assert(sizeof(UW_WeaponWheel_MultiItem_Selection_C) == 0x000338, "Wrong size on UW_WeaponWheel_MultiItem_Selection_C");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, Dots_Container) == 0x0002C0, "Member 'UW_WeaponWheel_MultiItem_Selection_C::Dots_Container' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, MultiItemVisual) == 0x0002C8, "Member 'UW_WeaponWheel_MultiItem_Selection_C::MultiItemVisual' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, NextItemIcon) == 0x0002D0, "Member 'UW_WeaponWheel_MultiItem_Selection_C::NextItemIcon' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, PreviousItemIcon) == 0x0002D8, "Member 'UW_WeaponWheel_MultiItem_Selection_C::PreviousItemIcon' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, Dots) == 0x0002E0, "Member 'UW_WeaponWheel_MultiItem_Selection_C::Dots' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, UnselectedColor) == 0x0002F0, "Member 'UW_WeaponWheel_MultiItem_Selection_C::UnselectedColor' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, SelectedColor) == 0x000300, "Member 'UW_WeaponWheel_MultiItem_Selection_C::SelectedColor' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, Amount) == 0x000310, "Member 'UW_WeaponWheel_MultiItem_Selection_C::Amount' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, ItemIndex) == 0x000314, "Member 'UW_WeaponWheel_MultiItem_Selection_C::ItemIndex' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, HighlightedIconColor) == 0x000318, "Member 'UW_WeaponWheel_MultiItem_Selection_C::HighlightedIconColor' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_MultiItem_Selection_C, UnhighlightedIconColor) == 0x000328, "Member 'UW_WeaponWheel_MultiItem_Selection_C::UnhighlightedIconColor' has a wrong offset!");

}

