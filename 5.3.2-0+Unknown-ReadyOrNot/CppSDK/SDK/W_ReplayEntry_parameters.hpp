#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ReplayEntry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_ReplayEntry.W_ReplayEntry_C.ExecuteUbergraph_W_ReplayEntry
// 0x0038 (0x0038 - 0x0000)
struct W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextStyle*                       CallFunc_GetCurrentTextStyle_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColor_OutColor;                        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0024(0x0014)()
};
static_assert(alignof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry) == 0x000008, "Wrong alignment on W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry");
static_assert(sizeof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry) == 0x000038, "Wrong size on W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, EntryPoint) == 0x000000, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, CallFunc_GetCurrentTextStyle_ReturnValue) == 0x000008, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::CallFunc_GetCurrentTextStyle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, CallFunc_GetColor_OutColor) == 0x000010, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::CallFunc_GetColor_OutColor' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, K2Node_Event_IsDesignTime) == 0x000020, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry, K2Node_MakeStruct_SlateColor) == 0x000024, "Member 'W_ReplayEntry_C_ExecuteUbergraph_W_ReplayEntry::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function W_ReplayEntry.W_ReplayEntry_C.GetReplayTimeFormat
// 0x0080 (0x0080 - 0x0000)
struct W_ReplayEntry_C_GetReplayTimeFormat final
{
public:
	double                                        ReplayLength_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Duration;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_1;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AppendMultiple_ReturnValue_2;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ReplayEntry_C_GetReplayTimeFormat) == 0x000008, "Wrong alignment on W_ReplayEntry_C_GetReplayTimeFormat");
static_assert(sizeof(W_ReplayEntry_C_GetReplayTimeFormat) == 0x000080, "Wrong size on W_ReplayEntry_C_GetReplayTimeFormat");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, ReplayLength_0) == 0x000000, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::ReplayLength_0' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, Duration) == 0x000008, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::Duration' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, CallFunc_FFloor_ReturnValue) == 0x000028, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, CallFunc_FFloor_ReturnValue_1) == 0x00002C, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000040, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, CallFunc_AppendMultiple_ReturnValue) == 0x000050, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::CallFunc_AppendMultiple_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, CallFunc_AppendMultiple_ReturnValue_1) == 0x000060, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::CallFunc_AppendMultiple_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_GetReplayTimeFormat, CallFunc_AppendMultiple_ReturnValue_2) == 0x000070, "Member 'W_ReplayEntry_C_GetReplayTimeFormat::CallFunc_AppendMultiple_ReturnValue_2' has a wrong offset!");

// Function W_ReplayEntry.W_ReplayEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ReplayEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ReplayEntry_C_PreConstruct) == 0x000001, "Wrong alignment on W_ReplayEntry_C_PreConstruct");
static_assert(sizeof(W_ReplayEntry_C_PreConstruct) == 0x000001, "Wrong size on W_ReplayEntry_C_PreConstruct");
static_assert(offsetof(W_ReplayEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ReplayEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_ReplayEntry.W_ReplayEntry_C.SetupData
// 0x0090 (0x0090 - 0x0000)
struct W_ReplayEntry_C_SetupData final
{
public:
	class FString                                 CallFunc_GetReplayTimeFormat_Duration;             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0070(0x0018)()
	double                                        CallFunc_GetReplayTimeFormat_ReplayLength_ImplicitCast; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ReplayEntry_C_SetupData) == 0x000008, "Wrong alignment on W_ReplayEntry_C_SetupData");
static_assert(sizeof(W_ReplayEntry_C_SetupData) == 0x000090, "Wrong size on W_ReplayEntry_C_SetupData");
static_assert(offsetof(W_ReplayEntry_C_SetupData, CallFunc_GetReplayTimeFormat_Duration) == 0x000000, "Member 'W_ReplayEntry_C_SetupData::CallFunc_GetReplayTimeFormat_Duration' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_SetupData, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'W_ReplayEntry_C_SetupData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_SetupData, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000028, "Member 'W_ReplayEntry_C_SetupData::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_SetupData, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000040, "Member 'W_ReplayEntry_C_SetupData::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_SetupData, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000058, "Member 'W_ReplayEntry_C_SetupData::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_SetupData, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000070, "Member 'W_ReplayEntry_C_SetupData::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_SetupData, CallFunc_GetReplayTimeFormat_ReplayLength_ImplicitCast) == 0x000088, "Member 'W_ReplayEntry_C_SetupData::CallFunc_GetReplayTimeFormat_ReplayLength_ImplicitCast' has a wrong offset!");

// Function W_ReplayEntry.W_ReplayEntry_C.UpdateFileName
// 0x0030 (0x0030 - 0x0000)
struct W_ReplayEntry_C_UpdateFileName final
{
public:
	class FString                                 ReplayFileName_0;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
};
static_assert(alignof(W_ReplayEntry_C_UpdateFileName) == 0x000008, "Wrong alignment on W_ReplayEntry_C_UpdateFileName");
static_assert(sizeof(W_ReplayEntry_C_UpdateFileName) == 0x000030, "Wrong size on W_ReplayEntry_C_UpdateFileName");
static_assert(offsetof(W_ReplayEntry_C_UpdateFileName, ReplayFileName_0) == 0x000000, "Member 'W_ReplayEntry_C_UpdateFileName::ReplayFileName_0' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_UpdateFileName, CallFunc_IsEmpty_ReturnValue) == 0x000010, "Member 'W_ReplayEntry_C_UpdateFileName::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_UpdateFileName, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'W_ReplayEntry_C_UpdateFileName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_ReplayEntry.W_ReplayEntry_C.UpdateStyle
// 0x0020 (0x0020 - 0x0000)
struct W_ReplayEntry_C_UpdateStyle final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonButtonStyle>         Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UCommonButtonStyle>         Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UCommonButtonStyle>         K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_ReplayEntry_C_UpdateStyle) == 0x000008, "Wrong alignment on W_ReplayEntry_C_UpdateStyle");
static_assert(sizeof(W_ReplayEntry_C_UpdateStyle) == 0x000020, "Wrong size on W_ReplayEntry_C_UpdateStyle");
static_assert(offsetof(W_ReplayEntry_C_UpdateStyle, Temp_bool_Variable) == 0x000000, "Member 'W_ReplayEntry_C_UpdateStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_UpdateStyle, Temp_class_Variable) == 0x000008, "Member 'W_ReplayEntry_C_UpdateStyle::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_UpdateStyle, Temp_class_Variable_1) == 0x000010, "Member 'W_ReplayEntry_C_UpdateStyle::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(W_ReplayEntry_C_UpdateStyle, K2Node_Select_Default) == 0x000018, "Member 'W_ReplayEntry_C_UpdateStyle::K2Node_Select_Default' has a wrong offset!");

}

