#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Stats

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_Stats.W_Stats_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_BackPage) == 0x000001, "Wrong alignment on W_Stats_C_BackPage");
static_assert(sizeof(W_Stats_C_BackPage) == 0x000001, "Wrong size on W_Stats_C_BackPage");
static_assert(offsetof(W_Stats_C_BackPage, Handled) == 0x000000, "Member 'W_Stats_C_BackPage::Handled' has a wrong offset!");

// Function W_Stats.W_Stats_C.BndEvt__W_Stats_btn_FriendsList_ClickAway_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_C_BndEvt__W_Stats_btn_FriendsList_ClickAway_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_BndEvt__W_Stats_btn_FriendsList_ClickAway_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Stats_C_BndEvt__W_Stats_btn_FriendsList_ClickAway_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_Stats_C_BndEvt__W_Stats_btn_FriendsList_ClickAway_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_Stats_C_BndEvt__W_Stats_btn_FriendsList_ClickAway_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_Stats_C_BndEvt__W_Stats_btn_FriendsList_ClickAway_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_Stats_C_BndEvt__W_Stats_btn_FriendsList_ClickAway_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Stats.W_Stats_C.BndEvt__W_Stats_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Stats_C_BndEvt__W_Stats_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature final
{
public:
	class FString                                 ButtonId;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_BndEvt__W_Stats_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Stats_C_BndEvt__W_Stats_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature");
static_assert(sizeof(W_Stats_C_BndEvt__W_Stats_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature) == 0x000010, "Wrong size on W_Stats_C_BndEvt__W_Stats_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature");
static_assert(offsetof(W_Stats_C_BndEvt__W_Stats_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature, ButtonId) == 0x000000, "Member 'W_Stats_C_BndEvt__W_Stats_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature::ButtonId' has a wrong offset!");

// Function W_Stats.W_Stats_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_ChangePage) == 0x000004, "Wrong alignment on W_Stats_C_ChangePage");
static_assert(sizeof(W_Stats_C_ChangePage) == 0x000008, "Wrong size on W_Stats_C_ChangePage");
static_assert(offsetof(W_Stats_C_ChangePage, PageName) == 0x000000, "Member 'W_Stats_C_ChangePage::PageName' has a wrong offset!");

// Function W_Stats.W_Stats_C.CompareStats
// 0x00D8 (0x00D8 - 0x0000)
struct W_Stats_C_CompareStats final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets;  // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_StatsUI_C>        K2Node_DynamicCast_AsBPI_Stats_UI;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
};
static_assert(alignof(W_Stats_C_CompareStats) == 0x000008, "Wrong alignment on W_Stats_C_CompareStats");
static_assert(sizeof(W_Stats_C_CompareStats) == 0x0000D8, "Wrong size on W_Stats_C_CompareStats");
static_assert(offsetof(W_Stats_C_CompareStats, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_Stats_C_CompareStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_Stats_C_CompareStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, CallFunc_GetAllWidgetsWithInterface_FoundWidgets) == 0x000008, "Member 'W_Stats_C_CompareStats::CallFunc_GetAllWidgetsWithInterface_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_Stats_C_CompareStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_Stats_C_CompareStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, K2Node_DynamicCast_AsBPI_Stats_UI) == 0x000028, "Member 'W_Stats_C_CompareStats::K2Node_DynamicCast_AsBPI_Stats_UI' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_Stats_C_CompareStats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'W_Stats_C_CompareStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'W_Stats_C_CompareStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, CallFunc_IsEmpty_ReturnValue) == 0x000040, "Member 'W_Stats_C_CompareStats::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'W_Stats_C_CompareStats::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'W_Stats_C_CompareStats::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, K2Node_MakeArray_Array) == 0x0000B0, "Member 'W_Stats_C_CompareStats::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CompareStats, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'W_Stats_C_CompareStats::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_Stats.W_Stats_C.CreateFriendsList
// 0x0028 (0x0028 - 0x0000)
struct W_Stats_C_CreateFriendsList final
{
public:
	TDelegate<void(int32 NumberOfFriends)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFriend& Friend)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_Stats_FriendsList_C*                 CallFunc_BP_AddWidget_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_CreateFriendsList) == 0x000008, "Wrong alignment on W_Stats_C_CreateFriendsList");
static_assert(sizeof(W_Stats_C_CreateFriendsList) == 0x000028, "Wrong size on W_Stats_C_CreateFriendsList");
static_assert(offsetof(W_Stats_C_CreateFriendsList, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'W_Stats_C_CreateFriendsList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CreateFriendsList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'W_Stats_C_CreateFriendsList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Stats_C_CreateFriendsList, CallFunc_BP_AddWidget_ReturnValue) == 0x000020, "Member 'W_Stats_C_CreateFriendsList::CallFunc_BP_AddWidget_ReturnValue' has a wrong offset!");

// Function W_Stats.W_Stats_C.ExecuteUbergraph_W_Stats
// 0x04B8 (0x04B8 - 0x0000)
struct W_Stats_C_ExecuteUbergraph_W_Stats final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& FriendID)> K2Node_CreateDelegate_OutputDelegate;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_FriendID;                       // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_ButtonID;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsWithInterface_FoundWidgets;  // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_StatsUI_C>        K2Node_DynamicCast_AsBPI_Stats_UI;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFeatureEnabled_ReturnValue;             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShowProfileUI_ReturnValue;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FormatViewProfileText_FormattedText;      // 0x00C8(0x0018)()
	struct FFriend                                K2Node_CustomEvent_Friend;                         // 0x00E0(0x01C8)()
	int32                                         K2Node_CustomEvent_NumberOfFriends;                // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD[0x3];                                      // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriend                                CallFunc_Map_Find_Value;                           // 0x02B0(0x01C8)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEOSMultiplayerSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEOSMultiplayerSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLoginComplete_ReturnValue;              // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEOSMultiplayerSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bMultiplayerConnectionAvailable)> K2Node_CreateDelegate_OutputDelegate_1;    // 0x04A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConnectionStatusMatchingWithFilters_ReturnValue; // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_ExecuteUbergraph_W_Stats) == 0x000008, "Wrong alignment on W_Stats_C_ExecuteUbergraph_W_Stats");
static_assert(sizeof(W_Stats_C_ExecuteUbergraph_W_Stats) == 0x0004B8, "Wrong size on W_Stats_C_ExecuteUbergraph_W_Stats");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, EntryPoint) == 0x000000, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, Temp_int_Variable) == 0x000004, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, Temp_int_Variable_1) == 0x00000C, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_Event_Delay_1) == 0x000020, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_Event_Delay) == 0x000028, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_Event_Collapse) == 0x000030, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_Event_IsGamepad) == 0x000031, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_Event_PageName) == 0x000034, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_Event_IsDesignTime) == 0x00003C, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_GetStatSubsystem_ReturnValue) == 0x000040, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_GetStatSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_CustomEvent_FriendID) == 0x000048, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_CustomEvent_FriendID' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_ComponentBoundEvent_ButtonID) == 0x000058, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_ComponentBoundEvent_ButtonID' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_SwitchString_CmpSuccess) == 0x000068, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_ComponentBoundEvent_Button) == 0x000070, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_GetAllWidgetsWithInterface_FoundWidgets) == 0x000078, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_GetAllWidgetsWithInterface_FoundWidgets' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_Array_Get_Item) == 0x000090, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_DynamicCast_AsBPI_Stats_UI) == 0x000098, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_DynamicCast_AsBPI_Stats_UI' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_GetStatSubsystem_ReturnValue_1) == 0x0000B8, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_GetStatSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000C0, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_IsFeatureEnabled_ReturnValue) == 0x0000C1, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_IsFeatureEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_ShowProfileUI_ReturnValue) == 0x0000C2, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_ShowProfileUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_FormatViewProfileText_FormattedText) == 0x0000C8, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_FormatViewProfileText_FormattedText' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_CustomEvent_Friend) == 0x0000E0, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_CustomEvent_Friend' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_CustomEvent_NumberOfFriends) == 0x0002A8, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_CustomEvent_NumberOfFriends' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, Temp_bool_Variable) == 0x0002AC, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_Map_Find_Value) == 0x0002B0, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_Map_Find_ReturnValue) == 0x000478, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000480, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000488, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_IsLoginComplete_ReturnValue) == 0x000490, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_IsLoginComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000498, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_CreateDelegate_OutputDelegate_1) == 0x0004A0, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, K2Node_Select_Default) == 0x0004B0, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Stats_C_ExecuteUbergraph_W_Stats, CallFunc_IsConnectionStatusMatchingWithFilters_ReturnValue) == 0x0004B4, "Member 'W_Stats_C_ExecuteUbergraph_W_Stats::CallFunc_IsConnectionStatusMatchingWithFilters_ReturnValue' has a wrong offset!");

// Function W_Stats.W_Stats_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Stats_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_Hide) == 0x000008, "Wrong alignment on W_Stats_C_Hide");
static_assert(sizeof(W_Stats_C_Hide) == 0x000010, "Wrong size on W_Stats_C_Hide");
static_assert(offsetof(W_Stats_C_Hide, Delay) == 0x000000, "Member 'W_Stats_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Stats_C_Hide, Collapse) == 0x000008, "Member 'W_Stats_C_Hide::Collapse' has a wrong offset!");

// Function W_Stats.W_Stats_C.OnFriendLoaded
// 0x0010 (0x0010 - 0x0000)
struct W_Stats_C_OnFriendLoaded final
{
public:
	class FString                                 FriendID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_OnFriendLoaded) == 0x000008, "Wrong alignment on W_Stats_C_OnFriendLoaded");
static_assert(sizeof(W_Stats_C_OnFriendLoaded) == 0x000010, "Wrong size on W_Stats_C_OnFriendLoaded");
static_assert(offsetof(W_Stats_C_OnFriendLoaded, FriendID) == 0x000000, "Member 'W_Stats_C_OnFriendLoaded::FriendID' has a wrong offset!");

// Function W_Stats.W_Stats_C.OnFriendSelected
// 0x01C8 (0x01C8 - 0x0000)
struct W_Stats_C_OnFriendSelected final
{
public:
	struct FFriend                                Friend;                                            // 0x0000(0x01C8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Stats_C_OnFriendSelected) == 0x000008, "Wrong alignment on W_Stats_C_OnFriendSelected");
static_assert(sizeof(W_Stats_C_OnFriendSelected) == 0x0001C8, "Wrong size on W_Stats_C_OnFriendSelected");
static_assert(offsetof(W_Stats_C_OnFriendSelected, Friend) == 0x000000, "Member 'W_Stats_C_OnFriendSelected::Friend' has a wrong offset!");

// Function W_Stats.W_Stats_C.OnFriendsListUpdated
// 0x0004 (0x0004 - 0x0000)
struct W_Stats_C_OnFriendsListUpdated final
{
public:
	int32                                         NumberOfFriends;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_OnFriendsListUpdated) == 0x000004, "Wrong alignment on W_Stats_C_OnFriendsListUpdated");
static_assert(sizeof(W_Stats_C_OnFriendsListUpdated) == 0x000004, "Wrong size on W_Stats_C_OnFriendsListUpdated");
static_assert(offsetof(W_Stats_C_OnFriendsListUpdated, NumberOfFriends) == 0x000000, "Member 'W_Stats_C_OnFriendsListUpdated::NumberOfFriends' has a wrong offset!");

// Function W_Stats.W_Stats_C.OnMultiplayerConnectionStatusChanged
// 0x0100 (0x0100 - 0x0000)
struct W_Stats_C_OnMultiplayerConnectionStatusChanged final
{
public:
	bool                                          MultiplayerAvailable;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0070(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
};
static_assert(alignof(W_Stats_C_OnMultiplayerConnectionStatusChanged) == 0x000008, "Wrong alignment on W_Stats_C_OnMultiplayerConnectionStatusChanged");
static_assert(sizeof(W_Stats_C_OnMultiplayerConnectionStatusChanged) == 0x000100, "Wrong size on W_Stats_C_OnMultiplayerConnectionStatusChanged");
static_assert(offsetof(W_Stats_C_OnMultiplayerConnectionStatusChanged, MultiplayerAvailable) == 0x000000, "Member 'W_Stats_C_OnMultiplayerConnectionStatusChanged::MultiplayerAvailable' has a wrong offset!");
static_assert(offsetof(W_Stats_C_OnMultiplayerConnectionStatusChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_Stats_C_OnMultiplayerConnectionStatusChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_OnMultiplayerConnectionStatusChanged, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'W_Stats_C_OnMultiplayerConnectionStatusChanged::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_OnMultiplayerConnectionStatusChanged, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'W_Stats_C_OnMultiplayerConnectionStatusChanged::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Stats_C_OnMultiplayerConnectionStatusChanged, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000070, "Member 'W_Stats_C_OnMultiplayerConnectionStatusChanged::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_C_OnMultiplayerConnectionStatusChanged, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'W_Stats_C_OnMultiplayerConnectionStatusChanged::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_Stats_C_OnMultiplayerConnectionStatusChanged, K2Node_MakeArray_Array) == 0x0000D8, "Member 'W_Stats_C_OnMultiplayerConnectionStatusChanged::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Stats_C_OnMultiplayerConnectionStatusChanged, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'W_Stats_C_OnMultiplayerConnectionStatusChanged::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_Stats.W_Stats_C.OpenFriendsList
// 0x0020 (0x0020 - 0x0000)
struct W_Stats_C_OpenFriendsList final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IReadyOrNotUI_C>       CallFunc_GetFocusTarget_self_CastInput;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusTarget_Focus;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_OpenFriendsList) == 0x000008, "Wrong alignment on W_Stats_C_OpenFriendsList");
static_assert(sizeof(W_Stats_C_OpenFriendsList) == 0x000020, "Wrong size on W_Stats_C_OpenFriendsList");
static_assert(offsetof(W_Stats_C_OpenFriendsList, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_Stats_C_OpenFriendsList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_OpenFriendsList, CallFunc_GetFocusTarget_self_CastInput) == 0x000008, "Member 'W_Stats_C_OpenFriendsList::CallFunc_GetFocusTarget_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_Stats_C_OpenFriendsList, CallFunc_GetFocusTarget_Focus) == 0x000018, "Member 'W_Stats_C_OpenFriendsList::CallFunc_GetFocusTarget_Focus' has a wrong offset!");

// Function W_Stats.W_Stats_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_PreConstruct) == 0x000001, "Wrong alignment on W_Stats_C_PreConstruct");
static_assert(sizeof(W_Stats_C_PreConstruct) == 0x000001, "Wrong size on W_Stats_C_PreConstruct");
static_assert(offsetof(W_Stats_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Stats_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Stats.W_Stats_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_Reveal) == 0x000008, "Wrong alignment on W_Stats_C_Reveal");
static_assert(sizeof(W_Stats_C_Reveal) == 0x000008, "Wrong size on W_Stats_C_Reveal");
static_assert(offsetof(W_Stats_C_Reveal, Delay) == 0x000000, "Member 'W_Stats_C_Reveal::Delay' has a wrong offset!");

// Function W_Stats.W_Stats_C.SetFriendMap
// 0x01E0 (0x01E0 - 0x0000)
struct W_Stats_C_SetFriendMap final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFriend                                CallFunc_Array_Get_Item;                           // 0x0010(0x01C8)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_SetFriendMap) == 0x000008, "Wrong alignment on W_Stats_C_SetFriendMap");
static_assert(sizeof(W_Stats_C_SetFriendMap) == 0x0001E0, "Wrong size on W_Stats_C_SetFriendMap");
static_assert(offsetof(W_Stats_C_SetFriendMap, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_Stats_C_SetFriendMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_C_SetFriendMap, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_Stats_C_SetFriendMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_C_SetFriendMap, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_Stats_C_SetFriendMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_SetFriendMap, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'W_Stats_C_SetFriendMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_SetFriendMap, CallFunc_Array_Get_Item) == 0x000010, "Member 'W_Stats_C_SetFriendMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Stats_C_SetFriendMap, CallFunc_Array_Length_ReturnValue) == 0x0001D8, "Member 'W_Stats_C_SetFriendMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_C_SetFriendMap, CallFunc_Less_IntInt_ReturnValue) == 0x0001DC, "Member 'W_Stats_C_SetFriendMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Stats.W_Stats_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_SetInputMode) == 0x000001, "Wrong alignment on W_Stats_C_SetInputMode");
static_assert(sizeof(W_Stats_C_SetInputMode) == 0x000001, "Wrong size on W_Stats_C_SetInputMode");
static_assert(offsetof(W_Stats_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Stats_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Stats.W_Stats_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Stats_C_GetFocusTarget");
static_assert(sizeof(W_Stats_C_GetFocusTarget) == 0x000008, "Wrong size on W_Stats_C_GetFocusTarget");
static_assert(offsetof(W_Stats_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Stats_C_GetFocusTarget::Focus' has a wrong offset!");

}

