#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Stats_Missions

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_Stats_Missions.W_Stats_Missions_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_Missions_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Missions_C_BackPage) == 0x000001, "Wrong alignment on W_Stats_Missions_C_BackPage");
static_assert(sizeof(W_Stats_Missions_C_BackPage) == 0x000001, "Wrong size on W_Stats_Missions_C_BackPage");
static_assert(offsetof(W_Stats_Missions_C_BackPage, Handled) == 0x000000, "Member 'W_Stats_Missions_C_BackPage::Handled' has a wrong offset!");

// Function W_Stats_Missions.W_Stats_Missions_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_Missions_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Missions_C_ChangePage) == 0x000004, "Wrong alignment on W_Stats_Missions_C_ChangePage");
static_assert(sizeof(W_Stats_Missions_C_ChangePage) == 0x000008, "Wrong size on W_Stats_Missions_C_ChangePage");
static_assert(offsetof(W_Stats_Missions_C_ChangePage, PageName) == 0x000000, "Member 'W_Stats_Missions_C_ChangePage::PageName' has a wrong offset!");

// Function W_Stats_Missions.W_Stats_Missions_C.ExecuteUbergraph_W_Stats_Missions
// 0x0028 (0x0028 - 0x0000)
struct W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PageName;                             // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions) == 0x000008, "Wrong alignment on W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions");
static_assert(sizeof(W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions) == 0x000028, "Wrong size on W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions");
static_assert(offsetof(W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions, EntryPoint) == 0x000000, "Member 'W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions, K2Node_Event_PageName) == 0x000004, "Member 'W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions, K2Node_Event_Delay_1) == 0x000010, "Member 'W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions, K2Node_Event_Delay) == 0x000018, "Member 'W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions, K2Node_Event_Collapse) == 0x000020, "Member 'W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions, K2Node_Event_IsGamepad) == 0x000021, "Member 'W_Stats_Missions_C_ExecuteUbergraph_W_Stats_Missions::K2Node_Event_IsGamepad' has a wrong offset!");

// Function W_Stats_Missions.W_Stats_Missions_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Stats_Missions_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Missions_C_Hide) == 0x000008, "Wrong alignment on W_Stats_Missions_C_Hide");
static_assert(sizeof(W_Stats_Missions_C_Hide) == 0x000010, "Wrong size on W_Stats_Missions_C_Hide");
static_assert(offsetof(W_Stats_Missions_C_Hide, Delay) == 0x000000, "Member 'W_Stats_Missions_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Stats_Missions_C_Hide, Collapse) == 0x000008, "Member 'W_Stats_Missions_C_Hide::Collapse' has a wrong offset!");

// Function W_Stats_Missions.W_Stats_Missions_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_Missions_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Missions_C_Reveal) == 0x000008, "Wrong alignment on W_Stats_Missions_C_Reveal");
static_assert(sizeof(W_Stats_Missions_C_Reveal) == 0x000008, "Wrong size on W_Stats_Missions_C_Reveal");
static_assert(offsetof(W_Stats_Missions_C_Reveal, Delay) == 0x000000, "Member 'W_Stats_Missions_C_Reveal::Delay' has a wrong offset!");

// Function W_Stats_Missions.W_Stats_Missions_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_Missions_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Missions_C_SetInputMode) == 0x000001, "Wrong alignment on W_Stats_Missions_C_SetInputMode");
static_assert(sizeof(W_Stats_Missions_C_SetInputMode) == 0x000001, "Wrong size on W_Stats_Missions_C_SetInputMode");
static_assert(offsetof(W_Stats_Missions_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Stats_Missions_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Stats_Missions.W_Stats_Missions_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_Missions_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_Missions_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Stats_Missions_C_GetFocusTarget");
static_assert(sizeof(W_Stats_Missions_C_GetFocusTarget) == 0x000008, "Wrong size on W_Stats_Missions_C_GetFocusTarget");
static_assert(offsetof(W_Stats_Missions_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Stats_Missions_C_GetFocusTarget::Focus' has a wrong offset!");

}

