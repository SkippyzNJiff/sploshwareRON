#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadoutSlot_v2

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_LoadoutSlot_v2.W_LoadoutSlot_v2_C
// 0x0218 (0x05B8 - 0x03A0)
class UW_LoadoutSlot_v2_C final : public ULoadoutSlot_V2
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animRevealSubtext;                                 // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BottomLine;                                        // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_DecrementSlot;                                 // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_IncrementSlot;                                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            Button;                                            // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EquippedGlow;                                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                EquippedTag;                                       // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Slots;                                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_AttachmentIcon;                                // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_DivDetails;                                    // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_ItemIcon;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_SidebarFade;                                   // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_SidebarSolid;                                  // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_AttachmentIcon;                               // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Size_ItemIcon;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLine;                                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_ItemName;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_SlotCount;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_SlotName;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Subtext;                                       // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Warn;                                          // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_GamepadDeco;                                    // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                WarningTag;                                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> OnClick;               // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSlateColor                            EquippedGreen;                                     // 0x0470(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            NormalGrey;                                        // 0x0484(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            SelectedRed;                                       // 0x0498(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            HoveredWhite;                                      // 0x04AC(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            DefaultWhite;                                      // 0x04C0(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> OnHover;               // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnUnhover;                                         // 0x04E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          PreviewHovered;                                    // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewPressed;                                    // 0x04F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewEquipped;                                   // 0x04FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB[0x5];                                      // 0x04FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonButtonStyle>         ButtonStyle;                                       // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UCommonButtonStyle>         GamepadButtonStyle;                                // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         DetailsFontSize;                                   // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GamepadDetailsFontSize;                            // 0x0514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NameFontSize;                                      // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GamepadNameFontSize;                               // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewGamepad;                                    // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            ParentButton;                                      // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> OnDoubleClick;         // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bMinimalLayout;                                    // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonTextStyle>           FontStyle;                                         // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UCommonTextStyle>           FontStyleHovered;                                  // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UCommonTextStyle>           GamepadFontStyle;                                  // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UCommonTextStyle>           GamepadFontStyleHovered;                           // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   CategoryOverrideText;                              // 0x0568(0x0018)(Edit, BlueprintVisible)
	bool                                          PreviewAttachment;                                 // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMunitionSlot;                                     // 0x0581(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_582[0x6];                                      // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnUpdated;                                         // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   CurrentSubtext;                                    // 0x0598(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bWarning;                                          // 0x05B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AdjustFontSize(class UTextBlock* TextWidget, int32 FontSize, struct FSlateFontInfo* Font);
	void BackPage(bool* Handled);
	void BindClick(class UW_Button_C* ParentButton_0);
	void BindDoubleClick(class UW_Button_C* ParentButton_0);
	void BindHovered(class UW_Button_C* ParentButton_0);
	void BindPressedState();
	void BindSelectedState(class UW_Button_C* ParentButton_0);
	void BindToButton(class UW_Button_C* ParentButton_0, bool BindClicks);
	void BindUnhovered();
	void BndEvt__W_LoadoutSlot_v2_btn_DecrementSlot_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button_0);
	void BndEvt__W_LoadoutSlot_v2_btn_IncrementSlot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature(class UW_Button_C* Button_0);
	void BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature(class UW_Button_C* Button_0);
	void BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_4_OnRightMouseReleased__DelegateSignature();
	void BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature(class UW_Button_C* Button_0);
	void BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_6_Hovered__DelegateSignature(class UW_Button_C* Button_0);
	void BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_7_Unhovered__DelegateSignature();
	void BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_8_Pressed__DelegateSignature();
	void BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_9_Released__DelegateSignature();
	void ChangePage(class FName PageName);
	void Construct();
	class UWidget* Custom_Left_Navigation(EUINavigation Navigation_0);
	class UWidget* Custom_Right_Navigation(EUINavigation Navigation_0);
	void ExecuteUbergraph_W_LoadoutSlot_v2(int32 EntryPoint);
	struct FSlateColor GetEquippedColorByState();
	TSubclassOf<class UCommonTextStyle> GetGamepadFontStyles();
	struct FSlateColor GetNormalColorByState();
	TSubclassOf<class UCommonTextStyle> GetNormalFontSyles();
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Hide(double Delay, bool Collapse);
	void InputMethodChanged(ECommonInputType bNewInputType);
	bool IsNewSubtext(const class FText& Text);
	bool MunitionsMaxed();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnEquipped();
	void OnSlotsUpdated();
	void PreConstruct(bool IsDesignTime);
	void RefreshAttachmentImage();
	void RefreshInfo();
	void RefreshItemImage();
	void RefreshMunitionButtons();
	void Reveal(double Delay);
	void Set_Custom_Navigation_Rules();
	void SetArmorMaterial(class UArmourMaterial* Item);
	void SetIconVisibility(bool SmallIcon);
	void SetInputMode(bool IsGamepad);
	void SetManualDetails(const class FText& ItemName_0, const class FText& SlotName, const class FText& Subtext, class UTexture2D* ItemImage_0);
	void SetMinimalLayout(bool Minimal);
	void SetVisualState(bool Hovered, bool Pressed, bool Equipped);
	void SetWarning(bool HasWarning, const class FText& WarningText, bool ShouldBlockInput);
	void ShowSubtext(const class FText& Text, bool Show);
	void UnbindFromButton();
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateDetailFontSize();
	void UpdateNameFont();
	void UpdateStyle(bool bUseGamepad_0);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_LoadoutSlot_v2_C">();
	}
	static class UW_LoadoutSlot_v2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_LoadoutSlot_v2_C>();
	}
};
static_assert(alignof(UW_LoadoutSlot_v2_C) == 0x000008, "Wrong alignment on UW_LoadoutSlot_v2_C");
static_assert(sizeof(UW_LoadoutSlot_v2_C) == 0x0005B8, "Wrong size on UW_LoadoutSlot_v2_C");
static_assert(offsetof(UW_LoadoutSlot_v2_C, UberGraphFrame) == 0x0003A0, "Member 'UW_LoadoutSlot_v2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, animRevealSubtext) == 0x0003A8, "Member 'UW_LoadoutSlot_v2_C::animRevealSubtext' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, BottomLine) == 0x0003B0, "Member 'UW_LoadoutSlot_v2_C::BottomLine' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, btn_DecrementSlot) == 0x0003B8, "Member 'UW_LoadoutSlot_v2_C::btn_DecrementSlot' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, btn_IncrementSlot) == 0x0003C0, "Member 'UW_LoadoutSlot_v2_C::btn_IncrementSlot' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, Button) == 0x0003C8, "Member 'UW_LoadoutSlot_v2_C::Button' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, EquippedGlow) == 0x0003D0, "Member 'UW_LoadoutSlot_v2_C::EquippedGlow' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, EquippedTag) == 0x0003D8, "Member 'UW_LoadoutSlot_v2_C::EquippedTag' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, HB_Slots) == 0x0003E0, "Member 'UW_LoadoutSlot_v2_C::HB_Slots' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, img_AttachmentIcon) == 0x0003E8, "Member 'UW_LoadoutSlot_v2_C::img_AttachmentIcon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, img_DivDetails) == 0x0003F0, "Member 'UW_LoadoutSlot_v2_C::img_DivDetails' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, img_ItemIcon) == 0x0003F8, "Member 'UW_LoadoutSlot_v2_C::img_ItemIcon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, img_SidebarFade) == 0x000400, "Member 'UW_LoadoutSlot_v2_C::img_SidebarFade' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, img_SidebarSolid) == 0x000408, "Member 'UW_LoadoutSlot_v2_C::img_SidebarSolid' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, Size_AttachmentIcon) == 0x000410, "Member 'UW_LoadoutSlot_v2_C::Size_AttachmentIcon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, Size_ItemIcon) == 0x000418, "Member 'UW_LoadoutSlot_v2_C::Size_ItemIcon' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, TopLine) == 0x000420, "Member 'UW_LoadoutSlot_v2_C::TopLine' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, txt_ItemName) == 0x000428, "Member 'UW_LoadoutSlot_v2_C::txt_ItemName' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, txt_SlotCount) == 0x000430, "Member 'UW_LoadoutSlot_v2_C::txt_SlotCount' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, txt_SlotName) == 0x000438, "Member 'UW_LoadoutSlot_v2_C::txt_SlotName' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, txt_Subtext) == 0x000440, "Member 'UW_LoadoutSlot_v2_C::txt_Subtext' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, txt_Warn) == 0x000448, "Member 'UW_LoadoutSlot_v2_C::txt_Warn' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, VB_GamepadDeco) == 0x000450, "Member 'UW_LoadoutSlot_v2_C::VB_GamepadDeco' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, WarningTag) == 0x000458, "Member 'UW_LoadoutSlot_v2_C::WarningTag' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, OnClick) == 0x000460, "Member 'UW_LoadoutSlot_v2_C::OnClick' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, EquippedGreen) == 0x000470, "Member 'UW_LoadoutSlot_v2_C::EquippedGreen' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, NormalGrey) == 0x000484, "Member 'UW_LoadoutSlot_v2_C::NormalGrey' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, SelectedRed) == 0x000498, "Member 'UW_LoadoutSlot_v2_C::SelectedRed' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, HoveredWhite) == 0x0004AC, "Member 'UW_LoadoutSlot_v2_C::HoveredWhite' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, DefaultWhite) == 0x0004C0, "Member 'UW_LoadoutSlot_v2_C::DefaultWhite' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, OnHover) == 0x0004D8, "Member 'UW_LoadoutSlot_v2_C::OnHover' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, OnUnhover) == 0x0004E8, "Member 'UW_LoadoutSlot_v2_C::OnUnhover' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, PreviewHovered) == 0x0004F8, "Member 'UW_LoadoutSlot_v2_C::PreviewHovered' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, PreviewPressed) == 0x0004F9, "Member 'UW_LoadoutSlot_v2_C::PreviewPressed' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, PreviewEquipped) == 0x0004FA, "Member 'UW_LoadoutSlot_v2_C::PreviewEquipped' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, ButtonStyle) == 0x000500, "Member 'UW_LoadoutSlot_v2_C::ButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, GamepadButtonStyle) == 0x000508, "Member 'UW_LoadoutSlot_v2_C::GamepadButtonStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, DetailsFontSize) == 0x000510, "Member 'UW_LoadoutSlot_v2_C::DetailsFontSize' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, GamepadDetailsFontSize) == 0x000514, "Member 'UW_LoadoutSlot_v2_C::GamepadDetailsFontSize' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, NameFontSize) == 0x000518, "Member 'UW_LoadoutSlot_v2_C::NameFontSize' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, GamepadNameFontSize) == 0x00051C, "Member 'UW_LoadoutSlot_v2_C::GamepadNameFontSize' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, PreviewGamepad) == 0x000520, "Member 'UW_LoadoutSlot_v2_C::PreviewGamepad' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, ParentButton) == 0x000528, "Member 'UW_LoadoutSlot_v2_C::ParentButton' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, OnDoubleClick) == 0x000530, "Member 'UW_LoadoutSlot_v2_C::OnDoubleClick' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, bMinimalLayout) == 0x000540, "Member 'UW_LoadoutSlot_v2_C::bMinimalLayout' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, FontStyle) == 0x000548, "Member 'UW_LoadoutSlot_v2_C::FontStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, FontStyleHovered) == 0x000550, "Member 'UW_LoadoutSlot_v2_C::FontStyleHovered' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, GamepadFontStyle) == 0x000558, "Member 'UW_LoadoutSlot_v2_C::GamepadFontStyle' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, GamepadFontStyleHovered) == 0x000560, "Member 'UW_LoadoutSlot_v2_C::GamepadFontStyleHovered' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, CategoryOverrideText) == 0x000568, "Member 'UW_LoadoutSlot_v2_C::CategoryOverrideText' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, PreviewAttachment) == 0x000580, "Member 'UW_LoadoutSlot_v2_C::PreviewAttachment' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, bMunitionSlot) == 0x000581, "Member 'UW_LoadoutSlot_v2_C::bMunitionSlot' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, OnUpdated) == 0x000588, "Member 'UW_LoadoutSlot_v2_C::OnUpdated' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, CurrentSubtext) == 0x000598, "Member 'UW_LoadoutSlot_v2_C::CurrentSubtext' has a wrong offset!");
static_assert(offsetof(UW_LoadoutSlot_v2_C, bWarning) == 0x0005B0, "Member 'UW_LoadoutSlot_v2_C::bWarning' has a wrong offset!");

}

