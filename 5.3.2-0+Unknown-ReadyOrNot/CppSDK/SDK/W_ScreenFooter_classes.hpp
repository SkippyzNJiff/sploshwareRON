#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScreenFooter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ScreenFooter.W_ScreenFooter_C
// 0x0260 (0x06C0 - 0x0460)
class UW_ScreenFooter_C final : public UPageFooter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canvas;                                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Center;                                         // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_FooterEntries;                                  // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Left;                                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Right;                                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Fade;                                          // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FScreenFooterEntry>             FooterEntriesArray;                                // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class UW_ScreenFooterEntry_C* FooterEntry)> OnFooterEntryClicked;  // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_ScreenFooterEntry_C* FooterEntry)> OnFooterEntryHovered;  // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnFooterEntryUnhovered;                            // 0x04C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        Spacing;                                           // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnFooterEntriesUpdated;                            // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TSet<int32>                                   HiddenIndices;                                     // 0x04F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<class FString>                           HiddenIDs;                                         // 0x0540(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	ECommonInputType                              NewVar_0;                                          // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_ScreenFooterEntry_C*>         EntryWidgets;                                      // 0x0598(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UWidget*                                FocusedEntry;                                      // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_ScreenFooterEntry_C* Entry)> OnFooterEntryPressed;        // 0x05B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_ScreenFooterEntry_C* Entry)> OnFooterEntryReleased;       // 0x05C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class FString, class UW_ScreenFooterEntry_C*> IdToFooterEntry;                              // 0x05D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TSet<class FString>                           DisabledIDs;                                       // 0x0620(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, class FText>              EntryText;                                         // 0x0670(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AddFooterEntry(int32 InsertAtIndex, class FString& EntryID, const struct FScreenFooterEntry& ScreenFooterEntry);
	void BackPage(bool* Handled);
	void ChangePage(class FName PageName);
	void Construct();
	void DisableEntryByID(const class FString& EntryID);
	void EnableEntryByID(const class FString& EntryID);
	void ExecuteUbergraph_W_ScreenFooter(int32 EntryPoint);
	void FooterEntryClicked(class UW_ScreenFooterEntry_C* Entry);
	void FooterEntryHovered(class UW_ScreenFooterEntry_C* Entry);
	void FooterEntryPressed(class UW_ScreenFooterEntry_C* Entry);
	void FooterEntryReleased(class UW_ScreenFooterEntry_C* Entry);
	void FooterEntryUnhovered();
	void Hide(double Delay, bool Collapse);
	void HideEntryByID(const class FString& ButtonId);
	void HideEntryByIndex(int32 Index_0);
	void InsertFooterEntryAtIndex();
	bool IsHiddenIndex(const int32& Index_0);
	void PopulateEntries();
	void PreConstruct(bool IsDesignTime);
	void ResetEntryTextByID(const class FString& EntryID);
	void Reveal(double Delay);
	void SetEntryTextByID(const class FString& EntryID, const class FText& NewText);
	void SetFocusByID(const class FString& ID, class UWidget** FocusedEntryButton);
	void SetFooterEntries(const TMap<class FString, struct FScreenFooterEntry>& Footer_Entries);
	void SetInputMode(bool IsGamepad);
	void UnhideEntryByID(const class FString& ID);
	void UnhideEntryByIndex(const int32& Index_0);

	void GetFocusTarget(class UWidget** Focus) const;
	bool IsHiddenEntry(const class FString& EntryID) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ScreenFooter_C">();
	}
	static class UW_ScreenFooter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ScreenFooter_C>();
	}
};
static_assert(alignof(UW_ScreenFooter_C) == 0x000008, "Wrong alignment on UW_ScreenFooter_C");
static_assert(sizeof(UW_ScreenFooter_C) == 0x0006C0, "Wrong size on UW_ScreenFooter_C");
static_assert(offsetof(UW_ScreenFooter_C, UberGraphFrame) == 0x000460, "Member 'UW_ScreenFooter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, Canvas) == 0x000468, "Member 'UW_ScreenFooter_C::Canvas' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, HB_Center) == 0x000470, "Member 'UW_ScreenFooter_C::HB_Center' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, HB_FooterEntries) == 0x000478, "Member 'UW_ScreenFooter_C::HB_FooterEntries' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, HB_Left) == 0x000480, "Member 'UW_ScreenFooter_C::HB_Left' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, HB_Right) == 0x000488, "Member 'UW_ScreenFooter_C::HB_Right' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, img_Fade) == 0x000490, "Member 'UW_ScreenFooter_C::img_Fade' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, FooterEntriesArray) == 0x000498, "Member 'UW_ScreenFooter_C::FooterEntriesArray' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, OnFooterEntryClicked) == 0x0004A8, "Member 'UW_ScreenFooter_C::OnFooterEntryClicked' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, OnFooterEntryHovered) == 0x0004B8, "Member 'UW_ScreenFooter_C::OnFooterEntryHovered' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, OnFooterEntryUnhovered) == 0x0004C8, "Member 'UW_ScreenFooter_C::OnFooterEntryUnhovered' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, Spacing) == 0x0004D8, "Member 'UW_ScreenFooter_C::Spacing' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, OnFooterEntriesUpdated) == 0x0004E0, "Member 'UW_ScreenFooter_C::OnFooterEntriesUpdated' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, HiddenIndices) == 0x0004F0, "Member 'UW_ScreenFooter_C::HiddenIndices' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, HiddenIDs) == 0x000540, "Member 'UW_ScreenFooter_C::HiddenIDs' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, NewVar_0) == 0x000590, "Member 'UW_ScreenFooter_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, EntryWidgets) == 0x000598, "Member 'UW_ScreenFooter_C::EntryWidgets' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, FocusedEntry) == 0x0005A8, "Member 'UW_ScreenFooter_C::FocusedEntry' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, OnFooterEntryPressed) == 0x0005B0, "Member 'UW_ScreenFooter_C::OnFooterEntryPressed' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, OnFooterEntryReleased) == 0x0005C0, "Member 'UW_ScreenFooter_C::OnFooterEntryReleased' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, IdToFooterEntry) == 0x0005D0, "Member 'UW_ScreenFooter_C::IdToFooterEntry' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, DisabledIDs) == 0x000620, "Member 'UW_ScreenFooter_C::DisabledIDs' has a wrong offset!");
static_assert(offsetof(UW_ScreenFooter_C, EntryText) == 0x000670, "Member 'UW_ScreenFooter_C::EntryText' has a wrong offset!");

}

