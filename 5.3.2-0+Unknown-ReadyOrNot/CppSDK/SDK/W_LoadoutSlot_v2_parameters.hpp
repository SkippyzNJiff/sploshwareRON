#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadoutSlot_v2

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.AdjustFontSize
// 0x00D0 (0x00D0 - 0x0000)
struct W_LoadoutSlot_v2_C_AdjustFontSize final
{
public:
	class UTextBlock*                             TextWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         FontSize;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         Font;                                              // 0x0010(0x0058)(Parm, OutParm, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0070(0x0058)(HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Size_ImplicitCast;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_AdjustFontSize) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_AdjustFontSize");
static_assert(sizeof(W_LoadoutSlot_v2_C_AdjustFontSize) == 0x0000D0, "Wrong size on W_LoadoutSlot_v2_C_AdjustFontSize");
static_assert(offsetof(W_LoadoutSlot_v2_C_AdjustFontSize, TextWidget) == 0x000000, "Member 'W_LoadoutSlot_v2_C_AdjustFontSize::TextWidget' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_AdjustFontSize, FontSize) == 0x000008, "Member 'W_LoadoutSlot_v2_C_AdjustFontSize::FontSize' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_AdjustFontSize, Font) == 0x000010, "Member 'W_LoadoutSlot_v2_C_AdjustFontSize::Font' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_AdjustFontSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'W_LoadoutSlot_v2_C_AdjustFontSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_AdjustFontSize, K2Node_MakeStruct_SlateFontInfo) == 0x000070, "Member 'W_LoadoutSlot_v2_C_AdjustFontSize::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_AdjustFontSize, K2Node_MakeStruct_Size_ImplicitCast) == 0x0000C8, "Member 'W_LoadoutSlot_v2_C_AdjustFontSize::K2Node_MakeStruct_Size_ImplicitCast' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_v2_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BackPage) == 0x000001, "Wrong alignment on W_LoadoutSlot_v2_C_BackPage");
static_assert(sizeof(W_LoadoutSlot_v2_C_BackPage) == 0x000001, "Wrong size on W_LoadoutSlot_v2_C_BackPage");
static_assert(offsetof(W_LoadoutSlot_v2_C_BackPage, Handled) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BackPage::Handled' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BindClick
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_BindClick final
{
public:
	class UW_Button_C*                            ParentButton_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BindClick) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_BindClick");
static_assert(sizeof(W_LoadoutSlot_v2_C_BindClick) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_BindClick");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindClick, ParentButton_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BindClick::ParentButton_0' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BindDoubleClick
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_BindDoubleClick final
{
public:
	class UW_Button_C*                            ParentButton_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BindDoubleClick) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_BindDoubleClick");
static_assert(sizeof(W_LoadoutSlot_v2_C_BindDoubleClick) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_BindDoubleClick");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindDoubleClick, ParentButton_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BindDoubleClick::ParentButton_0' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BindHovered
// 0x0010 (0x0010 - 0x0000)
struct W_LoadoutSlot_v2_C_BindHovered final
{
public:
	class UW_Button_C*                            ParentButton_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipped_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BindHovered) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_BindHovered");
static_assert(sizeof(W_LoadoutSlot_v2_C_BindHovered) == 0x000010, "Wrong size on W_LoadoutSlot_v2_C_BindHovered");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindHovered, ParentButton_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BindHovered::ParentButton_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindHovered, CallFunc_GetEquipped_ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_v2_C_BindHovered::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BindPressedState
// 0x0002 (0x0002 - 0x0000)
struct W_LoadoutSlot_v2_C_BindPressedState final
{
public:
	bool                                          CallFunc_GetEquipped_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPressed_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BindPressedState) == 0x000001, "Wrong alignment on W_LoadoutSlot_v2_C_BindPressedState");
static_assert(sizeof(W_LoadoutSlot_v2_C_BindPressedState) == 0x000002, "Wrong size on W_LoadoutSlot_v2_C_BindPressedState");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindPressedState, CallFunc_GetEquipped_ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BindPressedState::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindPressedState, CallFunc_IsPressed_ReturnValue) == 0x000001, "Member 'W_LoadoutSlot_v2_C_BindPressedState::CallFunc_IsPressed_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BindSelectedState
// 0x0010 (0x0010 - 0x0000)
struct W_LoadoutSlot_v2_C_BindSelectedState final
{
public:
	class UW_Button_C*                            ParentButton_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BindSelectedState) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_BindSelectedState");
static_assert(sizeof(W_LoadoutSlot_v2_C_BindSelectedState) == 0x000010, "Wrong size on W_LoadoutSlot_v2_C_BindSelectedState");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindSelectedState, ParentButton_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BindSelectedState::ParentButton_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindSelectedState, CallFunc_GetSelected_ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_v2_C_BindSelectedState::CallFunc_GetSelected_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BindToButton
// 0x0080 (0x0080 - 0x0000)
struct W_LoadoutSlot_v2_C_BindToButton final
{
public:
	class UW_Button_C*                            ParentButton_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          BindClicks;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_6;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BindToButton) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_BindToButton");
static_assert(sizeof(W_LoadoutSlot_v2_C_BindToButton) == 0x000080, "Wrong size on W_LoadoutSlot_v2_C_BindToButton");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindToButton, ParentButton_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BindToButton::ParentButton_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindToButton, BindClicks) == 0x000008, "Member 'W_LoadoutSlot_v2_C_BindToButton::BindClicks' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindToButton, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'W_LoadoutSlot_v2_C_BindToButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'W_LoadoutSlot_v2_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'W_LoadoutSlot_v2_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_3) == 0x00003C, "Member 'W_LoadoutSlot_v2_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_4) == 0x00004C, "Member 'W_LoadoutSlot_v2_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_5) == 0x00005C, "Member 'W_LoadoutSlot_v2_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_6) == 0x00006C, "Member 'W_LoadoutSlot_v2_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BindUnhovered
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_v2_C_BindUnhovered final
{
public:
	bool                                          CallFunc_GetEquipped_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BindUnhovered) == 0x000001, "Wrong alignment on W_LoadoutSlot_v2_C_BindUnhovered");
static_assert(sizeof(W_LoadoutSlot_v2_C_BindUnhovered) == 0x000001, "Wrong size on W_LoadoutSlot_v2_C_BindUnhovered");
static_assert(offsetof(W_LoadoutSlot_v2_C_BindUnhovered, CallFunc_GetEquipped_ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BindUnhovered::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BndEvt__W_LoadoutSlot_v2_btn_DecrementSlot_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_DecrementSlot_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_DecrementSlot_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_DecrementSlot_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_DecrementSlot_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_DecrementSlot_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_DecrementSlot_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_DecrementSlot_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button_0' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BndEvt__W_LoadoutSlot_v2_btn_IncrementSlot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_IncrementSlot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_IncrementSlot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_IncrementSlot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_IncrementSlot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_IncrementSlot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_IncrementSlot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature, Button_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_btn_IncrementSlot_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature::Button_0' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature, Button_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_0_DoubleClicked__DelegateSignature::Button_0' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature, Button_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature::Button_0' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_6_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_6_Hovered__DelegateSignature final
{
public:
	class UW_Button_C*                            Button_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_6_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_6_Hovered__DelegateSignature");
static_assert(sizeof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_6_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_6_Hovered__DelegateSignature");
static_assert(offsetof(W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_6_Hovered__DelegateSignature, Button_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_BndEvt__W_LoadoutSlot_v2_Button_K2Node_ComponentBoundEvent_6_Hovered__DelegateSignature::Button_0' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_ChangePage) == 0x000004, "Wrong alignment on W_LoadoutSlot_v2_C_ChangePage");
static_assert(sizeof(W_LoadoutSlot_v2_C_ChangePage) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_ChangePage");
static_assert(offsetof(W_LoadoutSlot_v2_C_ChangePage, PageName) == 0x000000, "Member 'W_LoadoutSlot_v2_C_ChangePage::PageName' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.Custom Left Navigation
// 0x0010 (0x0010 - 0x0000)
struct W_LoadoutSlot_v2_C_Custom_Left_Navigation final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_Custom_Left_Navigation) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_Custom_Left_Navigation");
static_assert(sizeof(W_LoadoutSlot_v2_C_Custom_Left_Navigation) == 0x000010, "Wrong size on W_LoadoutSlot_v2_C_Custom_Left_Navigation");
static_assert(offsetof(W_LoadoutSlot_v2_C_Custom_Left_Navigation, Navigation_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_Custom_Left_Navigation::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_Custom_Left_Navigation, ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_v2_C_Custom_Left_Navigation::ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.Custom Right Navigation
// 0x0010 (0x0010 - 0x0000)
struct W_LoadoutSlot_v2_C_Custom_Right_Navigation final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_Custom_Right_Navigation) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_Custom_Right_Navigation");
static_assert(sizeof(W_LoadoutSlot_v2_C_Custom_Right_Navigation) == 0x000010, "Wrong size on W_LoadoutSlot_v2_C_Custom_Right_Navigation");
static_assert(offsetof(W_LoadoutSlot_v2_C_Custom_Right_Navigation, Navigation_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_Custom_Right_Navigation::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_Custom_Right_Navigation, ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_v2_C_Custom_Right_Navigation::ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.ExecuteUbergraph_W_LoadoutSlot_v2
// 0x04D0 (0x04D0 - 0x0000)
struct W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipped_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipped_ReturnValue_1;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipped_ReturnValue_2;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipped_ReturnValue_3;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipped_ReturnValue_4;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_4;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_3;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x0020(0x0050)()
	double                                        K2Node_Event_Delay_1;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x0078(0x02E8)()
	class FName                                   K2Node_Event_PageName;                             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_2;               // 0x0368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipped_ReturnValue_5;                // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0383(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArmourMaterial*                        K2Node_Event_Item;                                 // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_ItemName;                       // 0x0390(0x0018)()
	class FText                                   K2Node_CustomEvent_SlotName;                       // 0x03A8(0x0018)()
	class FText                                   K2Node_CustomEvent_Subtext;                        // 0x03C0(0x0018)()
	class UTexture2D*                             K2Node_CustomEvent_ItemImage;                      // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x03E4(0x0008)(NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_OptionNameID;                         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x2];                                      // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x03FC(0x0014)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0414(0x0014)()
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0430(0x0014)()
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0448(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetMunitionTypeText_MunitionText;         // 0x0450(0x0018)()
	class FText                                   K2Node_Event_Text;                                 // 0x0468(0x0018)(ConstParm)
	bool                                          K2Node_Event_Show;                                 // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0488(0x0018)()
	bool                                          CallFunc_IsNewSubtext_ReturnValue;                 // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x3];                                      // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;            // 0x04A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2");
static_assert(sizeof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2) == 0x0004D0, "Wrong size on W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, EntryPoint) == 0x000000, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_GetEquipped_ReturnValue) == 0x000004, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_GetEquipped_ReturnValue_1) == 0x000005, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_GetEquipped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_GetEquipped_ReturnValue_2) == 0x000006, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_GetEquipped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_GetEquipped_ReturnValue_3) == 0x000007, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_GetEquipped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_GetEquipped_ReturnValue_4) == 0x000008, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_GetEquipped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_ComponentBoundEvent_Button_4) == 0x000010, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_ComponentBoundEvent_Button_3) == 0x000018, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_ItemCategory) == 0x000020, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_Delay_1) == 0x000070, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_ActiveLoadout) == 0x000078, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_PageName) == 0x000360, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_ComponentBoundEvent_Button_2) == 0x000368, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_PlayAnimationForward_ReturnValue) == 0x000370, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_GetOwningPlayer_ReturnValue) == 0x000378, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_HasUserFocus_ReturnValue) == 0x000380, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_CustomEvent_bNewInputType) == 0x000381, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_GetEquipped_ReturnValue_5) == 0x000382, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_GetEquipped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000383, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_Item) == 0x000388, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_Item' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_CustomEvent_ItemName) == 0x000390, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_CustomEvent_ItemName' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_CustomEvent_SlotName) == 0x0003A8, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_CustomEvent_SlotName' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_CustomEvent_Subtext) == 0x0003C0, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_CustomEvent_Subtext' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_CustomEvent_ItemImage) == 0x0003D8, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_CustomEvent_ItemImage' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_IsValid_ReturnValue) == 0x0003E0, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_InFocusEvent) == 0x0003E4, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_IsDesignTime) == 0x0003EC, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_OptionNameID) == 0x0003F0, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, Temp_bool_Variable) == 0x0003F8, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_IsValid_ReturnValue_1) == 0x0003F9, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_MakeStruct_SlateColor) == 0x0003FC, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000410, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_MakeStruct_SlateColor_1) == 0x000414, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_ComponentBoundEvent_Button_1) == 0x000428, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Select_Default) == 0x000430, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_ComponentBoundEvent_Button) == 0x000448, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_GetMunitionTypeText_MunitionText) == 0x000450, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_GetMunitionTypeText_MunitionText' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_Text) == 0x000468, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_Show) == 0x000480, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_Show' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_Conv_IntToText_ReturnValue) == 0x000488, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_IsNewSubtext_ReturnValue) == 0x0004A0, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_IsNewSubtext_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_CreateDelegate_OutputDelegate) == 0x0004A4, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_IsGamepad) == 0x0004B4, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x0004B8, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_Delay) == 0x0004C0, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, K2Node_Event_Collapse) == 0x0004C8, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_GetCurrentInputType_ReturnValue) == 0x0004C9, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_Not_PreBool_ReturnValue) == 0x0004CA, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_BooleanAND_ReturnValue) == 0x0004CB, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_Not_PreBool_ReturnValue_1) == 0x0004CC, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2, CallFunc_BooleanAND_ReturnValue_1) == 0x0004CD, "Member 'W_LoadoutSlot_v2_C_ExecuteUbergraph_W_LoadoutSlot_v2::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.GetEquippedColorByState
// 0x0040 (0x0040 - 0x0000)
struct W_LoadoutSlot_v2_C_GetEquippedColorByState final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0018(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x002C(0x0014)()
};
static_assert(alignof(W_LoadoutSlot_v2_C_GetEquippedColorByState) == 0x000004, "Wrong alignment on W_LoadoutSlot_v2_C_GetEquippedColorByState");
static_assert(sizeof(W_LoadoutSlot_v2_C_GetEquippedColorByState) == 0x000040, "Wrong size on W_LoadoutSlot_v2_C_GetEquippedColorByState");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetEquippedColorByState, ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_v2_C_GetEquippedColorByState::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetEquippedColorByState, Temp_bool_Variable) == 0x000014, "Member 'W_LoadoutSlot_v2_C_GetEquippedColorByState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetEquippedColorByState, Temp_bool_Variable_1) == 0x000015, "Member 'W_LoadoutSlot_v2_C_GetEquippedColorByState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetEquippedColorByState, K2Node_Select_Default) == 0x000018, "Member 'W_LoadoutSlot_v2_C_GetEquippedColorByState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetEquippedColorByState, K2Node_Select_Default_1) == 0x00002C, "Member 'W_LoadoutSlot_v2_C_GetEquippedColorByState::K2Node_Select_Default_1' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.GetGamepadFontStyles
// 0x0018 (0x0018 - 0x0000)
struct W_LoadoutSlot_v2_C_GetGamepadFontStyles final
{
public:
	TSubclassOf<class UCommonTextStyle>           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonTextStyle>           K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_GetGamepadFontStyles) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_GetGamepadFontStyles");
static_assert(sizeof(W_LoadoutSlot_v2_C_GetGamepadFontStyles) == 0x000018, "Wrong size on W_LoadoutSlot_v2_C_GetGamepadFontStyles");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetGamepadFontStyles, ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_v2_C_GetGamepadFontStyles::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetGamepadFontStyles, Temp_bool_Variable) == 0x000008, "Member 'W_LoadoutSlot_v2_C_GetGamepadFontStyles::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetGamepadFontStyles, K2Node_Select_Default) == 0x000010, "Member 'W_LoadoutSlot_v2_C_GetGamepadFontStyles::K2Node_Select_Default' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.GetNormalColorByState
// 0x0040 (0x0040 - 0x0000)
struct W_LoadoutSlot_v2_C_GetNormalColorByState final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0018(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x002C(0x0014)()
};
static_assert(alignof(W_LoadoutSlot_v2_C_GetNormalColorByState) == 0x000004, "Wrong alignment on W_LoadoutSlot_v2_C_GetNormalColorByState");
static_assert(sizeof(W_LoadoutSlot_v2_C_GetNormalColorByState) == 0x000040, "Wrong size on W_LoadoutSlot_v2_C_GetNormalColorByState");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetNormalColorByState, ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_v2_C_GetNormalColorByState::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetNormalColorByState, Temp_bool_Variable) == 0x000014, "Member 'W_LoadoutSlot_v2_C_GetNormalColorByState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetNormalColorByState, Temp_bool_Variable_1) == 0x000015, "Member 'W_LoadoutSlot_v2_C_GetNormalColorByState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetNormalColorByState, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'W_LoadoutSlot_v2_C_GetNormalColorByState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetNormalColorByState, K2Node_Select_Default) == 0x000018, "Member 'W_LoadoutSlot_v2_C_GetNormalColorByState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetNormalColorByState, K2Node_Select_Default_1) == 0x00002C, "Member 'W_LoadoutSlot_v2_C_GetNormalColorByState::K2Node_Select_Default_1' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.GetNormalFontSyles
// 0x0018 (0x0018 - 0x0000)
struct W_LoadoutSlot_v2_C_GetNormalFontSyles final
{
public:
	TSubclassOf<class UCommonTextStyle>           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonTextStyle>           K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_GetNormalFontSyles) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_GetNormalFontSyles");
static_assert(sizeof(W_LoadoutSlot_v2_C_GetNormalFontSyles) == 0x000018, "Wrong size on W_LoadoutSlot_v2_C_GetNormalFontSyles");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetNormalFontSyles, ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_v2_C_GetNormalFontSyles::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetNormalFontSyles, Temp_bool_Variable) == 0x000008, "Member 'W_LoadoutSlot_v2_C_GetNormalFontSyles::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetNormalFontSyles, K2Node_Select_Default) == 0x000010, "Member 'W_LoadoutSlot_v2_C_GetNormalFontSyles::K2Node_Select_Default' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_HeaderSubpageNavigation final
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_LoadoutSlot_v2_C_HeaderSubpageNavigation");
static_assert(sizeof(W_LoadoutSlot_v2_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_HeaderSubpageNavigation");
static_assert(offsetof(W_LoadoutSlot_v2_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_LoadoutSlot_v2_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_LoadoutSlot_v2_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_Hide) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_Hide");
static_assert(sizeof(W_LoadoutSlot_v2_C_Hide) == 0x000010, "Wrong size on W_LoadoutSlot_v2_C_Hide");
static_assert(offsetof(W_LoadoutSlot_v2_C_Hide, Delay) == 0x000000, "Member 'W_LoadoutSlot_v2_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_Hide, Collapse) == 0x000008, "Member 'W_LoadoutSlot_v2_C_Hide::Collapse' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_v2_C_InputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_InputMethodChanged) == 0x000001, "Wrong alignment on W_LoadoutSlot_v2_C_InputMethodChanged");
static_assert(sizeof(W_LoadoutSlot_v2_C_InputMethodChanged) == 0x000001, "Wrong size on W_LoadoutSlot_v2_C_InputMethodChanged");
static_assert(offsetof(W_LoadoutSlot_v2_C_InputMethodChanged, bNewInputType) == 0x000000, "Member 'W_LoadoutSlot_v2_C_InputMethodChanged::bNewInputType' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.IsNewSubtext
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_v2_C_IsNewSubtext final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_IsNewSubtext) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_IsNewSubtext");
static_assert(sizeof(W_LoadoutSlot_v2_C_IsNewSubtext) == 0x000020, "Wrong size on W_LoadoutSlot_v2_C_IsNewSubtext");
static_assert(offsetof(W_LoadoutSlot_v2_C_IsNewSubtext, Text) == 0x000000, "Member 'W_LoadoutSlot_v2_C_IsNewSubtext::Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_IsNewSubtext, ReturnValue) == 0x000018, "Member 'W_LoadoutSlot_v2_C_IsNewSubtext::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_IsNewSubtext, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'W_LoadoutSlot_v2_C_IsNewSubtext::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_IsNewSubtext, CallFunc_NotEqual_TextText_ReturnValue) == 0x00001A, "Member 'W_LoadoutSlot_v2_C_IsNewSubtext::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_IsNewSubtext, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'W_LoadoutSlot_v2_C_IsNewSubtext::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_IsNewSubtext, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'W_LoadoutSlot_v2_C_IsNewSubtext::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.MunitionsMaxed
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_v2_C_MunitionsMaxed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentSlotCount_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaximumSlotCount_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_MunitionsMaxed) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_MunitionsMaxed");
static_assert(sizeof(W_LoadoutSlot_v2_C_MunitionsMaxed) == 0x000020, "Wrong size on W_LoadoutSlot_v2_C_MunitionsMaxed");
static_assert(offsetof(W_LoadoutSlot_v2_C_MunitionsMaxed, ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_v2_C_MunitionsMaxed::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_MunitionsMaxed, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_v2_C_MunitionsMaxed::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_MunitionsMaxed, CallFunc_GetCurrentSlotCount_ReturnValue) == 0x000010, "Member 'W_LoadoutSlot_v2_C_MunitionsMaxed::CallFunc_GetCurrentSlotCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_MunitionsMaxed, CallFunc_GetMaximumSlotCount_ReturnValue) == 0x000014, "Member 'W_LoadoutSlot_v2_C_MunitionsMaxed::CallFunc_GetMaximumSlotCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_MunitionsMaxed, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'W_LoadoutSlot_v2_C_MunitionsMaxed::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_LoadoutSlot_v2_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on W_LoadoutSlot_v2_C_OnAddedToFocusPath");
static_assert(sizeof(W_LoadoutSlot_v2_C_OnAddedToFocusPath) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_OnAddedToFocusPath");
static_assert(offsetof(W_LoadoutSlot_v2_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'W_LoadoutSlot_v2_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_v2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_PreConstruct) == 0x000001, "Wrong alignment on W_LoadoutSlot_v2_C_PreConstruct");
static_assert(sizeof(W_LoadoutSlot_v2_C_PreConstruct) == 0x000001, "Wrong size on W_LoadoutSlot_v2_C_PreConstruct");
static_assert(offsetof(W_LoadoutSlot_v2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_LoadoutSlot_v2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.RefreshInfo
// 0x00D8 (0x00D8 - 0x0000)
struct W_LoadoutSlot_v2_C_RefreshInfo final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemClassText_Category_Text;           // 0x0008(0x0018)()
	class ABaseBodyArmor_C*                       K2Node_DynamicCast_AsBase_Body_Armor;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetAttachmentSlotText_SlotText;           // 0x00C0(0x0018)()
};
static_assert(alignof(W_LoadoutSlot_v2_C_RefreshInfo) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_RefreshInfo");
static_assert(sizeof(W_LoadoutSlot_v2_C_RefreshInfo) == 0x0000D8, "Wrong size on W_LoadoutSlot_v2_C_RefreshInfo");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, CallFunc_GetItemClassText_Category_Text) == 0x000008, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::CallFunc_GetItemClassText_Category_Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, K2Node_DynamicCast_AsBase_Body_Armor) == 0x000020, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::K2Node_DynamicCast_AsBase_Body_Armor' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000030, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, K2Node_MakeArray_Array) == 0x000090, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x0000B8, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshInfo, CallFunc_GetAttachmentSlotText_SlotText) == 0x0000C0, "Member 'W_LoadoutSlot_v2_C_RefreshInfo::CallFunc_GetAttachmentSlotText_SlotText' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.RefreshMunitionButtons
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_v2_C_RefreshMunitionButtons final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MunitionsMaxed_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_RefreshMunitionButtons) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_RefreshMunitionButtons");
static_assert(sizeof(W_LoadoutSlot_v2_C_RefreshMunitionButtons) == 0x000020, "Wrong size on W_LoadoutSlot_v2_C_RefreshMunitionButtons");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshMunitionButtons, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_v2_C_RefreshMunitionButtons::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshMunitionButtons, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'W_LoadoutSlot_v2_C_RefreshMunitionButtons::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshMunitionButtons, CallFunc_MunitionsMaxed_ReturnValue) == 0x000019, "Member 'W_LoadoutSlot_v2_C_RefreshMunitionButtons::CallFunc_MunitionsMaxed_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_RefreshMunitionButtons, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'W_LoadoutSlot_v2_C_RefreshMunitionButtons::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_Reveal) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_Reveal");
static_assert(sizeof(W_LoadoutSlot_v2_C_Reveal) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_Reveal");
static_assert(offsetof(W_LoadoutSlot_v2_C_Reveal, Delay) == 0x000000, "Member 'W_LoadoutSlot_v2_C_Reveal::Delay' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.Set Custom Navigation Rules
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_v2_C_Set_Custom_Navigation_Rules final
{
public:
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EUINavigation Navigation)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_Set_Custom_Navigation_Rules) == 0x000004, "Wrong alignment on W_LoadoutSlot_v2_C_Set_Custom_Navigation_Rules");
static_assert(sizeof(W_LoadoutSlot_v2_C_Set_Custom_Navigation_Rules) == 0x000020, "Wrong size on W_LoadoutSlot_v2_C_Set_Custom_Navigation_Rules");
static_assert(offsetof(W_LoadoutSlot_v2_C_Set_Custom_Navigation_Rules, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'W_LoadoutSlot_v2_C_Set_Custom_Navigation_Rules::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_Set_Custom_Navigation_Rules, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'W_LoadoutSlot_v2_C_Set_Custom_Navigation_Rules::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.SetArmorMaterial
// 0x0008 (0x0008 - 0x0000)
struct W_LoadoutSlot_v2_C_SetArmorMaterial final
{
public:
	class UArmourMaterial*                        Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_SetArmorMaterial) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_SetArmorMaterial");
static_assert(sizeof(W_LoadoutSlot_v2_C_SetArmorMaterial) == 0x000008, "Wrong size on W_LoadoutSlot_v2_C_SetArmorMaterial");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetArmorMaterial, Item) == 0x000000, "Member 'W_LoadoutSlot_v2_C_SetArmorMaterial::Item' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.SetIconVisibility
// 0x0009 (0x0009 - 0x0000)
struct W_LoadoutSlot_v2_C_SetIconVisibility final
{
public:
	bool                                          SmallIcon;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_SetIconVisibility) == 0x000001, "Wrong alignment on W_LoadoutSlot_v2_C_SetIconVisibility");
static_assert(sizeof(W_LoadoutSlot_v2_C_SetIconVisibility) == 0x000009, "Wrong size on W_LoadoutSlot_v2_C_SetIconVisibility");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetIconVisibility, SmallIcon) == 0x000000, "Member 'W_LoadoutSlot_v2_C_SetIconVisibility::SmallIcon' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetIconVisibility, Temp_bool_Variable) == 0x000001, "Member 'W_LoadoutSlot_v2_C_SetIconVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetIconVisibility, Temp_byte_Variable) == 0x000002, "Member 'W_LoadoutSlot_v2_C_SetIconVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetIconVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'W_LoadoutSlot_v2_C_SetIconVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetIconVisibility, Temp_bool_Variable_1) == 0x000004, "Member 'W_LoadoutSlot_v2_C_SetIconVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetIconVisibility, Temp_byte_Variable_2) == 0x000005, "Member 'W_LoadoutSlot_v2_C_SetIconVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetIconVisibility, Temp_byte_Variable_3) == 0x000006, "Member 'W_LoadoutSlot_v2_C_SetIconVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetIconVisibility, K2Node_Select_Default) == 0x000007, "Member 'W_LoadoutSlot_v2_C_SetIconVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetIconVisibility, K2Node_Select_Default_1) == 0x000008, "Member 'W_LoadoutSlot_v2_C_SetIconVisibility::K2Node_Select_Default_1' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_v2_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_SetInputMode) == 0x000001, "Wrong alignment on W_LoadoutSlot_v2_C_SetInputMode");
static_assert(sizeof(W_LoadoutSlot_v2_C_SetInputMode) == 0x000001, "Wrong size on W_LoadoutSlot_v2_C_SetInputMode");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_LoadoutSlot_v2_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.SetManualDetails
// 0x0050 (0x0050 - 0x0000)
struct W_LoadoutSlot_v2_C_SetManualDetails final
{
public:
	class FText                                   ItemName_0;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   SlotName;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Subtext;                                           // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             ItemImage_0;                                       // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_SetManualDetails) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_SetManualDetails");
static_assert(sizeof(W_LoadoutSlot_v2_C_SetManualDetails) == 0x000050, "Wrong size on W_LoadoutSlot_v2_C_SetManualDetails");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetManualDetails, ItemName_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_SetManualDetails::ItemName_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetManualDetails, SlotName) == 0x000018, "Member 'W_LoadoutSlot_v2_C_SetManualDetails::SlotName' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetManualDetails, Subtext) == 0x000030, "Member 'W_LoadoutSlot_v2_C_SetManualDetails::Subtext' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetManualDetails, ItemImage_0) == 0x000048, "Member 'W_LoadoutSlot_v2_C_SetManualDetails::ItemImage_0' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.SetMinimalLayout
// 0x0001 (0x0001 - 0x0000)
struct W_LoadoutSlot_v2_C_SetMinimalLayout final
{
public:
	bool                                          Minimal;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_SetMinimalLayout) == 0x000001, "Wrong alignment on W_LoadoutSlot_v2_C_SetMinimalLayout");
static_assert(sizeof(W_LoadoutSlot_v2_C_SetMinimalLayout) == 0x000001, "Wrong size on W_LoadoutSlot_v2_C_SetMinimalLayout");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetMinimalLayout, Minimal) == 0x000000, "Member 'W_LoadoutSlot_v2_C_SetMinimalLayout::Minimal' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.SetVisualState
// 0x0088 (0x0088 - 0x0000)
struct W_LoadoutSlot_v2_C_SetVisualState final
{
public:
	bool                                          Hovered;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Equipped;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetEquippedColorByState_ReturnValue;      // 0x0048(0x0014)()
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetNormalColorByState_ReturnValue;        // 0x0060(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_4;                           // 0x0074(0x0014)()
};
static_assert(alignof(W_LoadoutSlot_v2_C_SetVisualState) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_SetVisualState");
static_assert(sizeof(W_LoadoutSlot_v2_C_SetVisualState) == 0x000088, "Wrong size on W_LoadoutSlot_v2_C_SetVisualState");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Hovered) == 0x000000, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Hovered' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Pressed) == 0x000001, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Pressed' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Equipped) == 0x000002, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Equipped' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_byte_Variable) == 0x000003, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_byte_Variable_1) == 0x000004, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_bool_Variable) == 0x000005, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_byte_Variable_2) == 0x000006, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_byte_Variable_3) == 0x000007, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_bool_Variable_1) == 0x000008, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_byte_Variable_4) == 0x000009, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_byte_Variable_5) == 0x00000A, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_bool_Variable_2) == 0x00000B, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_struct_Variable) == 0x000010, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_struct_Variable_1) == 0x000020, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_bool_Variable_3) == 0x000030, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, Temp_bool_Variable_4) == 0x000031, "Member 'W_LoadoutSlot_v2_C_SetVisualState::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'W_LoadoutSlot_v2_C_SetVisualState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, K2Node_Select_Default) == 0x000033, "Member 'W_LoadoutSlot_v2_C_SetVisualState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, K2Node_Select_Default_1) == 0x000034, "Member 'W_LoadoutSlot_v2_C_SetVisualState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'W_LoadoutSlot_v2_C_SetVisualState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, K2Node_Select_Default_2) == 0x000038, "Member 'W_LoadoutSlot_v2_C_SetVisualState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, CallFunc_GetEquippedColorByState_ReturnValue) == 0x000048, "Member 'W_LoadoutSlot_v2_C_SetVisualState::CallFunc_GetEquippedColorByState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, K2Node_Select_Default_3) == 0x00005C, "Member 'W_LoadoutSlot_v2_C_SetVisualState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, CallFunc_GetNormalColorByState_ReturnValue) == 0x000060, "Member 'W_LoadoutSlot_v2_C_SetVisualState::CallFunc_GetNormalColorByState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetVisualState, K2Node_Select_Default_4) == 0x000074, "Member 'W_LoadoutSlot_v2_C_SetVisualState::K2Node_Select_Default_4' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.SetWarning
// 0x0028 (0x0028 - 0x0000)
struct W_LoadoutSlot_v2_C_SetWarning final
{
public:
	bool                                          HasWarning;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   WarningText;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ShouldBlockInput;                                  // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquipped_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_SetWarning) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_SetWarning");
static_assert(sizeof(W_LoadoutSlot_v2_C_SetWarning) == 0x000028, "Wrong size on W_LoadoutSlot_v2_C_SetWarning");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetWarning, HasWarning) == 0x000000, "Member 'W_LoadoutSlot_v2_C_SetWarning::HasWarning' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetWarning, WarningText) == 0x000008, "Member 'W_LoadoutSlot_v2_C_SetWarning::WarningText' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetWarning, ShouldBlockInput) == 0x000020, "Member 'W_LoadoutSlot_v2_C_SetWarning::ShouldBlockInput' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_SetWarning, CallFunc_GetEquipped_ReturnValue) == 0x000021, "Member 'W_LoadoutSlot_v2_C_SetWarning::CallFunc_GetEquipped_ReturnValue' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.ShowSubtext
// 0x0020 (0x0020 - 0x0000)
struct W_LoadoutSlot_v2_C_ShowSubtext final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Show;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_ShowSubtext) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_ShowSubtext");
static_assert(sizeof(W_LoadoutSlot_v2_C_ShowSubtext) == 0x000020, "Wrong size on W_LoadoutSlot_v2_C_ShowSubtext");
static_assert(offsetof(W_LoadoutSlot_v2_C_ShowSubtext, Text) == 0x000000, "Member 'W_LoadoutSlot_v2_C_ShowSubtext::Text' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_ShowSubtext, Show) == 0x000018, "Member 'W_LoadoutSlot_v2_C_ShowSubtext::Show' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.UnbindFromButton
// 0x0074 (0x0074 - 0x0000)
struct W_LoadoutSlot_v2_C_UnbindFromButton final
{
public:
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_6;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_UnbindFromButton) == 0x000004, "Wrong alignment on W_LoadoutSlot_v2_C_UnbindFromButton");
static_assert(sizeof(W_LoadoutSlot_v2_C_UnbindFromButton) == 0x000074, "Wrong size on W_LoadoutSlot_v2_C_UnbindFromButton");
static_assert(offsetof(W_LoadoutSlot_v2_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'W_LoadoutSlot_v2_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UnbindFromButton, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_LoadoutSlot_v2_C_UnbindFromButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'W_LoadoutSlot_v2_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'W_LoadoutSlot_v2_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'W_LoadoutSlot_v2_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_4) == 0x000044, "Member 'W_LoadoutSlot_v2_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_5) == 0x000054, "Member 'W_LoadoutSlot_v2_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UnbindFromButton, K2Node_CreateDelegate_OutputDelegate_6) == 0x000064, "Member 'W_LoadoutSlot_v2_C_UnbindFromButton::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.UpdateActiveLoadout
// 0x02E8 (0x02E8 - 0x0000)
struct W_LoadoutSlot_v2_C_UpdateActiveLoadout final
{
public:
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0000(0x02E8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_LoadoutSlot_v2_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_UpdateActiveLoadout");
static_assert(sizeof(W_LoadoutSlot_v2_C_UpdateActiveLoadout) == 0x0002E8, "Wrong size on W_LoadoutSlot_v2_C_UpdateActiveLoadout");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateActiveLoadout, ActiveLoadout) == 0x000000, "Member 'W_LoadoutSlot_v2_C_UpdateActiveLoadout::ActiveLoadout' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_LoadoutSlot_v2_C_UpdateCurrentItemMap final
{
public:
	TMap<EItemCategory, class UClass*>            ItemCategory;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_LoadoutSlot_v2_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_UpdateCurrentItemMap");
static_assert(sizeof(W_LoadoutSlot_v2_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_LoadoutSlot_v2_C_UpdateCurrentItemMap");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateCurrentItemMap, ItemCategory) == 0x000000, "Member 'W_LoadoutSlot_v2_C_UpdateCurrentItemMap::ItemCategory' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.UpdateDetailFontSize
// 0x00B8 (0x00B8 - 0x0000)
struct W_LoadoutSlot_v2_C_UpdateDetailFontSize final
{
public:
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_AdjustFontSize_Font;                      // 0x0008(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_AdjustFontSize_Font_1;                    // 0x0060(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_UpdateDetailFontSize) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_UpdateDetailFontSize");
static_assert(sizeof(W_LoadoutSlot_v2_C_UpdateDetailFontSize) == 0x0000B8, "Wrong size on W_LoadoutSlot_v2_C_UpdateDetailFontSize");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateDetailFontSize, CallFunc_SelectInt_ReturnValue) == 0x000000, "Member 'W_LoadoutSlot_v2_C_UpdateDetailFontSize::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateDetailFontSize, CallFunc_AdjustFontSize_Font) == 0x000008, "Member 'W_LoadoutSlot_v2_C_UpdateDetailFontSize::CallFunc_AdjustFontSize_Font' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateDetailFontSize, CallFunc_AdjustFontSize_Font_1) == 0x000060, "Member 'W_LoadoutSlot_v2_C_UpdateDetailFontSize::CallFunc_AdjustFontSize_Font_1' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.UpdateNameFont
// 0x0030 (0x0030 - 0x0000)
struct W_LoadoutSlot_v2_C_UpdateNameFont final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonTextStyle>           CallFunc_GetNormalFontSyles_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonTextStyle>           CallFunc_GetGamepadFontStyles_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonTextStyle>           K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_UpdateNameFont) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_UpdateNameFont");
static_assert(sizeof(W_LoadoutSlot_v2_C_UpdateNameFont) == 0x000030, "Wrong size on W_LoadoutSlot_v2_C_UpdateNameFont");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateNameFont, Temp_bool_Variable) == 0x000000, "Member 'W_LoadoutSlot_v2_C_UpdateNameFont::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateNameFont, CallFunc_GetNormalFontSyles_ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_v2_C_UpdateNameFont::CallFunc_GetNormalFontSyles_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateNameFont, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'W_LoadoutSlot_v2_C_UpdateNameFont::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateNameFont, CallFunc_GetGamepadFontStyles_ReturnValue) == 0x000018, "Member 'W_LoadoutSlot_v2_C_UpdateNameFont::CallFunc_GetGamepadFontStyles_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateNameFont, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'W_LoadoutSlot_v2_C_UpdateNameFont::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateNameFont, K2Node_Select_Default) == 0x000028, "Member 'W_LoadoutSlot_v2_C_UpdateNameFont::K2Node_Select_Default' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.UpdateStyle
// 0x0018 (0x0018 - 0x0000)
struct W_LoadoutSlot_v2_C_UpdateStyle final
{
public:
	bool                                          bUseGamepad_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonButtonStyle>         K2Node_Select_Default_3;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_UpdateStyle) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_UpdateStyle");
static_assert(sizeof(W_LoadoutSlot_v2_C_UpdateStyle) == 0x000018, "Wrong size on W_LoadoutSlot_v2_C_UpdateStyle");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, bUseGamepad_0) == 0x000000, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::bUseGamepad_0' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, Temp_bool_Variable) == 0x000001, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, Temp_byte_Variable) == 0x000002, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, Temp_byte_Variable_1) == 0x000003, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, Temp_bool_Variable_1) == 0x000004, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, Temp_byte_Variable_2) == 0x000005, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, Temp_bool_Variable_2) == 0x000006, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, Temp_bool_Variable_3) == 0x000007, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, Temp_byte_Variable_3) == 0x000008, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, Temp_byte_Variable_4) == 0x000009, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, K2Node_Select_Default) == 0x00000B, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, K2Node_Select_Default_1) == 0x00000C, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, K2Node_Select_Default_2) == 0x00000D, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_UpdateStyle, K2Node_Select_Default_3) == 0x000010, "Member 'W_LoadoutSlot_v2_C_UpdateStyle::K2Node_Select_Default_3' has a wrong offset!");

// Function W_LoadoutSlot_v2.W_LoadoutSlot_v2_C.GetFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct W_LoadoutSlot_v2_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadoutSlot_v2_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_LoadoutSlot_v2_C_GetFocusTarget");
static_assert(sizeof(W_LoadoutSlot_v2_C_GetFocusTarget) == 0x000010, "Wrong size on W_LoadoutSlot_v2_C_GetFocusTarget");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_LoadoutSlot_v2_C_GetFocusTarget::Focus' has a wrong offset!");
static_assert(offsetof(W_LoadoutSlot_v2_C_GetFocusTarget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_LoadoutSlot_v2_C_GetFocusTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

