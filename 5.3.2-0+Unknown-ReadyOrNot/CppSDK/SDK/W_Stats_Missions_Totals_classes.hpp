#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Stats_Missions_Totals

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Stats_Missions_Totals.W_Stats_Missions_Totals_C
// 0x0308 (0x05F0 - 0x02E8)
class UW_Stats_Missions_Totals_C final : public UStatViewerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 img_CasualColor;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_HardColor;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_MissionGraph;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_MissionGraph_Compare;                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_StandardColor;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_Casual;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_Hard;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_Standard;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_CasualValue;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_CasualValue_Compare;                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_HardValue;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_HardValue_Compare;                             // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_MissionTotal;                                  // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_MissionTotal_Compare;                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_StandardValue;                                 // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_StandardValue_Compare;                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           ColCasual;                                         // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColStandard;                                       // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColHard;                                           // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BarThickness;                                      // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BarCutoff;                                         // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynMatGraph;                                       // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CasualCount;                                       // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StandardCount;                                     // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HardCount;                                         // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TotalCount;                                        // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Design_Time;                                    // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynMatGraph_Compare;                               // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompare;                                          // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ComparisonGraphSpacing;                            // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CasualCount_Compare;                               // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StandardCount_Compare;                             // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HardCount_Compare;                                 // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TotalCount_Compare;                                // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFriend                                CompareFriend;                                     // 0x0420(0x01C8)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bTotalIsZero;                                      // 0x05E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompareTotalIsZero;                               // 0x05E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BackPage(bool* Handled);
	void CancelCompare();
	void ChangePage(class FName PageName);
	void CompareWithFriend(const struct FFriend& Friend);
	void Construct();
	void DebugRandomValues();
	void ExecuteUbergraph_W_Stats_Missions_Totals(int32 EntryPoint);
	class FText FormatTotalCountText(double TotalCount_0);
	double GetComparisonSize();
	double GetCountProgressValue(double Count, bool IsCompare);
	double GetProgressBarThickness();
	void Hide(double Delay, bool Collapse);
	void InitializeStyle();
	void OnInitialized();
	void OnStatChanged(const class FString& StatID);
	void PreConstruct(bool IsDesignTime);
	void Reveal(double Delay);
	void SetGraphMaterial();
	void SetInputMode(bool IsGamepad);
	void StatsLoaded();
	void UpdateStats();
	void UpdateStyle();

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Stats_Missions_Totals_C">();
	}
	static class UW_Stats_Missions_Totals_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Stats_Missions_Totals_C>();
	}
};
static_assert(alignof(UW_Stats_Missions_Totals_C) == 0x000008, "Wrong alignment on UW_Stats_Missions_Totals_C");
static_assert(sizeof(UW_Stats_Missions_Totals_C) == 0x0005F0, "Wrong size on UW_Stats_Missions_Totals_C");
static_assert(offsetof(UW_Stats_Missions_Totals_C, UberGraphFrame) == 0x0002E8, "Member 'UW_Stats_Missions_Totals_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, img_CasualColor) == 0x0002F0, "Member 'UW_Stats_Missions_Totals_C::img_CasualColor' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, img_HardColor) == 0x0002F8, "Member 'UW_Stats_Missions_Totals_C::img_HardColor' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, img_MissionGraph) == 0x000300, "Member 'UW_Stats_Missions_Totals_C::img_MissionGraph' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, img_MissionGraph_Compare) == 0x000308, "Member 'UW_Stats_Missions_Totals_C::img_MissionGraph_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, img_StandardColor) == 0x000310, "Member 'UW_Stats_Missions_Totals_C::img_StandardColor' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, lbl_Casual) == 0x000318, "Member 'UW_Stats_Missions_Totals_C::lbl_Casual' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, lbl_Hard) == 0x000320, "Member 'UW_Stats_Missions_Totals_C::lbl_Hard' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, lbl_Standard) == 0x000328, "Member 'UW_Stats_Missions_Totals_C::lbl_Standard' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, txt_CasualValue) == 0x000330, "Member 'UW_Stats_Missions_Totals_C::txt_CasualValue' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, txt_CasualValue_Compare) == 0x000338, "Member 'UW_Stats_Missions_Totals_C::txt_CasualValue_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, txt_HardValue) == 0x000340, "Member 'UW_Stats_Missions_Totals_C::txt_HardValue' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, txt_HardValue_Compare) == 0x000348, "Member 'UW_Stats_Missions_Totals_C::txt_HardValue_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, txt_MissionTotal) == 0x000350, "Member 'UW_Stats_Missions_Totals_C::txt_MissionTotal' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, txt_MissionTotal_Compare) == 0x000358, "Member 'UW_Stats_Missions_Totals_C::txt_MissionTotal_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, txt_StandardValue) == 0x000360, "Member 'UW_Stats_Missions_Totals_C::txt_StandardValue' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, txt_StandardValue_Compare) == 0x000368, "Member 'UW_Stats_Missions_Totals_C::txt_StandardValue_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, ColCasual) == 0x000370, "Member 'UW_Stats_Missions_Totals_C::ColCasual' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, ColStandard) == 0x000380, "Member 'UW_Stats_Missions_Totals_C::ColStandard' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, ColHard) == 0x000390, "Member 'UW_Stats_Missions_Totals_C::ColHard' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, BarThickness) == 0x0003A0, "Member 'UW_Stats_Missions_Totals_C::BarThickness' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, BarCutoff) == 0x0003A8, "Member 'UW_Stats_Missions_Totals_C::BarCutoff' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, DynMatGraph) == 0x0003B0, "Member 'UW_Stats_Missions_Totals_C::DynMatGraph' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, CasualCount) == 0x0003B8, "Member 'UW_Stats_Missions_Totals_C::CasualCount' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, StandardCount) == 0x0003C0, "Member 'UW_Stats_Missions_Totals_C::StandardCount' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, HardCount) == 0x0003C8, "Member 'UW_Stats_Missions_Totals_C::HardCount' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, TotalCount) == 0x0003D0, "Member 'UW_Stats_Missions_Totals_C::TotalCount' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, Is_Design_Time) == 0x0003D8, "Member 'UW_Stats_Missions_Totals_C::Is_Design_Time' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, DynMatGraph_Compare) == 0x0003E0, "Member 'UW_Stats_Missions_Totals_C::DynMatGraph_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, bCompare) == 0x0003E8, "Member 'UW_Stats_Missions_Totals_C::bCompare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, ComparisonGraphSpacing) == 0x0003F0, "Member 'UW_Stats_Missions_Totals_C::ComparisonGraphSpacing' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, Size) == 0x0003F8, "Member 'UW_Stats_Missions_Totals_C::Size' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, CasualCount_Compare) == 0x000400, "Member 'UW_Stats_Missions_Totals_C::CasualCount_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, StandardCount_Compare) == 0x000408, "Member 'UW_Stats_Missions_Totals_C::StandardCount_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, HardCount_Compare) == 0x000410, "Member 'UW_Stats_Missions_Totals_C::HardCount_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, TotalCount_Compare) == 0x000418, "Member 'UW_Stats_Missions_Totals_C::TotalCount_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, CompareFriend) == 0x000420, "Member 'UW_Stats_Missions_Totals_C::CompareFriend' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, bTotalIsZero) == 0x0005E8, "Member 'UW_Stats_Missions_Totals_C::bTotalIsZero' has a wrong offset!");
static_assert(offsetof(UW_Stats_Missions_Totals_C, bCompareTotalIsZero) == 0x0005E9, "Member 'UW_Stats_Missions_Totals_C::bCompareTotalIsZero' has a wrong offset!");

}

