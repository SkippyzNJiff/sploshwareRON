#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ReadyRoomWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ReadyRoomWidget.W_ReadyRoomWidget_C
// 0x00E8 (0x03A8 - 0x02C0)
class UW_ReadyRoomWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_OnShow;                                       // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundAdditive;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundMultiply;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_1;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_141;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_157;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_SelectedMissionImg;                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   ReadyUpText;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RedLine_Image;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_0;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SelectedMissionPanel;                              // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TimerText;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_DifficultyName;                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_LevelName_1;                                   // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_MissionName;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_readycount;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   ViewBriefingText;                                  // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PlayerActionText_C*                  W_PlayerActionText;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        Opacity;                                           // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_Delta_Time;                                     // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Counter;                                           // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GamepadActive;                                     // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   DefaultReadyUpKey;                                 // 0x0378(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          LastReadyState;                                    // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputEvent                                   ReadyUpAction;                                     // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReadyUpActionName;                                 // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_ReadyRoomWidget(int32 EntryPoint);
	void OnCountdownCancelled();
	void OnCountdownStart(float Countdown);
	void OnDifficultyUpdated();
	void OnExitSettingsMenu();
	void OnInputChange(ECommonInputType bNewInputType);
	void OnLocalPlayerReadyChange(bool bReady);
	void OnMissionSelected();
	void OnReadiedPlayersChanged();
	void SetCountdownTime(double CountdownTime);
	void UpdateInputActionTexts();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ReadyRoomWidget_C">();
	}
	static class UW_ReadyRoomWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ReadyRoomWidget_C>();
	}
};
static_assert(alignof(UW_ReadyRoomWidget_C) == 0x000008, "Wrong alignment on UW_ReadyRoomWidget_C");
static_assert(sizeof(UW_ReadyRoomWidget_C) == 0x0003A8, "Wrong size on UW_ReadyRoomWidget_C");
static_assert(offsetof(UW_ReadyRoomWidget_C, UberGraphFrame) == 0x0002C0, "Member 'UW_ReadyRoomWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, Anim_OnShow) == 0x0002C8, "Member 'UW_ReadyRoomWidget_C::Anim_OnShow' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, BackgroundAdditive) == 0x0002D0, "Member 'UW_ReadyRoomWidget_C::BackgroundAdditive' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, BackgroundMultiply) == 0x0002D8, "Member 'UW_ReadyRoomWidget_C::BackgroundMultiply' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, Border_1) == 0x0002E0, "Member 'UW_ReadyRoomWidget_C::Border_1' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, Image_141) == 0x0002E8, "Member 'UW_ReadyRoomWidget_C::Image_141' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, Image_157) == 0x0002F0, "Member 'UW_ReadyRoomWidget_C::Image_157' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, img_SelectedMissionImg) == 0x0002F8, "Member 'UW_ReadyRoomWidget_C::img_SelectedMissionImg' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, ReadyUpText) == 0x000300, "Member 'UW_ReadyRoomWidget_C::ReadyUpText' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, RedLine_Image) == 0x000308, "Member 'UW_ReadyRoomWidget_C::RedLine_Image' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, RetainerBox_0) == 0x000310, "Member 'UW_ReadyRoomWidget_C::RetainerBox_0' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, SelectedMissionPanel) == 0x000318, "Member 'UW_ReadyRoomWidget_C::SelectedMissionPanel' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, TimerText) == 0x000320, "Member 'UW_ReadyRoomWidget_C::TimerText' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, txt_DifficultyName) == 0x000328, "Member 'UW_ReadyRoomWidget_C::txt_DifficultyName' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, txt_LevelName_1) == 0x000330, "Member 'UW_ReadyRoomWidget_C::txt_LevelName_1' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, txt_MissionName) == 0x000338, "Member 'UW_ReadyRoomWidget_C::txt_MissionName' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, txt_readycount) == 0x000340, "Member 'UW_ReadyRoomWidget_C::txt_readycount' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, ViewBriefingText) == 0x000348, "Member 'UW_ReadyRoomWidget_C::ViewBriefingText' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, W_PlayerActionText) == 0x000350, "Member 'UW_ReadyRoomWidget_C::W_PlayerActionText' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, Opacity) == 0x000358, "Member 'UW_ReadyRoomWidget_C::Opacity' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, In_Delta_Time) == 0x000360, "Member 'UW_ReadyRoomWidget_C::In_Delta_Time' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, Counter) == 0x000368, "Member 'UW_ReadyRoomWidget_C::Counter' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, GamepadActive) == 0x000370, "Member 'UW_ReadyRoomWidget_C::GamepadActive' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, DefaultReadyUpKey) == 0x000378, "Member 'UW_ReadyRoomWidget_C::DefaultReadyUpKey' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, LastReadyState) == 0x000390, "Member 'UW_ReadyRoomWidget_C::LastReadyState' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, ReadyUpAction) == 0x000391, "Member 'UW_ReadyRoomWidget_C::ReadyUpAction' has a wrong offset!");
static_assert(offsetof(UW_ReadyRoomWidget_C, ReadyUpActionName) == 0x000398, "Member 'UW_ReadyRoomWidget_C::ReadyUpActionName' has a wrong offset!");

}

