#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_FN509

#include "Basic.hpp"

#include "ANIMBP_FN509_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_FN509.ANIMBP_FN509_C
// 0x07C0 (0x0B30 - 0x0370)
class UANIMBP_FN509_C final : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ANIMBP_FN509::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                 // 0x0378(0x0003)(HasGetValueTypeHash)
	uint8                                         Pad_37B[0x5];                                      // 0x037B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0380(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0388(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0390(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x03B0(0x0040)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x03F0(0x0040)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0430(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0478(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x04C0(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0540(0x0128)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0668(0x00F0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0758(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x07A0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x07C8(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x07F0(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0918(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0938(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x0958(0x0040)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0998(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x09E0(0x00F0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0AD0(0x0040)()
	double                                        Mag01Alpha;                                        // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SlideAlpha;                                        // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScopeAdjustAlpha;                                  // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_DropSpeedReloadMagazine();
	void AnimNotify_ShowMag();
	void AnimNotify_SlideBack();
	void AnimNotify_SlideForward();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_FN509_AnimGraphNode_BlendListByBool_4A7FF2E64B28459B114FA0BCBC419E8F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_FN509_AnimGraphNode_BlendListByBool_6294AABA4A850F112F3366B08261D507();
	void ExecuteUbergraph_ANIMBP_FN509(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_FN509_C">();
	}
	static class UANIMBP_FN509_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_FN509_C>();
	}
};
static_assert(alignof(UANIMBP_FN509_C) == 0x000010, "Wrong alignment on UANIMBP_FN509_C");
static_assert(sizeof(UANIMBP_FN509_C) == 0x000B30, "Wrong size on UANIMBP_FN509_C");
static_assert(offsetof(UANIMBP_FN509_C, UberGraphFrame) == 0x000370, "Member 'UANIMBP_FN509_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, __AnimBlueprintMutables) == 0x000378, "Member 'UANIMBP_FN509_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimBlueprintExtension_PropertyAccess) == 0x000380, "Member 'UANIMBP_FN509_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimBlueprintExtension_Base) == 0x000388, "Member 'UANIMBP_FN509_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_Root) == 0x000390, "Member 'UANIMBP_FN509_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_SequenceEvaluator_3) == 0x0003B0, "Member 'UANIMBP_FN509_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_SequenceEvaluator_2) == 0x0003F0, "Member 'UANIMBP_FN509_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_BlendListByBool_1) == 0x000430, "Member 'UANIMBP_FN509_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_Slot_1) == 0x000478, "Member 'UANIMBP_FN509_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_SaveCachedPose) == 0x0004C0, "Member 'UANIMBP_FN509_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_ModifyBone_1) == 0x000540, "Member 'UANIMBP_FN509_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000668, "Member 'UANIMBP_FN509_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_Slot) == 0x000758, "Member 'UANIMBP_FN509_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_UseCachedPose_1) == 0x0007A0, "Member 'UANIMBP_FN509_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_UseCachedPose) == 0x0007C8, "Member 'UANIMBP_FN509_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_ModifyBone) == 0x0007F0, "Member 'UANIMBP_FN509_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_LocalToComponentSpace) == 0x000918, "Member 'UANIMBP_FN509_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_ComponentToLocalSpace) == 0x000938, "Member 'UANIMBP_FN509_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_SequenceEvaluator_1) == 0x000958, "Member 'UANIMBP_FN509_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_BlendListByBool) == 0x000998, "Member 'UANIMBP_FN509_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_LayeredBoneBlend) == 0x0009E0, "Member 'UANIMBP_FN509_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, AnimGraphNode_SequenceEvaluator) == 0x000AD0, "Member 'UANIMBP_FN509_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, Mag01Alpha) == 0x000B10, "Member 'UANIMBP_FN509_C::Mag01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, SlideAlpha) == 0x000B18, "Member 'UANIMBP_FN509_C::SlideAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_FN509_C, ScopeAdjustAlpha) == 0x000B20, "Member 'UANIMBP_FN509_C::ScopeAdjustAlpha' has a wrong offset!");

}

