#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Customization_Selector

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_Customization_Selector.W_Customization_Selector_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Selector_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_BackPage) == 0x000001, "Wrong alignment on W_Customization_Selector_C_BackPage");
static_assert(sizeof(W_Customization_Selector_C_BackPage) == 0x000001, "Wrong size on W_Customization_Selector_C_BackPage");
static_assert(offsetof(W_Customization_Selector_C_BackPage, Handled) == 0x000000, "Member 'W_Customization_Selector_C_BackPage::Handled' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature final
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature) == 0x000008, "Wrong alignment on W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature");
static_assert(sizeof(W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature) == 0x000010, "Wrong size on W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature");
static_assert(offsetof(W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature, OptionID) == 0x000000, "Member 'W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_2_OnOptionSelected__DelegateSignature::OptionID' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature final
{
public:
	class FString                                 OptionID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature");
static_assert(sizeof(W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature) == 0x000010, "Wrong size on W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature");
static_assert(offsetof(W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature, OptionID) == 0x000000, "Member 'W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_5_OnOptionHovered__DelegateSignature::OptionID' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature final
{
public:
	class Uw_Dropdown_C*                          TriggeringDropdown;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong alignment on W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature");
static_assert(sizeof(W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong size on W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature");
static_assert(offsetof(W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature, TriggeringDropdown) == 0x000000, "Member 'W_Customization_Selector_C_BndEvt__W_Customization_Selector_Dropdown_K2Node_ComponentBoundEvent_6_OnMenuClosed__DelegateSignature::TriggeringDropdown' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Selector_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_ChangePage) == 0x000004, "Wrong alignment on W_Customization_Selector_C_ChangePage");
static_assert(sizeof(W_Customization_Selector_C_ChangePage) == 0x000008, "Wrong size on W_Customization_Selector_C_ChangePage");
static_assert(offsetof(W_Customization_Selector_C_ChangePage, PageName) == 0x000000, "Member 'W_Customization_Selector_C_ChangePage::PageName' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.ExecuteUbergraph_W_Customization_Selector
// 0x0078 (0x0078 - 0x0000)
struct W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_OptionID_1;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_OptionID;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class Uw_Dropdown_C*                          K2Node_ComponentBoundEvent_TriggeringDropdown;     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector) == 0x000008, "Wrong alignment on W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector");
static_assert(sizeof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector) == 0x000078, "Wrong size on W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, EntryPoint) == 0x000000, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, K2Node_Event_Delay_1) == 0x000008, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, K2Node_Event_Delay) == 0x000010, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, K2Node_Event_Collapse) == 0x000018, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, K2Node_Event_IsGamepad) == 0x000019, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, K2Node_Event_PageName) == 0x00001C, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, K2Node_Event_IsDesignTime) == 0x000024, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, K2Node_ComponentBoundEvent_OptionID_1) == 0x000040, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::K2Node_ComponentBoundEvent_OptionID_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, CallFunc_Conv_StringToName_ReturnValue) == 0x000050, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, K2Node_ComponentBoundEvent_OptionID) == 0x000058, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::K2Node_ComponentBoundEvent_OptionID' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, K2Node_ComponentBoundEvent_TriggeringDropdown) == 0x000068, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::K2Node_ComponentBoundEvent_TriggeringDropdown' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000070, "Member 'W_Customization_Selector_C_ExecuteUbergraph_W_Customization_Selector::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Customization_Selector_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_Hide) == 0x000008, "Wrong alignment on W_Customization_Selector_C_Hide");
static_assert(sizeof(W_Customization_Selector_C_Hide) == 0x000010, "Wrong size on W_Customization_Selector_C_Hide");
static_assert(offsetof(W_Customization_Selector_C_Hide, Delay) == 0x000000, "Member 'W_Customization_Selector_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_Hide, Collapse) == 0x000008, "Member 'W_Customization_Selector_C_Hide::Collapse' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Selector_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_PreConstruct) == 0x000001, "Wrong alignment on W_Customization_Selector_C_PreConstruct");
static_assert(sizeof(W_Customization_Selector_C_PreConstruct) == 0x000001, "Wrong size on W_Customization_Selector_C_PreConstruct");
static_assert(offsetof(W_Customization_Selector_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Customization_Selector_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Selector_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_Reveal) == 0x000008, "Wrong alignment on W_Customization_Selector_C_Reveal");
static_assert(sizeof(W_Customization_Selector_C_Reveal) == 0x000008, "Wrong size on W_Customization_Selector_C_Reveal");
static_assert(offsetof(W_Customization_Selector_C_Reveal, Delay) == 0x000000, "Member 'W_Customization_Selector_C_Reveal::Delay' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.SetEquipped
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Selector_C_SetEquipped final
{
public:
	class FName                                   EquippedID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_SetEquipped) == 0x000004, "Wrong alignment on W_Customization_Selector_C_SetEquipped");
static_assert(sizeof(W_Customization_Selector_C_SetEquipped) == 0x000008, "Wrong size on W_Customization_Selector_C_SetEquipped");
static_assert(offsetof(W_Customization_Selector_C_SetEquipped, EquippedID) == 0x000000, "Member 'W_Customization_Selector_C_SetEquipped::EquippedID' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Selector_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_SetInputMode) == 0x000001, "Wrong alignment on W_Customization_Selector_C_SetInputMode");
static_assert(sizeof(W_Customization_Selector_C_SetInputMode) == 0x000001, "Wrong size on W_Customization_Selector_C_SetInputMode");
static_assert(offsetof(W_Customization_Selector_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Customization_Selector_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.SetOptions
// 0x00E8 (0x00E8 - 0x0000)
struct W_Customization_Selector_C_SetOptions final
{
public:
	TMap<class FName, class FText>                OptionsMap_0;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   OptionText;                                        // 0x0050(0x0018)(Edit, BlueprintVisible)
	class FName                                   OptionID;                                          // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x00C8(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_SetOptions) == 0x000008, "Wrong alignment on W_Customization_Selector_C_SetOptions");
static_assert(sizeof(W_Customization_Selector_C_SetOptions) == 0x0000E8, "Wrong size on W_Customization_Selector_C_SetOptions");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, OptionsMap_0) == 0x000000, "Member 'W_Customization_Selector_C_SetOptions::OptionsMap_0' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, OptionText) == 0x000050, "Member 'W_Customization_Selector_C_SetOptions::OptionText' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, OptionID) == 0x000068, "Member 'W_Customization_Selector_C_SetOptions::OptionID' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, Temp_int_Array_Index_Variable) == 0x000070, "Member 'W_Customization_Selector_C_SetOptions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'W_Customization_Selector_C_SetOptions::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, CallFunc_Array_Get_Item) == 0x000088, "Member 'W_Customization_Selector_C_SetOptions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'W_Customization_Selector_C_SetOptions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, CallFunc_Conv_NameToString_ReturnValue) == 0x000098, "Member 'W_Customization_Selector_C_SetOptions::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000A8, "Member 'W_Customization_Selector_C_SetOptions::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'W_Customization_Selector_C_SetOptions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0000B0, "Member 'W_Customization_Selector_C_SetOptions::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'W_Customization_Selector_C_SetOptions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'W_Customization_Selector_C_SetOptions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'W_Customization_Selector_C_SetOptions::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Customization_Selector_C_SetOptions, CallFunc_Map_Find_ReturnValue) == 0x0000E0, "Member 'W_Customization_Selector_C_SetOptions::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.UpdateStyle
// 0x0001 (0x0001 - 0x0000)
struct W_Customization_Selector_C_UpdateStyle final
{
public:
	bool                                          bUseGamepad_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_UpdateStyle) == 0x000001, "Wrong alignment on W_Customization_Selector_C_UpdateStyle");
static_assert(sizeof(W_Customization_Selector_C_UpdateStyle) == 0x000001, "Wrong size on W_Customization_Selector_C_UpdateStyle");
static_assert(offsetof(W_Customization_Selector_C_UpdateStyle, bUseGamepad_0) == 0x000000, "Member 'W_Customization_Selector_C_UpdateStyle::bUseGamepad_0' has a wrong offset!");

// Function W_Customization_Selector.W_Customization_Selector_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Customization_Selector_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Customization_Selector_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Customization_Selector_C_GetFocusTarget");
static_assert(sizeof(W_Customization_Selector_C_GetFocusTarget) == 0x000008, "Wrong size on W_Customization_Selector_C_GetFocusTarget");
static_assert(offsetof(W_Customization_Selector_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Customization_Selector_C_GetFocusTarget::Focus' has a wrong offset!");

}

