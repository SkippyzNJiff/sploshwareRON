#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing_Timeline_TrackWaveElement_vert

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Briefing_Timeline_TrackWaveElement_vert.W_Briefing_Timeline_TrackWaveElement_vert_C
// 0x0060 (0x0320 - 0x02C0)
class UW_Briefing_Timeline_TrackWaveElement_vert_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 img_cap;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_line;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Line;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_WaveLine;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        WaveAmp;                                           // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIsTimelineEvent;                                  // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spacing;                                           // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Updating;                                          // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UpdateFreq;                                        // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UpdateProgress;                                    // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastAmp;                                           // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_Briefing_Timeline_TrackWaveElement_vert(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetStyle(bool IsTimelineEvent);
	void SetWaveLength(double Length);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update(double WaveAmp_0, double Freq);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Briefing_Timeline_TrackWaveElement_vert_C">();
	}
	static class UW_Briefing_Timeline_TrackWaveElement_vert_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Briefing_Timeline_TrackWaveElement_vert_C>();
	}
};
static_assert(alignof(UW_Briefing_Timeline_TrackWaveElement_vert_C) == 0x000008, "Wrong alignment on UW_Briefing_Timeline_TrackWaveElement_vert_C");
static_assert(sizeof(UW_Briefing_Timeline_TrackWaveElement_vert_C) == 0x000320, "Wrong size on UW_Briefing_Timeline_TrackWaveElement_vert_C");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, UberGraphFrame) == 0x0002C0, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, img_cap) == 0x0002C8, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::img_cap' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, img_line) == 0x0002D0, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::img_line' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, SB_Line) == 0x0002D8, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::SB_Line' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, VB_WaveLine) == 0x0002E0, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::VB_WaveLine' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, WaveAmp) == 0x0002E8, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::WaveAmp' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, bIsTimelineEvent) == 0x0002F0, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::bIsTimelineEvent' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, Spacing) == 0x0002F8, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::Spacing' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, Updating) == 0x000300, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::Updating' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, UpdateFreq) == 0x000308, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::UpdateFreq' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, UpdateProgress) == 0x000310, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::UpdateProgress' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Timeline_TrackWaveElement_vert_C, LastAmp) == 0x000318, "Member 'UW_Briefing_Timeline_TrackWaveElement_vert_C::LastAmp' has a wrong offset!");

}

