#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Player_FP_Master

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "ANIMBP_Player_FP_Master_structs.hpp"
#include "CustomAnimNode_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_Player_FP_Master.ANIMBP_Player_FP_Master_C
// 0x7270 (0x78F0 - 0x0680)
class UANIMBP_Player_FP_Master_C final : public URoNAnimInstance_PlayerFP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0680(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ANIMBP_Player_FP_Master::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;      // 0x0688(0x0100)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0788(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0790(0x0008)()
	struct FAnimNode_LazySpringBone               AnimGraphNode_LazySpringBone;                      // 0x0798(0x0248)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_17;                       // 0x09E0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_16;                       // 0x0B08(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_15;                       // 0x0C30(0x0128)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_11;                   // 0x0D58(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_14;                       // 0x0DD8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_13;                       // 0x0F00(0x0128)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_10;                   // 0x1028(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x10A8(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6;             // 0x11D0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x11F0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x1318(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x1440(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_24;                  // 0x1568(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_68;                   // 0x15B0(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6;             // 0x15F8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x1618(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x1638(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x1760(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x1780(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x17A0(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_8;                  // 0x17C0(0x00F0)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh_1;                  // 0x18B0(0x0158)(ContainsInstancedReference)
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x1A08(0x0128)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_7;                  // 0x1B30(0x00F0)()
	struct FAnimNode_PivotBone                    AnimGraphNode_PivotBone_4;                         // 0x1C20(0x0118)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x1D38(0x0128)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x1E60(0x0120)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x1F80(0x0120)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x20A0(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_67;                   // 0x2190(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x21D8(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x2258(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_23;                  // 0x2280(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x22C8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x22F0(0x0048)()
	struct FAnimNode_PivotBone                    AnimGraphNode_PivotBone_3;                         // 0x2338(0x0118)()
	struct FAnimNode_PivotBone                    AnimGraphNode_PivotBone_2;                         // 0x2450(0x0118)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x2568(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x25B0(0x0070)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_19;                    // 0x2620(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x26E8(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x27D8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x2800(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_66;                   // 0x2828(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_18;                    // 0x2870(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_22;                  // 0x2938(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_65;                   // 0x2980(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x29C8(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x2A10(0x0020)()
	struct FAnimNode_PivotBone                    AnimGraphNode_PivotBone_1;                         // 0x2A30(0x0118)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x2B48(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x2C70(0x0128)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x2D98(0x0158)(ContainsInstancedReference)
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x2EF0(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x2FE0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x3000(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x3128(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x3148(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x3168(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x31E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x3210(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x3238(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x3260(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x3288(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_64;                   // 0x32B0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x32F8(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_17;                    // 0x3320(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x33E8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x3408(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x3430(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_63;                   // 0x3450(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x3498(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_16;                    // 0x34C0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x3588(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x35A8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x35D0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x35F0(0x00C8)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x36B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_62;                   // 0x3700(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_61;                   // 0x3748(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_60;                   // 0x3790(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_59;                   // 0x37D8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x3820(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x38A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_58;                   // 0x38E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_57;                   // 0x3930(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_56;                   // 0x3978(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_55;                   // 0x39C0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x3A08(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x3A88(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_54;                   // 0x3AD0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_53;                   // 0x3B18(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_52;                   // 0x3B60(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_51;                   // 0x3BA8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x3BF0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_50;                   // 0x3C70(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x3CB8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_49;                   // 0x3D00(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_48;                   // 0x3D48(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_47;                   // 0x3D90(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_46;                   // 0x3DD8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x3E20(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_45;                   // 0x3EA0(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x3EE8(0x0128)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_15;                    // 0x4010(0x00C8)()
	struct FAnimNode_PivotBone                    AnimGraphNode_PivotBone;                           // 0x40D8(0x0118)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_14;                    // 0x41F0(0x00C8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x42B8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x42D8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x42F8(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_21;                  // 0x4318(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x4360(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x4388(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x43B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x43D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x4400(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x4428(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_20;                  // 0x4450(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_19;                  // 0x4498(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_44;                   // 0x44E0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_18;                  // 0x4528(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_43;                   // 0x4570(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_42;                   // 0x45B8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_17;                  // 0x4600(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_16;                  // 0x4648(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_41;                   // 0x4690(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_40;                   // 0x46D8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_39;                   // 0x4720(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_38;                   // 0x4768(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_13;                    // 0x47B0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x4878(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_15;                  // 0x48C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x4908(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x4928(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x4970(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_14;                  // 0x49B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x4A00(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_13;                  // 0x4A48(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x4A90(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x4AD8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x4B20(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x4B68(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x4BB0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x4BF8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x4C40(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x4C88(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x4CD0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_12;                    // 0x4D18(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x4DE0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x4E28(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x4F18(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x4F60(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_11;                    // 0x4FA8(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x5070(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x50B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x50D8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x5120(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x5168(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x51B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x51F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x5240(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x5288(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x52D0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_10;                    // 0x5318(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x53E0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x5428(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x5470(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x5560(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_9;                     // 0x55A8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x5670(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x56B8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x56D8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x5700(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x5720(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x57E8(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x5868(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x58E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x5910(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x5938(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x5960(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x5988(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x59B0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x59D8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x5A00(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_8;                     // 0x5A48(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x5B10(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x5B30(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x5B58(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x5B78(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x5BA0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_7;                     // 0x5BE8(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x5CB0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x5CD0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x5CF8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x5D18(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x5DE0(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x5ED0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x5F18(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x5F60(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x6050(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x6098(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x60C0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x60E8(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x6168(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x6190(0x0040)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x61D0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x6218(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x6298(0x0128)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x63C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x63E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x6410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x6438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x6460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x6488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x64B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x64D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x6500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x6528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x6550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x6578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x65A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x65C8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x65F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x6638(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_6;                     // 0x6680(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x6748(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x6768(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x67B0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_5;                     // 0x67F8(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x68C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x68E0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x6928(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x69F0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x6A38(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x6A58(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x6AA0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x6B68(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x6BB0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x6BD0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x6C18(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x6CE0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x6D28(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x6D48(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x6D90(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x6DD8(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x6E20(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x6EE8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x6F10(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x6F38(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x6F60(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x6FA8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x6FD0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x6FF0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x7038(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x7080(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x70C8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x7190(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x71D8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x71F8(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x72C0(0x0128)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x73E8(0x00F8)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x74E0(0x00F8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x75D8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x75F8(0x0020)()
	struct FRotator                               CameraRotationRate;                                // 0x7618(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsAiming;                                         // 0x7630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFocusedAiming;                                  // 0x7631(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsReloading;                                      // 0x7632(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7633[0x5];                                     // 0x7633(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AimInterp;                                         // 0x7638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMagCheck;                                       // 0x7640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7641[0x7];                                     // 0x7641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IdlePlayrate;                                      // 0x7648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProcRecoilTrans;                                   // 0x7650(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ProcRecoilRot;                                     // 0x7668(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                ProcRecoilBuildupTrans;                            // 0x7680(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ProcRecoilBuildupRot;                              // 0x7698(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               NewVar_0;                                          // 0x76B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                StanceAdjustment;                                  // 0x76C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CapsuleRot;                                        // 0x76E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        LazyAlpha;                                         // 0x76F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseWeapon*                            BaseMagWeaponRef;                                  // 0x7700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       PlayerCharRef;                                     // 0x7708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaSeconds;                                      // 0x7710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LegsBroken;                                        // 0x7718(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ArmsBroken;                                        // 0x7719(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_771A[0x6];                                     // 0x771A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AimingLocoStrength;                                // 0x7720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCrouched;                                       // 0x7728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLowReadyPointUp;                                  // 0x7729(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLowReadyPointDown;                                // 0x772A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_772B[0x5];                                     // 0x772B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LowReadyPointUpAlpha;                              // 0x7730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LowReadyPointDownAlpha;                            // 0x7738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeanAlpha;                                         // 0x7740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FreeLookRot;                                       // 0x7748(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        StabilizeMovementAlpha;                            // 0x7760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        QuickLeanAmount;                                   // 0x7768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSightTweakMode;                                   // 0x7770(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsJumping;                                        // 0x7771(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSprinting;                                      // 0x7772(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7773[0x5];                                     // 0x7773(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InputUpDown;                                       // 0x7778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOnLadder;                                         // 0x7780(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInteractionActive;                                // 0x7781(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7782[0x6];                                     // 0x7782(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Hand_IK_Left;                                      // 0x7788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Hand_IK_Right;                                     // 0x7790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasUnderbarrelAttachment;                         // 0x7798(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponUnderbarrelAnimationType               UnderbarrelType;                                   // 0x7799(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsMontagePlaying;                                 // 0x779A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsGrenade;                                        // 0x779B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_779C[0x4];                                     // 0x779C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ShakeAmount;                                       // 0x77A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bArrested;                                         // 0x77A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77A9[0x7];                                     // 0x77A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DirBlendTime;                                      // 0x77B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeftHandSprintHack;                                // 0x77B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftHandWorldVector;                               // 0x77C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LeftHandWorldRotator;                              // 0x77D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        LeftHandWorldAlpha;                                // 0x77F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftHandWorldElbowVector;                          // 0x77F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLeftHandDoorActive;                               // 0x7810(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7811[0x7];                                     // 0x7811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LeanHeadSocketLocation;                            // 0x7818(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LeanHeadBlendAlpha;                                // 0x7830(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeanHeadOffset;                                    // 0x7838(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Acceleration;                                      // 0x7850(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraBobTrans;                                    // 0x7868(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartMotionWeight;                                 // 0x7880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartMotionPlayrate;                               // 0x7888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WeaponBobTrans;                                    // 0x7890(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WeaponBobRot;                                      // 0x78A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        WeaponBobAlpha;                                    // 0x78C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WeaponBobTrigger;                                  // 0x78C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldAllowStopMotion;                            // 0x78C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBuildUpSprint;                                    // 0x78CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78CB[0x5];                                     // 0x78CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SprintBuildupAlpha;                                // 0x78D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHeavyArmor;                                     // 0x78D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78D9[0x7];                                     // 0x78D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      NewVar;                                            // 0x78E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_AllowStopMotion();
	void AnimNotify_ArrestComplete();
	void AnimNotify_BlackFadeStart();
	void AnimNotify_C2Detonate();
	void AnimNotify_CanThrowGrenade();
	void AnimNotify_DisableNVG();
	void AnimNotify_DoorjamPlaced();
	void AnimNotify_DoorKick();
	void AnimNotify_DoorKickBreak();
	void AnimNotify_DoorKickFailure();
	void AnimNotify_DoorPush();
	void AnimNotify_EnableNVG();
	void AnimNotify_EquipDetonator();
	void AnimNotify_EquipLastGun();
	void AnimNotify_FadeIntoBlack();
	void AnimNotify_FadeOutBlack();
	void AnimNotify_FinishC2Placement();
	void AnimNotify_FreeComplete();
	void AnimNotify_FreezeAllActions();
	void AnimNotify_HideFPMesh();
	void AnimNotify_NVGStartToggling();
	void AnimNotify_NVGStopToggling();
	void AnimNotify_PlayShotgunReloadLoop();
	void AnimNotify_RamHit();
	void AnimNotify_ReloadComplete();
	void AnimNotify_ResetStopMotion();
	void AnimNotify_ShowFPMesh();
	void AnimNotify_SprintEnded();
	void AnimNotify_SprintStarted();
	void AnimNotify_StartFullbodyRagdoll();
	void AnimNotify_StartPlayerRoot();
	void AnimNotify_StopPlayerRoot();
	void AnimNotify_ThrowChemlight();
	void AnimNotify_ThrowGrenade();
	void AnimNotify_ToggleRagdoll();
	void AnimNotify_UnfreezeAllActions();
	void AnimNotify_WeaponBobDisable();
	void AnimNotify_WeaponBobEnable();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void CustomEvent();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_ApplyAdditive_349790E540F2D5630B1D08B7D25D9559();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_ApplyAdditive_8590ECCF4ED3FE9AF3397991B4916D01();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_ApplyAdditive_C6A3B600405AD839170095A1153448FA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_BlendListByBool_2D7ED2E84AB7B607144F55B76B40526B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_BlendListByBool_4879E363481B92AAA6CF839D5E266A3E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_BlendListByBool_AB91FAF04E5C1C452147B58AB419D193();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_BlendListByBool_F387152840205C87E00A44B651507A1A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_LazySpringBone_B7A5610C4C7CAA7B481B35B72E2A0FB4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_LegIK_9D86C6C840152FE2654438B16742DE27();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_ModifyBone_610B23954A30336A6E3CDDB99FD92D11();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_ModifyBone_6F5340F8439A8F1CFE90B8BCE2A4A763();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_ModifyBone_F0F1AB3B44ABC136370C4483D5742C27();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_ModifyBone_F35DCF464D06495E8FE348A5A18017AA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_ModifyCurve_9B510C0E41D85CD8CF724BA95C09025D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_PivotBone_0F2C7531423F08A2EFF470ADC794D65F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_PivotBone_3B50CDDA48DA6200013F08A576FF9D32();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_PivotBone_63C30D0F4D43094113B7EDBADBAB2789();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_PivotBone_E8EFAFCC48AB6228FED73CB8E1251F31();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_PivotBone_F1AA59BF4FDE779173D954B7DF982CC1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_0E847E114993C3907D893D8597EAF206();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_1DB711494CD4B31E24DE41904CB753E4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_22339A3E456E716301145AB93C0594F4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_28A3B75840D68F5C10D9629C5CC2B314();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_3A88471847B39F1EA325C299C889B0E5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_436621EA4A0D32FEF38251B53214E60D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_4A06EE044B1DC8D3848A778C16C3719C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_4A31759445A4D66E6D5D0CB5D6A01BE6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_4A5B5BD5473A54F969979DB4A678D345();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_5D402DD9475CBC3A24EC7D937900A972();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_667B5CE04E4CBD3B28C5CA906EE55A4D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_70FFB3C24126F5F67713918CD5C0C103();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_73515E6144DE43E8470D15B9D749FD68();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_799065574032AAD887AC0F877F3EF280();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_7D8DA8C5404A3D71A0CAB29122FFE87F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_8D9943C443F995450BB1A4ADB22947E1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_9143EAEA4BD1F968CFBF7EAB9A0656B3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_A0DF02414EC8C101274F819C63001171();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_A14D48E84437956CB4051C8FF3C56A13();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_A5DBA16D4E86C0EBE4654A94755DB102();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_A71EEE8E46659B8C4056FA85962891F9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_AA9E7F2A4F815A859EDA4EB54FF2042E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_B134AE8B448556F818FB6D8E24786CAA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_B2BA99304F1EE0200F71EE95C9CA988B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_B48962E14E382CEA46FE508E07782AD5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_B4BE951F4756B225FFD9FFA821F3251F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_BE818B4C47B04C4553397CBF64EBF3AC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_DE2EB7F543493547B08EF4AFB039DB86();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_DFA306FC4D12BC8396D04D8E0987D5D4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_EFA2BD3C4A9E750AF8ACB2B567317479();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_F1B7D93A48B44936A93CAA90B098DF43();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_F538F67D4C75E34D1FADF4A0AE24DB08();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_F56BB873499859524D5ED98D41068C89();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_FB8981C84E946C98EA858E9FAB2D53F6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_FD913C124B6441D35EDDB88C8D2D96A0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_SequencePlayer_FE6372914ED28B1627D3278B3FFEEF94();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_07B31A5A4200DA9D44A6458EEC745C25();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_25CE755A4CFA96F89EBBB4B7219548D0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_325908494E3CEDE65F00AA8BB636BE17();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_349A7EC140623FA2900499A027BCF8A2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_3F4B7F614320D28678FE498E88D5196C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_485F184E4DA3C23C9D945B9D37FFAFC7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_5AEF6B914F43E424ED0018B8684103C9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_69820C474C461146AF09CB9F932AF05E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_80E8F6704162A23AA1CEDF9BE04AF51C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_8E2A61AE418060994D0EFB9219CE6189();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_91D650F7412F908F7C2928B1CD22AC1C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_952A147E44BA78DDCE0E91A0A54942F9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_9B9B8E4949800E738A8057AACCE80C9F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_Player_FP_Master_AnimGraphNode_TransitionResult_C647B5124D3BC1F0986B9C89A7735B03();
	void ExecuteUbergraph_ANIMBP_Player_FP_Master(int32 EntryPoint);
	void SetWeaponGripPose(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_Player_FP_Master_C">();
	}
	static class UANIMBP_Player_FP_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_Player_FP_Master_C>();
	}
};
static_assert(alignof(UANIMBP_Player_FP_Master_C) == 0x000010, "Wrong alignment on UANIMBP_Player_FP_Master_C");
static_assert(sizeof(UANIMBP_Player_FP_Master_C) == 0x0078F0, "Wrong size on UANIMBP_Player_FP_Master_C");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, UberGraphFrame) == 0x000680, "Member 'UANIMBP_Player_FP_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, __AnimBlueprintMutables) == 0x000688, "Member 'UANIMBP_Player_FP_Master_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimBlueprintExtension_PropertyAccess) == 0x000788, "Member 'UANIMBP_Player_FP_Master_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimBlueprintExtension_Base) == 0x000790, "Member 'UANIMBP_Player_FP_Master_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LazySpringBone) == 0x000798, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LazySpringBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_17) == 0x0009E0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_17' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_16) == 0x000B08, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_16' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_15) == 0x000C30, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_15' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_11) == 0x000D58, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_11' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_14) == 0x000DD8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_14' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_13) == 0x000F00, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_13' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_10) == 0x001028, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_10' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_12) == 0x0010A8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LocalToComponentSpace_6) == 0x0011D0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LocalToComponentSpace_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_11) == 0x0011F0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_10) == 0x001318, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_9) == 0x001440, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_24) == 0x001568, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_24' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_68) == 0x0015B0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_68' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ComponentToLocalSpace_6) == 0x0015F8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ComponentToLocalSpace_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LocalToComponentSpace_5) == 0x001618, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_8) == 0x001638, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LocalToComponentSpace_4) == 0x001760, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x001780, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x0017A0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LayeredBoneBlend_8) == 0x0017C0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LayeredBoneBlend_8' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_CopyPoseFromMesh_1) == 0x0018B0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_CopyPoseFromMesh_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_7) == 0x001A08, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LayeredBoneBlend_7) == 0x001B30, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LayeredBoneBlend_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_PivotBone_4) == 0x001C20, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_PivotBone_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_6) == 0x001D38, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyCurve_1) == 0x001E60, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyCurve) == 0x001F80, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LayeredBoneBlend_6) == 0x0020A0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_67) == 0x002190, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_67' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_9) == 0x0021D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_19) == 0x002258, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_23) == 0x002280, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_23' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_18) == 0x0022C8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_Slot_4) == 0x0022F0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_PivotBone_3) == 0x002338, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_PivotBone_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_PivotBone_2) == 0x002450, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_PivotBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_Slot_3) == 0x002568, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendSpacePlayer) == 0x0025B0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_19) == 0x002620, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_19' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LayeredBoneBlend_5) == 0x0026E8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_17) == 0x0027D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_16) == 0x002800, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_66) == 0x002828, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_66' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_18) == 0x002870, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_18' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_22) == 0x002938, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_22' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_65) == 0x002980, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_65' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_Slot_2) == 0x0029C8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LocalToComponentSpace_3) == 0x002A10, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_PivotBone_1) == 0x002A30, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_PivotBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_5) == 0x002B48, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_4) == 0x002C70, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_CopyPoseFromMesh) == 0x002D98, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LayeredBoneBlend_4) == 0x002EF0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x002FE0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_3) == 0x003000, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LocalToComponentSpace_2) == 0x003128, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x003148, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_8) == 0x003168, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_30) == 0x0031E8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_29) == 0x003210, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_28) == 0x003238, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_27) == 0x003260, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_26) == 0x003288, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_64) == 0x0032B0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_64' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_15) == 0x0032F8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_17) == 0x003320, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_17' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_18) == 0x0033E8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_14) == 0x003408, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_17) == 0x003430, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_63) == 0x003450, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_63' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_13) == 0x003498, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_16) == 0x0034C0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_16' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_16) == 0x003588, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_12) == 0x0035A8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_15) == 0x0035D0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateMachine_3) == 0x0035F0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByEnum_3) == 0x0036B8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_62) == 0x003700, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_62' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_61) == 0x003748, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_61' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_60) == 0x003790, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_60' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_59) == 0x0037D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_59' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_7) == 0x003820, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByEnum_2) == 0x0038A0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_58) == 0x0038E8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_58' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_57) == 0x003930, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_57' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_56) == 0x003978, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_56' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_55) == 0x0039C0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_55' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_6) == 0x003A08, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByEnum_1) == 0x003A88, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_54) == 0x003AD0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_54' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_53) == 0x003B18, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_53' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_52) == 0x003B60, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_52' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_51) == 0x003BA8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_51' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_5) == 0x003BF0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_50) == 0x003C70, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_50' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByEnum) == 0x003CB8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_49) == 0x003D00, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_49' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_48) == 0x003D48, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_48' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_47) == 0x003D90, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_47' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_46) == 0x003DD8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_46' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_4) == 0x003E20, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_45) == 0x003EA0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_45' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_2) == 0x003EE8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_15) == 0x004010, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_15' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_PivotBone) == 0x0040D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_PivotBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_14) == 0x0041F0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_14' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0042B8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0042D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LocalToComponentSpace) == 0x0042F8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_21) == 0x004318, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_21' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_25) == 0x004360, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_24) == 0x004388, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_23) == 0x0043B0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_22) == 0x0043D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_21) == 0x004400, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_20) == 0x004428, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_20) == 0x004450, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_20' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_19) == 0x004498, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_19' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_44) == 0x0044E0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_44' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_18) == 0x004528, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_18' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_43) == 0x004570, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_43' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_42) == 0x0045B8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_42' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_17) == 0x004600, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_17' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_16) == 0x004648, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_16' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_41) == 0x004690, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_41' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_40) == 0x0046D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_40' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_39) == 0x004720, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_39' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_38) == 0x004768, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_38' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_13) == 0x0047B0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_13' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_37) == 0x004878, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_15) == 0x0048C0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_15' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_14) == 0x004908, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_36) == 0x004928, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_35) == 0x004970, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_14) == 0x0049B8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_14' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_34) == 0x004A00, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_13) == 0x004A48, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_13' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_33) == 0x004A90, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_12) == 0x004AD8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_32) == 0x004B20, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_11) == 0x004B68, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_10) == 0x004BB0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_31) == 0x004BF8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_9) == 0x004C40, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_30) == 0x004C88, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_29) == 0x004CD0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_12) == 0x004D18, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_12' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_28) == 0x004DE0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LayeredBoneBlend_3) == 0x004E28, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_27) == 0x004F18, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_26) == 0x004F60, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_11) == 0x004FA8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_11' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_8) == 0x005070, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_13) == 0x0050B8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_25) == 0x0050D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_7) == 0x005120, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_24) == 0x005168, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_6) == 0x0051B0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_23) == 0x0051F8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_22) == 0x005240, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_5) == 0x005288, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_21) == 0x0052D0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_10) == 0x005318, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_10' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_4) == 0x0053E0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_20) == 0x005428, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LayeredBoneBlend_2) == 0x005470, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_19) == 0x005560, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_9) == 0x0055A8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_9' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_18) == 0x005670, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_12) == 0x0056B8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_11) == 0x0056D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_11) == 0x005700, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateMachine_2) == 0x005720, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_3) == 0x0057E8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_2) == 0x005868, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_19) == 0x0058E8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_18) == 0x005910, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_17) == 0x005938, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_16) == 0x005960, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_15) == 0x005988, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_14) == 0x0059B0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_10) == 0x0059D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_17) == 0x005A00, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_8) == 0x005A48, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_8' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_10) == 0x005B10, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_9) == 0x005B30, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_9) == 0x005B58, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_8) == 0x005B78, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_16) == 0x005BA0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_7) == 0x005BE8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_8) == 0x005CB0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_7) == 0x005CD0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_7) == 0x005CF8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateMachine_1) == 0x005D18, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LayeredBoneBlend_1) == 0x005DE0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_15) == 0x005ED0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_Slot_1) == 0x005F18, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LayeredBoneBlend) == 0x005F60, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_14) == 0x006050, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_6) == 0x006098, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_5) == 0x0060C0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose_1) == 0x0060E8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_4) == 0x006168, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequenceEvaluator) == 0x006190, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_Slot) == 0x0061D0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SaveCachedPose) == 0x006218, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone_1) == 0x006298, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_13) == 0x0063C0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_12) == 0x0063E8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_11) == 0x006410, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_10) == 0x006438, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_9) == 0x006460, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_8) == 0x006488, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_7) == 0x0064B0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_6) == 0x0064D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_5) == 0x006500, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_4) == 0x006528, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_3) == 0x006550, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_2) == 0x006578, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult_1) == 0x0065A0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_TransitionResult) == 0x0065C8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_13) == 0x0065F0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_12) == 0x006638, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_6) == 0x006680, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_6) == 0x006748, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_11) == 0x006768, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_10) == 0x0067B0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_5) == 0x0067F8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_5) == 0x0068C0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_9) == 0x0068E0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_4) == 0x006928, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_8) == 0x0069F0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_4) == 0x006A38, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_7) == 0x006A58, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_3) == 0x006AA0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_6) == 0x006B68, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_3) == 0x006BB0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_5) == 0x006BD0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_2) == 0x006C18, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_4) == 0x006CE0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_2) == 0x006D28, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_3) == 0x006D48, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_2) == 0x006D90, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool_1) == 0x006DD8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive_1) == 0x006E20, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_3) == 0x006EE8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_2) == 0x006F10, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose_1) == 0x006F38, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_3) == 0x006F60, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_UseCachedPose) == 0x006FA8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult_1) == 0x006FD0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_2) == 0x006FF0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_BlendListByBool) == 0x007038, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer_1) == 0x007080, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ApplyAdditive) == 0x0070C8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_SequencePlayer) == 0x007190, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateResult) == 0x0071D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_StateMachine) == 0x0071F8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ModifyBone) == 0x0072C0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LegIK_1) == 0x0073E8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_LegIK) == 0x0074E0, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_Root) == 0x0075D8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AnimGraphNode_ComponentToLocalSpace) == 0x0075F8, "Member 'UANIMBP_Player_FP_Master_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, CameraRotationRate) == 0x007618, "Member 'UANIMBP_Player_FP_Master_C::CameraRotationRate' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bIsAiming) == 0x007630, "Member 'UANIMBP_Player_FP_Master_C::bIsAiming' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bIsFocusedAiming) == 0x007631, "Member 'UANIMBP_Player_FP_Master_C::bIsFocusedAiming' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bIsReloading) == 0x007632, "Member 'UANIMBP_Player_FP_Master_C::bIsReloading' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AimInterp) == 0x007638, "Member 'UANIMBP_Player_FP_Master_C::AimInterp' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bIsMagCheck) == 0x007640, "Member 'UANIMBP_Player_FP_Master_C::bIsMagCheck' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, IdlePlayrate) == 0x007648, "Member 'UANIMBP_Player_FP_Master_C::IdlePlayrate' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, ProcRecoilTrans) == 0x007650, "Member 'UANIMBP_Player_FP_Master_C::ProcRecoilTrans' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, ProcRecoilRot) == 0x007668, "Member 'UANIMBP_Player_FP_Master_C::ProcRecoilRot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, ProcRecoilBuildupTrans) == 0x007680, "Member 'UANIMBP_Player_FP_Master_C::ProcRecoilBuildupTrans' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, ProcRecoilBuildupRot) == 0x007698, "Member 'UANIMBP_Player_FP_Master_C::ProcRecoilBuildupRot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, NewVar_0) == 0x0076B0, "Member 'UANIMBP_Player_FP_Master_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, StanceAdjustment) == 0x0076C8, "Member 'UANIMBP_Player_FP_Master_C::StanceAdjustment' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, CapsuleRot) == 0x0076E0, "Member 'UANIMBP_Player_FP_Master_C::CapsuleRot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LazyAlpha) == 0x0076F8, "Member 'UANIMBP_Player_FP_Master_C::LazyAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, BaseMagWeaponRef) == 0x007700, "Member 'UANIMBP_Player_FP_Master_C::BaseMagWeaponRef' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, PlayerCharRef) == 0x007708, "Member 'UANIMBP_Player_FP_Master_C::PlayerCharRef' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, DeltaSeconds) == 0x007710, "Member 'UANIMBP_Player_FP_Master_C::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LegsBroken) == 0x007718, "Member 'UANIMBP_Player_FP_Master_C::LegsBroken' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, ArmsBroken) == 0x007719, "Member 'UANIMBP_Player_FP_Master_C::ArmsBroken' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, AimingLocoStrength) == 0x007720, "Member 'UANIMBP_Player_FP_Master_C::AimingLocoStrength' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bIsCrouched) == 0x007728, "Member 'UANIMBP_Player_FP_Master_C::bIsCrouched' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bLowReadyPointUp) == 0x007729, "Member 'UANIMBP_Player_FP_Master_C::bLowReadyPointUp' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bLowReadyPointDown) == 0x00772A, "Member 'UANIMBP_Player_FP_Master_C::bLowReadyPointDown' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LowReadyPointUpAlpha) == 0x007730, "Member 'UANIMBP_Player_FP_Master_C::LowReadyPointUpAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LowReadyPointDownAlpha) == 0x007738, "Member 'UANIMBP_Player_FP_Master_C::LowReadyPointDownAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LeanAlpha) == 0x007740, "Member 'UANIMBP_Player_FP_Master_C::LeanAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, FreeLookRot) == 0x007748, "Member 'UANIMBP_Player_FP_Master_C::FreeLookRot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, StabilizeMovementAlpha) == 0x007760, "Member 'UANIMBP_Player_FP_Master_C::StabilizeMovementAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, QuickLeanAmount) == 0x007768, "Member 'UANIMBP_Player_FP_Master_C::QuickLeanAmount' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bSightTweakMode) == 0x007770, "Member 'UANIMBP_Player_FP_Master_C::bSightTweakMode' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bIsJumping) == 0x007771, "Member 'UANIMBP_Player_FP_Master_C::bIsJumping' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bIsSprinting) == 0x007772, "Member 'UANIMBP_Player_FP_Master_C::bIsSprinting' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, InputUpDown) == 0x007778, "Member 'UANIMBP_Player_FP_Master_C::InputUpDown' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bOnLadder) == 0x007780, "Member 'UANIMBP_Player_FP_Master_C::bOnLadder' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bInteractionActive) == 0x007781, "Member 'UANIMBP_Player_FP_Master_C::bInteractionActive' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, Hand_IK_Left) == 0x007788, "Member 'UANIMBP_Player_FP_Master_C::Hand_IK_Left' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, Hand_IK_Right) == 0x007790, "Member 'UANIMBP_Player_FP_Master_C::Hand_IK_Right' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bHasUnderbarrelAttachment) == 0x007798, "Member 'UANIMBP_Player_FP_Master_C::bHasUnderbarrelAttachment' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, UnderbarrelType) == 0x007799, "Member 'UANIMBP_Player_FP_Master_C::UnderbarrelType' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bIsMontagePlaying) == 0x00779A, "Member 'UANIMBP_Player_FP_Master_C::bIsMontagePlaying' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bIsGrenade) == 0x00779B, "Member 'UANIMBP_Player_FP_Master_C::bIsGrenade' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, ShakeAmount) == 0x0077A0, "Member 'UANIMBP_Player_FP_Master_C::ShakeAmount' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bArrested) == 0x0077A8, "Member 'UANIMBP_Player_FP_Master_C::bArrested' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, DirBlendTime) == 0x0077B0, "Member 'UANIMBP_Player_FP_Master_C::DirBlendTime' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LeftHandSprintHack) == 0x0077B8, "Member 'UANIMBP_Player_FP_Master_C::LeftHandSprintHack' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LeftHandWorldVector) == 0x0077C0, "Member 'UANIMBP_Player_FP_Master_C::LeftHandWorldVector' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LeftHandWorldRotator) == 0x0077D8, "Member 'UANIMBP_Player_FP_Master_C::LeftHandWorldRotator' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LeftHandWorldAlpha) == 0x0077F0, "Member 'UANIMBP_Player_FP_Master_C::LeftHandWorldAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LeftHandWorldElbowVector) == 0x0077F8, "Member 'UANIMBP_Player_FP_Master_C::LeftHandWorldElbowVector' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bLeftHandDoorActive) == 0x007810, "Member 'UANIMBP_Player_FP_Master_C::bLeftHandDoorActive' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LeanHeadSocketLocation) == 0x007818, "Member 'UANIMBP_Player_FP_Master_C::LeanHeadSocketLocation' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LeanHeadBlendAlpha) == 0x007830, "Member 'UANIMBP_Player_FP_Master_C::LeanHeadBlendAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, LeanHeadOffset) == 0x007838, "Member 'UANIMBP_Player_FP_Master_C::LeanHeadOffset' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, Acceleration) == 0x007850, "Member 'UANIMBP_Player_FP_Master_C::Acceleration' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, CameraBobTrans) == 0x007868, "Member 'UANIMBP_Player_FP_Master_C::CameraBobTrans' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, StartMotionWeight) == 0x007880, "Member 'UANIMBP_Player_FP_Master_C::StartMotionWeight' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, StartMotionPlayrate) == 0x007888, "Member 'UANIMBP_Player_FP_Master_C::StartMotionPlayrate' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, WeaponBobTrans) == 0x007890, "Member 'UANIMBP_Player_FP_Master_C::WeaponBobTrans' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, WeaponBobRot) == 0x0078A8, "Member 'UANIMBP_Player_FP_Master_C::WeaponBobRot' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, WeaponBobAlpha) == 0x0078C0, "Member 'UANIMBP_Player_FP_Master_C::WeaponBobAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, WeaponBobTrigger) == 0x0078C8, "Member 'UANIMBP_Player_FP_Master_C::WeaponBobTrigger' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bShouldAllowStopMotion) == 0x0078C9, "Member 'UANIMBP_Player_FP_Master_C::bShouldAllowStopMotion' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bBuildUpSprint) == 0x0078CA, "Member 'UANIMBP_Player_FP_Master_C::bBuildUpSprint' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, SprintBuildupAlpha) == 0x0078D0, "Member 'UANIMBP_Player_FP_Master_C::SprintBuildupAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, bIsHeavyArmor) == 0x0078D8, "Member 'UANIMBP_Player_FP_Master_C::bIsHeavyArmor' has a wrong offset!");
static_assert(offsetof(UANIMBP_Player_FP_Master_C, NewVar) == 0x0078E0, "Member 'UANIMBP_Player_FP_Master_C::NewVar' has a wrong offset!");

}

