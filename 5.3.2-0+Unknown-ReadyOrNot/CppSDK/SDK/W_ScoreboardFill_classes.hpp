#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScoreboardFill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ScoreboardFill.W_ScoreboardFill_C
// 0x01C0 (0x0480 - 0x02C0)
class UW_ScoreboardFill_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Arrests;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             BlueTeam;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             BlueTeamCoop;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BlueTeamScore;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Damage;                                            // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Deaths;                                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             FreeplayMode;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HoldVIPTimeRemaining;                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_1;                                   // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Incapacitations;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Kills;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LeaderCoop;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ModeSwitcher;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Name_0;                                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Ping;                                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             RedTeam;                                           // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             RedTeamCoop;                                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RedTeamScore;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ReinforcementTimeRemaining;                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_65;                                       // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_71;                                       // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Score;                                             // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ScoreboardHeader;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Status;                                            // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Timelimit;                                         // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TimesArrested;                                     // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         TableHeaderFont;                                   // 0x0398(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateFontInfo                         ColumnHeaderFont;                                  // 0x03F0(0x0058)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bFreeForAll;                                       // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AReadyOrNotPlayerState*>         FFAPlayerStates;                                   // 0x0450(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          HideHealthStatus;                                  // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShowScoreboardHeader;                              // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bHideReadyCheckbox;                                // 0x0462(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShowReinforcementsTimer;                           // 0x0463(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShowTimelimitTimer;                                // 0x0464(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShowHoldVIPTimer;                                  // 0x0465(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_466[0x2];                                      // 0x0466(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NextUpdateTime;                                    // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberArrestedTeammatesRed;                        // 0x0470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberArrestedTeammatesBlue;                       // 0x0474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberTeammatesTotalRed;                           // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberTeammatesTotalBlue;                          // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void ExecuteUbergraph_W_ScoreboardFill(int32 EntryPoint);
	class FText Get_HoldVIPTimeRemaining_Text_0();
	class FText Get_ReinforcementTimeRemaining_Text_0();
	ESlateVisibility Get_Status_Visibility_0();
	class FText Get_Timelimit_Text_0();
	ESlateVisibility Get_Timelimit_Visibility_0();
	class FText GetBlueTeamScoreText();
	class FText GetRedTeamScoreText();
	ESlateVisibility GetTeamScoresVisibility();
	ESlateVisibility GetVisibility_0();
	ESlateVisibility HasReinforcements();
	ESlateVisibility IsVIP();
	void PreConstruct(bool IsDesignTime);
	void RefreshScoreboard();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	ESlateVisibility UsesScoring();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ScoreboardFill_C">();
	}
	static class UW_ScoreboardFill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ScoreboardFill_C>();
	}
};
static_assert(alignof(UW_ScoreboardFill_C) == 0x000008, "Wrong alignment on UW_ScoreboardFill_C");
static_assert(sizeof(UW_ScoreboardFill_C) == 0x000480, "Wrong size on UW_ScoreboardFill_C");
static_assert(offsetof(UW_ScoreboardFill_C, UberGraphFrame) == 0x0002C0, "Member 'UW_ScoreboardFill_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Arrests) == 0x0002C8, "Member 'UW_ScoreboardFill_C::Arrests' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, BlueTeam) == 0x0002D0, "Member 'UW_ScoreboardFill_C::BlueTeam' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, BlueTeamCoop) == 0x0002D8, "Member 'UW_ScoreboardFill_C::BlueTeamCoop' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, BlueTeamScore) == 0x0002E0, "Member 'UW_ScoreboardFill_C::BlueTeamScore' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Damage) == 0x0002E8, "Member 'UW_ScoreboardFill_C::Damage' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Deaths) == 0x0002F0, "Member 'UW_ScoreboardFill_C::Deaths' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, FreeplayMode) == 0x0002F8, "Member 'UW_ScoreboardFill_C::FreeplayMode' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, HoldVIPTimeRemaining) == 0x000300, "Member 'UW_ScoreboardFill_C::HoldVIPTimeRemaining' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, HorizontalBox_1) == 0x000308, "Member 'UW_ScoreboardFill_C::HorizontalBox_1' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Incapacitations) == 0x000310, "Member 'UW_ScoreboardFill_C::Incapacitations' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Kills) == 0x000318, "Member 'UW_ScoreboardFill_C::Kills' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, LeaderCoop) == 0x000320, "Member 'UW_ScoreboardFill_C::LeaderCoop' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ModeSwitcher) == 0x000328, "Member 'UW_ScoreboardFill_C::ModeSwitcher' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Name_0) == 0x000330, "Member 'UW_ScoreboardFill_C::Name_0' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Ping) == 0x000338, "Member 'UW_ScoreboardFill_C::Ping' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, RedTeam) == 0x000340, "Member 'UW_ScoreboardFill_C::RedTeam' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, RedTeamCoop) == 0x000348, "Member 'UW_ScoreboardFill_C::RedTeamCoop' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, RedTeamScore) == 0x000350, "Member 'UW_ScoreboardFill_C::RedTeamScore' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ReinforcementTimeRemaining) == 0x000358, "Member 'UW_ScoreboardFill_C::ReinforcementTimeRemaining' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ScaleBox_65) == 0x000360, "Member 'UW_ScoreboardFill_C::ScaleBox_65' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ScaleBox_71) == 0x000368, "Member 'UW_ScoreboardFill_C::ScaleBox_71' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Score) == 0x000370, "Member 'UW_ScoreboardFill_C::Score' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ScoreboardHeader) == 0x000378, "Member 'UW_ScoreboardFill_C::ScoreboardHeader' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Status) == 0x000380, "Member 'UW_ScoreboardFill_C::Status' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, Timelimit) == 0x000388, "Member 'UW_ScoreboardFill_C::Timelimit' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, TimesArrested) == 0x000390, "Member 'UW_ScoreboardFill_C::TimesArrested' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, TableHeaderFont) == 0x000398, "Member 'UW_ScoreboardFill_C::TableHeaderFont' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ColumnHeaderFont) == 0x0003F0, "Member 'UW_ScoreboardFill_C::ColumnHeaderFont' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, bFreeForAll) == 0x000448, "Member 'UW_ScoreboardFill_C::bFreeForAll' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, FFAPlayerStates) == 0x000450, "Member 'UW_ScoreboardFill_C::FFAPlayerStates' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, HideHealthStatus) == 0x000460, "Member 'UW_ScoreboardFill_C::HideHealthStatus' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ShowScoreboardHeader) == 0x000461, "Member 'UW_ScoreboardFill_C::ShowScoreboardHeader' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, bHideReadyCheckbox) == 0x000462, "Member 'UW_ScoreboardFill_C::bHideReadyCheckbox' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ShowReinforcementsTimer) == 0x000463, "Member 'UW_ScoreboardFill_C::ShowReinforcementsTimer' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ShowTimelimitTimer) == 0x000464, "Member 'UW_ScoreboardFill_C::ShowTimelimitTimer' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, ShowHoldVIPTimer) == 0x000465, "Member 'UW_ScoreboardFill_C::ShowHoldVIPTimer' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, NextUpdateTime) == 0x000468, "Member 'UW_ScoreboardFill_C::NextUpdateTime' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, NumberArrestedTeammatesRed) == 0x000470, "Member 'UW_ScoreboardFill_C::NumberArrestedTeammatesRed' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, NumberArrestedTeammatesBlue) == 0x000474, "Member 'UW_ScoreboardFill_C::NumberArrestedTeammatesBlue' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, NumberTeammatesTotalRed) == 0x000478, "Member 'UW_ScoreboardFill_C::NumberTeammatesTotalRed' has a wrong offset!");
static_assert(offsetof(UW_ScoreboardFill_C, NumberTeammatesTotalBlue) == 0x00047C, "Member 'UW_ScoreboardFill_C::NumberTeammatesTotalBlue' has a wrong offset!");

}

