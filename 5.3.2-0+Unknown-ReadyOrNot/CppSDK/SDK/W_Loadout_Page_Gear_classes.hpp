#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Page_Gear

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_Page_Gear.W_Loadout_Page_Gear_C
// 0x0070 (0x0480 - 0x0410)
class UW_Loadout_Page_Gear_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_TabCarousel_C*                       Carousel;                                          // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loadout_Page_ItemList_C*             LongTactical;                                      // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       Switcher;                                          // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnItemHovered;                                     // 0x0430(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnItemUnhovered;                                   // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ABaseItem*                              HoveredItem;                                       // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   CurrentPage;                                       // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Gamepad;                                       // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x3];                                      // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PreviousPage;                                      // 0x0464(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LeavingPage;                                       // 0x046C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             LongTacticalSelectedEvent;                         // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             HelmetSelectedEvent;                               // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BackPage(bool* Handled);
	void BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_6_OnSlotUnhovered__DelegateSignature();
	void BP_OnActivated();
	void BP_OnDeactivated();
	bool BP_OnHandleBackAction();
	void ChangePage(class FName PageName);
	void ExecuteUbergraph_W_Loadout_Page_Gear(int32 EntryPoint);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Hide(double Delay, bool Collapse);
	void InputMethodChanged(ECommonInputType bNewInputType);
	void OnInitialized();
	void RegisterTabPages();
	void Reveal(double Delay);
	void SetInputMode(bool IsGamepad);
	void TabChanged(class FName TabId);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateStyle(bool bUseGamepad);

	class UWidget* BP_GetDesiredFocusTarget() const;
	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_Page_Gear_C">();
	}
	static class UW_Loadout_Page_Gear_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_Page_Gear_C>();
	}
};
static_assert(alignof(UW_Loadout_Page_Gear_C) == 0x000008, "Wrong alignment on UW_Loadout_Page_Gear_C");
static_assert(sizeof(UW_Loadout_Page_Gear_C) == 0x000480, "Wrong size on UW_Loadout_Page_Gear_C");
static_assert(offsetof(UW_Loadout_Page_Gear_C, UberGraphFrame) == 0x000410, "Member 'UW_Loadout_Page_Gear_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, Carousel) == 0x000418, "Member 'UW_Loadout_Page_Gear_C::Carousel' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, LongTactical) == 0x000420, "Member 'UW_Loadout_Page_Gear_C::LongTactical' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, Switcher) == 0x000428, "Member 'UW_Loadout_Page_Gear_C::Switcher' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, OnItemHovered) == 0x000430, "Member 'UW_Loadout_Page_Gear_C::OnItemHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, OnItemUnhovered) == 0x000440, "Member 'UW_Loadout_Page_Gear_C::OnItemUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, HoveredItem) == 0x000450, "Member 'UW_Loadout_Page_Gear_C::HoveredItem' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, CurrentPage) == 0x000458, "Member 'UW_Loadout_Page_Gear_C::CurrentPage' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, Use_Gamepad) == 0x000460, "Member 'UW_Loadout_Page_Gear_C::Use_Gamepad' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, PreviousPage) == 0x000464, "Member 'UW_Loadout_Page_Gear_C::PreviousPage' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, LeavingPage) == 0x00046C, "Member 'UW_Loadout_Page_Gear_C::LeavingPage' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, LongTacticalSelectedEvent) == 0x000470, "Member 'UW_Loadout_Page_Gear_C::LongTacticalSelectedEvent' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_Gear_C, HelmetSelectedEvent) == 0x000478, "Member 'UW_Loadout_Page_Gear_C::HelmetSelectedEvent' has a wrong offset!");

}

