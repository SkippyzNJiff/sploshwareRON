#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_HotkeyBar

#include "Basic.hpp"

#include "st_HotkeySettings_structs.hpp"
#include "W_SubMenu_classes.hpp"
#include "Engine_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_HotkeyBar.W_HotkeyBar_C
// 0x0040 (0x0488 - 0x0448)
class UW_HotkeyBar_C final : public UW_SubMenu_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_W_HotkeyBar_C;                      // 0x0448(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBackgroundBlur*                        BackgroundBlur_0;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Bindings;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HotkeyBar_Entry_C*                   W_HotkeyBar_Entry;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct Fst_HotkeySettings>             Hotkeys;                                           // 0x0468(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMulticastInlineDelegate<void(const class FString& HotkeyID)> OnHotkeyClicked;                   // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BP_OnActivated();
	void BP_OnDeactivated();
	void Construct();
	void ExecuteUbergraph_W_HotkeyBar(int32 EntryPoint);
	void HotkeyButtonClicked(class UW_HotkeyBar_Entry_C* TriggeringHotkeyEntry);
	void PreConstruct(bool IsDesignTime);
	void UpdateHints(const TArray<struct Fst_HotkeySettings>& Hotkeys_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_HotkeyBar_C">();
	}
	static class UW_HotkeyBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_HotkeyBar_C>();
	}
};
static_assert(alignof(UW_HotkeyBar_C) == 0x000008, "Wrong alignment on UW_HotkeyBar_C");
static_assert(sizeof(UW_HotkeyBar_C) == 0x000488, "Wrong size on UW_HotkeyBar_C");
static_assert(offsetof(UW_HotkeyBar_C, UberGraphFrame_W_HotkeyBar_C) == 0x000448, "Member 'UW_HotkeyBar_C::UberGraphFrame_W_HotkeyBar_C' has a wrong offset!");
static_assert(offsetof(UW_HotkeyBar_C, BackgroundBlur_0) == 0x000450, "Member 'UW_HotkeyBar_C::BackgroundBlur_0' has a wrong offset!");
static_assert(offsetof(UW_HotkeyBar_C, HB_Bindings) == 0x000458, "Member 'UW_HotkeyBar_C::HB_Bindings' has a wrong offset!");
static_assert(offsetof(UW_HotkeyBar_C, W_HotkeyBar_Entry) == 0x000460, "Member 'UW_HotkeyBar_C::W_HotkeyBar_Entry' has a wrong offset!");
static_assert(offsetof(UW_HotkeyBar_C, Hotkeys) == 0x000468, "Member 'UW_HotkeyBar_C::Hotkeys' has a wrong offset!");
static_assert(offsetof(UW_HotkeyBar_C, OnHotkeyClicked) == 0x000478, "Member 'UW_HotkeyBar_C::OnHotkeyClicked' has a wrong offset!");

}

