#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SimplygonUObjects

#include "Basic.hpp"

#include "SimplygonUObjects_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class SimplygonUObjects.SimplygonStandinPipeline
// 0x0060 (0x0088 - 0x0028)
class USimplygonStandinPipeline : public UObject
{
public:
	struct FChartAggregatorSettings               ChartAggregatorSettings;                           // 0x0028(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMaterialOutputSettings                MaterialOutputSettings;                            // 0x0060(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonStandinPipeline">();
	}
	static class USimplygonStandinPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonStandinPipeline>();
	}
};
static_assert(alignof(USimplygonStandinPipeline) == 0x000008, "Wrong alignment on USimplygonStandinPipeline");
static_assert(sizeof(USimplygonStandinPipeline) == 0x000088, "Wrong size on USimplygonStandinPipeline");
static_assert(offsetof(USimplygonStandinPipeline, ChartAggregatorSettings) == 0x000028, "Member 'USimplygonStandinPipeline::ChartAggregatorSettings' has a wrong offset!");
static_assert(offsetof(USimplygonStandinPipeline, MaterialOutputSettings) == 0x000060, "Member 'USimplygonStandinPipeline::MaterialOutputSettings' has a wrong offset!");

// Class SimplygonUObjects.StandinNearPipeline
// 0x0200 (0x0288 - 0x0088)
class UStandinNearPipeline final : public USimplygonStandinPipeline
{
public:
	struct FAggregationPipelineSettings           Settings;                                          // 0x0088(0x01E0)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FNearStandinLightmapSettings           LightmapSettings;                                  // 0x0268(0x001C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StandinNearPipeline">();
	}
	static class UStandinNearPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStandinNearPipeline>();
	}
};
static_assert(alignof(UStandinNearPipeline) == 0x000008, "Wrong alignment on UStandinNearPipeline");
static_assert(sizeof(UStandinNearPipeline) == 0x000288, "Wrong size on UStandinNearPipeline");
static_assert(offsetof(UStandinNearPipeline, Settings) == 0x000088, "Member 'UStandinNearPipeline::Settings' has a wrong offset!");
static_assert(offsetof(UStandinNearPipeline, LightmapSettings) == 0x000268, "Member 'UStandinNearPipeline::LightmapSettings' has a wrong offset!");

// Class SimplygonUObjects.StandinFarPipeline
// 0x0210 (0x0298 - 0x0088)
class UStandinFarPipeline final : public USimplygonStandinPipeline
{
public:
	struct FRemeshingPipelineSettings             Settings;                                          // 0x0088(0x0208)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FStandinLightmapSettings               LightmapSettings;                                  // 0x0290(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"StandinFarPipeline">();
	}
	static class UStandinFarPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStandinFarPipeline>();
	}
};
static_assert(alignof(UStandinFarPipeline) == 0x000008, "Wrong alignment on UStandinFarPipeline");
static_assert(sizeof(UStandinFarPipeline) == 0x000298, "Wrong size on UStandinFarPipeline");
static_assert(offsetof(UStandinFarPipeline, Settings) == 0x000088, "Member 'UStandinFarPipeline::Settings' has a wrong offset!");
static_assert(offsetof(UStandinFarPipeline, LightmapSettings) == 0x000290, "Member 'UStandinFarPipeline::LightmapSettings' has a wrong offset!");

// Class SimplygonUObjects.BillboardCloudPipeline
// 0x0138 (0x01C0 - 0x0088)
class UBillboardCloudPipeline final : public USimplygonStandinPipeline
{
public:
	struct FBillboardCloudPipelineSettings        Settings;                                          // 0x0088(0x0130)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FStandinLightmapSettings               LightmapSettings;                                  // 0x01B8(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BillboardCloudPipeline">();
	}
	static class UBillboardCloudPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBillboardCloudPipeline>();
	}
};
static_assert(alignof(UBillboardCloudPipeline) == 0x000008, "Wrong alignment on UBillboardCloudPipeline");
static_assert(sizeof(UBillboardCloudPipeline) == 0x0001C0, "Wrong size on UBillboardCloudPipeline");
static_assert(offsetof(UBillboardCloudPipeline, Settings) == 0x000088, "Member 'UBillboardCloudPipeline::Settings' has a wrong offset!");
static_assert(offsetof(UBillboardCloudPipeline, LightmapSettings) == 0x0001B8, "Member 'UBillboardCloudPipeline::LightmapSettings' has a wrong offset!");

// Class SimplygonUObjects.SimplygonPipeline
// 0x0008 (0x0030 - 0x0028)
class USimplygonPipeline : public UObject
{
public:
	int32                                         BaseLODIndex;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonPipeline">();
	}
	static class USimplygonPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonPipeline>();
	}
};
static_assert(alignof(USimplygonPipeline) == 0x000008, "Wrong alignment on USimplygonPipeline");
static_assert(sizeof(USimplygonPipeline) == 0x000030, "Wrong size on USimplygonPipeline");
static_assert(offsetof(USimplygonPipeline, BaseLODIndex) == 0x000028, "Member 'USimplygonPipeline::BaseLODIndex' has a wrong offset!");

// Class SimplygonUObjects.FlipbookPipeline
// 0x0120 (0x0150 - 0x0030)
class UFlipbookPipeline final : public USimplygonPipeline
{
public:
	struct FFlipbookPipelineSettings              Settings;                                          // 0x0030(0x0120)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FlipbookPipeline">();
	}
	static class UFlipbookPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFlipbookPipeline>();
	}
};
static_assert(alignof(UFlipbookPipeline) == 0x000008, "Wrong alignment on UFlipbookPipeline");
static_assert(sizeof(UFlipbookPipeline) == 0x000150, "Wrong size on UFlipbookPipeline");
static_assert(offsetof(UFlipbookPipeline, Settings) == 0x000030, "Member 'UFlipbookPipeline::Settings' has a wrong offset!");

// Class SimplygonUObjects.BillboardCloudVegetationPipeline
// 0x0130 (0x0160 - 0x0030)
class UBillboardCloudVegetationPipeline final : public USimplygonPipeline
{
public:
	struct FBillboardCloudVegetationPipelineSettings Settings;                                       // 0x0030(0x0130)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BillboardCloudVegetationPipeline">();
	}
	static class UBillboardCloudVegetationPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBillboardCloudVegetationPipeline>();
	}
};
static_assert(alignof(UBillboardCloudVegetationPipeline) == 0x000008, "Wrong alignment on UBillboardCloudVegetationPipeline");
static_assert(sizeof(UBillboardCloudVegetationPipeline) == 0x000160, "Wrong size on UBillboardCloudVegetationPipeline");
static_assert(offsetof(UBillboardCloudVegetationPipeline, Settings) == 0x000030, "Member 'UBillboardCloudVegetationPipeline::Settings' has a wrong offset!");

// Class SimplygonUObjects.RemeshingPipeline
// 0x0208 (0x0238 - 0x0030)
class URemeshingPipeline final : public USimplygonPipeline
{
public:
	struct FRemeshingPipelineSettings             Settings;                                          // 0x0030(0x0208)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemeshingPipeline">();
	}
	static class URemeshingPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemeshingPipeline>();
	}
};
static_assert(alignof(URemeshingPipeline) == 0x000008, "Wrong alignment on URemeshingPipeline");
static_assert(sizeof(URemeshingPipeline) == 0x000238, "Wrong size on URemeshingPipeline");
static_assert(offsetof(URemeshingPipeline, Settings) == 0x000030, "Member 'URemeshingPipeline::Settings' has a wrong offset!");

// Class SimplygonUObjects.HighDensityMeshReductionPipeline
// 0x0030 (0x0060 - 0x0030)
class UHighDensityMeshReductionPipeline final : public USimplygonPipeline
{
public:
	struct FHighDensityMeshReductionPipelineSettings Settings;                                       // 0x0030(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HighDensityMeshReductionPipeline">();
	}
	static class UHighDensityMeshReductionPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHighDensityMeshReductionPipeline>();
	}
};
static_assert(alignof(UHighDensityMeshReductionPipeline) == 0x000008, "Wrong alignment on UHighDensityMeshReductionPipeline");
static_assert(sizeof(UHighDensityMeshReductionPipeline) == 0x000060, "Wrong size on UHighDensityMeshReductionPipeline");
static_assert(offsetof(UHighDensityMeshReductionPipeline, Settings) == 0x000030, "Member 'UHighDensityMeshReductionPipeline::Settings' has a wrong offset!");

// Class SimplygonUObjects.SimplygonMaterialCaster
// 0x0000 (0x0028 - 0x0028)
class USimplygonMaterialCaster : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonMaterialCaster">();
	}
	static class USimplygonMaterialCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonMaterialCaster>();
	}
};
static_assert(alignof(USimplygonMaterialCaster) == 0x000008, "Wrong alignment on USimplygonMaterialCaster");
static_assert(sizeof(USimplygonMaterialCaster) == 0x000028, "Wrong size on USimplygonMaterialCaster");

// Class SimplygonUObjects.SimplygonColorCaster
// 0x0030 (0x0058 - 0x0028)
class USimplygonColorCaster : public USimplygonMaterialCaster
{
public:
	struct FColorCasterSettings                   ColorCasterSettings;                               // 0x0028(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonColorCaster">();
	}
	static class USimplygonColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonColorCaster>();
	}
};
static_assert(alignof(USimplygonColorCaster) == 0x000008, "Wrong alignment on USimplygonColorCaster");
static_assert(sizeof(USimplygonColorCaster) == 0x000058, "Wrong size on USimplygonColorCaster");
static_assert(offsetof(USimplygonColorCaster, ColorCasterSettings) == 0x000028, "Member 'USimplygonColorCaster::ColorCasterSettings' has a wrong offset!");

// Class SimplygonUObjects.BaseColorCaster
// 0x0000 (0x0058 - 0x0058)
class UBaseColorCaster : public USimplygonColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseColorCaster">();
	}
	static class UBaseColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseColorCaster>();
	}
};
static_assert(alignof(UBaseColorCaster) == 0x000008, "Wrong alignment on UBaseColorCaster");
static_assert(sizeof(UBaseColorCaster) == 0x000058, "Wrong size on UBaseColorCaster");

// Class SimplygonUObjects.MetallicCaster
// 0x0000 (0x0058 - 0x0058)
class UMetallicCaster final : public UBaseColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MetallicCaster">();
	}
	static class UMetallicCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMetallicCaster>();
	}
};
static_assert(alignof(UMetallicCaster) == 0x000008, "Wrong alignment on UMetallicCaster");
static_assert(sizeof(UMetallicCaster) == 0x000058, "Wrong size on UMetallicCaster");

// Class SimplygonUObjects.SpecularCaster
// 0x0000 (0x0058 - 0x0058)
class USpecularCaster final : public UBaseColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecularCaster">();
	}
	static class USpecularCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecularCaster>();
	}
};
static_assert(alignof(USpecularCaster) == 0x000008, "Wrong alignment on USpecularCaster");
static_assert(sizeof(USpecularCaster) == 0x000058, "Wrong size on USpecularCaster");

// Class SimplygonUObjects.RoughnessCaster
// 0x0000 (0x0058 - 0x0058)
class URoughnessCaster final : public UBaseColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RoughnessCaster">();
	}
	static class URoughnessCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoughnessCaster>();
	}
};
static_assert(alignof(URoughnessCaster) == 0x000008, "Wrong alignment on URoughnessCaster");
static_assert(sizeof(URoughnessCaster) == 0x000058, "Wrong size on URoughnessCaster");

// Class SimplygonUObjects.SimplygonNormalCaster
// 0x0030 (0x0058 - 0x0028)
class USimplygonNormalCaster : public USimplygonMaterialCaster
{
public:
	struct FNormalCasterSettings                  NormalCasterSettings;                              // 0x0028(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonNormalCaster">();
	}
	static class USimplygonNormalCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonNormalCaster>();
	}
};
static_assert(alignof(USimplygonNormalCaster) == 0x000008, "Wrong alignment on USimplygonNormalCaster");
static_assert(sizeof(USimplygonNormalCaster) == 0x000058, "Wrong size on USimplygonNormalCaster");
static_assert(offsetof(USimplygonNormalCaster, NormalCasterSettings) == 0x000028, "Member 'USimplygonNormalCaster::NormalCasterSettings' has a wrong offset!");

// Class SimplygonUObjects.NormalCaster
// 0x0000 (0x0058 - 0x0058)
class UNormalCaster final : public USimplygonNormalCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NormalCaster">();
	}
	static class UNormalCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNormalCaster>();
	}
};
static_assert(alignof(UNormalCaster) == 0x000008, "Wrong alignment on UNormalCaster");
static_assert(sizeof(UNormalCaster) == 0x000058, "Wrong size on UNormalCaster");

// Class SimplygonUObjects.SimplygonOpacityCaster
// 0x0030 (0x0058 - 0x0028)
class USimplygonOpacityCaster : public USimplygonMaterialCaster
{
public:
	struct FOpacityCasterSettings                 OpacityCasterSettings;                             // 0x0028(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonOpacityCaster">();
	}
	static class USimplygonOpacityCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonOpacityCaster>();
	}
};
static_assert(alignof(USimplygonOpacityCaster) == 0x000008, "Wrong alignment on USimplygonOpacityCaster");
static_assert(sizeof(USimplygonOpacityCaster) == 0x000058, "Wrong size on USimplygonOpacityCaster");
static_assert(offsetof(USimplygonOpacityCaster, OpacityCasterSettings) == 0x000028, "Member 'USimplygonOpacityCaster::OpacityCasterSettings' has a wrong offset!");

// Class SimplygonUObjects.OpacityCaster
// 0x0000 (0x0058 - 0x0058)
class UOpacityCaster final : public USimplygonOpacityCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OpacityCaster">();
	}
	static class UOpacityCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOpacityCaster>();
	}
};
static_assert(alignof(UOpacityCaster) == 0x000008, "Wrong alignment on UOpacityCaster");
static_assert(sizeof(UOpacityCaster) == 0x000058, "Wrong size on UOpacityCaster");

// Class SimplygonUObjects.EmissiveCaster
// 0x0000 (0x0058 - 0x0058)
class UEmissiveCaster final : public UBaseColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmissiveCaster">();
	}
	static class UEmissiveCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmissiveCaster>();
	}
};
static_assert(alignof(UEmissiveCaster) == 0x000008, "Wrong alignment on UEmissiveCaster");
static_assert(sizeof(UEmissiveCaster) == 0x000058, "Wrong size on UEmissiveCaster");

// Class SimplygonUObjects.OpacityMaskCaster
// 0x0000 (0x0058 - 0x0058)
class UOpacityMaskCaster final : public USimplygonOpacityCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OpacityMaskCaster">();
	}
	static class UOpacityMaskCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOpacityMaskCaster>();
	}
};
static_assert(alignof(UOpacityMaskCaster) == 0x000008, "Wrong alignment on UOpacityMaskCaster");
static_assert(sizeof(UOpacityMaskCaster) == 0x000058, "Wrong size on UOpacityMaskCaster");

// Class SimplygonUObjects.AmbientOcclusionMaskCaster
// 0x0000 (0x0058 - 0x0058)
class UAmbientOcclusionMaskCaster final : public UBaseColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AmbientOcclusionMaskCaster">();
	}
	static class UAmbientOcclusionMaskCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAmbientOcclusionMaskCaster>();
	}
};
static_assert(alignof(UAmbientOcclusionMaskCaster) == 0x000008, "Wrong alignment on UAmbientOcclusionMaskCaster");
static_assert(sizeof(UAmbientOcclusionMaskCaster) == 0x000058, "Wrong size on UAmbientOcclusionMaskCaster");

// Class SimplygonUObjects.SimplygonVertexColorCaster
// 0x0048 (0x0070 - 0x0028)
class USimplygonVertexColorCaster : public USimplygonMaterialCaster
{
public:
	struct FVertexColorCasterSettings             VertexColorCasterSettings;                         // 0x0028(0x0048)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonVertexColorCaster">();
	}
	static class USimplygonVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonVertexColorCaster>();
	}
};
static_assert(alignof(USimplygonVertexColorCaster) == 0x000008, "Wrong alignment on USimplygonVertexColorCaster");
static_assert(sizeof(USimplygonVertexColorCaster) == 0x000070, "Wrong size on USimplygonVertexColorCaster");
static_assert(offsetof(USimplygonVertexColorCaster, VertexColorCasterSettings) == 0x000028, "Member 'USimplygonVertexColorCaster::VertexColorCasterSettings' has a wrong offset!");

// Class SimplygonUObjects.BaseColorVertexColorCaster
// 0x0000 (0x0070 - 0x0070)
class UBaseColorVertexColorCaster : public USimplygonVertexColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseColorVertexColorCaster">();
	}
	static class UBaseColorVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseColorVertexColorCaster>();
	}
};
static_assert(alignof(UBaseColorVertexColorCaster) == 0x000008, "Wrong alignment on UBaseColorVertexColorCaster");
static_assert(sizeof(UBaseColorVertexColorCaster) == 0x000070, "Wrong size on UBaseColorVertexColorCaster");

// Class SimplygonUObjects.MetallicVertexColorCaster
// 0x0000 (0x0070 - 0x0070)
class UMetallicVertexColorCaster final : public UBaseColorVertexColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MetallicVertexColorCaster">();
	}
	static class UMetallicVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMetallicVertexColorCaster>();
	}
};
static_assert(alignof(UMetallicVertexColorCaster) == 0x000008, "Wrong alignment on UMetallicVertexColorCaster");
static_assert(sizeof(UMetallicVertexColorCaster) == 0x000070, "Wrong size on UMetallicVertexColorCaster");

// Class SimplygonUObjects.SpecularVertexColorCaster
// 0x0000 (0x0070 - 0x0070)
class USpecularVertexColorCaster final : public UBaseColorVertexColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpecularVertexColorCaster">();
	}
	static class USpecularVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpecularVertexColorCaster>();
	}
};
static_assert(alignof(USpecularVertexColorCaster) == 0x000008, "Wrong alignment on USpecularVertexColorCaster");
static_assert(sizeof(USpecularVertexColorCaster) == 0x000070, "Wrong size on USpecularVertexColorCaster");

// Class SimplygonUObjects.RoughnessVertexColorCaster
// 0x0000 (0x0070 - 0x0070)
class URoughnessVertexColorCaster final : public UBaseColorVertexColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RoughnessVertexColorCaster">();
	}
	static class URoughnessVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<URoughnessVertexColorCaster>();
	}
};
static_assert(alignof(URoughnessVertexColorCaster) == 0x000008, "Wrong alignment on URoughnessVertexColorCaster");
static_assert(sizeof(URoughnessVertexColorCaster) == 0x000070, "Wrong size on URoughnessVertexColorCaster");

// Class SimplygonUObjects.NormalVertexColorCaster
// 0x0000 (0x0070 - 0x0070)
class UNormalVertexColorCaster final : public UBaseColorVertexColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NormalVertexColorCaster">();
	}
	static class UNormalVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNormalVertexColorCaster>();
	}
};
static_assert(alignof(UNormalVertexColorCaster) == 0x000008, "Wrong alignment on UNormalVertexColorCaster");
static_assert(sizeof(UNormalVertexColorCaster) == 0x000070, "Wrong size on UNormalVertexColorCaster");

// Class SimplygonUObjects.OpacityVertexColorCaster
// 0x0000 (0x0070 - 0x0070)
class UOpacityVertexColorCaster final : public UBaseColorVertexColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OpacityVertexColorCaster">();
	}
	static class UOpacityVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOpacityVertexColorCaster>();
	}
};
static_assert(alignof(UOpacityVertexColorCaster) == 0x000008, "Wrong alignment on UOpacityVertexColorCaster");
static_assert(sizeof(UOpacityVertexColorCaster) == 0x000070, "Wrong size on UOpacityVertexColorCaster");

// Class SimplygonUObjects.EmissiveVertexColorCaster
// 0x0000 (0x0070 - 0x0070)
class UEmissiveVertexColorCaster final : public UBaseColorVertexColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmissiveVertexColorCaster">();
	}
	static class UEmissiveVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmissiveVertexColorCaster>();
	}
};
static_assert(alignof(UEmissiveVertexColorCaster) == 0x000008, "Wrong alignment on UEmissiveVertexColorCaster");
static_assert(sizeof(UEmissiveVertexColorCaster) == 0x000070, "Wrong size on UEmissiveVertexColorCaster");

// Class SimplygonUObjects.OpacityMaskVertexColorCaster
// 0x0000 (0x0070 - 0x0070)
class UOpacityMaskVertexColorCaster final : public UBaseColorVertexColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OpacityMaskVertexColorCaster">();
	}
	static class UOpacityMaskVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOpacityMaskVertexColorCaster>();
	}
};
static_assert(alignof(UOpacityMaskVertexColorCaster) == 0x000008, "Wrong alignment on UOpacityMaskVertexColorCaster");
static_assert(sizeof(UOpacityMaskVertexColorCaster) == 0x000070, "Wrong size on UOpacityMaskVertexColorCaster");

// Class SimplygonUObjects.AmbientOcclusionVertexColorCaster
// 0x0000 (0x0070 - 0x0070)
class UAmbientOcclusionVertexColorCaster final : public UBaseColorVertexColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AmbientOcclusionVertexColorCaster">();
	}
	static class UAmbientOcclusionVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAmbientOcclusionVertexColorCaster>();
	}
};
static_assert(alignof(UAmbientOcclusionVertexColorCaster) == 0x000008, "Wrong alignment on UAmbientOcclusionVertexColorCaster");
static_assert(sizeof(UAmbientOcclusionVertexColorCaster) == 0x000070, "Wrong size on UAmbientOcclusionVertexColorCaster");

// Class SimplygonUObjects.SubSurfaceVertexColorCaster
// 0x0000 (0x0070 - 0x0070)
class USubSurfaceVertexColorCaster final : public UBaseColorVertexColorCaster
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SubSurfaceVertexColorCaster">();
	}
	static class USubSurfaceVertexColorCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USubSurfaceVertexColorCaster>();
	}
};
static_assert(alignof(USubSurfaceVertexColorCaster) == 0x000008, "Wrong alignment on USubSurfaceVertexColorCaster");
static_assert(sizeof(USubSurfaceVertexColorCaster) == 0x000070, "Wrong size on USubSurfaceVertexColorCaster");

// Class SimplygonUObjects.ReductionPipeline
// 0x0250 (0x0280 - 0x0030)
class UReductionPipeline final : public USimplygonPipeline
{
public:
	struct FReductionPipelineSettings             Settings;                                          // 0x0030(0x0250)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ReductionPipeline">();
	}
	static class UReductionPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UReductionPipeline>();
	}
};
static_assert(alignof(UReductionPipeline) == 0x000008, "Wrong alignment on UReductionPipeline");
static_assert(sizeof(UReductionPipeline) == 0x000280, "Wrong size on UReductionPipeline");
static_assert(offsetof(UReductionPipeline, Settings) == 0x000030, "Member 'UReductionPipeline::Settings' has a wrong offset!");

// Class SimplygonUObjects.AggregationPipeline
// 0x01E0 (0x0210 - 0x0030)
class UAggregationPipeline final : public USimplygonPipeline
{
public:
	struct FAggregationPipelineSettings           Settings;                                          // 0x0030(0x01E0)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AggregationPipeline">();
	}
	static class UAggregationPipeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAggregationPipeline>();
	}
};
static_assert(alignof(UAggregationPipeline) == 0x000008, "Wrong alignment on UAggregationPipeline");
static_assert(sizeof(UAggregationPipeline) == 0x000210, "Wrong size on UAggregationPipeline");
static_assert(offsetof(UAggregationPipeline, Settings) == 0x000030, "Member 'UAggregationPipeline::Settings' has a wrong offset!");

// Class SimplygonUObjects.SimplygonDisplacementCaster
// 0x0038 (0x0060 - 0x0028)
class USimplygonDisplacementCaster final : public USimplygonMaterialCaster
{
public:
	struct FDisplacementCasterSettings            DisplacementCasterSettings;                        // 0x0028(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonDisplacementCaster">();
	}
	static class USimplygonDisplacementCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonDisplacementCaster>();
	}
};
static_assert(alignof(USimplygonDisplacementCaster) == 0x000008, "Wrong alignment on USimplygonDisplacementCaster");
static_assert(sizeof(USimplygonDisplacementCaster) == 0x000060, "Wrong size on USimplygonDisplacementCaster");
static_assert(offsetof(USimplygonDisplacementCaster, DisplacementCasterSettings) == 0x000028, "Member 'USimplygonDisplacementCaster::DisplacementCasterSettings' has a wrong offset!");

// Class SimplygonUObjects.SimplygonAmbientOcclusionCaster
// 0x0040 (0x0068 - 0x0028)
class USimplygonAmbientOcclusionCaster final : public USimplygonMaterialCaster
{
public:
	struct FAmbientOcclusionCasterSettings        AmbientOcclusionCasterSettings;                    // 0x0028(0x0040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonAmbientOcclusionCaster">();
	}
	static class USimplygonAmbientOcclusionCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonAmbientOcclusionCaster>();
	}
};
static_assert(alignof(USimplygonAmbientOcclusionCaster) == 0x000008, "Wrong alignment on USimplygonAmbientOcclusionCaster");
static_assert(sizeof(USimplygonAmbientOcclusionCaster) == 0x000068, "Wrong size on USimplygonAmbientOcclusionCaster");
static_assert(offsetof(USimplygonAmbientOcclusionCaster, AmbientOcclusionCasterSettings) == 0x000028, "Member 'USimplygonAmbientOcclusionCaster::AmbientOcclusionCasterSettings' has a wrong offset!");

// Class SimplygonUObjects.SimplygonGeometryDataCaster
// 0x0088 (0x00B0 - 0x0028)
class USimplygonGeometryDataCaster final : public USimplygonMaterialCaster
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometryDataCasterSettings            GeometryDataCasterSettings;                        // 0x0030(0x0080)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonGeometryDataCaster">();
	}
	static class USimplygonGeometryDataCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonGeometryDataCaster>();
	}
};
static_assert(alignof(USimplygonGeometryDataCaster) == 0x000010, "Wrong alignment on USimplygonGeometryDataCaster");
static_assert(sizeof(USimplygonGeometryDataCaster) == 0x0000B0, "Wrong size on USimplygonGeometryDataCaster");
static_assert(offsetof(USimplygonGeometryDataCaster, GeometryDataCasterSettings) == 0x000030, "Member 'USimplygonGeometryDataCaster::GeometryDataCasterSettings' has a wrong offset!");

// Class SimplygonUObjects.SimplygonComputeCaster
// 0x0038 (0x0060 - 0x0028)
class USimplygonComputeCaster final : public USimplygonMaterialCaster
{
public:
	struct FComputeCasterSettings                 ComputeCasterSettings;                             // 0x0028(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimplygonComputeCaster">();
	}
	static class USimplygonComputeCaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimplygonComputeCaster>();
	}
};
static_assert(alignof(USimplygonComputeCaster) == 0x000008, "Wrong alignment on USimplygonComputeCaster");
static_assert(sizeof(USimplygonComputeCaster) == 0x000060, "Wrong size on USimplygonComputeCaster");
static_assert(offsetof(USimplygonComputeCaster, ComputeCasterSettings) == 0x000028, "Member 'USimplygonComputeCaster::ComputeCasterSettings' has a wrong offset!");

}

