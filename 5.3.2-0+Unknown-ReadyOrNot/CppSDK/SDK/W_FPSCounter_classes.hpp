#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FPSCounter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_FPSCounter.W_FPSCounter_C
// 0x0028 (0x02E8 - 0x02C0)
class UW_FPSCounter_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             FPS;                                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ReflexGameLatency;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ReflexGameToRenderLatency;                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ReflexRenderLatency;                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Check_If_Enabled();
	void Construct();
	void ExecuteUbergraph_W_FPSCounter(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_FPSCounter_C">();
	}
	static class UW_FPSCounter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_FPSCounter_C>();
	}
};
static_assert(alignof(UW_FPSCounter_C) == 0x000008, "Wrong alignment on UW_FPSCounter_C");
static_assert(sizeof(UW_FPSCounter_C) == 0x0002E8, "Wrong size on UW_FPSCounter_C");
static_assert(offsetof(UW_FPSCounter_C, UberGraphFrame) == 0x0002C0, "Member 'UW_FPSCounter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_FPSCounter_C, FPS) == 0x0002C8, "Member 'UW_FPSCounter_C::FPS' has a wrong offset!");
static_assert(offsetof(UW_FPSCounter_C, ReflexGameLatency) == 0x0002D0, "Member 'UW_FPSCounter_C::ReflexGameLatency' has a wrong offset!");
static_assert(offsetof(UW_FPSCounter_C, ReflexGameToRenderLatency) == 0x0002D8, "Member 'UW_FPSCounter_C::ReflexGameToRenderLatency' has a wrong offset!");
static_assert(offsetof(UW_FPSCounter_C, ReflexRenderLatency) == 0x0002E0, "Member 'UW_FPSCounter_C::ReflexRenderLatency' has a wrong offset!");

}

