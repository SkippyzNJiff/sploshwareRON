#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_C2_Charge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_C2_Charge.ANIMBP_C2_Charge_C
// 0x00D0 (0x0670 - 0x05A0)
class UANIMBP_C2_Charge_C final : public UReadyOrNotAnimInstance
{
public:
	uint8                                         Pad_598[0x8];                                      // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x05A8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x05B0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x05B8(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x05D8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0620(0x0048)()

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_ANIMBP_C2_Charge(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_C2_Charge_C">();
	}
	static class UANIMBP_C2_Charge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_C2_Charge_C>();
	}
};
static_assert(alignof(UANIMBP_C2_Charge_C) == 0x000010, "Wrong alignment on UANIMBP_C2_Charge_C");
static_assert(sizeof(UANIMBP_C2_Charge_C) == 0x000670, "Wrong size on UANIMBP_C2_Charge_C");
static_assert(offsetof(UANIMBP_C2_Charge_C, UberGraphFrame) == 0x0005A0, "Member 'UANIMBP_C2_Charge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_C2_Charge_C, AnimBlueprintExtension_PropertyAccess) == 0x0005A8, "Member 'UANIMBP_C2_Charge_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UANIMBP_C2_Charge_C, AnimBlueprintExtension_Base) == 0x0005B0, "Member 'UANIMBP_C2_Charge_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UANIMBP_C2_Charge_C, AnimGraphNode_Root) == 0x0005B8, "Member 'UANIMBP_C2_Charge_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_C2_Charge_C, AnimGraphNode_Slot) == 0x0005D8, "Member 'UANIMBP_C2_Charge_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_C2_Charge_C, AnimGraphNode_SequencePlayer) == 0x000620, "Member 'UANIMBP_C2_Charge_C::AnimGraphNode_SequencePlayer' has a wrong offset!");

}

