#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Munitions

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_Munitions.W_Loadout_Munitions_C
// 0x00A8 (0x04B8 - 0x0410)
class UW_Loadout_Munitions_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       lbl_Grenades;                                      // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_PrimaryAmmo;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_SecondaryAmmo;                                 // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_Tactical;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             MunitionsItemScrollBox;                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Slots;                                         // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_GrenadeBox;                                     // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Grenades;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Primary;                                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_PrimaryAmmoBox;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Secondary;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_SecondaryAmmoBox;                               // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Tactical;                                       // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_TacticalBox;                                    // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShowPrimary;                                       // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowSecondary;                                     // 0x0489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowGrenades;                                      // 0x048A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowTactical;                                      // 0x048B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_LoadoutSlot_v2_C*                    LastHoveredSlot;                                   // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_LoadoutSlot_v2_C*>            SlotWidgets;                                       // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMulticastInlineDelegate<void(class UW_Loadout_Munitions_C* TriggeringList, class UW_LoadoutSlot_v2_C* TriggeringSlot)> OnMunitionHovered; // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BackPage(bool* Handled);
	void BP_OnActivated();
	void ChangePage(class FName PageName);
	void Construct();
	void CreateGrenadeSlots();
	void CreatePrimarySlots();
	void CreateSecondarySlots();
	void CreateTacticalSlots();
	class UWidget* CustomNavigation(EUINavigation Navigation_0);
	void DeployableSlotHovered(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void ExecuteUbergraph_W_Loadout_Munitions(int32 EntryPoint);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Hide(double Delay, bool Collapse);
	void Initialize();
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void PrimaryAmmoSlotHovered(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void PrimaryHasFocus(bool* HasFocus);
	void Refresh_Ammo_for_Weapon(bool bPrimary);
	void RefreshAllSlots();
	void Reveal(double Delay);
	void SecondaryAmmoSlotHovered(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void SecondaryHasFocus(bool* HasFocus);
	void SetInputMode(bool IsGamepad);
	void SetVisibleCategories(bool Primary, bool Secondary, bool Grenades, bool Tactical);
	void SlotUnhovered();
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);
	void UpdateNavigation();
	void UpdateSlotUsage();

	class UWidget* BP_GetDesiredFocusTarget() const;
	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_Munitions_C">();
	}
	static class UW_Loadout_Munitions_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_Munitions_C>();
	}
};
static_assert(alignof(UW_Loadout_Munitions_C) == 0x000008, "Wrong alignment on UW_Loadout_Munitions_C");
static_assert(sizeof(UW_Loadout_Munitions_C) == 0x0004B8, "Wrong size on UW_Loadout_Munitions_C");
static_assert(offsetof(UW_Loadout_Munitions_C, UberGraphFrame) == 0x000410, "Member 'UW_Loadout_Munitions_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, lbl_Grenades) == 0x000418, "Member 'UW_Loadout_Munitions_C::lbl_Grenades' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, lbl_PrimaryAmmo) == 0x000420, "Member 'UW_Loadout_Munitions_C::lbl_PrimaryAmmo' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, lbl_SecondaryAmmo) == 0x000428, "Member 'UW_Loadout_Munitions_C::lbl_SecondaryAmmo' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, lbl_Tactical) == 0x000430, "Member 'UW_Loadout_Munitions_C::lbl_Tactical' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, MunitionsItemScrollBox) == 0x000438, "Member 'UW_Loadout_Munitions_C::MunitionsItemScrollBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, txt_Slots) == 0x000440, "Member 'UW_Loadout_Munitions_C::txt_Slots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_GrenadeBox) == 0x000448, "Member 'UW_Loadout_Munitions_C::VB_GrenadeBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_Grenades) == 0x000450, "Member 'UW_Loadout_Munitions_C::VB_Grenades' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_Primary) == 0x000458, "Member 'UW_Loadout_Munitions_C::VB_Primary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_PrimaryAmmoBox) == 0x000460, "Member 'UW_Loadout_Munitions_C::VB_PrimaryAmmoBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_Secondary) == 0x000468, "Member 'UW_Loadout_Munitions_C::VB_Secondary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_SecondaryAmmoBox) == 0x000470, "Member 'UW_Loadout_Munitions_C::VB_SecondaryAmmoBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_Tactical) == 0x000478, "Member 'UW_Loadout_Munitions_C::VB_Tactical' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, VB_TacticalBox) == 0x000480, "Member 'UW_Loadout_Munitions_C::VB_TacticalBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, ShowPrimary) == 0x000488, "Member 'UW_Loadout_Munitions_C::ShowPrimary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, ShowSecondary) == 0x000489, "Member 'UW_Loadout_Munitions_C::ShowSecondary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, ShowGrenades) == 0x00048A, "Member 'UW_Loadout_Munitions_C::ShowGrenades' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, ShowTactical) == 0x00048B, "Member 'UW_Loadout_Munitions_C::ShowTactical' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, LastHoveredSlot) == 0x000490, "Member 'UW_Loadout_Munitions_C::LastHoveredSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, SlotWidgets) == 0x000498, "Member 'UW_Loadout_Munitions_C::SlotWidgets' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Munitions_C, OnMunitionHovered) == 0x0004A8, "Member 'UW_Loadout_Munitions_C::OnMunitionHovered' has a wrong offset!");

}

