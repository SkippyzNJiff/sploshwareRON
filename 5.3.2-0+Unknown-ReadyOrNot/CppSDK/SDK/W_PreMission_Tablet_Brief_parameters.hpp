#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Brief

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.AudioPlayerVisible
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_Brief_C_AudioPlayerVisible final
{
public:
	class UW_AudioPlayer_C*                       PlayerWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerVisible;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_AudioPlayerVisible) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_AudioPlayerVisible");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_AudioPlayerVisible) == 0x000010, "Wrong size on W_PreMission_Tablet_Brief_C_AudioPlayerVisible");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_AudioPlayerVisible, PlayerWidget) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_AudioPlayerVisible::PlayerWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_AudioPlayerVisible, PlayerVisible) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_AudioPlayerVisible::PlayerVisible' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.AutoPauseDispatchAudio
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio final
{
public:
	bool                                          CallFunc_DispatchPlayingNotPaused_ReturnValue;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio, CallFunc_DispatchPlayingNotPaused_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_AutoPauseDispatchAudio::CallFunc_DispatchPlayingNotPaused_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.AutoPlayDispatchAudio
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_AutoPlayDispatchAudio::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BackPage) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_BackPage");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BackPage) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_BackPage");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BackPage, Handled) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BackPage::Handled' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_btn_Audio_K2Node_ComponentBoundEvent_10_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Audio_K2Node_ComponentBoundEvent_10_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Audio_K2Node_ComponentBoundEvent_10_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Audio_K2Node_ComponentBoundEvent_10_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Audio_K2Node_ComponentBoundEvent_10_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Audio_K2Node_ComponentBoundEvent_10_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Audio_K2Node_ComponentBoundEvent_10_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Audio_K2Node_ComponentBoundEvent_10_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Civilians_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Media_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Overview_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_btn_Suspects_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_NavButtonLeft_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonLeft_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonLeft_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonLeft_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonLeft_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonLeft_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonLeft_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonLeft_K2Node_ComponentBoundEvent_7_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BndEvt__W_PreMission_Tablet_Brief_NavButtonRight_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonRight_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonRight_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonRight_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonRight_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonRight_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonRight_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BndEvt__W_PreMission_Tablet_Brief_NavButtonRight_K2Node_ComponentBoundEvent_8_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_ChangePage) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Brief_C_ChangePage");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_ChangePage) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_ChangePage");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ChangePage, PageName) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_ChangePage::PageName' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.DispatchPlayingNotPaused
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingAudio_Playing;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused) == 0x000004, "Wrong size on W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused, ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused, CallFunc_IsPlayingAudio_Playing) == 0x000001, "Member 'W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused::CallFunc_IsPlayingAudio_Playing' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'W_PreMission_Tablet_Brief_C_DispatchPlayingNotPaused::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.ExecuteUbergraph_W_PreMission_Tablet_Brief
// 0x09C0 (0x09C0 - 0x0000)
struct W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_5;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_4;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_MissionURL;                           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  K2Node_Event_LevelData;                            // 0x0048(0x0880)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x08C8(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0x4];                                      // 0x0904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_6;               // 0x0908(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_911[0x3];                                      // 0x0911(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0914(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DispatchPlayingNotPaused_ReturnValue;     // 0x091C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91D[0x3];                                      // 0x091D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0920(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsAwake;                              // 0x0929(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92A[0x6];                                      // 0x092A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_942[0x6];                                      // 0x0942(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_3;               // 0x0948(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_2;               // 0x0950(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x0958(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_AudioPlayer_C*                       K2Node_Event_PlayerWidget;                         // 0x0960(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PlayerVisible;                        // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_969[0x7];                                      // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0970(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0978(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0988(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0998(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x09A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_UseDarkTheme;                         // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief) == 0x0009C0, "Wrong size on W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, EntryPoint) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_CustomEvent_bNewInputType) == 0x000020, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button_5) == 0x000028, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button_5' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button_4) == 0x000030, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_MissionURL) == 0x000038, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_MissionURL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_LevelData) == 0x000048, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_LevelData' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_MyGeometry) == 0x0008C8, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_InDeltaTime) == 0x000900, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button_6) == 0x000908, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button_6' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_IsDesignTime) == 0x000910, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_PageName) == 0x000914, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_DispatchPlayingNotPaused_ReturnValue) == 0x00091C, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_DispatchPlayingNotPaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000920, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, CallFunc_GetCurrentInputType_ReturnValue) == 0x000928, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_IsAwake) == 0x000929, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_IsAwake' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_Delay_1) == 0x000930, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_Delay) == 0x000938, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_Collapse) == 0x000940, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_IsGamepad) == 0x000941, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button_3) == 0x000948, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button_2) == 0x000950, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button_1) == 0x000958, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_PlayerWidget) == 0x000960, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_PlayerWidget' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_PlayerVisible) == 0x000968, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_PlayerVisible' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_ComponentBoundEvent_Button) == 0x000970, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_CreateDelegate_OutputDelegate_1) == 0x000978, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_CreateDelegate_OutputDelegate_2) == 0x000988, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_CreateDelegate_OutputDelegate_3) == 0x000998, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_CreateDelegate_OutputDelegate_4) == 0x0009A8, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief, K2Node_Event_UseDarkTheme) == 0x0009B8, "Member 'W_PreMission_Tablet_Brief_C_ExecuteUbergraph_W_PreMission_Tablet_Brief::K2Node_Event_UseDarkTheme' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.HasEnabledMediaPlayer
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_HasEnabledMediaPlayer final
{
public:
	bool                                          MediaPlayerEnabled;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_HasEnabledMediaPlayer) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_HasEnabledMediaPlayer");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_HasEnabledMediaPlayer) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_HasEnabledMediaPlayer");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_HasEnabledMediaPlayer, MediaPlayerEnabled) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_HasEnabledMediaPlayer::MediaPlayerEnabled' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_PreMission_Tablet_Brief_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_Hide) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_Hide");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_Hide) == 0x000010, "Wrong size on W_PreMission_Tablet_Brief_C_Hide");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Hide, Delay) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Hide, Collapse) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_Hide::Collapse' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.Is on Audio Page
// 0x0004 (0x0004 - 0x0000)
struct W_PreMission_Tablet_Brief_C_Is_on_Audio_Page final
{
public:
	bool                                          OnAudioPage;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_Is_on_Audio_Page) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_Is_on_Audio_Page");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_Is_on_Audio_Page) == 0x000004, "Wrong size on W_PreMission_Tablet_Brief_C_Is_on_Audio_Page");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Is_on_Audio_Page, OnAudioPage) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_Is_on_Audio_Page::OnAudioPage' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Is_on_Audio_Page, CallFunc_GetSelected_ReturnValue) == 0x000001, "Member 'W_PreMission_Tablet_Brief_C_Is_on_Audio_Page::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Is_on_Audio_Page, CallFunc_GetSelected_ReturnValue_1) == 0x000002, "Member 'W_PreMission_Tablet_Brief_C_Is_on_Audio_Page::CallFunc_GetSelected_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Is_on_Audio_Page, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'W_PreMission_Tablet_Brief_C_Is_on_Audio_Page::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.IsAudioPlaying
// 0x000A (0x000A - 0x0000)
struct W_PreMission_Tablet_Brief_C_IsAudioPlaying final
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActiveAudioEntryPlaying;                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAudioPlaying_IsPlaying;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAudioPlaying_IsPlaying_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_IsAudioPlaying) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_IsAudioPlaying");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_IsAudioPlaying) == 0x00000A, "Wrong size on W_PreMission_Tablet_Brief_C_IsAudioPlaying");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_IsAudioPlaying, IsPlaying) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_IsAudioPlaying::IsPlaying' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_IsAudioPlaying, IsActiveAudioEntryPlaying) == 0x000001, "Member 'W_PreMission_Tablet_Brief_C_IsAudioPlaying::IsActiveAudioEntryPlaying' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_IsAudioPlaying, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'W_PreMission_Tablet_Brief_C_IsAudioPlaying::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_IsAudioPlaying, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'W_PreMission_Tablet_Brief_C_IsAudioPlaying::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_IsAudioPlaying, CallFunc_IsAudioPlaying_IsPlaying) == 0x000004, "Member 'W_PreMission_Tablet_Brief_C_IsAudioPlaying::CallFunc_IsAudioPlaying_IsPlaying' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_IsAudioPlaying, CallFunc_Not_PreBool_ReturnValue_1) == 0x000005, "Member 'W_PreMission_Tablet_Brief_C_IsAudioPlaying::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_IsAudioPlaying, CallFunc_IsAudioPlaying_IsPlaying_1) == 0x000006, "Member 'W_PreMission_Tablet_Brief_C_IsAudioPlaying::CallFunc_IsAudioPlaying_IsPlaying_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_IsAudioPlaying, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'W_PreMission_Tablet_Brief_C_IsAudioPlaying::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_IsAudioPlaying, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_IsAudioPlaying::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_IsAudioPlaying, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'W_PreMission_Tablet_Brief_C_IsAudioPlaying::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.MissionChanged
// 0x0890 (0x0890 - 0x0000)
struct W_PreMission_Tablet_Brief_C_MissionChanged final
{
public:
	class FString                                 MissionURL;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLevelDataLookupTable                  LevelData;                                         // 0x0010(0x0880)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_MissionChanged) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_MissionChanged");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_MissionChanged) == 0x000890, "Wrong size on W_PreMission_Tablet_Brief_C_MissionChanged");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_MissionChanged, MissionURL) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_MissionChanged::MissionURL' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_MissionChanged, LevelData) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_MissionChanged::LevelData' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.NavigatePage
// 0x0020 (0x0020 - 0x0000)
struct W_PreMission_Tablet_Brief_C_NavigatePage final
{
public:
	const class UW_Button_C*                      ClickedButton;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_NavigatePage) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_NavigatePage");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_NavigatePage) == 0x000020, "Wrong size on W_PreMission_Tablet_Brief_C_NavigatePage");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NavigatePage, ClickedButton) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_NavigatePage::ClickedButton' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NavigatePage, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_NavigatePage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NavigatePage, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_NavigatePage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NavigatePage, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_PreMission_Tablet_Brief_C_NavigatePage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.NextTab
// 0x0058 (0x0058 - 0x0000)
struct W_PreMission_Tablet_Brief_C_NextTab final
{
public:
	int32                                         NextIndex;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ButtonListNavigationDirection;                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_Button_C*>                    CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_NextTab) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_NextTab");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_NextTab) == 0x000058, "Wrong size on W_PreMission_Tablet_Brief_C_NextTab");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, NextIndex) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_NextTab::NextIndex' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, ButtonListNavigationDirection) == 0x000004, "Member 'W_PreMission_Tablet_Brief_C_NextTab::ButtonListNavigationDirection' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_NextTab::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'W_PreMission_Tablet_Brief_C_NextTab::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, Temp_int_Variable) == 0x000018, "Member 'W_PreMission_Tablet_Brief_C_NextTab::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x000020, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_NextTab, CallFunc_IsVisible_ReturnValue) == 0x000051, "Member 'W_PreMission_Tablet_Brief_C_NextTab::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.OnAnalogValueChanged
// 0x0138 (0x0138 - 0x0000)
struct W_PreMission_Tablet_Brief_C_OnAnalogValueChanged final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FAnalogInputEvent                      InAnalogInputEvent;                                // 0x0038(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0080(0x00B8)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_OnAnalogValueChanged) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_OnAnalogValueChanged");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_OnAnalogValueChanged) == 0x000138, "Wrong size on W_PreMission_Tablet_Brief_C_OnAnalogValueChanged");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_OnAnalogValueChanged, MyGeometry) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_OnAnalogValueChanged::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_OnAnalogValueChanged, InAnalogInputEvent) == 0x000038, "Member 'W_PreMission_Tablet_Brief_C_OnAnalogValueChanged::InAnalogInputEvent' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_OnAnalogValueChanged, ReturnValue) == 0x000080, "Member 'W_PreMission_Tablet_Brief_C_OnAnalogValueChanged::ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.OnInputChange
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_OnInputChange final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_OnInputChange) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_OnInputChange");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_OnInputChange) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_OnInputChange");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_OnInputChange, bNewInputType) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_OnInputChange::bNewInputType' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_PreConstruct) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_PreConstruct");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_PreConstruct) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_PreConstruct");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.PreviousTab
// 0x0058 (0x0058 - 0x0000)
struct W_PreMission_Tablet_Brief_C_PreviousTab final
{
public:
	int32                                         NextIndex;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Button_C*>                    CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_PreviousTab) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_PreviousTab");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_PreviousTab) == 0x000058, "Wrong size on W_PreMission_Tablet_Brief_C_PreviousTab");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, NextIndex) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::NextIndex' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, Temp_int_Variable) == 0x000018, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x000020, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_PreviousTab, CallFunc_IsVisible_ReturnValue) == 0x000051, "Member 'W_PreMission_Tablet_Brief_C_PreviousTab::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_Reveal) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_Reveal");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_Reveal) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_Reveal");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Reveal, Delay) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_Reveal::Delay' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_SetInputMode) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_SetInputMode");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_SetInputMode) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_SetInputMode");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.SetTabletState
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_SetTabletState final
{
public:
	bool                                          IsAwake;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_SetTabletState) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_SetTabletState");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_SetTabletState) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_SetTabletState");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetTabletState, IsAwake) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_SetTabletState::IsAwake' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.SetVisualTheme
// 0x0001 (0x0001 - 0x0000)
struct W_PreMission_Tablet_Brief_C_SetVisualTheme final
{
public:
	bool                                          UseDarkTheme;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_SetVisualTheme) == 0x000001, "Wrong alignment on W_PreMission_Tablet_Brief_C_SetVisualTheme");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_SetVisualTheme) == 0x000001, "Wrong size on W_PreMission_Tablet_Brief_C_SetVisualTheme");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_SetVisualTheme, UseDarkTheme) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_SetVisualTheme::UseDarkTheme' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_PreMission_Tablet_Brief_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_Tick) == 0x000004, "Wrong alignment on W_PreMission_Tablet_Brief_C_Tick");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_Tick) == 0x00003C, "Wrong size on W_PreMission_Tablet_Brief_C_Tick");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Tick, MyGeometry) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_Tick, InDeltaTime) == 0x000038, "Member 'W_PreMission_Tablet_Brief_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

// Function W_PreMission_Tablet_Brief.W_PreMission_Tablet_Brief_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_PreMission_Tablet_Brief_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PreMission_Tablet_Brief_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_PreMission_Tablet_Brief_C_GetFocusTarget");
static_assert(sizeof(W_PreMission_Tablet_Brief_C_GetFocusTarget) == 0x000008, "Wrong size on W_PreMission_Tablet_Brief_C_GetFocusTarget");
static_assert(offsetof(W_PreMission_Tablet_Brief_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_PreMission_Tablet_Brief_C_GetFocusTarget::Focus' has a wrong offset!");

}

