#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Popup_Base

#include "Basic.hpp"

#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Popup_Base.W_Popup_Base_C
// 0x0040 (0x0450 - 0x0410)
class UW_Popup_Base_C final : public UCommonActivatableWidget
{
public:
	class UVerticalBox*                           ContentBox;                                        // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             ContentSlot;                                       // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             FooterSlot;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_Background;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           RoundupActions;                                    // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RoundupActionsDivider;                             // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox;                                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             UpperSlot;                                         // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Popup_Base_C">();
	}
	static class UW_Popup_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Popup_Base_C>();
	}
};
static_assert(alignof(UW_Popup_Base_C) == 0x000008, "Wrong alignment on UW_Popup_Base_C");
static_assert(sizeof(UW_Popup_Base_C) == 0x000450, "Wrong size on UW_Popup_Base_C");
static_assert(offsetof(UW_Popup_Base_C, ContentBox) == 0x000410, "Member 'UW_Popup_Base_C::ContentBox' has a wrong offset!");
static_assert(offsetof(UW_Popup_Base_C, ContentSlot) == 0x000418, "Member 'UW_Popup_Base_C::ContentSlot' has a wrong offset!");
static_assert(offsetof(UW_Popup_Base_C, FooterSlot) == 0x000420, "Member 'UW_Popup_Base_C::FooterSlot' has a wrong offset!");
static_assert(offsetof(UW_Popup_Base_C, img_Background) == 0x000428, "Member 'UW_Popup_Base_C::img_Background' has a wrong offset!");
static_assert(offsetof(UW_Popup_Base_C, RoundupActions) == 0x000430, "Member 'UW_Popup_Base_C::RoundupActions' has a wrong offset!");
static_assert(offsetof(UW_Popup_Base_C, RoundupActionsDivider) == 0x000438, "Member 'UW_Popup_Base_C::RoundupActionsDivider' has a wrong offset!");
static_assert(offsetof(UW_Popup_Base_C, ScaleBox) == 0x000440, "Member 'UW_Popup_Base_C::ScaleBox' has a wrong offset!");
static_assert(offsetof(UW_Popup_Base_C, UpperSlot) == 0x000448, "Member 'UW_Popup_Base_C::UpperSlot' has a wrong offset!");

}

