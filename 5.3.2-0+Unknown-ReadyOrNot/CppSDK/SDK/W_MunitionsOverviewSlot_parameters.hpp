#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MunitionsOverviewSlot

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindClick
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindClick final
{
public:
	class UW_Button_C*                            ParentButton;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindClick) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BindClick");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindClick) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_BindClick");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindClick, ParentButton) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindClick::ParentButton' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindDoubleClick
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindDoubleClick final
{
public:
	class UW_Button_C*                            ParentButton;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindDoubleClick) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BindDoubleClick");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindDoubleClick) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_BindDoubleClick");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindDoubleClick, ParentButton) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindDoubleClick::ParentButton' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindHovered
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindHovered final
{
public:
	class UW_Button_C*                            ParentButton;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindHovered) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BindHovered");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindHovered) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_BindHovered");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindHovered, ParentButton) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindHovered::ParentButton' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindPressedState
// 0x0001 (0x0001 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindPressedState final
{
public:
	bool                                          CallFunc_IsPressed_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindPressedState) == 0x000001, "Wrong alignment on W_MunitionsOverviewSlot_C_BindPressedState");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindPressedState) == 0x000001, "Wrong size on W_MunitionsOverviewSlot_C_BindPressedState");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindPressedState, CallFunc_IsPressed_ReturnValue) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindPressedState::CallFunc_IsPressed_ReturnValue' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindSelectedState
// 0x0010 (0x0010 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindSelectedState final
{
public:
	class UW_Button_C*                            ParentButton;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindSelectedState) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BindSelectedState");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindSelectedState) == 0x000010, "Wrong size on W_MunitionsOverviewSlot_C_BindSelectedState");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindSelectedState, ParentButton) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindSelectedState::ParentButton' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindSelectedState, CallFunc_GetSelected_ReturnValue) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_BindSelectedState::CallFunc_GetSelected_ReturnValue' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BindToButton
// 0x0080 (0x0080 - 0x0000)
struct W_MunitionsOverviewSlot_C_BindToButton final
{
public:
	class UW_Button_C*                            ParentButton;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          BindClicks;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_Button_C* Button)>    K2Node_CreateDelegate_OutputDelegate_6;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BindToButton) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BindToButton");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BindToButton) == 0x000080, "Wrong size on W_MunitionsOverviewSlot_C_BindToButton");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, ParentButton) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BindToButton::ParentButton' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, BindClicks) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_BindToButton::BindClicks' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_3) == 0x00003C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_4) == 0x00004C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_5) == 0x00005C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BindToButton, K2Node_CreateDelegate_OutputDelegate_6) == 0x00006C, "Member 'W_MunitionsOverviewSlot_C_BindToButton::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(sizeof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature");
static_assert(offsetof(W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_BndEvt__W_MunitionsSlot_MunitionsButton_K2Node_ComponentBoundEvent_1_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.CreateElement
// 0x0028 (0x0028 - 0x0000)
struct W_MunitionsOverviewSlot_C_CreateElement final
{
public:
	class UTexture2D*                             Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAmmoElement;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AmmoType;                                          // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_CreateElement) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_CreateElement");
static_assert(sizeof(W_MunitionsOverviewSlot_C_CreateElement) == 0x000028, "Wrong size on W_MunitionsOverviewSlot_C_CreateElement");
static_assert(offsetof(W_MunitionsOverviewSlot_C_CreateElement, Icon) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_CreateElement::Icon' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_CreateElement, Amount) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_CreateElement::Amount' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_CreateElement, bIsAmmoElement) == 0x00000C, "Member 'W_MunitionsOverviewSlot_C_CreateElement::bIsAmmoElement' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_CreateElement, AmmoType) == 0x000010, "Member 'W_MunitionsOverviewSlot_C_CreateElement::AmmoType' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.CreateSeparator
// 0x0001 (0x0001 - 0x0000)
struct W_MunitionsOverviewSlot_C_CreateSeparator final
{
public:
	bool                                          bShouldCreateSeparator;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_CreateSeparator) == 0x000001, "Wrong alignment on W_MunitionsOverviewSlot_C_CreateSeparator");
static_assert(sizeof(W_MunitionsOverviewSlot_C_CreateSeparator) == 0x000001, "Wrong size on W_MunitionsOverviewSlot_C_CreateSeparator");
static_assert(offsetof(W_MunitionsOverviewSlot_C_CreateSeparator, bShouldCreateSeparator) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_CreateSeparator::bShouldCreateSeparator' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.ExecuteUbergraph_W_MunitionsOverviewSlot
// 0x05F0 (0x05F0 - 0x0000)
struct W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_MunitionsOverviewSlot_Element_C*     CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShouldCreateSeparator;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_Icon;                                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Amount;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsAmmoElement;                       // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_AmmoType;                             // 0x00A8(0x0018)(ConstParm)
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetAmmoOverrideIcon_OverrideIcon;         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_2;                   // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetAmmoOverrideIcon_OverrideIcon_1;       // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAmmoTypeData                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0118(0x0178)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0298(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x3];                                      // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_CurrentSlots;                         // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_MaxSlots;                             // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02D0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0320(0x0050)(HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0370(0x0014)()
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0388(0x0010)(ReferenceParm)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03A8(0x0018)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x03C0(0x00D0)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0490(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x04E0(0x0010)(ReferenceParm)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x04F8(0x0018)()
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x0510(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x3];                                      // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate_2;          // 0x051C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollOffsetOfEnd_ReturnValue;         // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_542[0x6];                                      // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0584(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewFraction_ReturnValue;              // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x05AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AE[0x2];                                      // 0x05AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x05B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast; // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CC[0x4];                                      // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot) == 0x000010, "Wrong alignment on W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot");
static_assert(sizeof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot) == 0x0005F0, "Wrong size on W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, EntryPoint) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, Temp_int_Variable) == 0x000004, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, Temp_bool_Has_Been_Initd_Variable) == 0x00000C, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_MyGeometry) == 0x000010, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_InDeltaTime) == 0x000048, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetOwningPlayer_ReturnValue) == 0x000050, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Create_ReturnValue) == 0x000058, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_AddChild_ReturnValue) == 0x000060, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_AddChild_ReturnValue_1) == 0x000068, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_bShouldCreateSeparator) == 0x000080, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_bShouldCreateSeparator' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_CreateDelegate_OutputDelegate_1) == 0x000084, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_Icon) == 0x000098, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_Icon' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_Amount) == 0x0000A0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_Amount' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_bIsAmmoElement) == 0x0000A4, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_bIsAmmoElement' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_AmmoType) == 0x0000A8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_AmmoType' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_SpawnObject_ReturnValue) == 0x0000C0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetAmmoOverrideIcon_OverrideIcon) == 0x0000C8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetAmmoOverrideIcon_OverrideIcon' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_AddChild_ReturnValue_2) == 0x0000D0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_AddChild_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x0000E0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetAmmoOverrideIcon_OverrideIcon_1) == 0x000100, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetAmmoOverrideIcon_OverrideIcon_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Conv_StringToName_ReturnValue) == 0x000108, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetDataTableRowFromName_OutRow) == 0x000118, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000290, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x000294, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Conv_IntToText_ReturnValue) == 0x000298, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002B0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_CurrentSlots) == 0x0002B4, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_CurrentSlots' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_Event_MaxSlots) == 0x0002B8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_Event_MaxSlots' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0002C0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0002C8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_FormatArgumentData) == 0x0002D0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x000320, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_SlateColor) == 0x000370, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeArray_Array) == 0x000388, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_MakeVector2D_ReturnValue) == 0x000398, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Format_ReturnValue) == 0x0003A8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_SlateBrush) == 0x0003C0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_FormatArgumentData_2) == 0x000490, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeArray_Array_1) == 0x0004E0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_ComponentBoundEvent_Button_1) == 0x0004F0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Format_ReturnValue_1) == 0x0004F8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_ComponentBoundEvent_Button) == 0x000510, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_CustomEvent_bNewInputType) == 0x000518, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_CreateDelegate_OutputDelegate_2) == 0x00051C, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00052C, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetScrollOffsetOfEnd_ReturnValue) == 0x000530, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetScrollOffsetOfEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Lerp_ReturnValue) == 0x000538, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000540, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, Temp_bool_IsClosed_Variable) == 0x000541, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000548, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetCurrentInputType_ReturnValue) == 0x000550, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetScrollOffset_ReturnValue) == 0x000554, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000558, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000560, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000568, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000570, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000578, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_IsValid_ReturnValue_2) == 0x000580, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_Margin) == 0x000584, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000598, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x0005A0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_GetViewFraction_ReturnValue) == 0x0005A8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_GetViewFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_IsValid_ReturnValue_3) == 0x0005AC, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0005AD, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0005B0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0005B8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Lerp_B_ImplicitCast) == 0x0005C0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast) == 0x0005C8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0005D0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Delay_Duration_ImplicitCast) == 0x0005D8, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0005E0, "Member 'W_MunitionsOverviewSlot_C_ExecuteUbergraph_W_MunitionsOverviewSlot::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.GetAmmoOverrideIcon
// 0x01B8 (0x01B8 - 0x0000)
struct W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon final
{
public:
	class FText                                   AmmoType;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UTexture2D*                             OverrideIcon;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAmmoTypeData                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0178)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon");
static_assert(sizeof(W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon) == 0x0001B8, "Wrong size on W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon, AmmoType) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon::AmmoType' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon, OverrideIcon) == 0x000018, "Member 'W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon::OverrideIcon' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B0, "Member 'W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon, CallFunc_IsValid_ReturnValue) == 0x0001B1, "Member 'W_MunitionsOverviewSlot_C_GetAmmoOverrideIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.GetNormalColorByState
// 0x0040 (0x0040 - 0x0000)
struct W_MunitionsOverviewSlot_C_GetNormalColorByState final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0018(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x002C(0x0014)()
};
static_assert(alignof(W_MunitionsOverviewSlot_C_GetNormalColorByState) == 0x000004, "Wrong alignment on W_MunitionsOverviewSlot_C_GetNormalColorByState");
static_assert(sizeof(W_MunitionsOverviewSlot_C_GetNormalColorByState) == 0x000040, "Wrong size on W_MunitionsOverviewSlot_C_GetNormalColorByState");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetNormalColorByState, ReturnValue) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_GetNormalColorByState::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetNormalColorByState, Temp_bool_Variable) == 0x000014, "Member 'W_MunitionsOverviewSlot_C_GetNormalColorByState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetNormalColorByState, Temp_bool_Variable_1) == 0x000015, "Member 'W_MunitionsOverviewSlot_C_GetNormalColorByState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetNormalColorByState, K2Node_Select_Default) == 0x000018, "Member 'W_MunitionsOverviewSlot_C_GetNormalColorByState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_GetNormalColorByState, K2Node_Select_Default_1) == 0x00002C, "Member 'W_MunitionsOverviewSlot_C_GetNormalColorByState::K2Node_Select_Default_1' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct W_MunitionsOverviewSlot_C_InputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_InputMethodChanged) == 0x000001, "Wrong alignment on W_MunitionsOverviewSlot_C_InputMethodChanged");
static_assert(sizeof(W_MunitionsOverviewSlot_C_InputMethodChanged) == 0x000001, "Wrong size on W_MunitionsOverviewSlot_C_InputMethodChanged");
static_assert(offsetof(W_MunitionsOverviewSlot_C_InputMethodChanged, bNewInputType) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_InputMethodChanged::bNewInputType' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.SetVisualState
// 0x0050 (0x0050 - 0x0000)
struct W_MunitionsOverviewSlot_C_SetVisualState final
{
public:
	bool                                          Hovered;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetNormalColorByState_ReturnValue;        // 0x0028(0x0014)()
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_SetVisualState) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_SetVisualState");
static_assert(sizeof(W_MunitionsOverviewSlot_C_SetVisualState) == 0x000050, "Wrong size on W_MunitionsOverviewSlot_C_SetVisualState");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, Hovered) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::Hovered' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, Pressed) == 0x000001, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::Pressed' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, Temp_bool_Variable) == 0x000002, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, Temp_struct_Variable) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, Temp_struct_Variable_1) == 0x000018, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, CallFunc_GetNormalColorByState_ReturnValue) == 0x000028, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::CallFunc_GetNormalColorByState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_SetVisualState, K2Node_Select_Default) == 0x000040, "Member 'W_MunitionsOverviewSlot_C_SetVisualState::K2Node_Select_Default' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_MunitionsOverviewSlot_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_Tick) == 0x000004, "Wrong alignment on W_MunitionsOverviewSlot_C_Tick");
static_assert(sizeof(W_MunitionsOverviewSlot_C_Tick) == 0x00003C, "Wrong size on W_MunitionsOverviewSlot_C_Tick");
static_assert(offsetof(W_MunitionsOverviewSlot_C_Tick, MyGeometry) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_Tick, InDeltaTime) == 0x000038, "Member 'W_MunitionsOverviewSlot_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.UnbindFromButton
// 0x0001 (0x0001 - 0x0000)
struct W_MunitionsOverviewSlot_C_UnbindFromButton final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_UnbindFromButton) == 0x000001, "Wrong alignment on W_MunitionsOverviewSlot_C_UnbindFromButton");
static_assert(sizeof(W_MunitionsOverviewSlot_C_UnbindFromButton) == 0x000001, "Wrong size on W_MunitionsOverviewSlot_C_UnbindFromButton");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UnbindFromButton, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_UnbindFromButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.UpdateSlotText
// 0x0008 (0x0008 - 0x0000)
struct W_MunitionsOverviewSlot_C_UpdateSlotText final
{
public:
	int32                                         CurrentSlots;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxSlots;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_UpdateSlotText) == 0x000004, "Wrong alignment on W_MunitionsOverviewSlot_C_UpdateSlotText");
static_assert(sizeof(W_MunitionsOverviewSlot_C_UpdateSlotText) == 0x000008, "Wrong size on W_MunitionsOverviewSlot_C_UpdateSlotText");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateSlotText, CurrentSlots) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_UpdateSlotText::CurrentSlots' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateSlotText, MaxSlots) == 0x000004, "Member 'W_MunitionsOverviewSlot_C_UpdateSlotText::MaxSlots' has a wrong offset!");

// Function W_MunitionsOverviewSlot.W_MunitionsOverviewSlot_C.UpdateStyle
// 0x0010 (0x0010 - 0x0000)
struct W_MunitionsOverviewSlot_C_UpdateStyle final
{
public:
	bool                                          bUseGamepad_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonButtonStyle>         K2Node_Select_Default_1;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(W_MunitionsOverviewSlot_C_UpdateStyle) == 0x000008, "Wrong alignment on W_MunitionsOverviewSlot_C_UpdateStyle");
static_assert(sizeof(W_MunitionsOverviewSlot_C_UpdateStyle) == 0x000010, "Wrong size on W_MunitionsOverviewSlot_C_UpdateStyle");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, bUseGamepad_0) == 0x000000, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::bUseGamepad_0' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, Temp_bool_Variable) == 0x000001, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, Temp_bool_Variable_1) == 0x000002, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, Temp_byte_Variable) == 0x000003, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, Temp_byte_Variable_1) == 0x000004, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, K2Node_Select_Default) == 0x000005, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_MunitionsOverviewSlot_C_UpdateStyle, K2Node_Select_Default_1) == 0x000008, "Member 'W_MunitionsOverviewSlot_C_UpdateStyle::K2Node_Select_Default_1' has a wrong offset!");

}

