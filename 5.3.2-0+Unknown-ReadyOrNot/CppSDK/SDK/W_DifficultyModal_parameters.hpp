#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DifficultyModal

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_DifficultyModal.W_DifficultyModal_C.BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature) == 0x000008, "Wrong alignment on W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature");
static_assert(sizeof(W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature) == 0x000010, "Wrong size on W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature");
static_assert(offsetof(W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature, Button) == 0x000000, "Member 'W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature, Selected) == 0x000008, "Member 'W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature::Selected' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature final
{
public:
	class FString                                 ButtonId;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature");
static_assert(sizeof(W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature) == 0x000010, "Wrong size on W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature");
static_assert(offsetof(W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature, ButtonId) == 0x000000, "Member 'W_DifficultyModal_C_BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature::ButtonId' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_DifficultyModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.BP_OnHandleBackAction
// 0x0001 (0x0001 - 0x0000)
struct W_DifficultyModal_C_BP_OnHandleBackAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on W_DifficultyModal_C_BP_OnHandleBackAction");
static_assert(sizeof(W_DifficultyModal_C_BP_OnHandleBackAction) == 0x000001, "Wrong size on W_DifficultyModal_C_BP_OnHandleBackAction");
static_assert(offsetof(W_DifficultyModal_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'W_DifficultyModal_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.Confirm
// 0x0003 (0x0003 - 0x0000)
struct W_DifficultyModal_C_Confirm final
{
public:
	bool                                          OkClicked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyClicked;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TextInputConfirm;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_Confirm) == 0x000001, "Wrong alignment on W_DifficultyModal_C_Confirm");
static_assert(sizeof(W_DifficultyModal_C_Confirm) == 0x000003, "Wrong size on W_DifficultyModal_C_Confirm");
static_assert(offsetof(W_DifficultyModal_C_Confirm, OkClicked) == 0x000000, "Member 'W_DifficultyModal_C_Confirm::OkClicked' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Confirm, ApplyClicked) == 0x000001, "Member 'W_DifficultyModal_C_Confirm::ApplyClicked' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Confirm, TextInputConfirm) == 0x000002, "Member 'W_DifficultyModal_C_Confirm::TextInputConfirm' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.DisplayWarningText
// 0x0018 (0x0018 - 0x0000)
struct W_DifficultyModal_C_DisplayWarningText final
{
public:
	class FText                                   WarningText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_DifficultyModal_C_DisplayWarningText) == 0x000008, "Wrong alignment on W_DifficultyModal_C_DisplayWarningText");
static_assert(sizeof(W_DifficultyModal_C_DisplayWarningText) == 0x000018, "Wrong size on W_DifficultyModal_C_DisplayWarningText");
static_assert(offsetof(W_DifficultyModal_C_DisplayWarningText, WarningText) == 0x000000, "Member 'W_DifficultyModal_C_DisplayWarningText::WarningText' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.Do Custom Navigation Cancel Down
// 0x0018 (0x0018 - 0x0000)
struct W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteractionEnabled_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down) == 0x000008, "Wrong alignment on W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down");
static_assert(sizeof(W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down) == 0x000018, "Wrong size on W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down");
static_assert(offsetof(W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down, Navigation_0) == 0x000000, "Member 'W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down, ReturnValue) == 0x000008, "Member 'W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down, CallFunc_IsInteractionEnabled_ReturnValue) == 0x000010, "Member 'W_DifficultyModal_C_Do_Custom_Navigation_Cancel_Down::CallFunc_IsInteractionEnabled_ReturnValue' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.ExecuteUbergraph_W_DifficultyModal
// 0x02A8 (0x02A8 - 0x0000)
struct W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_DifficultyModalEntry_C*              CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDifficultySubsystem*                   CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bEnabled, const struct FGameplayTag& DifficultyTag)> K2Node_CreateDelegate_OutputDelegate; // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_GetOrderedDifficulties_ReturnValue;       // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x003C(0x0008)(NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDifficultySubsystem*                   CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0070(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayOverride                            Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECrossplayOverride                            Temp_byte_Variable_1;                              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float CurrentOffset)>          K2Node_CreateDelegate_OutputDelegate_1;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x00B0(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDifficultyData                        CallFunc_Map_Find_Value;                           // 0x0158(0x0098)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_ButtonID;               // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess_1;                  // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnabled;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_DifficultyTag;                  // 0x021C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Selected;               // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0258(0x0018)()
	ECrossplayOverride                            K2Node_Select_Default_1;                           // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate_2;          // 0x0274(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue_1;      // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurrentOffset;                  // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal) == 0x000008, "Wrong alignment on W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal");
static_assert(sizeof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal) == 0x0002A8, "Wrong size on W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, EntryPoint) == 0x000000, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Create_ReturnValue) == 0x000008, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000010, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_GetOrderedDifficulties_ReturnValue) == 0x000028, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_GetOrderedDifficulties_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_MakeStruct_SlateChildSize) == 0x00003C, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x000048, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, Temp_bool_Variable) == 0x000050, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, Temp_text_Variable) == 0x000058, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, Temp_text_Variable_1) == 0x000070, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, Temp_bool_Variable_1) == 0x000088, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, Temp_byte_Variable) == 0x000089, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, Temp_byte_Variable_1) == 0x00008A, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_Event_IsDesignTime) == 0x00008B, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_CreateDelegate_OutputDelegate_1) == 0x00008C, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_CustomEvent_bNewInputType) == 0x00009C, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00009D, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_ComponentBoundEvent_Button_2) == 0x0000A0, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_ComponentBoundEvent_Button_1) == 0x0000A8, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_GetCachedGeometry_ReturnValue) == 0x0000B0, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_GetDesiredSize_ReturnValue) == 0x0000E8, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_GetLocalSize_ReturnValue) == 0x0000F8, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_BreakVector2D_X) == 0x000108, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_BreakVector2D_Y) == 0x000110, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_BreakVector2D_X_1) == 0x000118, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_BreakVector2D_Y_1) == 0x000120, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_GetScrollOffset_ReturnValue) == 0x000128, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000130, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, Temp_int_Array_Index_Variable) == 0x000138, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Array_Get_Item) == 0x000148, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000150, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Map_Find_Value) == 0x000158, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Map_Find_ReturnValue) == 0x0001F0, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_ComponentBoundEvent_ButtonID) == 0x0001F8, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_ComponentBoundEvent_ButtonID' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_SwitchString_CmpSuccess) == 0x000208, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_SwitchString_CmpSuccess_1) == 0x000209, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_SwitchString_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000210, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_CustomEvent_bEnabled) == 0x000218, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_CustomEvent_bEnabled' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_CustomEvent_DifficultyTag) == 0x00021C, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_CustomEvent_DifficultyTag' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000228, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Array_RemoveItem_ReturnValue) == 0x000230, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Array_AddUnique_ReturnValue) == 0x000234, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, Temp_int_Loop_Counter_Variable) == 0x000238, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Less_IntInt_ReturnValue) == 0x00023C, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Add_IntInt_ReturnValue) == 0x000240, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_ComponentBoundEvent_Button) == 0x000248, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_ComponentBoundEvent_Selected) == 0x000250, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_ComponentBoundEvent_Selected' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_Select_Default) == 0x000258, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_Select_Default_1) == 0x000270, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_CreateDelegate_OutputDelegate_2) == 0x000274, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000288, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_GetDesiredFocusTarget_ReturnValue_1) == 0x000290, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_GetDesiredFocusTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, K2Node_CustomEvent_CurrentOffset) == 0x000298, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::K2Node_CustomEvent_CurrentOffset' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x0002A0, "Member 'W_DifficultyModal_C_ExecuteUbergraph_W_DifficultyModal::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.Get_OkButton_bIsEnabled_0
// 0x0004 (0x0004 - 0x0000)
struct W_DifficultyModal_C_Get_OkButton_bIsEnabled_0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_Get_OkButton_bIsEnabled_0) == 0x000001, "Wrong alignment on W_DifficultyModal_C_Get_OkButton_bIsEnabled_0");
static_assert(sizeof(W_DifficultyModal_C_Get_OkButton_bIsEnabled_0) == 0x000004, "Wrong size on W_DifficultyModal_C_Get_OkButton_bIsEnabled_0");
static_assert(offsetof(W_DifficultyModal_C_Get_OkButton_bIsEnabled_0, ReturnValue) == 0x000000, "Member 'W_DifficultyModal_C_Get_OkButton_bIsEnabled_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Get_OkButton_bIsEnabled_0, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_DifficultyModal_C_Get_OkButton_bIsEnabled_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Get_OkButton_bIsEnabled_0, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'W_DifficultyModal_C_Get_OkButton_bIsEnabled_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Get_OkButton_bIsEnabled_0, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'W_DifficultyModal_C_Get_OkButton_bIsEnabled_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct W_DifficultyModal_C_InputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_InputMethodChanged) == 0x000001, "Wrong alignment on W_DifficultyModal_C_InputMethodChanged");
static_assert(sizeof(W_DifficultyModal_C_InputMethodChanged) == 0x000001, "Wrong size on W_DifficultyModal_C_InputMethodChanged");
static_assert(offsetof(W_DifficultyModal_C_InputMethodChanged, bNewInputType) == 0x000000, "Member 'W_DifficultyModal_C_InputMethodChanged::bNewInputType' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.OnButtonStateChanged
// 0x000C (0x000C - 0x0000)
struct W_DifficultyModal_C_OnButtonStateChanged final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           DifficultyTag;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_OnButtonStateChanged) == 0x000004, "Wrong alignment on W_DifficultyModal_C_OnButtonStateChanged");
static_assert(sizeof(W_DifficultyModal_C_OnButtonStateChanged) == 0x00000C, "Wrong size on W_DifficultyModal_C_OnButtonStateChanged");
static_assert(offsetof(W_DifficultyModal_C_OnButtonStateChanged, bEnabled) == 0x000000, "Member 'W_DifficultyModal_C_OnButtonStateChanged::bEnabled' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_OnButtonStateChanged, DifficultyTag) == 0x000004, "Member 'W_DifficultyModal_C_OnButtonStateChanged::DifficultyTag' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.OnUserScrolled_Event_0
// 0x0004 (0x0004 - 0x0000)
struct W_DifficultyModal_C_OnUserScrolled_Event_0 final
{
public:
	float                                         CurrentOffset;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_OnUserScrolled_Event_0) == 0x000004, "Wrong alignment on W_DifficultyModal_C_OnUserScrolled_Event_0");
static_assert(sizeof(W_DifficultyModal_C_OnUserScrolled_Event_0) == 0x000004, "Wrong size on W_DifficultyModal_C_OnUserScrolled_Event_0");
static_assert(offsetof(W_DifficultyModal_C_OnUserScrolled_Event_0, CurrentOffset) == 0x000000, "Member 'W_DifficultyModal_C_OnUserScrolled_Event_0::CurrentOffset' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_DifficultyModal_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_PreConstruct) == 0x000001, "Wrong alignment on W_DifficultyModal_C_PreConstruct");
static_assert(sizeof(W_DifficultyModal_C_PreConstruct) == 0x000001, "Wrong size on W_DifficultyModal_C_PreConstruct");
static_assert(offsetof(W_DifficultyModal_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_DifficultyModal_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.Reconfigure
// 0x0018 (0x0018 - 0x0000)
struct W_DifficultyModal_C_Reconfigure final
{
public:
	bool                                          IsHosting;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FriendsOnly;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShowFooter_IsPlaystation;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_Reconfigure) == 0x000008, "Wrong alignment on W_DifficultyModal_C_Reconfigure");
static_assert(sizeof(W_DifficultyModal_C_Reconfigure) == 0x000018, "Wrong size on W_DifficultyModal_C_Reconfigure");
static_assert(offsetof(W_DifficultyModal_C_Reconfigure, IsHosting) == 0x000000, "Member 'W_DifficultyModal_C_Reconfigure::IsHosting' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Reconfigure, FriendsOnly) == 0x000001, "Member 'W_DifficultyModal_C_Reconfigure::FriendsOnly' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Reconfigure, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000008, "Member 'W_DifficultyModal_C_Reconfigure::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Reconfigure, CallFunc_ShowFooter_IsPlaystation) == 0x000010, "Member 'W_DifficultyModal_C_Reconfigure::CallFunc_ShowFooter_IsPlaystation' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.ReconfigureButtons
// 0x0080 (0x0080 - 0x0000)
struct W_DifficultyModal_C_ReconfigureButtons final
{
public:
	bool                                          ShowOkButton_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowCancelButton_0;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowApplyButton_0;                                 // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_ReconfigureButtons) == 0x000008, "Wrong alignment on W_DifficultyModal_C_ReconfigureButtons");
static_assert(sizeof(W_DifficultyModal_C_ReconfigureButtons) == 0x000080, "Wrong size on W_DifficultyModal_C_ReconfigureButtons");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, ShowOkButton_0) == 0x000000, "Member 'W_DifficultyModal_C_ReconfigureButtons::ShowOkButton_0' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, ShowCancelButton_0) == 0x000001, "Member 'W_DifficultyModal_C_ReconfigureButtons::ShowCancelButton_0' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, ShowApplyButton_0) == 0x000002, "Member 'W_DifficultyModal_C_ReconfigureButtons::ShowApplyButton_0' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, Temp_bool_Variable) == 0x000003, "Member 'W_DifficultyModal_C_ReconfigureButtons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, Temp_byte_Variable) == 0x000004, "Member 'W_DifficultyModal_C_ReconfigureButtons::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, Temp_byte_Variable_1) == 0x000005, "Member 'W_DifficultyModal_C_ReconfigureButtons::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, Temp_bool_Variable_1) == 0x000006, "Member 'W_DifficultyModal_C_ReconfigureButtons::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, K2Node_Select_Default) == 0x000007, "Member 'W_DifficultyModal_C_ReconfigureButtons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, Temp_byte_Variable_2) == 0x000008, "Member 'W_DifficultyModal_C_ReconfigureButtons::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, Temp_byte_Variable_3) == 0x000009, "Member 'W_DifficultyModal_C_ReconfigureButtons::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, K2Node_Select_Default_1) == 0x00000A, "Member 'W_DifficultyModal_C_ReconfigureButtons::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_BreakVector2D_X) == 0x000010, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_BreakVector2D_X_1) == 0x000020, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_BreakVector2D_Y_1) == 0x000028, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_BreakVector2D_X_2) == 0x000038, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_BreakVector2D_Y_2) == 0x000040, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_BreakVector2D_X_3) == 0x000048, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_BreakVector2D_Y_3) == 0x000050, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_VSize2D_ReturnValue) == 0x000058, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000061, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000068, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_GetPlayerController_ReturnValue) == 0x000070, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000078, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_ReconfigureButtons, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x00007C, "Member 'W_DifficultyModal_C_ReconfigureButtons::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.Set Crossplay Settings Visibility
// 0x0007 (0x0007 - 0x0000)
struct W_DifficultyModal_C_Set_Crossplay_Settings_Visibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadCrossplayEnabled_bCrossplayEnabled;   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadCrossplayEnabled_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Should_Show_Crossplay_Toggle_ReturnValue; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_Set_Crossplay_Settings_Visibility) == 0x000001, "Wrong alignment on W_DifficultyModal_C_Set_Crossplay_Settings_Visibility");
static_assert(sizeof(W_DifficultyModal_C_Set_Crossplay_Settings_Visibility) == 0x000007, "Wrong size on W_DifficultyModal_C_Set_Crossplay_Settings_Visibility");
static_assert(offsetof(W_DifficultyModal_C_Set_Crossplay_Settings_Visibility, Temp_bool_Variable) == 0x000000, "Member 'W_DifficultyModal_C_Set_Crossplay_Settings_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Set_Crossplay_Settings_Visibility, Temp_byte_Variable) == 0x000001, "Member 'W_DifficultyModal_C_Set_Crossplay_Settings_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Set_Crossplay_Settings_Visibility, Temp_byte_Variable_1) == 0x000002, "Member 'W_DifficultyModal_C_Set_Crossplay_Settings_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Set_Crossplay_Settings_Visibility, CallFunc_LoadCrossplayEnabled_bCrossplayEnabled) == 0x000003, "Member 'W_DifficultyModal_C_Set_Crossplay_Settings_Visibility::CallFunc_LoadCrossplayEnabled_bCrossplayEnabled' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Set_Crossplay_Settings_Visibility, CallFunc_LoadCrossplayEnabled_ReturnValue) == 0x000004, "Member 'W_DifficultyModal_C_Set_Crossplay_Settings_Visibility::CallFunc_LoadCrossplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Set_Crossplay_Settings_Visibility, CallFunc_Should_Show_Crossplay_Toggle_ReturnValue) == 0x000005, "Member 'W_DifficultyModal_C_Set_Crossplay_Settings_Visibility::CallFunc_Should_Show_Crossplay_Toggle_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Set_Crossplay_Settings_Visibility, K2Node_Select_Default) == 0x000006, "Member 'W_DifficultyModal_C_Set_Crossplay_Settings_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.SetDescriptionText
// 0x0018 (0x0018 - 0x0000)
struct W_DifficultyModal_C_SetDescriptionText final
{
public:
	class FText                                   ModalDescription_0;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_DifficultyModal_C_SetDescriptionText) == 0x000008, "Wrong alignment on W_DifficultyModal_C_SetDescriptionText");
static_assert(sizeof(W_DifficultyModal_C_SetDescriptionText) == 0x000018, "Wrong size on W_DifficultyModal_C_SetDescriptionText");
static_assert(offsetof(W_DifficultyModal_C_SetDescriptionText, ModalDescription_0) == 0x000000, "Member 'W_DifficultyModal_C_SetDescriptionText::ModalDescription_0' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.Should Show Crossplay Toggle
// 0x0001 (0x0001 - 0x0000)
struct W_DifficultyModal_C_Should_Show_Crossplay_Toggle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_Should_Show_Crossplay_Toggle) == 0x000001, "Wrong alignment on W_DifficultyModal_C_Should_Show_Crossplay_Toggle");
static_assert(sizeof(W_DifficultyModal_C_Should_Show_Crossplay_Toggle) == 0x000001, "Wrong size on W_DifficultyModal_C_Should_Show_Crossplay_Toggle");
static_assert(offsetof(W_DifficultyModal_C_Should_Show_Crossplay_Toggle, ReturnValue) == 0x000000, "Member 'W_DifficultyModal_C_Should_Show_Crossplay_Toggle::ReturnValue' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.Toggle Crossplay Button
// 0x0002 (0x0002 - 0x0000)
struct W_DifficultyModal_C_Toggle_Crossplay_Button final
{
public:
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_Toggle_Crossplay_Button) == 0x000001, "Wrong alignment on W_DifficultyModal_C_Toggle_Crossplay_Button");
static_assert(sizeof(W_DifficultyModal_C_Toggle_Crossplay_Button) == 0x000002, "Wrong size on W_DifficultyModal_C_Toggle_Crossplay_Button");
static_assert(offsetof(W_DifficultyModal_C_Toggle_Crossplay_Button, CallFunc_GetSelected_ReturnValue) == 0x000000, "Member 'W_DifficultyModal_C_Toggle_Crossplay_Button::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_Toggle_Crossplay_Button, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_DifficultyModal_C_Toggle_Crossplay_Button::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.UpdateHeaderText
// 0x0018 (0x0018 - 0x0000)
struct W_DifficultyModal_C_UpdateHeaderText final
{
public:
	class FText                                   HeaderText;                                        // 0x0000(0x0018)(Edit, BlueprintVisible)
};
static_assert(alignof(W_DifficultyModal_C_UpdateHeaderText) == 0x000008, "Wrong alignment on W_DifficultyModal_C_UpdateHeaderText");
static_assert(sizeof(W_DifficultyModal_C_UpdateHeaderText) == 0x000018, "Wrong size on W_DifficultyModal_C_UpdateHeaderText");
static_assert(offsetof(W_DifficultyModal_C_UpdateHeaderText, HeaderText) == 0x000000, "Member 'W_DifficultyModal_C_UpdateHeaderText::HeaderText' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.UpdateSearchButtonActive
// 0x0008 (0x0008 - 0x0000)
struct W_DifficultyModal_C_UpdateSearchButtonActive final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_UpdateSearchButtonActive) == 0x000004, "Wrong alignment on W_DifficultyModal_C_UpdateSearchButtonActive");
static_assert(sizeof(W_DifficultyModal_C_UpdateSearchButtonActive) == 0x000008, "Wrong size on W_DifficultyModal_C_UpdateSearchButtonActive");
static_assert(offsetof(W_DifficultyModal_C_UpdateSearchButtonActive, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'W_DifficultyModal_C_UpdateSearchButtonActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_UpdateSearchButtonActive, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'W_DifficultyModal_C_UpdateSearchButtonActive::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_DifficultyModal.W_DifficultyModal_C.BP_GetDesiredFocusTarget
// 0x0020 (0x0020 - 0x0000)
struct W_DifficultyModal_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_DifficultyModalEntry_C*>      CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_DifficultyModalEntry_C*              CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DifficultyModal_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on W_DifficultyModal_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(W_DifficultyModal_C_BP_GetDesiredFocusTarget) == 0x000020, "Wrong size on W_DifficultyModal_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(W_DifficultyModal_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'W_DifficultyModal_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_BP_GetDesiredFocusTarget, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x000008, "Member 'W_DifficultyModal_C_BP_GetDesiredFocusTarget::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(W_DifficultyModal_C_BP_GetDesiredFocusTarget, CallFunc_Array_Get_Item) == 0x000018, "Member 'W_DifficultyModal_C_BP_GetDesiredFocusTarget::CallFunc_Array_Get_Item' has a wrong offset!");

}

