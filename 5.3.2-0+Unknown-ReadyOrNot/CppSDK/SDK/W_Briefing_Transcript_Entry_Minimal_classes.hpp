#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing_Transcript_Entry_Minimal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Briefing_Transcript_Entry_Minimal.W_Briefing_Transcript_Entry_Minimal_C
// 0x00A0 (0x0360 - 0x02C0)
class UW_Briefing_Transcript_Entry_Minimal_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Dialogue;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Name;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            W_Button;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SpeakerName;                                       // 0x02E8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Dialogue;                                          // 0x0300(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Timestamp;                                         // 0x0318(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMulticastInlineDelegate<void(double EntryID)> TranscriptEntryClicked;                           // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        EntryID;                                           // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   SpeakerTitle;                                      // 0x0348(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void BndEvt__W_Button_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void Construct();
	void ExecuteUbergraph_W_Briefing_Transcript_Entry_Minimal(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Reveal();
	void SetActive();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Briefing_Transcript_Entry_Minimal_C">();
	}
	static class UW_Briefing_Transcript_Entry_Minimal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Briefing_Transcript_Entry_Minimal_C>();
	}
};
static_assert(alignof(UW_Briefing_Transcript_Entry_Minimal_C) == 0x000008, "Wrong alignment on UW_Briefing_Transcript_Entry_Minimal_C");
static_assert(sizeof(UW_Briefing_Transcript_Entry_Minimal_C) == 0x000360, "Wrong size on UW_Briefing_Transcript_Entry_Minimal_C");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, UberGraphFrame) == 0x0002C0, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, FadeIn) == 0x0002C8, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, txt_Dialogue) == 0x0002D0, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::txt_Dialogue' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, txt_Name) == 0x0002D8, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::txt_Name' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, W_Button) == 0x0002E0, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::W_Button' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, SpeakerName) == 0x0002E8, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::SpeakerName' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, Dialogue) == 0x000300, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::Dialogue' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, Timestamp) == 0x000318, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::Timestamp' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, TranscriptEntryClicked) == 0x000330, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::TranscriptEntryClicked' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, EntryID) == 0x000340, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::EntryID' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Transcript_Entry_Minimal_C, SpeakerTitle) == 0x000348, "Member 'UW_Briefing_Transcript_Entry_Minimal_C::SpeakerTitle' has a wrong offset!");

}

