#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MissionScore

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MissionScore.W_MissionScore_C
// 0x00C8 (0x04D8 - 0x0410)
class UW_MissionScore_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_162;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_BestGrade;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_ModdedScoreNotice;                             // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MissionScore_ScorePanel_C*           Penalties;                                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MissionScore_ScorePanel_C*           Scores;                                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_BestGrade;                                     // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_BestTime;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_CurrentTime;                                   // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_DifficultyName;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_BestGrade;                                      // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Briefing_Objectives_List_C*          W_Briefing_Objectives_List;                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MissionScore_Progress_C*             W_MissionEnd_Rating_Progress_C_1;                  // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                WidgetFocusButton;                                 // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UObject*>                        AllPenalties;                                      // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         CurrentScore;                                      // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RatingFormat;                                      // 0x0498(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class APlayerController*                      OwningPlayer;                                      // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          NewBestRating;                                     // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewBestTime;                                       // 0x04B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA[0x6];                                      // 0x04BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeElapsed;                                       // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnScoringComplete;                                 // 0x04C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AddAllBonuses();
	void AddAllPenalties();
	void AddBonus(const class FText& Name_0, int32 Count, int32 Total, int32 Score);
	void AddPenalty(const class FText& Name_0, int32 Count, int32 Total, int32 Score);
	void BndEvt__Penalties_K2Node_ComponentBoundEvent_1_AllPenaltiesAdded__DelegateSignature();
	void BndEvt__Scores_K2Node_ComponentBoundEvent_0_AllScoresAdded__DelegateSignature();
	void BndEvt__W_MissionScore_W_MissionEnd_Rating_Progress_C_1_K2Node_ComponentBoundEvent_2_OnGradeRevealed__DelegateSignature();
	void BP_OnActivated();
	void Construct();
	void ExecuteUbergraph_W_MissionScore(int32 EntryPoint);
	class FText GetMapTimeRemaining();
	ESlateVisibility GetMissionNextMapTimerVisibility();
	ESlateVisibility GetModdedScoreNoticeVisibility();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SaveMetrics();
	void UpdateLevelStats();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MissionScore_C">();
	}
	static class UW_MissionScore_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MissionScore_C>();
	}
};
static_assert(alignof(UW_MissionScore_C) == 0x000008, "Wrong alignment on UW_MissionScore_C");
static_assert(sizeof(UW_MissionScore_C) == 0x0004D8, "Wrong size on UW_MissionScore_C");
static_assert(offsetof(UW_MissionScore_C, UberGraphFrame) == 0x000410, "Member 'UW_MissionScore_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, Image_162) == 0x000418, "Member 'UW_MissionScore_C::Image_162' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, lbl_BestGrade) == 0x000420, "Member 'UW_MissionScore_C::lbl_BestGrade' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, lbl_ModdedScoreNotice) == 0x000428, "Member 'UW_MissionScore_C::lbl_ModdedScoreNotice' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, Penalties) == 0x000430, "Member 'UW_MissionScore_C::Penalties' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, Scores) == 0x000438, "Member 'UW_MissionScore_C::Scores' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, txt_BestGrade) == 0x000440, "Member 'UW_MissionScore_C::txt_BestGrade' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, txt_BestTime) == 0x000448, "Member 'UW_MissionScore_C::txt_BestTime' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, txt_CurrentTime) == 0x000450, "Member 'UW_MissionScore_C::txt_CurrentTime' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, txt_DifficultyName) == 0x000458, "Member 'UW_MissionScore_C::txt_DifficultyName' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, VB_BestGrade) == 0x000460, "Member 'UW_MissionScore_C::VB_BestGrade' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, W_Briefing_Objectives_List) == 0x000468, "Member 'UW_MissionScore_C::W_Briefing_Objectives_List' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, W_MissionEnd_Rating_Progress_C_1) == 0x000470, "Member 'UW_MissionScore_C::W_MissionEnd_Rating_Progress_C_1' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, WidgetFocusButton) == 0x000478, "Member 'UW_MissionScore_C::WidgetFocusButton' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, AllPenalties) == 0x000480, "Member 'UW_MissionScore_C::AllPenalties' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, CurrentScore) == 0x000490, "Member 'UW_MissionScore_C::CurrentScore' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, RatingFormat) == 0x000498, "Member 'UW_MissionScore_C::RatingFormat' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, OwningPlayer) == 0x0004B0, "Member 'UW_MissionScore_C::OwningPlayer' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, NewBestRating) == 0x0004B8, "Member 'UW_MissionScore_C::NewBestRating' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, NewBestTime) == 0x0004B9, "Member 'UW_MissionScore_C::NewBestTime' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, TimeElapsed) == 0x0004C0, "Member 'UW_MissionScore_C::TimeElapsed' has a wrong offset!");
static_assert(offsetof(UW_MissionScore_C, OnScoringComplete) == 0x0004C8, "Member 'UW_MissionScore_C::OnScoringComplete' has a wrong offset!");

}

