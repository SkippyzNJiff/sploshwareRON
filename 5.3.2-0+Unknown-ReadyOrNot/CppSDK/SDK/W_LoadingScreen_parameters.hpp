#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadingScreen

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_LoadingScreen.W_LoadingScreen_C.ExecuteUbergraph_W_LoadingScreen
// 0x00B8 (0x00B8 - 0x0000)
struct W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowLoadingPercentage_ReturnValue;  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLoadingScreenDetails_OutMap;           // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutMode;          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutSessionName;   // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLoadingProgressText_ReturnValue;       // 0x0080(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsole_ReturnValue;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen) == 0x000008, "Wrong alignment on W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen");
static_assert(sizeof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen) == 0x0000B8, "Wrong size on W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, EntryPoint) == 0x000000, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_ShouldShowLoadingPercentage_ReturnValue) == 0x000004, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_ShouldShowLoadingPercentage_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, Temp_bool_Variable) == 0x000005, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, Temp_byte_Variable) == 0x000006, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, Temp_byte_Variable_1) == 0x000007, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, K2Node_Event_InDeltaTime) == 0x000040, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, K2Node_Select_Default) == 0x000044, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_GetLoadingScreenDetails_OutMap) == 0x000048, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_GetLoadingScreenDetails_OutMap' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_GetLoadingScreenDetails_OutMode) == 0x000058, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_GetLoadingScreenDetails_OutMode' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_GetLoadingScreenDetails_OutSessionName) == 0x000068, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_GetLoadingScreenDetails_OutSessionName' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, K2Node_Event_IsDesignTime) == 0x000078, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000079, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x00007A, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_GetLoadingProgressText_ReturnValue) == 0x000080, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_GetLoadingProgressText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000098, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000A8, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen, CallFunc_IsConsole_ReturnValue) == 0x0000B0, "Member 'W_LoadingScreen_C_ExecuteUbergraph_W_LoadingScreen::CallFunc_IsConsole_ReturnValue' has a wrong offset!");

// Function W_LoadingScreen.W_LoadingScreen_C.Get_ServerName_Text_0
// 0x0060 (0x0060 - 0x0000)
struct W_LoadingScreen_C_Get_ServerName_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutMap;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutMode;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutSessionName;   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
};
static_assert(alignof(W_LoadingScreen_C_Get_ServerName_Text_0) == 0x000008, "Wrong alignment on W_LoadingScreen_C_Get_ServerName_Text_0");
static_assert(sizeof(W_LoadingScreen_C_Get_ServerName_Text_0) == 0x000060, "Wrong size on W_LoadingScreen_C_Get_ServerName_Text_0");
static_assert(offsetof(W_LoadingScreen_C_Get_ServerName_Text_0, ReturnValue) == 0x000000, "Member 'W_LoadingScreen_C_Get_ServerName_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_Get_ServerName_Text_0, CallFunc_GetLoadingScreenDetails_OutMap) == 0x000018, "Member 'W_LoadingScreen_C_Get_ServerName_Text_0::CallFunc_GetLoadingScreenDetails_OutMap' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_Get_ServerName_Text_0, CallFunc_GetLoadingScreenDetails_OutMode) == 0x000028, "Member 'W_LoadingScreen_C_Get_ServerName_Text_0::CallFunc_GetLoadingScreenDetails_OutMode' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_Get_ServerName_Text_0, CallFunc_GetLoadingScreenDetails_OutSessionName) == 0x000038, "Member 'W_LoadingScreen_C_Get_ServerName_Text_0::CallFunc_GetLoadingScreenDetails_OutSessionName' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_Get_ServerName_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'W_LoadingScreen_C_Get_ServerName_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_LoadingScreen.W_LoadingScreen_C.Get_TextLoading_Text_0
// 0x0060 (0x0060 - 0x0000)
struct W_LoadingScreen_C_Get_TextLoading_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutMap;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutMode;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutSessionName;   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
};
static_assert(alignof(W_LoadingScreen_C_Get_TextLoading_Text_0) == 0x000008, "Wrong alignment on W_LoadingScreen_C_Get_TextLoading_Text_0");
static_assert(sizeof(W_LoadingScreen_C_Get_TextLoading_Text_0) == 0x000060, "Wrong size on W_LoadingScreen_C_Get_TextLoading_Text_0");
static_assert(offsetof(W_LoadingScreen_C_Get_TextLoading_Text_0, ReturnValue) == 0x000000, "Member 'W_LoadingScreen_C_Get_TextLoading_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_Get_TextLoading_Text_0, CallFunc_GetLoadingScreenDetails_OutMap) == 0x000018, "Member 'W_LoadingScreen_C_Get_TextLoading_Text_0::CallFunc_GetLoadingScreenDetails_OutMap' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_Get_TextLoading_Text_0, CallFunc_GetLoadingScreenDetails_OutMode) == 0x000028, "Member 'W_LoadingScreen_C_Get_TextLoading_Text_0::CallFunc_GetLoadingScreenDetails_OutMode' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_Get_TextLoading_Text_0, CallFunc_GetLoadingScreenDetails_OutSessionName) == 0x000038, "Member 'W_LoadingScreen_C_Get_TextLoading_Text_0::CallFunc_GetLoadingScreenDetails_OutSessionName' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_Get_TextLoading_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'W_LoadingScreen_C_Get_TextLoading_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_LoadingScreen.W_LoadingScreen_C.GetLoadingProgressText
// 0x0018 (0x0018 - 0x0000)
struct W_LoadingScreen_C_GetLoadingProgressText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(W_LoadingScreen_C_GetLoadingProgressText) == 0x000008, "Wrong alignment on W_LoadingScreen_C_GetLoadingProgressText");
static_assert(sizeof(W_LoadingScreen_C_GetLoadingProgressText) == 0x000018, "Wrong size on W_LoadingScreen_C_GetLoadingProgressText");
static_assert(offsetof(W_LoadingScreen_C_GetLoadingProgressText, ReturnValue) == 0x000000, "Member 'W_LoadingScreen_C_GetLoadingProgressText::ReturnValue' has a wrong offset!");

// Function W_LoadingScreen.W_LoadingScreen_C.GetText_0
// 0x0060 (0x0060 - 0x0000)
struct W_LoadingScreen_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutMap;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutMode;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLoadingScreenDetails_OutSessionName;   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
};
static_assert(alignof(W_LoadingScreen_C_GetText_0) == 0x000008, "Wrong alignment on W_LoadingScreen_C_GetText_0");
static_assert(sizeof(W_LoadingScreen_C_GetText_0) == 0x000060, "Wrong size on W_LoadingScreen_C_GetText_0");
static_assert(offsetof(W_LoadingScreen_C_GetText_0, ReturnValue) == 0x000000, "Member 'W_LoadingScreen_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_GetText_0, CallFunc_GetLoadingScreenDetails_OutMap) == 0x000018, "Member 'W_LoadingScreen_C_GetText_0::CallFunc_GetLoadingScreenDetails_OutMap' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_GetText_0, CallFunc_GetLoadingScreenDetails_OutMode) == 0x000028, "Member 'W_LoadingScreen_C_GetText_0::CallFunc_GetLoadingScreenDetails_OutMode' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_GetText_0, CallFunc_GetLoadingScreenDetails_OutSessionName) == 0x000038, "Member 'W_LoadingScreen_C_GetText_0::CallFunc_GetLoadingScreenDetails_OutSessionName' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_GetText_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'W_LoadingScreen_C_GetText_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_LoadingScreen.W_LoadingScreen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_LoadingScreen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadingScreen_C_PreConstruct) == 0x000001, "Wrong alignment on W_LoadingScreen_C_PreConstruct");
static_assert(sizeof(W_LoadingScreen_C_PreConstruct) == 0x000001, "Wrong size on W_LoadingScreen_C_PreConstruct");
static_assert(offsetof(W_LoadingScreen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_LoadingScreen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_LoadingScreen.W_LoadingScreen_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_LoadingScreen_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadingScreen_C_Tick) == 0x000004, "Wrong alignment on W_LoadingScreen_C_Tick");
static_assert(sizeof(W_LoadingScreen_C_Tick) == 0x00003C, "Wrong size on W_LoadingScreen_C_Tick");
static_assert(offsetof(W_LoadingScreen_C_Tick, MyGeometry) == 0x000000, "Member 'W_LoadingScreen_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_Tick, InDeltaTime) == 0x000038, "Member 'W_LoadingScreen_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_LoadingScreen.W_LoadingScreen_C.UpdateHeaderText
// 0x08D8 (0x08D8 - 0x0000)
struct W_LoadingScreen_C_UpdateHeaderText final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	struct FLevelDataLookupTable                  CallFunc_GetMapDetailsFromName_ReturnValue;        // 0x0038(0x0880)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B9[0x7];                                      // 0x08B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x08C0(0x0018)()
};
static_assert(alignof(W_LoadingScreen_C_UpdateHeaderText) == 0x000008, "Wrong alignment on W_LoadingScreen_C_UpdateHeaderText");
static_assert(sizeof(W_LoadingScreen_C_UpdateHeaderText) == 0x0008D8, "Wrong size on W_LoadingScreen_C_UpdateHeaderText");
static_assert(offsetof(W_LoadingScreen_C_UpdateHeaderText, Temp_bool_Variable) == 0x000000, "Member 'W_LoadingScreen_C_UpdateHeaderText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_UpdateHeaderText, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'W_LoadingScreen_C_UpdateHeaderText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_UpdateHeaderText, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'W_LoadingScreen_C_UpdateHeaderText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_UpdateHeaderText, CallFunc_GetMapDetailsFromName_ReturnValue) == 0x000038, "Member 'W_LoadingScreen_C_UpdateHeaderText::CallFunc_GetMapDetailsFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_UpdateHeaderText, CallFunc_TextIsEmpty_ReturnValue) == 0x0008B8, "Member 'W_LoadingScreen_C_UpdateHeaderText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_UpdateHeaderText, K2Node_Select_Default) == 0x0008C0, "Member 'W_LoadingScreen_C_UpdateHeaderText::K2Node_Select_Default' has a wrong offset!");

// Function W_LoadingScreen.W_LoadingScreen_C.UpdateLoadingScreenPercentage
// 0x0010 (0x0010 - 0x0000)
struct W_LoadingScreen_C_UpdateLoadingScreenPercentage final
{
public:
	double                                        NewPercentage;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LoadingScreen_C_UpdateLoadingScreenPercentage) == 0x000008, "Wrong alignment on W_LoadingScreen_C_UpdateLoadingScreenPercentage");
static_assert(sizeof(W_LoadingScreen_C_UpdateLoadingScreenPercentage) == 0x000010, "Wrong size on W_LoadingScreen_C_UpdateLoadingScreenPercentage");
static_assert(offsetof(W_LoadingScreen_C_UpdateLoadingScreenPercentage, NewPercentage) == 0x000000, "Member 'W_LoadingScreen_C_UpdateLoadingScreenPercentage::NewPercentage' has a wrong offset!");
static_assert(offsetof(W_LoadingScreen_C_UpdateLoadingScreenPercentage, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'W_LoadingScreen_C_UpdateLoadingScreenPercentage::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

}

