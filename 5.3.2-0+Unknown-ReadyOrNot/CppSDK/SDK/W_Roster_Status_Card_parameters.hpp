#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Roster_Status_Card

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"


namespace SDK::Params
{

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Roster_Status_Card_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_BackPage) == 0x000001, "Wrong alignment on W_Roster_Status_Card_C_BackPage");
static_assert(sizeof(W_Roster_Status_Card_C_BackPage) == 0x000001, "Wrong size on W_Roster_Status_Card_C_BackPage");
static_assert(offsetof(W_Roster_Status_Card_C_BackPage, Handled) == 0x000000, "Member 'W_Roster_Status_Card_C_BackPage::Handled' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.BlankDetails
// 0x0018 (0x0018 - 0x0000)
struct W_Roster_Status_Card_C_BlankDetails final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
};
static_assert(alignof(W_Roster_Status_Card_C_BlankDetails) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_BlankDetails");
static_assert(sizeof(W_Roster_Status_Card_C_BlankDetails) == 0x000018, "Wrong size on W_Roster_Status_Card_C_BlankDetails");
static_assert(offsetof(W_Roster_Status_Card_C_BlankDetails, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'W_Roster_Status_Card_C_BlankDetails::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_Roster_Status_Card_C_BndEvt__W_RosterSelection_Card_btn_Card_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_Status_Card_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_ChangePage) == 0x000004, "Wrong alignment on W_Roster_Status_Card_C_ChangePage");
static_assert(sizeof(W_Roster_Status_Card_C_ChangePage) == 0x000008, "Wrong size on W_Roster_Status_Card_C_ChangePage");
static_assert(offsetof(W_Roster_Status_Card_C_ChangePage, PageName) == 0x000000, "Member 'W_Roster_Status_Card_C_ChangePage::PageName' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.ExecuteUbergraph_W_Roster_Status_Card
// 0x00D0 (0x00D0 - 0x0000)
struct W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PageName;                             // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterProxy*                        K2Node_CustomEvent_CharacterProxy;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetName_ReturnValue;                      // 0x0090(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card");
static_assert(sizeof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card) == 0x0000D0, "Wrong size on W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, EntryPoint) == 0x000000, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_Event_PageName) == 0x000004, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_CustomEvent_CharacterProxy) == 0x000010, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_CustomEvent_CharacterProxy' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_Event_IsDesignTime) == 0x000018, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_Event_Delay_1) == 0x000020, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, CallFunc_PlayAnimationForward_ReturnValue) == 0x000028, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_Event_Delay) == 0x000038, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_Event_Collapse) == 0x000040, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000058, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_ComponentBoundEvent_Button_2) == 0x000060, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_ComponentBoundEvent_Button_1) == 0x000068, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_ComponentBoundEvent_Button) == 0x000070, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_CreateDelegate_OutputDelegate_1) == 0x000078, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_Event_IsGamepad) == 0x000088, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, CallFunc_GetName_ReturnValue) == 0x000090, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::CallFunc_GetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A8, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B8, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, CallFunc_Delay_Duration_ImplicitCast) == 0x0000C8, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card, CallFunc_Delay_Duration_ImplicitCast_1) == 0x0000CC, "Member 'W_Roster_Status_Card_C_ExecuteUbergraph_W_Roster_Status_Card::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Roster_Status_Card_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_Hide) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_Hide");
static_assert(sizeof(W_Roster_Status_Card_C_Hide) == 0x000010, "Wrong size on W_Roster_Status_Card_C_Hide");
static_assert(offsetof(W_Roster_Status_Card_C_Hide, Delay) == 0x000000, "Member 'W_Roster_Status_Card_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_Hide, Collapse) == 0x000008, "Member 'W_Roster_Status_Card_C_Hide::Collapse' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.HideLoadout
// 0x0005 (0x0005 - 0x0000)
struct W_Roster_Status_Card_C_HideLoadout final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_HideLoadout) == 0x000001, "Wrong alignment on W_Roster_Status_Card_C_HideLoadout");
static_assert(sizeof(W_Roster_Status_Card_C_HideLoadout) == 0x000005, "Wrong size on W_Roster_Status_Card_C_HideLoadout");
static_assert(offsetof(W_Roster_Status_Card_C_HideLoadout, Hide) == 0x000000, "Member 'W_Roster_Status_Card_C_HideLoadout::Hide' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_HideLoadout, Temp_bool_Variable) == 0x000001, "Member 'W_Roster_Status_Card_C_HideLoadout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_HideLoadout, Temp_byte_Variable) == 0x000002, "Member 'W_Roster_Status_Card_C_HideLoadout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_HideLoadout, Temp_byte_Variable_1) == 0x000003, "Member 'W_Roster_Status_Card_C_HideLoadout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_HideLoadout, K2Node_Select_Default) == 0x000004, "Member 'W_Roster_Status_Card_C_HideLoadout::K2Node_Select_Default' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.InitLayout
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_Status_Card_C_InitLayout final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_InitLayout) == 0x000004, "Wrong alignment on W_Roster_Status_Card_C_InitLayout");
static_assert(sizeof(W_Roster_Status_Card_C_InitLayout) == 0x000008, "Wrong size on W_Roster_Status_Card_C_InitLayout");
static_assert(offsetof(W_Roster_Status_Card_C_InitLayout, Temp_bool_Variable) == 0x000000, "Member 'W_Roster_Status_Card_C_InitLayout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_InitLayout, Temp_byte_Variable) == 0x000001, "Member 'W_Roster_Status_Card_C_InitLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_InitLayout, Temp_byte_Variable_1) == 0x000002, "Member 'W_Roster_Status_Card_C_InitLayout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_InitLayout, K2Node_Select_Default) == 0x000003, "Member 'W_Roster_Status_Card_C_InitLayout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_InitLayout, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000004, "Member 'W_Roster_Status_Card_C_InitLayout::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Roster_Status_Card_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_PreConstruct) == 0x000001, "Wrong alignment on W_Roster_Status_Card_C_PreConstruct");
static_assert(sizeof(W_Roster_Status_Card_C_PreConstruct) == 0x000001, "Wrong size on W_Roster_Status_Card_C_PreConstruct");
static_assert(offsetof(W_Roster_Status_Card_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Roster_Status_Card_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_Status_Card_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_Reveal) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_Reveal");
static_assert(sizeof(W_Roster_Status_Card_C_Reveal) == 0x000008, "Wrong size on W_Roster_Status_Card_C_Reveal");
static_assert(offsetof(W_Roster_Status_Card_C_Reveal, Delay) == 0x000000, "Member 'W_Roster_Status_Card_C_Reveal::Delay' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.SetCharacter
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_Status_Card_C_SetCharacter final
{
public:
	class UCharacterProxy*                        CharacterProxy_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_SetCharacter) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_SetCharacter");
static_assert(sizeof(W_Roster_Status_Card_C_SetCharacter) == 0x000008, "Wrong size on W_Roster_Status_Card_C_SetCharacter");
static_assert(offsetof(W_Roster_Status_Card_C_SetCharacter, CharacterProxy_0) == 0x000000, "Member 'W_Roster_Status_Card_C_SetCharacter::CharacterProxy_0' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Roster_Status_Card_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_SetInputMode) == 0x000001, "Wrong alignment on W_Roster_Status_Card_C_SetInputMode");
static_assert(sizeof(W_Roster_Status_Card_C_SetInputMode) == 0x000001, "Wrong size on W_Roster_Status_Card_C_SetInputMode");
static_assert(offsetof(W_Roster_Status_Card_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Roster_Status_Card_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.SetPortrait
// 0x0048 (0x0048 - 0x0000)
struct W_Roster_Status_Card_C_SetPortrait final
{
public:
	TSoftObjectPtr<class UTexture2D>              SoftTexture;                                       // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0014)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_SetPortrait) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_SetPortrait");
static_assert(sizeof(W_Roster_Status_Card_C_SetPortrait) == 0x000048, "Wrong size on W_Roster_Status_Card_C_SetPortrait");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, SoftTexture) == 0x000000, "Member 'W_Roster_Status_Card_C_SetPortrait::SoftTexture' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, Temp_bool_Variable) == 0x000028, "Member 'W_Roster_Status_Card_C_SetPortrait::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000029, "Member 'W_Roster_Status_Card_C_SetPortrait::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, Temp_byte_Variable) == 0x00002A, "Member 'W_Roster_Status_Card_C_SetPortrait::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, Temp_byte_Variable_1) == 0x00002B, "Member 'W_Roster_Status_Card_C_SetPortrait::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, Temp_bool_Variable_1) == 0x00002C, "Member 'W_Roster_Status_Card_C_SetPortrait::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, Temp_byte_Variable_2) == 0x00002D, "Member 'W_Roster_Status_Card_C_SetPortrait::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, Temp_byte_Variable_3) == 0x00002E, "Member 'W_Roster_Status_Card_C_SetPortrait::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'W_Roster_Status_Card_C_SetPortrait::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, K2Node_Select_Default) == 0x000044, "Member 'W_Roster_Status_Card_C_SetPortrait::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPortrait, K2Node_Select_Default_1) == 0x000045, "Member 'W_Roster_Status_Card_C_SetPortrait::K2Node_Select_Default_1' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.SetPosition
// 0x0158 (0x0158 - 0x0000)
struct W_Roster_Status_Card_C_SetPosition final
{
public:
	ERosterSquadPosition                          Position_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          Temp_byte_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          Temp_byte_Variable_4;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_5;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_6;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_7;                              // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_8;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_9;                              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          Temp_byte_Variable_10;                             // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x00D0(0x0018)()
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default_2;                           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_4;                           // 0x0128(0x0018)()
	struct FLinearColor                           CallFunc_SquadPositionToColor_OutColor;            // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_SetPosition) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_SetPosition");
static_assert(sizeof(W_Roster_Status_Card_C_SetPosition) == 0x000158, "Wrong size on W_Roster_Status_Card_C_SetPosition");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Position_0) == 0x000000, "Member 'W_Roster_Status_Card_C_SetPosition::Position_0' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_bool_Variable) == 0x000001, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'W_Roster_Status_Card_C_SetPosition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable) == 0x000003, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable_1) == 0x000004, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable_2) == 0x000005, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_real_Variable) == 0x000008, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, K2Node_Select_Default) == 0x000010, "Member 'W_Roster_Status_Card_C_SetPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_real_Variable_1) == 0x000018, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_real_Variable_2) == 0x000020, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_real_Variable_3) == 0x000028, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_real_Variable_4) == 0x000030, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable_3) == 0x000038, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_real_Variable_5) == 0x000040, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_real_Variable_6) == 0x000048, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_real_Variable_7) == 0x000050, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_real_Variable_8) == 0x000058, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_real_Variable_9) == 0x000060, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable_4) == 0x000068, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable_5) == 0x000069, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable_6) == 0x00006A, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable_7) == 0x00006B, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable_8) == 0x00006C, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable_9) == 0x00006D, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_byte_Variable_10) == 0x00006E, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_text_Variable) == 0x000070, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_text_Variable_1) == 0x000088, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_text_Variable_2) == 0x0000A0, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_text_Variable_3) == 0x0000B8, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, Temp_text_Variable_4) == 0x0000D0, "Member 'W_Roster_Status_Card_C_SetPosition::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000E8, "Member 'W_Roster_Status_Card_C_SetPosition::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, K2Node_Select_Default_1) == 0x0000F0, "Member 'W_Roster_Status_Card_C_SetPosition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, K2Node_Select_Default_2) == 0x0000F8, "Member 'W_Roster_Status_Card_C_SetPosition::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000100, "Member 'W_Roster_Status_Card_C_SetPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, K2Node_Select_Default_3) == 0x000110, "Member 'W_Roster_Status_Card_C_SetPosition::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000118, "Member 'W_Roster_Status_Card_C_SetPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, K2Node_Select_Default_4) == 0x000128, "Member 'W_Roster_Status_Card_C_SetPosition::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, CallFunc_SquadPositionToColor_OutColor) == 0x000140, "Member 'W_Roster_Status_Card_C_SetPosition::CallFunc_SquadPositionToColor_OutColor' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetPosition, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000150, "Member 'W_Roster_Status_Card_C_SetPosition::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.SetupAptitude
// 0x0048 (0x0048 - 0x0000)
struct W_Roster_Status_Card_C_SetupAptitude final
{
public:
	class UProgressBar*                           ProgressBar;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_SetupAptitude) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_SetupAptitude");
static_assert(sizeof(W_Roster_Status_Card_C_SetupAptitude) == 0x000048, "Wrong size on W_Roster_Status_Card_C_SetupAptitude");
static_assert(offsetof(W_Roster_Status_Card_C_SetupAptitude, ProgressBar) == 0x000000, "Member 'W_Roster_Status_Card_C_SetupAptitude::ProgressBar' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetupAptitude, TextBlock) == 0x000008, "Member 'W_Roster_Status_Card_C_SetupAptitude::TextBlock' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetupAptitude, Percent) == 0x000010, "Member 'W_Roster_Status_Card_C_SetupAptitude::Percent' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetupAptitude, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'W_Roster_Status_Card_C_SetupAptitude::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetupAptitude, CallFunc_Round_ReturnValue) == 0x000020, "Member 'W_Roster_Status_Card_C_SetupAptitude::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetupAptitude, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'W_Roster_Status_Card_C_SetupAptitude::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_SetupAptitude, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000040, "Member 'W_Roster_Status_Card_C_SetupAptitude::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.UpdateLoadout
// 0x00A0 (0x00A0 - 0x0000)
struct W_Roster_Status_Card_C_UpdateLoadout final
{
public:
	TMap<class UClass*, int32>                    DeployablesSorted;                                 // 0x0000(0x0050)(Edit, BlueprintVisible)
	TArray<TSubclassOf<class ABaseItem>>          Deployables;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRosterLoadout                         CallFunc_GetLoadout_ReturnValue;                   // 0x0068(0x0038)()
};
static_assert(alignof(W_Roster_Status_Card_C_UpdateLoadout) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_UpdateLoadout");
static_assert(sizeof(W_Roster_Status_Card_C_UpdateLoadout) == 0x0000A0, "Wrong size on W_Roster_Status_Card_C_UpdateLoadout");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateLoadout, DeployablesSorted) == 0x000000, "Member 'W_Roster_Status_Card_C_UpdateLoadout::DeployablesSorted' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateLoadout, Deployables) == 0x000050, "Member 'W_Roster_Status_Card_C_UpdateLoadout::Deployables' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateLoadout, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'W_Roster_Status_Card_C_UpdateLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateLoadout, CallFunc_GetLoadout_ReturnValue) == 0x000068, "Member 'W_Roster_Status_Card_C_UpdateLoadout::CallFunc_GetLoadout_ReturnValue' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.UpdateSpecialty
// 0x0040 (0x0040 - 0x0000)
struct W_Roster_Status_Card_C_UpdateSpecialty final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTrait_bIsUnlocked;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URosterTrait*                           CallFunc_GetTrait_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_UpdateSpecialty) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_UpdateSpecialty");
static_assert(sizeof(W_Roster_Status_Card_C_UpdateSpecialty) == 0x000040, "Wrong size on W_Roster_Status_Card_C_UpdateSpecialty");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, Temp_bool_Variable) == 0x000000, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, Temp_byte_Variable) == 0x000001, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, Temp_byte_Variable_1) == 0x000002, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, Temp_real_Variable) == 0x000008, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, CallFunc_GetTrait_bIsUnlocked) == 0x000011, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::CallFunc_GetTrait_bIsUnlocked' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, CallFunc_GetTrait_ReturnValue) == 0x000018, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::CallFunc_GetTrait_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, K2Node_Select_Default) == 0x000021, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, Temp_bool_Variable_1) == 0x000022, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, Temp_real_Variable_1) == 0x000028, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, K2Node_Select_Default_1) == 0x000030, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateSpecialty, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000038, "Member 'W_Roster_Status_Card_C_UpdateSpecialty::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.UpdateStatus
// 0x0020 (0x0020 - 0x0000)
struct W_Roster_Status_Card_C_UpdateStatus final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetStatus_ReturnValue;                    // 0x0008(0x0018)()
};
static_assert(alignof(W_Roster_Status_Card_C_UpdateStatus) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_UpdateStatus");
static_assert(sizeof(W_Roster_Status_Card_C_UpdateStatus) == 0x000020, "Wrong size on W_Roster_Status_Card_C_UpdateStatus");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateStatus, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_Roster_Status_Card_C_UpdateStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Roster_Status_Card_C_UpdateStatus, CallFunc_GetStatus_ReturnValue) == 0x000008, "Member 'W_Roster_Status_Card_C_UpdateStatus::CallFunc_GetStatus_ReturnValue' has a wrong offset!");

// Function W_Roster_Status_Card.W_Roster_Status_Card_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Roster_Status_Card_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Roster_Status_Card_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Roster_Status_Card_C_GetFocusTarget");
static_assert(sizeof(W_Roster_Status_Card_C_GetFocusTarget) == 0x000008, "Wrong size on W_Roster_Status_Card_C_GetFocusTarget");
static_assert(offsetof(W_Roster_Status_Card_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Roster_Status_Card_C_GetFocusTarget::Focus' has a wrong offset!");

}

