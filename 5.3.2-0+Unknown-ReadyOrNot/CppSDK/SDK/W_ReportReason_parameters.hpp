#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ReportReason

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_ReportReason.W_ReportReason_C.BndEvt__W_ReportReason_CheckBox_Cheating_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct W_ReportReason_C_BndEvt__W_ReportReason_CheckBox_Cheating_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ReportReason_C_BndEvt__W_ReportReason_CheckBox_Cheating_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on W_ReportReason_C_BndEvt__W_ReportReason_CheckBox_Cheating_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(W_ReportReason_C_BndEvt__W_ReportReason_CheckBox_Cheating_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on W_ReportReason_C_BndEvt__W_ReportReason_CheckBox_Cheating_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(W_ReportReason_C_BndEvt__W_ReportReason_CheckBox_Cheating_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'W_ReportReason_C_BndEvt__W_ReportReason_CheckBox_Cheating_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function W_ReportReason.W_ReportReason_C.ExecuteUbergraph_W_ReportReason
// 0x0148 (0x0148 - 0x0000)
struct W_ReportReason_C_ExecuteUbergraph_W_ReportReason final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0078)(ConstParm)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ReportReason_C_ExecuteUbergraph_W_ReportReason) == 0x000008, "Wrong alignment on W_ReportReason_C_ExecuteUbergraph_W_ReportReason");
static_assert(sizeof(W_ReportReason_C_ExecuteUbergraph_W_ReportReason) == 0x000148, "Wrong size on W_ReportReason_C_ExecuteUbergraph_W_ReportReason");
static_assert(offsetof(W_ReportReason_C_ExecuteUbergraph_W_ReportReason, EntryPoint) == 0x000000, "Member 'W_ReportReason_C_ExecuteUbergraph_W_ReportReason::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ReportReason_C_ExecuteUbergraph_W_ReportReason, K2Node_Event_MyGeometry) == 0x000004, "Member 'W_ReportReason_C_ExecuteUbergraph_W_ReportReason::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ReportReason_C_ExecuteUbergraph_W_ReportReason, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'W_ReportReason_C_ExecuteUbergraph_W_ReportReason::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(W_ReportReason_C_ExecuteUbergraph_W_ReportReason, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'W_ReportReason_C_ExecuteUbergraph_W_ReportReason::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(W_ReportReason_C_ExecuteUbergraph_W_ReportReason, K2Node_ComponentBoundEvent_bIsChecked) == 0x000130, "Member 'W_ReportReason_C_ExecuteUbergraph_W_ReportReason::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(W_ReportReason_C_ExecuteUbergraph_W_ReportReason, CallFunc_SelectColor_ReturnValue) == 0x000134, "Member 'W_ReportReason_C_ExecuteUbergraph_W_ReportReason::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function W_ReportReason.W_ReportReason_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct W_ReportReason_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_ReportReason_C_OnMouseEnter) == 0x000008, "Wrong alignment on W_ReportReason_C_OnMouseEnter");
static_assert(sizeof(W_ReportReason_C_OnMouseEnter) == 0x0000B0, "Wrong size on W_ReportReason_C_OnMouseEnter");
static_assert(offsetof(W_ReportReason_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'W_ReportReason_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ReportReason_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'W_ReportReason_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function W_ReportReason.W_ReportReason_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct W_ReportReason_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_ReportReason_C_OnMouseLeave) == 0x000008, "Wrong alignment on W_ReportReason_C_OnMouseLeave");
static_assert(sizeof(W_ReportReason_C_OnMouseLeave) == 0x000078, "Wrong size on W_ReportReason_C_OnMouseLeave");
static_assert(offsetof(W_ReportReason_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'W_ReportReason_C_OnMouseLeave::MouseEvent' has a wrong offset!");

}

