#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WheelIcon_Pip

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_WheelIcon_Pip.W_WheelIcon_Pip_C.ExecuteUbergraph_W_WheelIcon_Pip
// 0x0008 (0x0008 - 0x0000)
struct W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Unselected;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Selected;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip) == 0x000004, "Wrong alignment on W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip");
static_assert(sizeof(W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip) == 0x000008, "Wrong size on W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip");
static_assert(offsetof(W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip, EntryPoint) == 0x000000, "Member 'W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip, K2Node_Event_Unselected) == 0x000004, "Member 'W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip::K2Node_Event_Unselected' has a wrong offset!");
static_assert(offsetof(W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip, K2Node_Event_Selected) == 0x000005, "Member 'W_WheelIcon_Pip_C_ExecuteUbergraph_W_WheelIcon_Pip::K2Node_Event_Selected' has a wrong offset!");

// Function W_WheelIcon_Pip.W_WheelIcon_Pip_C.OnHighlight
// 0x0001 (0x0001 - 0x0000)
struct W_WheelIcon_Pip_C_OnHighlight final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_Pip_C_OnHighlight) == 0x000001, "Wrong alignment on W_WheelIcon_Pip_C_OnHighlight");
static_assert(sizeof(W_WheelIcon_Pip_C_OnHighlight) == 0x000001, "Wrong size on W_WheelIcon_Pip_C_OnHighlight");
static_assert(offsetof(W_WheelIcon_Pip_C_OnHighlight, Selected) == 0x000000, "Member 'W_WheelIcon_Pip_C_OnHighlight::Selected' has a wrong offset!");

// Function W_WheelIcon_Pip.W_WheelIcon_Pip_C.OnUnhighlight
// 0x0001 (0x0001 - 0x0000)
struct W_WheelIcon_Pip_C_OnUnhighlight final
{
public:
	bool                                          Unselected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WheelIcon_Pip_C_OnUnhighlight) == 0x000001, "Wrong alignment on W_WheelIcon_Pip_C_OnUnhighlight");
static_assert(sizeof(W_WheelIcon_Pip_C_OnUnhighlight) == 0x000001, "Wrong size on W_WheelIcon_Pip_C_OnUnhighlight");
static_assert(offsetof(W_WheelIcon_Pip_C_OnUnhighlight, Unselected) == 0x000000, "Member 'W_WheelIcon_Pip_C_OnUnhighlight::Unselected' has a wrong offset!");

}

