#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ConsoleLobbyManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ConsoleLobbyManager.W_ConsoleLobbyManager_C
// 0x0100 (0x0510 - 0x0410)
class UW_ConsoleLobbyManager_C final : public UConsoleLobbyManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Blackout;                                          // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       CommonActivatableWidgetSwitcher_0;                 // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       LobbyManagerPageSwitcher;                          // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       PageWrapper;                                       // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PlayersList_C*                       PlayersList;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_BlockList_C*                         W_BlockList;                                       // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SocialSettings_C*                    W_SocialSettings;                                  // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLobbyPlayer                           PlayerToKick;                                      // 0x0450(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FText>                HeaderMap;                                         // 0x04C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__W_ConsoleLobbyManager_PageWrapper_K2Node_ComponentBoundEvent_0_OnNavOptionSelected__DelegateSignature(class FName OptionNameID);
	void BndEvt__W_ConsoleLobbyManager_PageWrapper_K2Node_ComponentBoundEvent_1_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonId);
	void BP_OnActivated();
	void Cancel_kick(class UStandardModal* CallingModal);
	void Construct();
	void ExecuteUbergraph_W_ConsoleLobbyManager(int32 EntryPoint);
	void FocusedPlayerChanged();
	void FooterButtonClicked(const class FString& ButtonId);
	void Initialise_Kick_Popup(const struct FLobbyPlayer& Player_Name, class UW_StandardModal_C** OutputPopUp);
	void IsKickButtonVisible(const struct FLobbyPlayer& Player, bool* KickButtonIsVisible);
	void IsMuteButtonVisible(const struct FLobbyPlayer& Player, bool* MuteButtonIsVisible, bool* UnMuteButtonIsVisible);
	void kick(class UW_StandardModal_C* CallingModal, const class FText& TextEntry);
	void OnlyShowBlockList();
	void OpenBlockList();
	void OpenLobbyList();
	void OpenSocialSettings();
	void PlayerBlocked();
	void Set_EOS_Button_Visibility();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ConsoleLobbyManager_C">();
	}
	static class UW_ConsoleLobbyManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ConsoleLobbyManager_C>();
	}
};
static_assert(alignof(UW_ConsoleLobbyManager_C) == 0x000008, "Wrong alignment on UW_ConsoleLobbyManager_C");
static_assert(sizeof(UW_ConsoleLobbyManager_C) == 0x000510, "Wrong size on UW_ConsoleLobbyManager_C");
static_assert(offsetof(UW_ConsoleLobbyManager_C, UberGraphFrame) == 0x000410, "Member 'UW_ConsoleLobbyManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ConsoleLobbyManager_C, Blackout) == 0x000418, "Member 'UW_ConsoleLobbyManager_C::Blackout' has a wrong offset!");
static_assert(offsetof(UW_ConsoleLobbyManager_C, CommonActivatableWidgetSwitcher_0) == 0x000420, "Member 'UW_ConsoleLobbyManager_C::CommonActivatableWidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UW_ConsoleLobbyManager_C, LobbyManagerPageSwitcher) == 0x000428, "Member 'UW_ConsoleLobbyManager_C::LobbyManagerPageSwitcher' has a wrong offset!");
static_assert(offsetof(UW_ConsoleLobbyManager_C, PageWrapper) == 0x000430, "Member 'UW_ConsoleLobbyManager_C::PageWrapper' has a wrong offset!");
static_assert(offsetof(UW_ConsoleLobbyManager_C, PlayersList) == 0x000438, "Member 'UW_ConsoleLobbyManager_C::PlayersList' has a wrong offset!");
static_assert(offsetof(UW_ConsoleLobbyManager_C, W_BlockList) == 0x000440, "Member 'UW_ConsoleLobbyManager_C::W_BlockList' has a wrong offset!");
static_assert(offsetof(UW_ConsoleLobbyManager_C, W_SocialSettings) == 0x000448, "Member 'UW_ConsoleLobbyManager_C::W_SocialSettings' has a wrong offset!");
static_assert(offsetof(UW_ConsoleLobbyManager_C, PlayerToKick) == 0x000450, "Member 'UW_ConsoleLobbyManager_C::PlayerToKick' has a wrong offset!");
static_assert(offsetof(UW_ConsoleLobbyManager_C, HeaderMap) == 0x0004C0, "Member 'UW_ConsoleLobbyManager_C::HeaderMap' has a wrong offset!");

}

