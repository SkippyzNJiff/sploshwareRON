#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoNBloodPool

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RoNBloodPool.BP_RoNBloodPool_C
// 0x00D0 (0x03C0 - 0x02F0)
class ABP_RoNBloodPool_C final : public ABloodPool
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UMaterialInstance*>              Materials;                                         // 0x02F8(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         RandomPick;                                        // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicMaterialInstance;                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        BloodExpansionRate;                                // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        BloodExpansionCurrent;                             // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBleeding;                                         // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     AnimationCurve;                                    // 0x0330(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        BoxMaxSize;                                        // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_RoNBloodPool(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RoNBloodPool_C">();
	}
	static class ABP_RoNBloodPool_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RoNBloodPool_C>();
	}
};
static_assert(alignof(ABP_RoNBloodPool_C) == 0x000008, "Wrong alignment on ABP_RoNBloodPool_C");
static_assert(sizeof(ABP_RoNBloodPool_C) == 0x0003C0, "Wrong size on ABP_RoNBloodPool_C");
static_assert(offsetof(ABP_RoNBloodPool_C, UberGraphFrame) == 0x0002F0, "Member 'ABP_RoNBloodPool_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RoNBloodPool_C, Materials) == 0x0002F8, "Member 'ABP_RoNBloodPool_C::Materials' has a wrong offset!");
static_assert(offsetof(ABP_RoNBloodPool_C, RandomPick) == 0x000308, "Member 'ABP_RoNBloodPool_C::RandomPick' has a wrong offset!");
static_assert(offsetof(ABP_RoNBloodPool_C, DynamicMaterialInstance) == 0x000310, "Member 'ABP_RoNBloodPool_C::DynamicMaterialInstance' has a wrong offset!");
static_assert(offsetof(ABP_RoNBloodPool_C, BloodExpansionRate) == 0x000318, "Member 'ABP_RoNBloodPool_C::BloodExpansionRate' has a wrong offset!");
static_assert(offsetof(ABP_RoNBloodPool_C, BloodExpansionCurrent) == 0x000320, "Member 'ABP_RoNBloodPool_C::BloodExpansionCurrent' has a wrong offset!");
static_assert(offsetof(ABP_RoNBloodPool_C, bBleeding) == 0x000328, "Member 'ABP_RoNBloodPool_C::bBleeding' has a wrong offset!");
static_assert(offsetof(ABP_RoNBloodPool_C, AnimationCurve) == 0x000330, "Member 'ABP_RoNBloodPool_C::AnimationCurve' has a wrong offset!");
static_assert(offsetof(ABP_RoNBloodPool_C, BoxMaxSize) == 0x0003B8, "Member 'ABP_RoNBloodPool_C::BoxMaxSize' has a wrong offset!");

}

