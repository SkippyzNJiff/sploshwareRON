#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_NVG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_NVG.ANIMBP_NVG_C
// 0x07F0 (0x0B40 - 0x0350)
class UANIMBP_NVG_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0388(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x03D0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x04F8(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0620(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0640(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0660(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x0680(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x07A8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x08D0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x09F8(0x0128)()
	bool                                          bActive;                                           // 0x0B20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHideMesh;                                         // 0x0B21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B22[0x6];                                      // 0x0B22(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NVGTransformAlpha;                                 // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsThirdPersonMesh;                                // 0x0B30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B31[0x7];                                      // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ANightvisionGoggles*                    NVG;                                               // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_HideFPMesh();
	void AnimNotify_ShowFPMesh();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ANIMBP_NVG_AnimGraphNode_ModifyBone_4369C15F4C1308D1A6E87DB0C364A0F1();
	void ExecuteUbergraph_ANIMBP_NVG(int32 EntryPoint);
	void GetPlayerCharacter(class APlayerCharacter** PlayerCharacter);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_NVG_C">();
	}
	static class UANIMBP_NVG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_NVG_C>();
	}
};
static_assert(alignof(UANIMBP_NVG_C) == 0x000010, "Wrong alignment on UANIMBP_NVG_C");
static_assert(sizeof(UANIMBP_NVG_C) == 0x000B40, "Wrong size on UANIMBP_NVG_C");
static_assert(offsetof(UANIMBP_NVG_C, UberGraphFrame) == 0x000350, "Member 'UANIMBP_NVG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UANIMBP_NVG_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UANIMBP_NVG_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_Root) == 0x000368, "Member 'UANIMBP_NVG_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_Slot) == 0x000388, "Member 'UANIMBP_NVG_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_ModifyBone_5) == 0x0003D0, "Member 'UANIMBP_NVG_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_ModifyBone_4) == 0x0004F8, "Member 'UANIMBP_NVG_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_LocalToComponentSpace) == 0x000620, "Member 'UANIMBP_NVG_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000640, "Member 'UANIMBP_NVG_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_ComponentToLocalSpace) == 0x000660, "Member 'UANIMBP_NVG_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_ModifyBone_3) == 0x000680, "Member 'UANIMBP_NVG_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_ModifyBone_2) == 0x0007A8, "Member 'UANIMBP_NVG_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_ModifyBone_1) == 0x0008D0, "Member 'UANIMBP_NVG_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, AnimGraphNode_ModifyBone) == 0x0009F8, "Member 'UANIMBP_NVG_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, bActive) == 0x000B20, "Member 'UANIMBP_NVG_C::bActive' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, bHideMesh) == 0x000B21, "Member 'UANIMBP_NVG_C::bHideMesh' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, NVGTransformAlpha) == 0x000B28, "Member 'UANIMBP_NVG_C::NVGTransformAlpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, bIsThirdPersonMesh) == 0x000B30, "Member 'UANIMBP_NVG_C::bIsThirdPersonMesh' has a wrong offset!");
static_assert(offsetof(UANIMBP_NVG_C, NVG) == 0x000B38, "Member 'UANIMBP_NVG_C::NVG' has a wrong offset!");

}

