#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_OfficerMarker

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function W_OfficerMarker.W_OfficerMarker_C.ExecuteUbergraph_W_OfficerMarker
// 0x0138 (0x0138 - 0x0000)
struct W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0078)(ConstParm)
	EPlanningLineTeam                             K2Node_CustomEvent_Team;                           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker) == 0x000008, "Wrong alignment on W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker");
static_assert(sizeof(W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker) == 0x000138, "Wrong size on W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker");
static_assert(offsetof(W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker, EntryPoint) == 0x000000, "Member 'W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker, K2Node_Event_MyGeometry) == 0x000008, "Member 'W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker, K2Node_CustomEvent_Team) == 0x000130, "Member 'W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker, CallFunc_IsValid_ReturnValue) == 0x000131, "Member 'W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker, CallFunc_IsValid_ReturnValue_1) == 0x000132, "Member 'W_OfficerMarker_C_ExecuteUbergraph_W_OfficerMarker::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_OfficerMarker.W_OfficerMarker_C.OnMouseButtonUp
// 0x03B0 (0x03B0 - 0x0000)
struct W_OfficerMarker_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0168(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0188(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0240(0x00B8)()
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x02F8(0x00B8)()
};
static_assert(alignof(W_OfficerMarker_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on W_OfficerMarker_C_OnMouseButtonUp");
static_assert(sizeof(W_OfficerMarker_C_OnMouseButtonUp) == 0x0003B0, "Wrong size on W_OfficerMarker_C_OnMouseButtonUp");
static_assert(offsetof(W_OfficerMarker_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'W_OfficerMarker_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'W_OfficerMarker_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'W_OfficerMarker_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000168, "Member 'W_OfficerMarker_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000180, "Member 'W_OfficerMarker_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000181, "Member 'W_OfficerMarker_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000188, "Member 'W_OfficerMarker_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue_1) == 0x000240, "Member 'W_OfficerMarker_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_OnMouseButtonUp, CallFunc_Unhandled_ReturnValue) == 0x0002F8, "Member 'W_OfficerMarker_C_OnMouseButtonUp::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function W_OfficerMarker.W_OfficerMarker_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct W_OfficerMarker_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_OfficerMarker_C_OnMouseEnter) == 0x000008, "Wrong alignment on W_OfficerMarker_C_OnMouseEnter");
static_assert(sizeof(W_OfficerMarker_C_OnMouseEnter) == 0x0000B0, "Wrong size on W_OfficerMarker_C_OnMouseEnter");
static_assert(offsetof(W_OfficerMarker_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'W_OfficerMarker_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'W_OfficerMarker_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function W_OfficerMarker.W_OfficerMarker_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct W_OfficerMarker_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_OfficerMarker_C_OnMouseLeave) == 0x000008, "Wrong alignment on W_OfficerMarker_C_OnMouseLeave");
static_assert(sizeof(W_OfficerMarker_C_OnMouseLeave) == 0x000078, "Wrong size on W_OfficerMarker_C_OnMouseLeave");
static_assert(offsetof(W_OfficerMarker_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'W_OfficerMarker_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function W_OfficerMarker.W_OfficerMarker_C.OnPlanningTeamUpdated
// 0x0001 (0x0001 - 0x0000)
struct W_OfficerMarker_C_OnPlanningTeamUpdated final
{
public:
	EPlanningLineTeam                             Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_OfficerMarker_C_OnPlanningTeamUpdated) == 0x000001, "Wrong alignment on W_OfficerMarker_C_OnPlanningTeamUpdated");
static_assert(sizeof(W_OfficerMarker_C_OnPlanningTeamUpdated) == 0x000001, "Wrong size on W_OfficerMarker_C_OnPlanningTeamUpdated");
static_assert(offsetof(W_OfficerMarker_C_OnPlanningTeamUpdated, Team) == 0x000000, "Member 'W_OfficerMarker_C_OnPlanningTeamUpdated::Team' has a wrong offset!");

// Function W_OfficerMarker.W_OfficerMarker_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_OfficerMarker_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_OfficerMarker_C_PreConstruct) == 0x000001, "Wrong alignment on W_OfficerMarker_C_PreConstruct");
static_assert(sizeof(W_OfficerMarker_C_PreConstruct) == 0x000001, "Wrong size on W_OfficerMarker_C_PreConstruct");
static_assert(offsetof(W_OfficerMarker_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_OfficerMarker_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_OfficerMarker.W_OfficerMarker_C.SetByPlayerState
// 0x0048 (0x0048 - 0x0000)
struct W_OfficerMarker_C_SetByPlayerState final
{
public:
	class AReadyOrNotPlayerState*                 PlayerState_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPlanningLineTeam Team)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Player_State_Team_Color_LinearColor;  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_Get_Player_State_Team_Color_SlateColor;   // 0x0028(0x0014)()
	int32                                         CallFunc_GetPlanningPlayerNumber_ReturnValue;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_OfficerMarker_C_SetByPlayerState) == 0x000008, "Wrong alignment on W_OfficerMarker_C_SetByPlayerState");
static_assert(sizeof(W_OfficerMarker_C_SetByPlayerState) == 0x000048, "Wrong size on W_OfficerMarker_C_SetByPlayerState");
static_assert(offsetof(W_OfficerMarker_C_SetByPlayerState, PlayerState_0) == 0x000000, "Member 'W_OfficerMarker_C_SetByPlayerState::PlayerState_0' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByPlayerState, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'W_OfficerMarker_C_SetByPlayerState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByPlayerState, CallFunc_Get_Player_State_Team_Color_LinearColor) == 0x000018, "Member 'W_OfficerMarker_C_SetByPlayerState::CallFunc_Get_Player_State_Team_Color_LinearColor' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByPlayerState, CallFunc_Get_Player_State_Team_Color_SlateColor) == 0x000028, "Member 'W_OfficerMarker_C_SetByPlayerState::CallFunc_Get_Player_State_Team_Color_SlateColor' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByPlayerState, CallFunc_GetPlanningPlayerNumber_ReturnValue) == 0x00003C, "Member 'W_OfficerMarker_C_SetByPlayerState::CallFunc_GetPlanningPlayerNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByPlayerState, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'W_OfficerMarker_C_SetByPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_OfficerMarker.W_OfficerMarker_C.SetByProxy
// 0x0048 (0x0048 - 0x0000)
struct W_OfficerMarker_C_SetByProxy final
{
public:
	class UCharacterProxy*                        Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPlanningLineTeam Team)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumber_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamType                                     CallFunc_GetTeam_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetPlayerTeamColor_LinearColor;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_GetPlayerTeamColor_SlateColor;            // 0x0030(0x0014)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_OfficerMarker_C_SetByProxy) == 0x000008, "Wrong alignment on W_OfficerMarker_C_SetByProxy");
static_assert(sizeof(W_OfficerMarker_C_SetByProxy) == 0x000048, "Wrong size on W_OfficerMarker_C_SetByProxy");
static_assert(offsetof(W_OfficerMarker_C_SetByProxy, Character) == 0x000000, "Member 'W_OfficerMarker_C_SetByProxy::Character' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByProxy, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'W_OfficerMarker_C_SetByProxy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByProxy, CallFunc_GetNumber_ReturnValue) == 0x000018, "Member 'W_OfficerMarker_C_SetByProxy::CallFunc_GetNumber_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByProxy, CallFunc_GetTeam_ReturnValue) == 0x00001C, "Member 'W_OfficerMarker_C_SetByProxy::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByProxy, CallFunc_GetPlayerTeamColor_LinearColor) == 0x000020, "Member 'W_OfficerMarker_C_SetByProxy::CallFunc_GetPlayerTeamColor_LinearColor' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByProxy, CallFunc_GetPlayerTeamColor_SlateColor) == 0x000030, "Member 'W_OfficerMarker_C_SetByProxy::CallFunc_GetPlayerTeamColor_SlateColor' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_SetByProxy, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'W_OfficerMarker_C_SetByProxy::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_OfficerMarker.W_OfficerMarker_C.UpdateData
// 0x0014 (0x0014 - 0x0000)
struct W_OfficerMarker_C_UpdateData final
{
public:
	int32                                         Number;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_OfficerMarker_C_UpdateData) == 0x000004, "Wrong alignment on W_OfficerMarker_C_UpdateData");
static_assert(sizeof(W_OfficerMarker_C_UpdateData) == 0x000014, "Wrong size on W_OfficerMarker_C_UpdateData");
static_assert(offsetof(W_OfficerMarker_C_UpdateData, Number) == 0x000000, "Member 'W_OfficerMarker_C_UpdateData::Number' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_UpdateData, Color) == 0x000004, "Member 'W_OfficerMarker_C_UpdateData::Color' has a wrong offset!");

// Function W_OfficerMarker.W_OfficerMarker_C.UpdateStyle
// 0x0050 (0x0050 - 0x0000)
struct W_OfficerMarker_C_UpdateStyle final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0038(0x0018)()
};
static_assert(alignof(W_OfficerMarker_C_UpdateStyle) == 0x000008, "Wrong alignment on W_OfficerMarker_C_UpdateStyle");
static_assert(sizeof(W_OfficerMarker_C_UpdateStyle) == 0x000050, "Wrong size on W_OfficerMarker_C_UpdateStyle");
static_assert(offsetof(W_OfficerMarker_C_UpdateStyle, Temp_text_Variable) == 0x000000, "Member 'W_OfficerMarker_C_UpdateStyle::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_UpdateStyle, Temp_bool_Variable) == 0x000018, "Member 'W_OfficerMarker_C_UpdateStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_UpdateStyle, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'W_OfficerMarker_C_UpdateStyle::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_UpdateStyle, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'W_OfficerMarker_C_UpdateStyle::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_OfficerMarker_C_UpdateStyle, K2Node_Select_Default) == 0x000038, "Member 'W_OfficerMarker_C_UpdateStyle::K2Node_Select_Default' has a wrong offset!");

}

