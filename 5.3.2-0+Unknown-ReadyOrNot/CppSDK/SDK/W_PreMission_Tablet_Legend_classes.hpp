#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Legend

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet_Legend.W_PreMission_Tablet_Legend_C
// 0x00A8 (0x0368 - 0x02C0)
class UW_PreMission_Tablet_Legend_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animOpen;                                          // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Text_C*                              lbl_Maneuvers;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              lbl_Marks;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              lbl_Subjects;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             Scroll_LegendEntries;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry;                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_2;                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_3;                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_4;                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_5;                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_6;                 // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_7;                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_8;                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_9;                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_10;                // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_11;                // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_12;                // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_13;                // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_LegendEntry_C*     W_PreMission_Tablet_LegendEntry_14;                // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Close();
	void ExecuteUbergraph_W_PreMission_Tablet_Legend(int32 EntryPoint);
	void Open();
	void Toggle(bool* IsOpen_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_Legend_C">();
	}
	static class UW_PreMission_Tablet_Legend_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_Legend_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_Legend_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_Legend_C");
static_assert(sizeof(UW_PreMission_Tablet_Legend_C) == 0x000368, "Wrong size on UW_PreMission_Tablet_Legend_C");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, UberGraphFrame) == 0x0002C0, "Member 'UW_PreMission_Tablet_Legend_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, animOpen) == 0x0002C8, "Member 'UW_PreMission_Tablet_Legend_C::animOpen' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, lbl_Maneuvers) == 0x0002D0, "Member 'UW_PreMission_Tablet_Legend_C::lbl_Maneuvers' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, lbl_Marks) == 0x0002D8, "Member 'UW_PreMission_Tablet_Legend_C::lbl_Marks' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, lbl_Subjects) == 0x0002E0, "Member 'UW_PreMission_Tablet_Legend_C::lbl_Subjects' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, Scroll_LegendEntries) == 0x0002E8, "Member 'UW_PreMission_Tablet_Legend_C::Scroll_LegendEntries' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry) == 0x0002F0, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_2) == 0x0002F8, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_3) == 0x000300, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_3' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_4) == 0x000308, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_4' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_5) == 0x000310, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_5' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_6) == 0x000318, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_6' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_7) == 0x000320, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_7' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_8) == 0x000328, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_8' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_9) == 0x000330, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_9' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_10) == 0x000338, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_10' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_11) == 0x000340, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_11' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_12) == 0x000348, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_12' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_13) == 0x000350, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_13' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, W_PreMission_Tablet_LegendEntry_14) == 0x000358, "Member 'UW_PreMission_Tablet_Legend_C::W_PreMission_Tablet_LegendEntry_14' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Legend_C, IsOpen) == 0x000360, "Member 'UW_PreMission_Tablet_Legend_C::IsOpen' has a wrong offset!");

}

