#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayersList

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_PlayersList.W_PlayersList_C.Ban Player
// 0x00F8 (0x00F8 - 0x0000)
struct W_PlayersList_C_Ban_Player final
{
public:
	struct FLobbyPlayer                           Lobby_Player;                                      // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APlayerState*                           CallFunc_GetPlayerStateFromUniqueId_ReturnValue;   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyPlayer                           Temp_struct_Variable;                              // 0x0080(0x0070)(ConstParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_Ban_Player) == 0x000008, "Wrong alignment on W_PlayersList_C_Ban_Player");
static_assert(sizeof(W_PlayersList_C_Ban_Player) == 0x0000F8, "Wrong size on W_PlayersList_C_Ban_Player");
static_assert(offsetof(W_PlayersList_C_Ban_Player, Lobby_Player) == 0x000000, "Member 'W_PlayersList_C_Ban_Player::Lobby_Player' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Ban_Player, CallFunc_GetPlayerStateFromUniqueId_ReturnValue) == 0x000070, "Member 'W_PlayersList_C_Ban_Player::CallFunc_GetPlayerStateFromUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Ban_Player, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'W_PlayersList_C_Ban_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Ban_Player, Temp_struct_Variable) == 0x000080, "Member 'W_PlayersList_C_Ban_Player::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Ban_Player, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000F0, "Member 'W_PlayersList_C_Ban_Player::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong alignment on W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(sizeof(W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature) == 0x000008, "Wrong size on W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");
static_assert(offsetof(W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature, Button) == 0x000000, "Member 'W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature::Button' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_3_Hovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_3_Hovered__DelegateSignature final
{
public:
	class UW_Button_C*                            Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_3_Hovered__DelegateSignature) == 0x000008, "Wrong alignment on W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_3_Hovered__DelegateSignature");
static_assert(sizeof(W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_3_Hovered__DelegateSignature) == 0x000008, "Wrong size on W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_3_Hovered__DelegateSignature");
static_assert(offsetof(W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_3_Hovered__DelegateSignature, Button) == 0x000000, "Member 'W_PlayersList_C_BndEvt__W_PlayersList_W_Button_K2Node_ComponentBoundEvent_3_Hovered__DelegateSignature::Button' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.Create Player Item
// 0x0088 (0x0088 - 0x0000)
struct W_PlayersList_C_Create_Player_Item final
{
public:
	class APlayerController*                      OwningPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLobbyPlayer                           Player;                                            // 0x0008(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UW_PlayersList_Entry_C*                 CallFunc_Create_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_Create_Player_Item) == 0x000008, "Wrong alignment on W_PlayersList_C_Create_Player_Item");
static_assert(sizeof(W_PlayersList_C_Create_Player_Item) == 0x000088, "Wrong size on W_PlayersList_C_Create_Player_Item");
static_assert(offsetof(W_PlayersList_C_Create_Player_Item, OwningPlayer) == 0x000000, "Member 'W_PlayersList_C_Create_Player_Item::OwningPlayer' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Create_Player_Item, Player) == 0x000008, "Member 'W_PlayersList_C_Create_Player_Item::Player' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Create_Player_Item, CallFunc_Create_ReturnValue) == 0x000078, "Member 'W_PlayersList_C_Create_Player_Item::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Create_Player_Item, CallFunc_AddChild_ReturnValue) == 0x000080, "Member 'W_PlayersList_C_Create_Player_Item::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.CREATEDELEGATE_PROXYFUNCTION_0
// 0x0070 (0x0070 - 0x0000)
struct W_PlayersList_C_CREATEDELEGATE_PROXYFUNCTION_0 final
{
public:
	struct FLobbyPlayer                           Player;                                            // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_PlayersList_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000008, "Wrong alignment on W_PlayersList_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(sizeof(W_PlayersList_C_CREATEDELEGATE_PROXYFUNCTION_0) == 0x000070, "Wrong size on W_PlayersList_C_CREATEDELEGATE_PROXYFUNCTION_0");
static_assert(offsetof(W_PlayersList_C_CREATEDELEGATE_PROXYFUNCTION_0, Player) == 0x000000, "Member 'W_PlayersList_C_CREATEDELEGATE_PROXYFUNCTION_0::Player' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.ExecuteUbergraph_W_PlayersList
// 0x0220 (0x0220 - 0x0000)
struct W_PlayersList_C_ExecuteUbergraph_W_PlayersList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Lobby_Is_Full_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyPlayer                           K2Node_MakeStruct_LobbyPlayer;                     // 0x00E8(0x0070)()
	struct FLobbyPlayer                           CallFunc_Array_Get_Item;                           // 0x0158(0x0070)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x01E0(0x0008)(NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button_1;               // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            K2Node_ComponentBoundEvent_Button;                 // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0200(0x0008)(NoDestructor)
	bool                                          CallFunc_IsLobby_ReturnValue;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShowFriendsUIForInvitation_ReturnValue;   // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B[0x1];                                      // 0x020B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FLobbyPlayer& Player)> K2Node_CreateDelegate_OutputDelegate_3;       // 0x020C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast; // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList) == 0x000008, "Wrong alignment on W_PlayersList_C_ExecuteUbergraph_W_PlayersList");
static_assert(sizeof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList) == 0x000220, "Wrong size on W_PlayersList_C_ExecuteUbergraph_W_PlayersList");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, EntryPoint) == 0x000000, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_Lobby_Is_Full_ReturnValue) == 0x000004, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_Lobby_Is_Full_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, Temp_int_Array_Index_Variable) == 0x000030, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, Temp_int_Variable) == 0x000040, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_Event_IsDesignTime) == 0x000044, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000048, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_MakeArray_Array) == 0x0000A0, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E0, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_MakeStruct_LobbyPlayer) == 0x0000E8, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_MakeStruct_LobbyPlayer' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_Array_Get_Item) == 0x000158, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_Array_Length_ReturnValue) == 0x0001C8, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_Less_IntInt_ReturnValue) == 0x0001CC, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001D0, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_Event_InFocusEvent_1) == 0x0001E0, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0001E8, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_ComponentBoundEvent_Button_1) == 0x0001F0, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_ComponentBoundEvent_Button) == 0x0001F8, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_Event_InFocusEvent) == 0x000200, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_IsLobby_ReturnValue) == 0x000208, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_IsLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_BooleanAND_ReturnValue) == 0x000209, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_ShowFriendsUIForInvitation_ReturnValue) == 0x00020A, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_ShowFriendsUIForInvitation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, K2Node_CreateDelegate_OutputDelegate_3) == 0x00020C, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_ExecuteUbergraph_W_PlayersList, CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast) == 0x00021C, "Member 'W_PlayersList_C_ExecuteUbergraph_W_PlayersList::CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.KickPlayer
// 0x00A8 (0x00A8 - 0x0000)
struct W_PlayersList_C_KickPlayer final
{
public:
	struct FLobbyPlayer                           LobbyPlayer;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APlayerState*                           CallFunc_GetPlayerStateFromUniqueId_ReturnValue;   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_FindTextInLocalizationTable_OutText;      // 0x0080(0x0018)()
	bool                                          CallFunc_FindTextInLocalizationTable_ReturnValue;  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_KickPlayer) == 0x000008, "Wrong alignment on W_PlayersList_C_KickPlayer");
static_assert(sizeof(W_PlayersList_C_KickPlayer) == 0x0000A8, "Wrong size on W_PlayersList_C_KickPlayer");
static_assert(offsetof(W_PlayersList_C_KickPlayer, LobbyPlayer) == 0x000000, "Member 'W_PlayersList_C_KickPlayer::LobbyPlayer' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_KickPlayer, CallFunc_GetPlayerStateFromUniqueId_ReturnValue) == 0x000070, "Member 'W_PlayersList_C_KickPlayer::CallFunc_GetPlayerStateFromUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_KickPlayer, CallFunc_Array_RemoveItem_ReturnValue) == 0x000078, "Member 'W_PlayersList_C_KickPlayer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_KickPlayer, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'W_PlayersList_C_KickPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_KickPlayer, CallFunc_FindTextInLocalizationTable_OutText) == 0x000080, "Member 'W_PlayersList_C_KickPlayer::CallFunc_FindTextInLocalizationTable_OutText' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_KickPlayer, CallFunc_FindTextInLocalizationTable_ReturnValue) == 0x000098, "Member 'W_PlayersList_C_KickPlayer::CallFunc_FindTextInLocalizationTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_KickPlayer, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x0000A0, "Member 'W_PlayersList_C_KickPlayer::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.Lobby Is Full
// 0x000C (0x000C - 0x0000)
struct W_PlayersList_C_Lobby_Is_Full final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_Lobby_Is_Full) == 0x000004, "Wrong alignment on W_PlayersList_C_Lobby_Is_Full");
static_assert(sizeof(W_PlayersList_C_Lobby_Is_Full) == 0x00000C, "Wrong size on W_PlayersList_C_Lobby_Is_Full");
static_assert(offsetof(W_PlayersList_C_Lobby_Is_Full, ReturnValue) == 0x000000, "Member 'W_PlayersList_C_Lobby_Is_Full::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Lobby_Is_Full, CallFunc_GetChildrenCount_ReturnValue) == 0x000004, "Member 'W_PlayersList_C_Lobby_Is_Full::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Lobby_Is_Full, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'W_PlayersList_C_Lobby_Is_Full::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct W_PlayersList_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_PlayersList_C_OnFocusLost) == 0x000004, "Wrong alignment on W_PlayersList_C_OnFocusLost");
static_assert(sizeof(W_PlayersList_C_OnFocusLost) == 0x000008, "Wrong size on W_PlayersList_C_OnFocusLost");
static_assert(offsetof(W_PlayersList_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'W_PlayersList_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_PlayersList_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_PlayersList_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on W_PlayersList_C_OnRemovedFromFocusPath");
static_assert(sizeof(W_PlayersList_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on W_PlayersList_C_OnRemovedFromFocusPath");
static_assert(offsetof(W_PlayersList_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'W_PlayersList_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_PlayersList_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_PreConstruct) == 0x000001, "Wrong alignment on W_PlayersList_C_PreConstruct");
static_assert(sizeof(W_PlayersList_C_PreConstruct) == 0x000001, "Wrong size on W_PlayersList_C_PreConstruct");
static_assert(offsetof(W_PlayersList_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_PlayersList_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.RefreshPlayerEntry
// 0x00C0 (0x00C0 - 0x0000)
struct W_PlayersList_C_RefreshPlayerEntry final
{
public:
	struct FLobbyPlayer                           Player;                                            // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PlayersList_Entry_C*                 K2Node_DynamicCast_AsW_Players_List_Entry;         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_RefreshPlayerEntry) == 0x000008, "Wrong alignment on W_PlayersList_C_RefreshPlayerEntry");
static_assert(sizeof(W_PlayersList_C_RefreshPlayerEntry) == 0x0000C0, "Wrong size on W_PlayersList_C_RefreshPlayerEntry");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, Player) == 0x000000, "Member 'W_PlayersList_C_RefreshPlayerEntry::Player' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, Temp_bool_True_if_break_was_hit_Variable) == 0x000070, "Member 'W_PlayersList_C_RefreshPlayerEntry::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, Temp_int_Array_Index_Variable) == 0x000074, "Member 'W_PlayersList_C_RefreshPlayerEntry::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'W_PlayersList_C_RefreshPlayerEntry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'W_PlayersList_C_RefreshPlayerEntry::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'W_PlayersList_C_RefreshPlayerEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, CallFunc_HasAnyChildren_ReturnValue) == 0x000084, "Member 'W_PlayersList_C_RefreshPlayerEntry::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, CallFunc_GetAllChildren_ReturnValue) == 0x000088, "Member 'W_PlayersList_C_RefreshPlayerEntry::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'W_PlayersList_C_RefreshPlayerEntry::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'W_PlayersList_C_RefreshPlayerEntry::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'W_PlayersList_C_RefreshPlayerEntry::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, K2Node_DynamicCast_AsW_Players_List_Entry) == 0x0000B0, "Member 'W_PlayersList_C_RefreshPlayerEntry::K2Node_DynamicCast_AsW_Players_List_Entry' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'W_PlayersList_C_RefreshPlayerEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, CallFunc_BooleanAND_ReturnValue) == 0x0000B9, "Member 'W_PlayersList_C_RefreshPlayerEntry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_RefreshPlayerEntry, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0000BA, "Member 'W_PlayersList_C_RefreshPlayerEntry::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.Toggle Mute Player
// 0x0108 (0x0108 - 0x0000)
struct W_PlayersList_C_Toggle_Mute_Player final
{
public:
	struct FLobbyPlayer                           LobbyPlayer;                                       // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UW_PlayersList_Entry_C*                 EntryRef;                                          // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanChangeMutedState_ReturnValue;          // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLobbyPlayer                           CallFunc_Array_Get_Item;                           // 0x0088(0x0070)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF[0x1];                                       // 0x00FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_Toggle_Mute_Player) == 0x000008, "Wrong alignment on W_PlayersList_C_Toggle_Mute_Player");
static_assert(sizeof(W_PlayersList_C_Toggle_Mute_Player) == 0x000108, "Wrong size on W_PlayersList_C_Toggle_Mute_Player");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, LobbyPlayer) == 0x000000, "Member 'W_PlayersList_C_Toggle_Mute_Player::LobbyPlayer' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, EntryRef) == 0x000070, "Member 'W_PlayersList_C_Toggle_Mute_Player::EntryRef' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, Temp_bool_True_if_break_was_hit_Variable) == 0x000078, "Member 'W_PlayersList_C_Toggle_Mute_Player::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, CallFunc_Not_PreBool_ReturnValue) == 0x000079, "Member 'W_PlayersList_C_Toggle_Mute_Player::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007A, "Member 'W_PlayersList_C_Toggle_Mute_Player::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, CallFunc_CanChangeMutedState_ReturnValue) == 0x00007B, "Member 'W_PlayersList_C_Toggle_Mute_Player::CallFunc_CanChangeMutedState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'W_PlayersList_C_Toggle_Mute_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'W_PlayersList_C_Toggle_Mute_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, CallFunc_Array_Get_Item) == 0x000088, "Member 'W_PlayersList_C_Toggle_Mute_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'W_PlayersList_C_Toggle_Mute_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'W_PlayersList_C_Toggle_Mute_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000FD, "Member 'W_PlayersList_C_Toggle_Mute_Player::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, CallFunc_BooleanAND_ReturnValue) == 0x0000FE, "Member 'W_PlayersList_C_Toggle_Mute_Player::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_Toggle_Mute_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'W_PlayersList_C_Toggle_Mute_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function W_PlayersList.W_PlayersList_C.BP_GetDesiredFocusTarget
// 0x0020 (0x0020 - 0x0000)
struct W_PlayersList_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_PlayersList_Entry_C*                 K2Node_DynamicCast_AsW_Players_List_Entry;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayersList_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on W_PlayersList_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(W_PlayersList_C_BP_GetDesiredFocusTarget) == 0x000020, "Wrong size on W_PlayersList_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(W_PlayersList_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'W_PlayersList_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_BP_GetDesiredFocusTarget, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'W_PlayersList_C_BP_GetDesiredFocusTarget::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_AsW_Players_List_Entry) == 0x000010, "Member 'W_PlayersList_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_AsW_Players_List_Entry' has a wrong offset!");
static_assert(offsetof(W_PlayersList_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_PlayersList_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

