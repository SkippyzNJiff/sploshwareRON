#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_LegendEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet_LegendEntry.W_PreMission_Tablet_LegendEntry_C
// 0x0028 (0x02E8 - 0x02C0)
class UW_PreMission_Tablet_LegendEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UScaleBox*                              Scale_Icon;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Label;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   MarkerName;                                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        IconRotation;                                      // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_PreMission_Tablet_LegendEntry(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_LegendEntry_C">();
	}
	static class UW_PreMission_Tablet_LegendEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_LegendEntry_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_LegendEntry_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_LegendEntry_C");
static_assert(sizeof(UW_PreMission_Tablet_LegendEntry_C) == 0x0002E8, "Wrong size on UW_PreMission_Tablet_LegendEntry_C");
static_assert(offsetof(UW_PreMission_Tablet_LegendEntry_C, UberGraphFrame) == 0x0002C0, "Member 'UW_PreMission_Tablet_LegendEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_LegendEntry_C, Scale_Icon) == 0x0002C8, "Member 'UW_PreMission_Tablet_LegendEntry_C::Scale_Icon' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_LegendEntry_C, txt_Label) == 0x0002D0, "Member 'UW_PreMission_Tablet_LegendEntry_C::txt_Label' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_LegendEntry_C, MarkerName) == 0x0002D8, "Member 'UW_PreMission_Tablet_LegendEntry_C::MarkerName' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_LegendEntry_C, IconRotation) == 0x0002E0, "Member 'UW_PreMission_Tablet_LegendEntry_C::IconRotation' has a wrong offset!");

}

