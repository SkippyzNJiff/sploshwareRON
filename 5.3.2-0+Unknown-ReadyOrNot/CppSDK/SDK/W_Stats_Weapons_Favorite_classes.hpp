#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Stats_Weapons_Favorite

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Stats_Weapons_Favorite.W_Stats_Weapons_Favorite_C
// 0x0258 (0x0540 - 0x02E8)
class UW_Stats_Weapons_Favorite_C final : public UStatViewerWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 div_Compare;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_WeaponIcons;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_WeaponIcon;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_WeaponIcon_Compare;                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_Comparison;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       lbl_StatCategory;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              scale_WeaponIcon;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              scale_WeaponIcon_Compare;                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_WeaponName;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_WeaponName_Compare;                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_FavoriteWeaponStats;                            // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_WeaponCompare;                                  // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 Stat_ID;                                           // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Is_Design_Time;                                    // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompare;                                          // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362[0x6];                                      // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              FavoriteBaseItem;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              FavoriteBaseItem_Compare;                          // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFriend                                CompareFriend;                                     // 0x0378(0x01C8)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BackPage(bool* Handled);
	void CancelCompare();
	void ChangePage(class FName PageName);
	void CompareWithFriend(const struct FFriend& Friend);
	void Construct();
	void ExecuteUbergraph_W_Stats_Weapons_Favorite(int32 EntryPoint);
	void Hide(double Delay, bool Collapse);
	void OnInitialized();
	void OnStatChanged(const class FString& StatID);
	void PreConstruct(bool IsDesignTime);
	void Reveal(double Delay);
	void SetInputMode(bool IsGamepad);
	void StatsLoaded();
	void UpdateStats();
	void UpdateStyle();

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Stats_Weapons_Favorite_C">();
	}
	static class UW_Stats_Weapons_Favorite_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Stats_Weapons_Favorite_C>();
	}
};
static_assert(alignof(UW_Stats_Weapons_Favorite_C) == 0x000008, "Wrong alignment on UW_Stats_Weapons_Favorite_C");
static_assert(sizeof(UW_Stats_Weapons_Favorite_C) == 0x000540, "Wrong size on UW_Stats_Weapons_Favorite_C");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, UberGraphFrame) == 0x0002E8, "Member 'UW_Stats_Weapons_Favorite_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, div_Compare) == 0x0002F0, "Member 'UW_Stats_Weapons_Favorite_C::div_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, HB_WeaponIcons) == 0x0002F8, "Member 'UW_Stats_Weapons_Favorite_C::HB_WeaponIcons' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, img_WeaponIcon) == 0x000300, "Member 'UW_Stats_Weapons_Favorite_C::img_WeaponIcon' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, img_WeaponIcon_Compare) == 0x000308, "Member 'UW_Stats_Weapons_Favorite_C::img_WeaponIcon_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, lbl_Comparison) == 0x000310, "Member 'UW_Stats_Weapons_Favorite_C::lbl_Comparison' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, lbl_StatCategory) == 0x000318, "Member 'UW_Stats_Weapons_Favorite_C::lbl_StatCategory' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, scale_WeaponIcon) == 0x000320, "Member 'UW_Stats_Weapons_Favorite_C::scale_WeaponIcon' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, scale_WeaponIcon_Compare) == 0x000328, "Member 'UW_Stats_Weapons_Favorite_C::scale_WeaponIcon_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, txt_WeaponName) == 0x000330, "Member 'UW_Stats_Weapons_Favorite_C::txt_WeaponName' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, txt_WeaponName_Compare) == 0x000338, "Member 'UW_Stats_Weapons_Favorite_C::txt_WeaponName_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, VB_FavoriteWeaponStats) == 0x000340, "Member 'UW_Stats_Weapons_Favorite_C::VB_FavoriteWeaponStats' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, VB_WeaponCompare) == 0x000348, "Member 'UW_Stats_Weapons_Favorite_C::VB_WeaponCompare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, Stat_ID) == 0x000350, "Member 'UW_Stats_Weapons_Favorite_C::Stat_ID' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, Is_Design_Time) == 0x000360, "Member 'UW_Stats_Weapons_Favorite_C::Is_Design_Time' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, bCompare) == 0x000361, "Member 'UW_Stats_Weapons_Favorite_C::bCompare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, FavoriteBaseItem) == 0x000368, "Member 'UW_Stats_Weapons_Favorite_C::FavoriteBaseItem' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, FavoriteBaseItem_Compare) == 0x000370, "Member 'UW_Stats_Weapons_Favorite_C::FavoriteBaseItem_Compare' has a wrong offset!");
static_assert(offsetof(UW_Stats_Weapons_Favorite_C, CompareFriend) == 0x000378, "Member 'UW_Stats_Weapons_Favorite_C::CompareFriend' has a wrong offset!");

}

