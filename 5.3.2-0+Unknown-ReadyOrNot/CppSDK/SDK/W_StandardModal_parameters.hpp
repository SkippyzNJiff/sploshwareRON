#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardModal

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function W_StandardModal.W_StandardModal_C.BndEvt__W_StandardModal_btn_Apply_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_StandardModal_C_BndEvt__W_StandardModal_btn_Apply_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_BndEvt__W_StandardModal_btn_Apply_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_BndEvt__W_StandardModal_btn_Apply_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_BndEvt__W_StandardModal_btn_Apply_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_StandardModal_C_BndEvt__W_StandardModal_btn_Apply_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_btn_Apply_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_btn_Apply_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_StandardModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_StandardModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_StandardModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_StandardModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'W_StandardModal_C_BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BP_OnHandleBackAction
// 0x0001 (0x0001 - 0x0000)
struct W_StandardModal_C_BP_OnHandleBackAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on W_StandardModal_C_BP_OnHandleBackAction");
static_assert(sizeof(W_StandardModal_C_BP_OnHandleBackAction) == 0x000001, "Wrong size on W_StandardModal_C_BP_OnHandleBackAction");
static_assert(offsetof(W_StandardModal_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'W_StandardModal_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.Confirm
// 0x0058 (0x0058 - 0x0000)
struct W_StandardModal_C_Confirm final
{
public:
	bool                                          OkClicked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyClicked;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TextInputConfirm;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0020(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_2;                    // 0x0038(0x0018)()
	bool                                          CallFunc_IsTextUnderMin_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTextOverMax_ReturnValue;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTextOverMax_ReturnValue_1;              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_Confirm) == 0x000008, "Wrong alignment on W_StandardModal_C_Confirm");
static_assert(sizeof(W_StandardModal_C_Confirm) == 0x000058, "Wrong size on W_StandardModal_C_Confirm");
static_assert(offsetof(W_StandardModal_C_Confirm, OkClicked) == 0x000000, "Member 'W_StandardModal_C_Confirm::OkClicked' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, ApplyClicked) == 0x000001, "Member 'W_StandardModal_C_Confirm::ApplyClicked' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, TextInputConfirm) == 0x000002, "Member 'W_StandardModal_C_Confirm::TextInputConfirm' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'W_StandardModal_C_Confirm::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_GetText_ReturnValue_1) == 0x000020, "Member 'W_StandardModal_C_Confirm::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_GetText_ReturnValue_2) == 0x000038, "Member 'W_StandardModal_C_Confirm::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_IsTextUnderMin_ReturnValue) == 0x000050, "Member 'W_StandardModal_C_Confirm::CallFunc_IsTextUnderMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_IsTextOverMax_ReturnValue) == 0x000051, "Member 'W_StandardModal_C_Confirm::CallFunc_IsTextOverMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Confirm, CallFunc_IsTextOverMax_ReturnValue_1) == 0x000052, "Member 'W_StandardModal_C_Confirm::CallFunc_IsTextOverMax_ReturnValue_1' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.ConfirmTextEntry
// 0x0030 (0x0030 - 0x0000)
struct W_StandardModal_C_ConfirmTextEntry final
{
public:
	class FText                                   ConfirmTitleText;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ConfirmDescriptionText;                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_StandardModal_C_ConfirmTextEntry) == 0x000008, "Wrong alignment on W_StandardModal_C_ConfirmTextEntry");
static_assert(sizeof(W_StandardModal_C_ConfirmTextEntry) == 0x000030, "Wrong size on W_StandardModal_C_ConfirmTextEntry");
static_assert(offsetof(W_StandardModal_C_ConfirmTextEntry, ConfirmTitleText) == 0x000000, "Member 'W_StandardModal_C_ConfirmTextEntry::ConfirmTitleText' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ConfirmTextEntry, ConfirmDescriptionText) == 0x000018, "Member 'W_StandardModal_C_ConfirmTextEntry::ConfirmDescriptionText' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.DisplayWarningText
// 0x0020 (0x0020 - 0x0000)
struct W_StandardModal_C_DisplayWarningText final
{
public:
	class FText                                   WarningText;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_DisplayWarningText) == 0x000008, "Wrong alignment on W_StandardModal_C_DisplayWarningText");
static_assert(sizeof(W_StandardModal_C_DisplayWarningText) == 0x000020, "Wrong size on W_StandardModal_C_DisplayWarningText");
static_assert(offsetof(W_StandardModal_C_DisplayWarningText, WarningText) == 0x000000, "Member 'W_StandardModal_C_DisplayWarningText::WarningText' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_DisplayWarningText, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'W_StandardModal_C_DisplayWarningText::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.Do Custom Navigation Cancel Up
// 0x0010 (0x0010 - 0x0000)
struct W_StandardModal_C_Do_Custom_Navigation_Cancel_Up final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_Do_Custom_Navigation_Cancel_Up) == 0x000008, "Wrong alignment on W_StandardModal_C_Do_Custom_Navigation_Cancel_Up");
static_assert(sizeof(W_StandardModal_C_Do_Custom_Navigation_Cancel_Up) == 0x000010, "Wrong size on W_StandardModal_C_Do_Custom_Navigation_Cancel_Up");
static_assert(offsetof(W_StandardModal_C_Do_Custom_Navigation_Cancel_Up, Navigation_0) == 0x000000, "Member 'W_StandardModal_C_Do_Custom_Navigation_Cancel_Up::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Do_Custom_Navigation_Cancel_Up, ReturnValue) == 0x000008, "Member 'W_StandardModal_C_Do_Custom_Navigation_Cancel_Up::ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.ExecuteUbergraph_W_StandardModal
// 0x0310 (0x0310 - 0x0000)
struct W_StandardModal_C_ExecuteUbergraph_W_StandardModal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float CurrentOffset)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate_1;          // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FText& Text)>      K2Node_CreateDelegate_OutputDelegate_2;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0048(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurrentOffset;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0100(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0190(0x0018)(ConstParm)
	bool                                          CallFunc_IsTextOverMax_ReturnValue;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01B8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0208(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0218(0x0018)()
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_233[0x5];                                      // 0x0233(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0258(0x0018)(ConstParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0278(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x0288(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_2;            // 0x0298(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_3;            // 0x02A8(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_4;            // 0x02B8(0x0010)(NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_5;            // 0x02D0(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_6;            // 0x02E0(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_7;            // 0x02F0(0x0010)(NoDestructor)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal) == 0x000008, "Wrong alignment on W_StandardModal_C_ExecuteUbergraph_W_StandardModal");
static_assert(sizeof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal) == 0x000310, "Wrong size on W_StandardModal_C_ExecuteUbergraph_W_StandardModal");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, EntryPoint) == 0x000000, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable) == 0x000004, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable_1) == 0x000005, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_bool_Variable) == 0x000006, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable_2) == 0x000018, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable_3) == 0x000019, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000020, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_CreateDelegate_OutputDelegate_2) == 0x000038, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetCachedGeometry_ReturnValue) == 0x000048, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetDesiredSize_ReturnValue) == 0x000080, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetLocalSize_ReturnValue) == 0x000090, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X_1) == 0x0000B0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y_1) == 0x0000B8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetScrollOffset_ReturnValue) == 0x0000C0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_CustomEvent_CurrentOffset) == 0x0000D8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_CustomEvent_CurrentOffset' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000DC, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_GetPlayerController_ReturnValue) == 0x0000E0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeArray_Array) == 0x0000E8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_TextIsEmpty_ReturnValue) == 0x0000F8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_bool_Variable_1) == 0x0000F9, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_Text_1) == 0x000100, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_CommitMethod) == 0x000118, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000119, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable_4) == 0x00011A, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000120, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_Select_Default) == 0x000128, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_Select_Default_1) == 0x000129, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_VSize2D_ReturnValue) == 0x000130, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000138, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X_2) == 0x000140, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y_2) == 0x000148, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X_3) == 0x000158, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y_3) == 0x000160, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X_4) == 0x000168, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y_4) == 0x000170, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000178, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_X_5) == 0x000180, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BreakVector2D_Y_5) == 0x000188, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_Text) == 0x000190, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_IsTextOverMax_ReturnValue) == 0x0001A8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_IsTextOverMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_byte_Variable_5) == 0x0001A9, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0001B0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeStruct_FormatArgumentData) == 0x0001B8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeArray_Array_1) == 0x000208, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Format_ReturnValue) == 0x000218, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_CustomEvent_bNewInputType) == 0x000230, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000231, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, Temp_bool_Variable_2) == 0x000232, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_Button_2) == 0x000238, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_Button_1) == 0x000240, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_Select_Default_2) == 0x000248, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_ComponentBoundEvent_Button) == 0x000250, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_CustomEvent_Text) == 0x000258, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Array_Contains_ReturnValue) == 0x000270, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_Event_IsDesignTime) == 0x000271, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeStruct_DataTableRowHandle) == 0x000278, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeStruct_DataTableRowHandle_1) == 0x000288, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeStruct_DataTableRowHandle_2) == 0x000298, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeStruct_DataTableRowHandle_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeStruct_DataTableRowHandle_3) == 0x0002A8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeStruct_DataTableRowHandle_3' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeStruct_DataTableRowHandle_4) == 0x0002B8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeStruct_DataTableRowHandle_4' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_BooleanAND_ReturnValue) == 0x0002C8, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeStruct_DataTableRowHandle_5) == 0x0002D0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeStruct_DataTableRowHandle_5' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeStruct_DataTableRowHandle_6) == 0x0002E0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeStruct_DataTableRowHandle_6' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, K2Node_MakeStruct_DataTableRowHandle_7) == 0x0002F0, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::K2Node_MakeStruct_DataTableRowHandle_7' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000300, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000308, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_ExecuteUbergraph_W_StandardModal, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00030C, "Member 'W_StandardModal_C_ExecuteUbergraph_W_StandardModal::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.Get_OkButton_bIsEnabled_0
// 0x0004 (0x0004 - 0x0000)
struct W_StandardModal_C_Get_OkButton_bIsEnabled_0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_Get_OkButton_bIsEnabled_0) == 0x000001, "Wrong alignment on W_StandardModal_C_Get_OkButton_bIsEnabled_0");
static_assert(sizeof(W_StandardModal_C_Get_OkButton_bIsEnabled_0) == 0x000004, "Wrong size on W_StandardModal_C_Get_OkButton_bIsEnabled_0");
static_assert(offsetof(W_StandardModal_C_Get_OkButton_bIsEnabled_0, ReturnValue) == 0x000000, "Member 'W_StandardModal_C_Get_OkButton_bIsEnabled_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Get_OkButton_bIsEnabled_0, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_StandardModal_C_Get_OkButton_bIsEnabled_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Get_OkButton_bIsEnabled_0, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'W_StandardModal_C_Get_OkButton_bIsEnabled_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Get_OkButton_bIsEnabled_0, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'W_StandardModal_C_Get_OkButton_bIsEnabled_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct W_StandardModal_C_InputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_InputMethodChanged) == 0x000001, "Wrong alignment on W_StandardModal_C_InputMethodChanged");
static_assert(sizeof(W_StandardModal_C_InputMethodChanged) == 0x000001, "Wrong size on W_StandardModal_C_InputMethodChanged");
static_assert(offsetof(W_StandardModal_C_InputMethodChanged, bNewInputType) == 0x000000, "Member 'W_StandardModal_C_InputMethodChanged::bNewInputType' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.IsTextOverMax
// 0x0038 (0x0038 - 0x0000)
struct W_StandardModal_C_IsTextOverMax final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_IsTextOverMax) == 0x000008, "Wrong alignment on W_StandardModal_C_IsTextOverMax");
static_assert(sizeof(W_StandardModal_C_IsTextOverMax) == 0x000038, "Wrong size on W_StandardModal_C_IsTextOverMax");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, ReturnValue) == 0x000000, "Member 'W_StandardModal_C_IsTextOverMax::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000001, "Member 'W_StandardModal_C_IsTextOverMax::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'W_StandardModal_C_IsTextOverMax::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'W_StandardModal_C_IsTextOverMax::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, CallFunc_Len_ReturnValue) == 0x000030, "Member 'W_StandardModal_C_IsTextOverMax::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextOverMax, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'W_StandardModal_C_IsTextOverMax::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.IsTextUnderMin
// 0x0038 (0x0038 - 0x0000)
struct W_StandardModal_C_IsTextUnderMin final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_IsTextUnderMin) == 0x000008, "Wrong alignment on W_StandardModal_C_IsTextUnderMin");
static_assert(sizeof(W_StandardModal_C_IsTextUnderMin) == 0x000038, "Wrong size on W_StandardModal_C_IsTextUnderMin");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, ReturnValue) == 0x000000, "Member 'W_StandardModal_C_IsTextUnderMin::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000001, "Member 'W_StandardModal_C_IsTextUnderMin::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'W_StandardModal_C_IsTextUnderMin::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'W_StandardModal_C_IsTextUnderMin::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, CallFunc_Len_ReturnValue) == 0x000030, "Member 'W_StandardModal_C_IsTextUnderMin::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_IsTextUnderMin, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'W_StandardModal_C_IsTextUnderMin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.OnKeyDown
// 0x02C0 (0x02C0 - 0x0000)
struct W_StandardModal_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0208(0x00B8)()
};
static_assert(alignof(W_StandardModal_C_OnKeyDown) == 0x000008, "Wrong alignment on W_StandardModal_C_OnKeyDown");
static_assert(sizeof(W_StandardModal_C_OnKeyDown) == 0x0002C0, "Wrong size on W_StandardModal_C_OnKeyDown");
static_assert(offsetof(W_StandardModal_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'W_StandardModal_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'W_StandardModal_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'W_StandardModal_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000130, "Member 'W_StandardModal_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'W_StandardModal_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'W_StandardModal_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000208, "Member 'W_StandardModal_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.OnTextChange
// 0x0020 (0x0020 - 0x0000)
struct W_StandardModal_C_OnTextChange final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_OnTextChange) == 0x000008, "Wrong alignment on W_StandardModal_C_OnTextChange");
static_assert(sizeof(W_StandardModal_C_OnTextChange) == 0x000020, "Wrong size on W_StandardModal_C_OnTextChange");
static_assert(offsetof(W_StandardModal_C_OnTextChange, InText) == 0x000000, "Member 'W_StandardModal_C_OnTextChange::InText' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnTextChange, CallFunc_IsUsingGamepad_ReturnValue) == 0x000018, "Member 'W_StandardModal_C_OnTextChange::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_OnTextChange, CallFunc_TextIsEmpty_ReturnValue) == 0x000019, "Member 'W_StandardModal_C_OnTextChange::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.OnTextChanged_Event
// 0x0018 (0x0018 - 0x0000)
struct W_StandardModal_C_OnTextChanged_Event final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_StandardModal_C_OnTextChanged_Event) == 0x000008, "Wrong alignment on W_StandardModal_C_OnTextChanged_Event");
static_assert(sizeof(W_StandardModal_C_OnTextChanged_Event) == 0x000018, "Wrong size on W_StandardModal_C_OnTextChanged_Event");
static_assert(offsetof(W_StandardModal_C_OnTextChanged_Event, Text) == 0x000000, "Member 'W_StandardModal_C_OnTextChanged_Event::Text' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.OnUserScrolled_Event_0
// 0x0004 (0x0004 - 0x0000)
struct W_StandardModal_C_OnUserScrolled_Event_0 final
{
public:
	float                                         CurrentOffset;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_OnUserScrolled_Event_0) == 0x000004, "Wrong alignment on W_StandardModal_C_OnUserScrolled_Event_0");
static_assert(sizeof(W_StandardModal_C_OnUserScrolled_Event_0) == 0x000004, "Wrong size on W_StandardModal_C_OnUserScrolled_Event_0");
static_assert(offsetof(W_StandardModal_C_OnUserScrolled_Event_0, CurrentOffset) == 0x000000, "Member 'W_StandardModal_C_OnUserScrolled_Event_0::CurrentOffset' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_StandardModal_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_PreConstruct) == 0x000001, "Wrong alignment on W_StandardModal_C_PreConstruct");
static_assert(sizeof(W_StandardModal_C_PreConstruct) == 0x000001, "Wrong size on W_StandardModal_C_PreConstruct");
static_assert(offsetof(W_StandardModal_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_StandardModal_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.SetDescriptionText
// 0x0018 (0x0018 - 0x0000)
struct W_StandardModal_C_SetDescriptionText final
{
public:
	class FText                                   ModalDescription_0;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_StandardModal_C_SetDescriptionText) == 0x000008, "Wrong alignment on W_StandardModal_C_SetDescriptionText");
static_assert(sizeof(W_StandardModal_C_SetDescriptionText) == 0x000018, "Wrong size on W_StandardModal_C_SetDescriptionText");
static_assert(offsetof(W_StandardModal_C_SetDescriptionText, ModalDescription_0) == 0x000000, "Member 'W_StandardModal_C_SetDescriptionText::ModalDescription_0' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.SetGamepadHintVisibility
// 0x00B8 (0x00B8 - 0x0000)
struct W_StandardModal_C_SetGamepadHintVisibility final
{
public:
	EGamePlatform                                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGamePlatform                                 CallFunc_GetPlatform_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPcPlatform_ReturnValue;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
};
static_assert(alignof(W_StandardModal_C_SetGamepadHintVisibility) == 0x000008, "Wrong alignment on W_StandardModal_C_SetGamepadHintVisibility");
static_assert(sizeof(W_StandardModal_C_SetGamepadHintVisibility) == 0x0000B8, "Wrong size on W_StandardModal_C_SetGamepadHintVisibility");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_byte_Variable) == 0x000000, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable) == 0x000001, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable_1) == 0x000002, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable_2) == 0x000003, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable_3) == 0x000004, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable_4) == 0x000005, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable_5) == 0x000006, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable_6) == 0x000007, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable_7) == 0x000008, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable_8) == 0x000009, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable_9) == 0x00000A, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_bool_Variable_10) == 0x00000B, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_byte_Variable_1) == 0x00000C, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, Temp_byte_Variable_2) == 0x00000D, "Member 'W_StandardModal_C_SetGamepadHintVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, CallFunc_GetPlatform_ReturnValue) == 0x00000E, "Member 'W_StandardModal_C_SetGamepadHintVisibility::CallFunc_GetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, CallFunc_IsPcPlatform_ReturnValue) == 0x00000F, "Member 'W_StandardModal_C_SetGamepadHintVisibility::CallFunc_IsPcPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, K2Node_Select_Default) == 0x000010, "Member 'W_StandardModal_C_SetGamepadHintVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, K2Node_Select_Default_1) == 0x000011, "Member 'W_StandardModal_C_SetGamepadHintVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, CallFunc_SelectString_ReturnValue) == 0x000018, "Member 'W_StandardModal_C_SetGamepadHintVisibility::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'W_StandardModal_C_SetGamepadHintVisibility::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'W_StandardModal_C_SetGamepadHintVisibility::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, K2Node_MakeArray_Array) == 0x000090, "Member 'W_StandardModal_C_SetGamepadHintVisibility::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_SetGamepadHintVisibility, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'W_StandardModal_C_SetGamepadHintVisibility::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.Try Set Default Value
// 0x0030 (0x0030 - 0x0000)
struct W_StandardModal_C_Try_Set_Default_Value final
{
public:
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_Try_Set_Default_Value) == 0x000008, "Wrong alignment on W_StandardModal_C_Try_Set_Default_Value");
static_assert(sizeof(W_StandardModal_C_Try_Set_Default_Value) == 0x000030, "Wrong size on W_StandardModal_C_Try_Set_Default_Value");
static_assert(offsetof(W_StandardModal_C_Try_Set_Default_Value, K2Node_MakeArray_Array) == 0x000000, "Member 'W_StandardModal_C_Try_Set_Default_Value::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Try_Set_Default_Value, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'W_StandardModal_C_Try_Set_Default_Value::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Try_Set_Default_Value, CallFunc_TextIsEmpty_ReturnValue) == 0x000028, "Member 'W_StandardModal_C_Try_Set_Default_Value::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Try_Set_Default_Value, CallFunc_Array_Contains_ReturnValue) == 0x000029, "Member 'W_StandardModal_C_Try_Set_Default_Value::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_Try_Set_Default_Value, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'W_StandardModal_C_Try_Set_Default_Value::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.WarnTextOverMax
// 0x0080 (0x0080 - 0x0000)
struct W_StandardModal_C_WarnTextOverMax final
{
public:
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
};
static_assert(alignof(W_StandardModal_C_WarnTextOverMax) == 0x000008, "Wrong alignment on W_StandardModal_C_WarnTextOverMax");
static_assert(sizeof(W_StandardModal_C_WarnTextOverMax) == 0x000080, "Wrong size on W_StandardModal_C_WarnTextOverMax");
static_assert(offsetof(W_StandardModal_C_WarnTextOverMax, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000000, "Member 'W_StandardModal_C_WarnTextOverMax::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_WarnTextOverMax, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'W_StandardModal_C_WarnTextOverMax::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_WarnTextOverMax, K2Node_MakeArray_Array) == 0x000058, "Member 'W_StandardModal_C_WarnTextOverMax::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_WarnTextOverMax, CallFunc_Format_ReturnValue) == 0x000068, "Member 'W_StandardModal_C_WarnTextOverMax::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.WarnTextUnderMin
// 0x0080 (0x0080 - 0x0000)
struct W_StandardModal_C_WarnTextUnderMin final
{
public:
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
};
static_assert(alignof(W_StandardModal_C_WarnTextUnderMin) == 0x000008, "Wrong alignment on W_StandardModal_C_WarnTextUnderMin");
static_assert(sizeof(W_StandardModal_C_WarnTextUnderMin) == 0x000080, "Wrong size on W_StandardModal_C_WarnTextUnderMin");
static_assert(offsetof(W_StandardModal_C_WarnTextUnderMin, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000000, "Member 'W_StandardModal_C_WarnTextUnderMin::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_WarnTextUnderMin, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'W_StandardModal_C_WarnTextUnderMin::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_WarnTextUnderMin, K2Node_MakeArray_Array) == 0x000058, "Member 'W_StandardModal_C_WarnTextUnderMin::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_StandardModal_C_WarnTextUnderMin, CallFunc_Format_ReturnValue) == 0x000068, "Member 'W_StandardModal_C_WarnTextUnderMin::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function W_StandardModal.W_StandardModal_C.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_StandardModal_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_StandardModal_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on W_StandardModal_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(W_StandardModal_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on W_StandardModal_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(W_StandardModal_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'W_StandardModal_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

}

