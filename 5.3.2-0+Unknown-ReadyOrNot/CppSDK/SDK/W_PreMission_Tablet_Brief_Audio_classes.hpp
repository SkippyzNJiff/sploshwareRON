#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Brief_Audio

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet_Brief_Audio.W_PreMission_Tablet_Brief_Audio_C
// 0x0208 (0x04C8 - 0x02C0)
class UW_PreMission_Tablet_Brief_Audio_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animHide;                                          // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_AudioPlayer_C*                       AudioPlayer;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Briefing_TimelineEvents_C*           Events;                                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Header_C*                            h_Audio_1;                                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   rtxt_Transcript;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Briefing_Timeline_TrackWave_Simple_C* TrackWave;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Briefing_Transcript_C*               Transcript;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Playtime;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HotkeyBar_Entry_C*                   W_HotkeyBar_Entry;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDataTable*                             BriefingData;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   MissionName;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             AudioAsset;                                        // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DesignTime;                                        // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        AudioComponent;                                    // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          LoopAudio;                                         // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rewinding;                                         // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPaused;                                           // 0x033A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B[0x1];                                      // 0x033B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AudioDuration;                                     // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AudioLoopDelay;                                    // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AudioCurrentTime;                                  // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkipTimeIncrement;                                 // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Volume;                                            // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentProgress;                                   // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMissionAudio                          DebugMissionAudio;                                 // 0x0368(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTimelineEvent>                 DebugTimelineEvents;                               // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        PlaybackOffset;                                    // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TimerDurationText;                                 // 0x03E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTimelineEvent>                 TimelineEvents;                                    // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        ReturnTime;                                        // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Snippet;                                           // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SnippetResumeDelay;                                // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AutoStartDelay;                                    // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    FMODComponent;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMissionAudio                          MissionAudio;                                      // 0x0430(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TimelinePosition;                                  // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stopped;                                           // 0x0494(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasPlayed;                                        // 0x0495(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_496[0x2];                                      // 0x0496(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnPlay;                                            // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnStop;                                            // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnPause;                                           // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__Events_K2Node_ComponentBoundEvent_15_OnEventClicked__DelegateSignature(double EventAudioStart, double EventAudioDuration);
	void BndEvt__W_Briefing_Timeline_TrackWave_Simple_K2Node_ComponentBoundEvent_13_TimelineEventFired__DelegateSignature(double EventID);
	void BndEvt__W_Briefing_Transcript_K2Node_ComponentBoundEvent_7_TranscriptClicked__DelegateSignature(double ClipStartTime);
	void BndEvt__W_PreMission_Tablet_Brief_Audio_AudioPlayer_K2Node_ComponentBoundEvent_0_OnAudioCompleted__DelegateSignature();
	void BndEvt__W_PreMission_Tablet_Brief_Audio_AudioPlayer_K2Node_ComponentBoundEvent_1_OnPlay__DelegateSignature();
	void BndEvt__W_PreMission_Tablet_Brief_Audio_AudioPlayer_K2Node_ComponentBoundEvent_2_OnPause__DelegateSignature();
	void BndEvt__W_PreMission_Tablet_Brief_Audio_AudioPlayer_K2Node_ComponentBoundEvent_3_OnStop__DelegateSignature();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_W_PreMission_Tablet_Brief_Audio(int32 EntryPoint);
	void Get_Timer_Text(int32 Time, class FText* TimerText);
	void GetEventEntries(bool ForceUpdate, TMap<double, struct FTimelineEvent>* EventEntries1);
	int32 GetScrubbedTime();
	void Initialize(const struct FMissionAudio& Audio);
	void IsPlayingAudio(bool* Playing);
	void OnInputChange(ECommonInputType bNewInputType);
	void Pause();
	void Play();
	void PreConstruct(bool IsDesignTime);
	void Restart();
	void ScrubTime(bool Rewinding_0);
	void Set_Current_Audio_Text(int32 CurrentTime);
	void SetAudioPlayProgress(const class USoundWave* PlayingSoundWave, const double PlaybackPercent);
	void Stop();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ToggleLooping();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_Brief_Audio_C">();
	}
	static class UW_PreMission_Tablet_Brief_Audio_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_Brief_Audio_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_Brief_Audio_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_Brief_Audio_C");
static_assert(sizeof(UW_PreMission_Tablet_Brief_Audio_C) == 0x0004C8, "Wrong size on UW_PreMission_Tablet_Brief_Audio_C");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, UberGraphFrame) == 0x0002C0, "Member 'UW_PreMission_Tablet_Brief_Audio_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, animHide) == 0x0002C8, "Member 'UW_PreMission_Tablet_Brief_Audio_C::animHide' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, AudioPlayer) == 0x0002D0, "Member 'UW_PreMission_Tablet_Brief_Audio_C::AudioPlayer' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, Events) == 0x0002D8, "Member 'UW_PreMission_Tablet_Brief_Audio_C::Events' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, h_Audio_1) == 0x0002E0, "Member 'UW_PreMission_Tablet_Brief_Audio_C::h_Audio_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, rtxt_Transcript) == 0x0002E8, "Member 'UW_PreMission_Tablet_Brief_Audio_C::rtxt_Transcript' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, TrackWave) == 0x0002F0, "Member 'UW_PreMission_Tablet_Brief_Audio_C::TrackWave' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, Transcript) == 0x0002F8, "Member 'UW_PreMission_Tablet_Brief_Audio_C::Transcript' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, txt_Playtime) == 0x000300, "Member 'UW_PreMission_Tablet_Brief_Audio_C::txt_Playtime' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, W_HotkeyBar_Entry) == 0x000308, "Member 'UW_PreMission_Tablet_Brief_Audio_C::W_HotkeyBar_Entry' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, BriefingData) == 0x000310, "Member 'UW_PreMission_Tablet_Brief_Audio_C::BriefingData' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, MissionName) == 0x000318, "Member 'UW_PreMission_Tablet_Brief_Audio_C::MissionName' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, AudioAsset) == 0x000320, "Member 'UW_PreMission_Tablet_Brief_Audio_C::AudioAsset' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, DesignTime) == 0x000328, "Member 'UW_PreMission_Tablet_Brief_Audio_C::DesignTime' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, AudioComponent) == 0x000330, "Member 'UW_PreMission_Tablet_Brief_Audio_C::AudioComponent' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, LoopAudio) == 0x000338, "Member 'UW_PreMission_Tablet_Brief_Audio_C::LoopAudio' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, Rewinding) == 0x000339, "Member 'UW_PreMission_Tablet_Brief_Audio_C::Rewinding' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, bPaused) == 0x00033A, "Member 'UW_PreMission_Tablet_Brief_Audio_C::bPaused' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, AudioDuration) == 0x00033C, "Member 'UW_PreMission_Tablet_Brief_Audio_C::AudioDuration' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, AudioLoopDelay) == 0x000340, "Member 'UW_PreMission_Tablet_Brief_Audio_C::AudioLoopDelay' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, AudioCurrentTime) == 0x000348, "Member 'UW_PreMission_Tablet_Brief_Audio_C::AudioCurrentTime' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, SkipTimeIncrement) == 0x000350, "Member 'UW_PreMission_Tablet_Brief_Audio_C::SkipTimeIncrement' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, Volume) == 0x000358, "Member 'UW_PreMission_Tablet_Brief_Audio_C::Volume' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, CurrentProgress) == 0x000360, "Member 'UW_PreMission_Tablet_Brief_Audio_C::CurrentProgress' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, DebugMissionAudio) == 0x000368, "Member 'UW_PreMission_Tablet_Brief_Audio_C::DebugMissionAudio' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, DebugTimelineEvents) == 0x0003C8, "Member 'UW_PreMission_Tablet_Brief_Audio_C::DebugTimelineEvents' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, PlaybackOffset) == 0x0003D8, "Member 'UW_PreMission_Tablet_Brief_Audio_C::PlaybackOffset' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, TimerDurationText) == 0x0003E0, "Member 'UW_PreMission_Tablet_Brief_Audio_C::TimerDurationText' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, TimelineEvents) == 0x0003F8, "Member 'UW_PreMission_Tablet_Brief_Audio_C::TimelineEvents' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, ReturnTime) == 0x000408, "Member 'UW_PreMission_Tablet_Brief_Audio_C::ReturnTime' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, Snippet) == 0x000410, "Member 'UW_PreMission_Tablet_Brief_Audio_C::Snippet' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, SnippetResumeDelay) == 0x000418, "Member 'UW_PreMission_Tablet_Brief_Audio_C::SnippetResumeDelay' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, AutoStartDelay) == 0x000420, "Member 'UW_PreMission_Tablet_Brief_Audio_C::AutoStartDelay' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, FMODComponent) == 0x000428, "Member 'UW_PreMission_Tablet_Brief_Audio_C::FMODComponent' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, MissionAudio) == 0x000430, "Member 'UW_PreMission_Tablet_Brief_Audio_C::MissionAudio' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, TimelinePosition) == 0x000490, "Member 'UW_PreMission_Tablet_Brief_Audio_C::TimelinePosition' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, Stopped) == 0x000494, "Member 'UW_PreMission_Tablet_Brief_Audio_C::Stopped' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, bHasPlayed) == 0x000495, "Member 'UW_PreMission_Tablet_Brief_Audio_C::bHasPlayed' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, OnPlay) == 0x000498, "Member 'UW_PreMission_Tablet_Brief_Audio_C::OnPlay' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, OnStop) == 0x0004A8, "Member 'UW_PreMission_Tablet_Brief_Audio_C::OnStop' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Brief_Audio_C, OnPause) == 0x0004B8, "Member 'UW_PreMission_Tablet_Brief_Audio_C::OnPause' has a wrong offset!");

}

