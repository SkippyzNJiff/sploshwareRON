#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Premission_Tablet_PlayerList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Premission_Tablet_PlayerList.W_Premission_Tablet_PlayerList_C
// 0x0040 (0x0300 - 0x02C0)
class UW_Premission_Tablet_PlayerList_C final : public UTabletMapPlayerListWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animOpen;                                          // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Text_C*                              lbl_Players;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Players;                                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             Scroll_LegendEntries;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_PlayerList_Entry_C* W_PreMission_Tablet_PlayerList_Entry;             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PreMission_Tablet_PlayerList_Entry_C* W_PreMission_Tablet_PlayerList_Entry_1;           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Close();
	void ExecuteUbergraph_W_Premission_Tablet_PlayerList(int32 EntryPoint);
	void Open();
	void SetPlayerNames();
	void Toggle(bool* IsOpen_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Premission_Tablet_PlayerList_C">();
	}
	static class UW_Premission_Tablet_PlayerList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Premission_Tablet_PlayerList_C>();
	}
};
static_assert(alignof(UW_Premission_Tablet_PlayerList_C) == 0x000008, "Wrong alignment on UW_Premission_Tablet_PlayerList_C");
static_assert(sizeof(UW_Premission_Tablet_PlayerList_C) == 0x000300, "Wrong size on UW_Premission_Tablet_PlayerList_C");
static_assert(offsetof(UW_Premission_Tablet_PlayerList_C, UberGraphFrame) == 0x0002C0, "Member 'UW_Premission_Tablet_PlayerList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Premission_Tablet_PlayerList_C, animOpen) == 0x0002C8, "Member 'UW_Premission_Tablet_PlayerList_C::animOpen' has a wrong offset!");
static_assert(offsetof(UW_Premission_Tablet_PlayerList_C, lbl_Players) == 0x0002D0, "Member 'UW_Premission_Tablet_PlayerList_C::lbl_Players' has a wrong offset!");
static_assert(offsetof(UW_Premission_Tablet_PlayerList_C, Players) == 0x0002D8, "Member 'UW_Premission_Tablet_PlayerList_C::Players' has a wrong offset!");
static_assert(offsetof(UW_Premission_Tablet_PlayerList_C, Scroll_LegendEntries) == 0x0002E0, "Member 'UW_Premission_Tablet_PlayerList_C::Scroll_LegendEntries' has a wrong offset!");
static_assert(offsetof(UW_Premission_Tablet_PlayerList_C, W_PreMission_Tablet_PlayerList_Entry) == 0x0002E8, "Member 'UW_Premission_Tablet_PlayerList_C::W_PreMission_Tablet_PlayerList_Entry' has a wrong offset!");
static_assert(offsetof(UW_Premission_Tablet_PlayerList_C, W_PreMission_Tablet_PlayerList_Entry_1) == 0x0002F0, "Member 'UW_Premission_Tablet_PlayerList_C::W_PreMission_Tablet_PlayerList_Entry_1' has a wrong offset!");
static_assert(offsetof(UW_Premission_Tablet_PlayerList_C, IsOpen) == 0x0002F8, "Member 'UW_Premission_Tablet_PlayerList_C::IsOpen' has a wrong offset!");

}

