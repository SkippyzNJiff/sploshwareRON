#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Munition_SummaryEntry

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_BackPage) == 0x000001, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_BackPage");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_BackPage) == 0x000001, "Wrong size on W_Loadout_Munition_SummaryEntry_C_BackPage");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_BackPage, Handled) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_BackPage::Handled' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_ChangePage) == 0x000004, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_ChangePage");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_ChangePage) == 0x000008, "Wrong size on W_Loadout_Munition_SummaryEntry_C_ChangePage");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ChangePage, PageName) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_ChangePage::PageName' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.CreateIcon
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_CreateIcon final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UScaleBox*                              CallFunc_SpawnObject_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0038(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               CallFunc_SpawnObject_ReturnValue_2;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_CreateIcon) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_CreateIcon");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_CreateIcon) == 0x000050, "Wrong size on W_Loadout_Munition_SummaryEntry_C_CreateIcon");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_CreateIcon, Image) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_CreateIcon::Image' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_CreateIcon, ScaleBox) == 0x000008, "Member 'W_Loadout_Munition_SummaryEntry_C_CreateIcon::ScaleBox' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_CreateIcon, SizeBox) == 0x000010, "Member 'W_Loadout_Munition_SummaryEntry_C_CreateIcon::SizeBox' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_CreateIcon, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'W_Loadout_Munition_SummaryEntry_C_CreateIcon::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_CreateIcon, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'W_Loadout_Munition_SummaryEntry_C_CreateIcon::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_CreateIcon, CallFunc_SpawnObject_ReturnValue_1) == 0x000028, "Member 'W_Loadout_Munition_SummaryEntry_C_CreateIcon::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_CreateIcon, CallFunc_AddChild_ReturnValue_1) == 0x000030, "Member 'W_Loadout_Munition_SummaryEntry_C_CreateIcon::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_CreateIcon, K2Node_MakeStruct_SlateChildSize) == 0x000038, "Member 'W_Loadout_Munition_SummaryEntry_C_CreateIcon::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_CreateIcon, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000040, "Member 'W_Loadout_Munition_SummaryEntry_C_CreateIcon::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_CreateIcon, CallFunc_SpawnObject_ReturnValue_2) == 0x000048, "Member 'W_Loadout_Munition_SummaryEntry_C_CreateIcon::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.ExecuteUbergraph_W_Loadout_Munition_SummaryEntry
// 0x0430 (0x0430 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x0008(0x0050)()
	class FName                                   K2Node_Event_OptionNameID;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay_1;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x0080(0x02E8)()
	class UClass*                                 K2Node_CustomEvent_Weapon;                         // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_AmmoType;                       // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count_1;                        // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetItemIcon_ReturnValue;                  // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_ItemData;                       // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x03B0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0400(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0410(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry) == 0x000430, "Wrong size on W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, EntryPoint) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, Temp_byte_Variable) == 0x000004, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, Temp_byte_Variable_1) == 0x000005, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_Event_ItemCategory) == 0x000008, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_Event_OptionNameID) == 0x000058, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_Event_Delay_1) == 0x000060, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_Event_Delay) == 0x000068, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_Event_Collapse) == 0x000070, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_Event_IsGamepad) == 0x000071, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_Event_PageName) == 0x000074, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_Event_IsDesignTime) == 0x00007C, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_Event_ActiveLoadout) == 0x000080, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_CustomEvent_Weapon) == 0x000368, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_CustomEvent_AmmoType) == 0x000370, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_CustomEvent_AmmoType' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_CustomEvent_Count_1) == 0x000378, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_CustomEvent_Count_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, Temp_int_Variable) == 0x00037C, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000380, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, CallFunc_Add_IntInt_ReturnValue) == 0x000384, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, CallFunc_GetItemIcon_ReturnValue) == 0x000388, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::CallFunc_GetItemIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, Temp_bool_Variable) == 0x000390, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_CustomEvent_ItemData) == 0x000398, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_CustomEvent_ItemData' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_CustomEvent_Count) == 0x0003A0, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0003A8, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_MakeStruct_FormatArgumentData) == 0x0003B0, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_MakeArray_Array) == 0x000400, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, CallFunc_Format_ReturnValue) == 0x000410, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry, K2Node_Select_Default) == 0x000428, "Member 'W_Loadout_Munition_SummaryEntry_C_ExecuteUbergraph_W_Loadout_Munition_SummaryEntry::K2Node_Select_Default' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.GetAmmoIcon
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 Temp_byte_Variable;                                // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsShotgun;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsTaser;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsPepperball_Gun;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon) == 0x000050, "Wrong size on W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, Temp_bool_Variable) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, Temp_byte_Variable) == 0x000001, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000008, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, CallFunc_Array_Contains_ReturnValue) == 0x000011, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, K2Node_Select_Default) == 0x000018, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, K2Node_ClassDynamicCast_AsShotgun) == 0x000020, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::K2Node_ClassDynamicCast_AsShotgun' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, K2Node_ClassDynamicCast_bSuccess) == 0x000028, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, K2Node_ClassDynamicCast_AsTaser) == 0x000030, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::K2Node_ClassDynamicCast_AsTaser' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, K2Node_ClassDynamicCast_bSuccess_1) == 0x000038, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, K2Node_ClassDynamicCast_AsPepperball_Gun) == 0x000040, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::K2Node_ClassDynamicCast_AsPepperball_Gun' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon, K2Node_ClassDynamicCast_bSuccess_2) == 0x000048, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoIcon::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.GetAmmoInfo
// 0x0188 (0x0188 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo final
{
public:
	class UDataTable*                             CallFunc_GetAmmoLookupDataTable_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAmmoTypeData                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0178)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo) == 0x000188, "Wrong size on W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo, CallFunc_GetAmmoLookupDataTable_ReturnValue) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo::CallFunc_GetAmmoLookupDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000180, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.GetAmmoName
// 0x01A0 (0x01A0 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_GetAmmoName final
{
public:
	class FText                                   AmmoName;                                          // 0x0000(0x0018)(Parm, OutParm)
	class UDataTable*                             CallFunc_GetAmmoLookupDataTable_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAmmoTypeData                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0178)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_GetAmmoName) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_GetAmmoName");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_GetAmmoName) == 0x0001A0, "Wrong size on W_Loadout_Munition_SummaryEntry_C_GetAmmoName");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoName, AmmoName) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoName::AmmoName' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoName, CallFunc_GetAmmoLookupDataTable_ReturnValue) == 0x000018, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoName::CallFunc_GetAmmoLookupDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetAmmoName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000198, "Member 'W_Loadout_Munition_SummaryEntry_C_GetAmmoName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.GetItemIcon
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_GetItemIcon final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_GetItemIcon) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_GetItemIcon");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_GetItemIcon) == 0x000010, "Wrong size on W_Loadout_Munition_SummaryEntry_C_GetItemIcon");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetItemIcon, ReturnValue) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_GetItemIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetItemIcon, CallFunc_IsValidClass_ReturnValue) == 0x000008, "Member 'W_Loadout_Munition_SummaryEntry_C_GetItemIcon::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_HeaderSubpageNavigation final
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_HeaderSubpageNavigation");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_Loadout_Munition_SummaryEntry_C_HeaderSubpageNavigation");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_Hide) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_Hide");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_Hide) == 0x000010, "Wrong size on W_Loadout_Munition_SummaryEntry_C_Hide");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_Hide, Delay) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_Hide, Collapse) == 0x000008, "Member 'W_Loadout_Munition_SummaryEntry_C_Hide::Collapse' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_PreConstruct) == 0x000001, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_PreConstruct");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_PreConstruct) == 0x000001, "Wrong size on W_Loadout_Munition_SummaryEntry_C_PreConstruct");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_Reveal) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_Reveal");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_Reveal) == 0x000008, "Wrong size on W_Loadout_Munition_SummaryEntry_C_Reveal");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_Reveal, Delay) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_Reveal::Delay' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_SetInputMode) == 0x000001, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_SetInputMode");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_SetInputMode) == 0x000001, "Wrong size on W_Loadout_Munition_SummaryEntry_C_SetInputMode");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.UpdateActiveLoadout
// 0x02E8 (0x02E8 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_UpdateActiveLoadout final
{
public:
	struct FSavedLoadout                          ActiveLoadout_0;                                   // 0x0000(0x02E8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_UpdateActiveLoadout");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_UpdateActiveLoadout) == 0x0002E8, "Wrong size on W_Loadout_Munition_SummaryEntry_C_UpdateActiveLoadout");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_UpdateActiveLoadout, ActiveLoadout_0) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_UpdateActiveLoadout::ActiveLoadout_0' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.UpdateAmmunition
// 0x0018 (0x0018 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition final
{
public:
	class UClass*                                 Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   AmmoType_0;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition) == 0x000018, "Wrong size on W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition, Weapon) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition::Weapon' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition, AmmoType_0) == 0x000008, "Member 'W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition::AmmoType_0' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition, Count) == 0x000010, "Member 'W_Loadout_Munition_SummaryEntry_C_UpdateAmmunition::Count' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_UpdateCurrentItemMap final
{
public:
	TMap<EItemCategory, class UClass*>            ItemCategory;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_UpdateCurrentItemMap");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_Loadout_Munition_SummaryEntry_C_UpdateCurrentItemMap");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_UpdateCurrentItemMap, ItemCategory) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_UpdateCurrentItemMap::ItemCategory' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.UpdateItem
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_UpdateItem final
{
public:
	class UClass*                                 ItemData_0;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_UpdateItem) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_UpdateItem");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_UpdateItem) == 0x000010, "Wrong size on W_Loadout_Munition_SummaryEntry_C_UpdateItem");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_UpdateItem, ItemData_0) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_UpdateItem::ItemData_0' has a wrong offset!");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_UpdateItem, Count) == 0x000008, "Member 'W_Loadout_Munition_SummaryEntry_C_UpdateItem::Count' has a wrong offset!");

// Function W_Loadout_Munition_SummaryEntry.W_Loadout_Munition_SummaryEntry_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Munition_SummaryEntry_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Munition_SummaryEntry_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_Munition_SummaryEntry_C_GetFocusTarget");
static_assert(sizeof(W_Loadout_Munition_SummaryEntry_C_GetFocusTarget) == 0x000008, "Wrong size on W_Loadout_Munition_SummaryEntry_C_GetFocusTarget");
static_assert(offsetof(W_Loadout_Munition_SummaryEntry_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Loadout_Munition_SummaryEntry_C_GetFocusTarget::Focus' has a wrong offset!");

}

