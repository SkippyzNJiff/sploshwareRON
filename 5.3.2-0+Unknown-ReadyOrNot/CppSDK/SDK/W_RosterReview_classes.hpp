#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RosterReview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_RosterReview.W_RosterReview_C
// 0x0178 (0x0590 - 0x0418)
class UW_RosterReview_C final : public URosterReviewWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animRevealNotice;                                  // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animReveal;                                        // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundImage;                                   // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Events;                                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_SquadMembers;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_NoticeBackground;                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Notice;                                            // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_0;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   rtxt_NoticeText;                                   // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             Scroll;                                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_NoticeTitle;                                   // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Notice;                                         // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterReview_EventCard_C*            W_RosterReview_EventCard_1;                        // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterReview_EventCard_C*            W_RosterReview_EventCard_2;                        // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterReview_EventCard_C*            W_RosterReview_EventCard_3;                        // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterReview_EventCard_C*            W_RosterReview_EventCard_4;                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterReview_EventCard_C*            W_RosterReview_EventCard_C;                        // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterReview_EventCard_C*            W_RosterReview_EventCard_C_1;                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterReview_EventCard_C*            W_RosterReview_EventCard_C_2;                      // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         OutcomeValue;                                      // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URosterCharacter*                       EventCharacter;                                    // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_RosterReview_EventCard_C*            EventCard;                                         // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_RosterReview_EventCard_C*>    SquadCards;                                        // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UW_RosterReview_EventCard_C*>    EventCards;                                        // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        NextRevealDelay;                                   // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        ScrollNavItems;                                    // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         CurrentScrollIndex;                                // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowScroll;                                       // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DesiredScrollOffset;                               // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScrollAnimProgress;                                // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UWidget*, double>                  ScrollNavOffsetMap;                                // 0x0520(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        CurrentOffset;                                     // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnimateScroll;                                     // 0x0578(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x3];                                      // 0x0579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastScrollIndex;                                   // 0x057C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScrollingPrevious;                                 // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ScrollingNext;                                     // 0x0581(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582[0x6];                                      // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             TherapistNoticeSound;                              // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void AddEventCards(const TArray<class URosterCharacter*>& Characters, const class UHorizontalBox* HorizontalBox);
	void AddIncapacitatedCharacters(const TArray<class URosterCharacter*>& Characters);
	void AddRemovedCharacters(const TArray<class URosterCharacter*>& Characters);
	void AddReturningCharacters(const TArray<class URosterCharacter*>& Characters);
	void AddSquadCards(const TArray<class URosterCharacter*>& Characters, class UWidget* Container, const class UHorizontalBox* HorizontalBox);
	void AddSquadCharacters(const TMap<ERosterSquadPosition, class URosterCharacter*>& Characters);
	void BP_OnActivated();
	void Construct();
	void DisplayEventCards();
	void ExecuteUbergraph_W_RosterReview(int32 EntryPoint);
	void Finished_3686F5CB4ADA0FFCB83EB0827362E0B6();
	void NavigateNext();
	void NavigatePrevious();
	void NextEvent();
	void OnInitialized();
	struct FEventReply OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void SetupEventChar();
	void SetupScrollNavigation();
	void ShowNotice();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_RosterReview_C">();
	}
	static class UW_RosterReview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_RosterReview_C>();
	}
};
static_assert(alignof(UW_RosterReview_C) == 0x000008, "Wrong alignment on UW_RosterReview_C");
static_assert(sizeof(UW_RosterReview_C) == 0x000590, "Wrong size on UW_RosterReview_C");
static_assert(offsetof(UW_RosterReview_C, UberGraphFrame) == 0x000418, "Member 'UW_RosterReview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, animRevealNotice) == 0x000420, "Member 'UW_RosterReview_C::animRevealNotice' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, animReveal) == 0x000428, "Member 'UW_RosterReview_C::animReveal' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, BackgroundImage) == 0x000430, "Member 'UW_RosterReview_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, HB_Events) == 0x000438, "Member 'UW_RosterReview_C::HB_Events' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, HB_SquadMembers) == 0x000440, "Member 'UW_RosterReview_C::HB_SquadMembers' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, img_NoticeBackground) == 0x000448, "Member 'UW_RosterReview_C::img_NoticeBackground' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, Notice) == 0x000450, "Member 'UW_RosterReview_C::Notice' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, RetainerBox_0) == 0x000458, "Member 'UW_RosterReview_C::RetainerBox_0' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, rtxt_NoticeText) == 0x000460, "Member 'UW_RosterReview_C::rtxt_NoticeText' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, Scroll) == 0x000468, "Member 'UW_RosterReview_C::Scroll' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, txt_NoticeTitle) == 0x000470, "Member 'UW_RosterReview_C::txt_NoticeTitle' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, VB_Notice) == 0x000478, "Member 'UW_RosterReview_C::VB_Notice' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, W_RosterReview_EventCard_1) == 0x000480, "Member 'UW_RosterReview_C::W_RosterReview_EventCard_1' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, W_RosterReview_EventCard_2) == 0x000488, "Member 'UW_RosterReview_C::W_RosterReview_EventCard_2' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, W_RosterReview_EventCard_3) == 0x000490, "Member 'UW_RosterReview_C::W_RosterReview_EventCard_3' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, W_RosterReview_EventCard_4) == 0x000498, "Member 'UW_RosterReview_C::W_RosterReview_EventCard_4' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, W_RosterReview_EventCard_C) == 0x0004A0, "Member 'UW_RosterReview_C::W_RosterReview_EventCard_C' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, W_RosterReview_EventCard_C_1) == 0x0004A8, "Member 'UW_RosterReview_C::W_RosterReview_EventCard_C_1' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, W_RosterReview_EventCard_C_2) == 0x0004B0, "Member 'UW_RosterReview_C::W_RosterReview_EventCard_C_2' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, OutcomeValue) == 0x0004B8, "Member 'UW_RosterReview_C::OutcomeValue' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, EventCharacter) == 0x0004C0, "Member 'UW_RosterReview_C::EventCharacter' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, EventCard) == 0x0004C8, "Member 'UW_RosterReview_C::EventCard' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, SquadCards) == 0x0004D0, "Member 'UW_RosterReview_C::SquadCards' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, EventCards) == 0x0004E0, "Member 'UW_RosterReview_C::EventCards' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, NextRevealDelay) == 0x0004F0, "Member 'UW_RosterReview_C::NextRevealDelay' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, ScrollNavItems) == 0x0004F8, "Member 'UW_RosterReview_C::ScrollNavItems' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, CurrentScrollIndex) == 0x000508, "Member 'UW_RosterReview_C::CurrentScrollIndex' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, AllowScroll) == 0x00050C, "Member 'UW_RosterReview_C::AllowScroll' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, DesiredScrollOffset) == 0x000510, "Member 'UW_RosterReview_C::DesiredScrollOffset' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, ScrollAnimProgress) == 0x000518, "Member 'UW_RosterReview_C::ScrollAnimProgress' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, ScrollNavOffsetMap) == 0x000520, "Member 'UW_RosterReview_C::ScrollNavOffsetMap' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, CurrentOffset) == 0x000570, "Member 'UW_RosterReview_C::CurrentOffset' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, AnimateScroll) == 0x000578, "Member 'UW_RosterReview_C::AnimateScroll' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, LastScrollIndex) == 0x00057C, "Member 'UW_RosterReview_C::LastScrollIndex' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, ScrollingPrevious) == 0x000580, "Member 'UW_RosterReview_C::ScrollingPrevious' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, ScrollingNext) == 0x000581, "Member 'UW_RosterReview_C::ScrollingNext' has a wrong offset!");
static_assert(offsetof(UW_RosterReview_C, TherapistNoticeSound) == 0x000588, "Member 'UW_RosterReview_C::TherapistNoticeSound' has a wrong offset!");

}

