#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SpectatorCharacter_HUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"
#include "InputRemapping_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_SpectatorCharacter_HUD.W_SpectatorCharacter_HUD_C
// 0x0180 (0x0468 - 0x02E8)
class UW_SpectatorCharacter_HUD_C final : public USpectatorCharacterHUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowDeathView;                                     // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_RichChatBox_C*                       BP_RichChatBox;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget_1;                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget_235;                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_COOPDeathScreen_C*                   COOPDeathScreen;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        DeathViewSwitcher;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           HeadcamOverlay;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadCamTxt;                                        // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadCamTxt_1;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadCamTxt_2;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadCamTxt_3;                                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadCamTxt_4;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadCamTxt_DateTime;                               // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadCamTxt_PlayerName;                             // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               HealthStatus_SizeBox;                              // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         NextKeyPrompt;                                     // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              PlayerHealth_Text;                                 // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         PrevKeyPrompt;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RecCamLight;                                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RedLine;                                           // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SwatStats_Box;                                     // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TeamIndicator_Box;                                 // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TeamIndicator_Image;                               // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VOIP_Off;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VOIP_On;                                           // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       VOIPSwitcher;                                      // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         VOIPToggle;                                        // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SpectateControlsFormat;                            // 0x03D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SpectateControlsOnlyPrevious;                      // 0x03E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SpectateControlsOnlyNext;                          // 0x0400(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        TimeUntilDeathViewAppears;                         // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartedSpectating;                                // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShownDeathView;                                   // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DeltaTime;                                         // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartedShowingCenterPrint;                         // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CenterPrintTime;                                   // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CancelTick;                                        // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bActivated;                                        // 0x0441(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_442[0x6];                                      // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeElapsed;                                       // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   SavedDate;                                         // 0x0450(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AreAllPlayersDead(bool* AllPlayersDead);
	void BndEvt__W_COOPDeathScreen_K2Node_ComponentBoundEvent_1_OnSpectateButtonClicked__DelegateSignature();
	void CenterPrint(class FName MessageType, float Duration, class APlayerCharacter* Other);
	void ChatPressed();
	void CheckifInDeploy();
	void Construct();
	void ExecuteUbergraph_W_SpectatorCharacter_HUD(int32 EntryPoint);
	class FText GetEvidenceLeftText();
	struct FSlateColor GetMissionCompleteFailedColor();
	class FText GetMissionCompleteFailedText();
	ESlateVisibility GetMissionCompleteFailedVisibility();
	ESlateVisibility GetMissionEndedVisibility();
	ESlateVisibility GetReinforcementsTextVisibility();
	class FText GetReinforcementsTimeRemainingText();
	ESlateVisibility GetReinforcementsVisibility();
	class FText GetReportsLeftText();
	class FText GetVoteCallerName();
	ESlateVisibility GetVoteDisplayVisibility();
	class FText GetVoteHotkeyText();
	ESlateVisibility GetVoteHotkeyVisibility();
	class FText GetVoteName();
	class FText GetVoteTimeLeftText();
	class FText GetVoteVotersText();
	void Input_Changed(ECommonInputType bNewInputType);
	void MonthNumToFullText(int32 Month, class FText* Return_Value);
	void On_Center_Print(class FName Message_Type, double Duration, class APlayerCharacter* Other);
	void OnActivate();
	void OnInitialized();
	void OnNewCharacterViewed(class AReadyOrNotCharacter* NewViewTarget);
	void SetControlsPrompt();
	void Show_VOIP_Toggle(ECommonInputType Input_Type);
	void TeamChatPressed();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TimeOfDayTextToHHMM(const class FText& TimeOfDayText, int32* Hour, int32* Min);
	void UpdateHeadcamTime();
	void VOIPTogglePressed(bool MutedState);

	void GetCharacterName(class AReadyOrNotCharacter* InCharacter, class FText* Return_Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_SpectatorCharacter_HUD_C">();
	}
	static class UW_SpectatorCharacter_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_SpectatorCharacter_HUD_C>();
	}
};
static_assert(alignof(UW_SpectatorCharacter_HUD_C) == 0x000008, "Wrong alignment on UW_SpectatorCharacter_HUD_C");
static_assert(sizeof(UW_SpectatorCharacter_HUD_C) == 0x000468, "Wrong size on UW_SpectatorCharacter_HUD_C");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, UberGraphFrame) == 0x0002E8, "Member 'UW_SpectatorCharacter_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, ShowDeathView) == 0x0002F0, "Member 'UW_SpectatorCharacter_HUD_C::ShowDeathView' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, BP_RichChatBox) == 0x0002F8, "Member 'UW_SpectatorCharacter_HUD_C::BP_RichChatBox' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, CommonActionWidget) == 0x000300, "Member 'UW_SpectatorCharacter_HUD_C::CommonActionWidget' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, CommonActionWidget_1) == 0x000308, "Member 'UW_SpectatorCharacter_HUD_C::CommonActionWidget_1' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, CommonActionWidget_235) == 0x000310, "Member 'UW_SpectatorCharacter_HUD_C::CommonActionWidget_235' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, COOPDeathScreen) == 0x000318, "Member 'UW_SpectatorCharacter_HUD_C::COOPDeathScreen' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, DeathViewSwitcher) == 0x000320, "Member 'UW_SpectatorCharacter_HUD_C::DeathViewSwitcher' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, HeadcamOverlay) == 0x000328, "Member 'UW_SpectatorCharacter_HUD_C::HeadcamOverlay' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, HeadCamTxt) == 0x000330, "Member 'UW_SpectatorCharacter_HUD_C::HeadCamTxt' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, HeadCamTxt_1) == 0x000338, "Member 'UW_SpectatorCharacter_HUD_C::HeadCamTxt_1' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, HeadCamTxt_2) == 0x000340, "Member 'UW_SpectatorCharacter_HUD_C::HeadCamTxt_2' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, HeadCamTxt_3) == 0x000348, "Member 'UW_SpectatorCharacter_HUD_C::HeadCamTxt_3' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, HeadCamTxt_4) == 0x000350, "Member 'UW_SpectatorCharacter_HUD_C::HeadCamTxt_4' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, HeadCamTxt_DateTime) == 0x000358, "Member 'UW_SpectatorCharacter_HUD_C::HeadCamTxt_DateTime' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, HeadCamTxt_PlayerName) == 0x000360, "Member 'UW_SpectatorCharacter_HUD_C::HeadCamTxt_PlayerName' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, HealthStatus_SizeBox) == 0x000368, "Member 'UW_SpectatorCharacter_HUD_C::HealthStatus_SizeBox' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, NextKeyPrompt) == 0x000370, "Member 'UW_SpectatorCharacter_HUD_C::NextKeyPrompt' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, PlayerHealth_Text) == 0x000378, "Member 'UW_SpectatorCharacter_HUD_C::PlayerHealth_Text' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, PrevKeyPrompt) == 0x000380, "Member 'UW_SpectatorCharacter_HUD_C::PrevKeyPrompt' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, RecCamLight) == 0x000388, "Member 'UW_SpectatorCharacter_HUD_C::RecCamLight' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, RedLine) == 0x000390, "Member 'UW_SpectatorCharacter_HUD_C::RedLine' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, SwatStats_Box) == 0x000398, "Member 'UW_SpectatorCharacter_HUD_C::SwatStats_Box' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, TeamIndicator_Box) == 0x0003A0, "Member 'UW_SpectatorCharacter_HUD_C::TeamIndicator_Box' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, TeamIndicator_Image) == 0x0003A8, "Member 'UW_SpectatorCharacter_HUD_C::TeamIndicator_Image' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, VOIP_Off) == 0x0003B0, "Member 'UW_SpectatorCharacter_HUD_C::VOIP_Off' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, VOIP_On) == 0x0003B8, "Member 'UW_SpectatorCharacter_HUD_C::VOIP_On' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, VOIPSwitcher) == 0x0003C0, "Member 'UW_SpectatorCharacter_HUD_C::VOIPSwitcher' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, VOIPToggle) == 0x0003C8, "Member 'UW_SpectatorCharacter_HUD_C::VOIPToggle' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, SpectateControlsFormat) == 0x0003D0, "Member 'UW_SpectatorCharacter_HUD_C::SpectateControlsFormat' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, SpectateControlsOnlyPrevious) == 0x0003E8, "Member 'UW_SpectatorCharacter_HUD_C::SpectateControlsOnlyPrevious' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, SpectateControlsOnlyNext) == 0x000400, "Member 'UW_SpectatorCharacter_HUD_C::SpectateControlsOnlyNext' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, TimeUntilDeathViewAppears) == 0x000418, "Member 'UW_SpectatorCharacter_HUD_C::TimeUntilDeathViewAppears' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, bStartedSpectating) == 0x000420, "Member 'UW_SpectatorCharacter_HUD_C::bStartedSpectating' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, bShownDeathView) == 0x000421, "Member 'UW_SpectatorCharacter_HUD_C::bShownDeathView' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, DeltaTime) == 0x000428, "Member 'UW_SpectatorCharacter_HUD_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, StartedShowingCenterPrint) == 0x000430, "Member 'UW_SpectatorCharacter_HUD_C::StartedShowingCenterPrint' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, CenterPrintTime) == 0x000438, "Member 'UW_SpectatorCharacter_HUD_C::CenterPrintTime' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, CancelTick) == 0x000440, "Member 'UW_SpectatorCharacter_HUD_C::CancelTick' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, bActivated) == 0x000441, "Member 'UW_SpectatorCharacter_HUD_C::bActivated' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, TimeElapsed) == 0x000448, "Member 'UW_SpectatorCharacter_HUD_C::TimeElapsed' has a wrong offset!");
static_assert(offsetof(UW_SpectatorCharacter_HUD_C, SavedDate) == 0x000450, "Member 'UW_SpectatorCharacter_HUD_C::SavedDate' has a wrong offset!");

}

