#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_MP5A2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ANIMBP_MP5A2_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_MP5A2.ANIMBP_MP5A2_C
// 0x04A0 (0x0810 - 0x0370)
class UANIMBP_MP5A2_C final : public URoNWeaponAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ANIMBP_MP5A2::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                 // 0x0378(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0380(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0388(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0390(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x03B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x03F8(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0440(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0568(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0588(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x05A8(0x00F0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0698(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x06E0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0728(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0770(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07B8(0x0048)()
	double                                        Mag01Alpha;                                        // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CurrentFireMode;                                   // 0x0808(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ANIMBP_MP5A2(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimNotify_ShowMag();
	void AnimNotify_DropSpeedReloadMagazine();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANIMBP_MP5A2_C">();
	}
	static class UANIMBP_MP5A2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANIMBP_MP5A2_C>();
	}
};
static_assert(alignof(UANIMBP_MP5A2_C) == 0x000010, "Wrong alignment on UANIMBP_MP5A2_C");
static_assert(sizeof(UANIMBP_MP5A2_C) == 0x000810, "Wrong size on UANIMBP_MP5A2_C");
static_assert(offsetof(UANIMBP_MP5A2_C, UberGraphFrame) == 0x000370, "Member 'UANIMBP_MP5A2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, __AnimBlueprintMutables) == 0x000378, "Member 'UANIMBP_MP5A2_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimBlueprintExtension_PropertyAccess) == 0x000380, "Member 'UANIMBP_MP5A2_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimBlueprintExtension_Base) == 0x000388, "Member 'UANIMBP_MP5A2_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_Root) == 0x000390, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_Slot) == 0x0003B0, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_SequencePlayer_4) == 0x0003F8, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_ModifyBone) == 0x000440, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_LocalToComponentSpace) == 0x000568, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_ComponentToLocalSpace) == 0x000588, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_LayeredBoneBlend) == 0x0005A8, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_BlendListByEnum) == 0x000698, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_SequencePlayer_3) == 0x0006E0, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_SequencePlayer_2) == 0x000728, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_SequencePlayer_1) == 0x000770, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, AnimGraphNode_SequencePlayer) == 0x0007B8, "Member 'UANIMBP_MP5A2_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, Mag01Alpha) == 0x000800, "Member 'UANIMBP_MP5A2_C::Mag01Alpha' has a wrong offset!");
static_assert(offsetof(UANIMBP_MP5A2_C, CurrentFireMode) == 0x000808, "Member 'UANIMBP_MP5A2_C::CurrentFireMode' has a wrong offset!");

}

