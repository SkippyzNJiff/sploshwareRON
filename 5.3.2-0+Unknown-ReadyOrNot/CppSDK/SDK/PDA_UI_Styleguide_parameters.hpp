#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PDA_UI_Styleguide

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetAllColors
// 0x00E0 (0x00E0 - 0x0000)
struct PDA_UI_Styleguide_C_GetAllColors final
{
public:
	double                                        Opacity;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           White_0;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dark_0;                                            // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Red_0;                                             // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Yellow_0;                                          // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Blue_0;                                            // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Green_0;                                           // 0x0058(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetAllColors) == 0x000008, "Wrong alignment on PDA_UI_Styleguide_C_GetAllColors");
static_assert(sizeof(PDA_UI_Styleguide_C_GetAllColors) == 0x0000E0, "Wrong size on PDA_UI_Styleguide_C_GetAllColors");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Opacity) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetAllColors::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, White_0) == 0x000008, "Member 'PDA_UI_Styleguide_C_GetAllColors::White_0' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Dark_0) == 0x000018, "Member 'PDA_UI_Styleguide_C_GetAllColors::Dark_0' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Red_0) == 0x000028, "Member 'PDA_UI_Styleguide_C_GetAllColors::Red_0' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Yellow_0) == 0x000038, "Member 'PDA_UI_Styleguide_C_GetAllColors::Yellow_0' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Blue_0) == 0x000048, "Member 'PDA_UI_Styleguide_C_GetAllColors::Blue_0' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, Green_0) == 0x000058, "Member 'PDA_UI_Styleguide_C_GetAllColors::Green_0' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, K2Node_MakeStruct_LinearColor) == 0x000068, "Member 'PDA_UI_Styleguide_C_GetAllColors::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000078, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000088, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000098, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x0000A8, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0000B8, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x0000C8, "Member 'PDA_UI_Styleguide_C_GetAllColors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetAllColors, K2Node_MakeStruct_A_ImplicitCast) == 0x0000D8, "Member 'PDA_UI_Styleguide_C_GetAllColors::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetBlueTeamColor
// 0x0030 (0x0030 - 0x0000)
struct PDA_UI_Styleguide_C_GetBlueTeamColor final
{
public:
	double                                        Opacity;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BlueTeam_0;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetBlueTeamColor) == 0x000008, "Wrong alignment on PDA_UI_Styleguide_C_GetBlueTeamColor");
static_assert(sizeof(PDA_UI_Styleguide_C_GetBlueTeamColor) == 0x000030, "Wrong size on PDA_UI_Styleguide_C_GetBlueTeamColor");
static_assert(offsetof(PDA_UI_Styleguide_C_GetBlueTeamColor, Opacity) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetBlueTeamColor::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetBlueTeamColor, BlueTeam_0) == 0x000008, "Member 'PDA_UI_Styleguide_C_GetBlueTeamColor::BlueTeam_0' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetBlueTeamColor, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'PDA_UI_Styleguide_C_GetBlueTeamColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetBlueTeamColor, K2Node_MakeStruct_A_ImplicitCast) == 0x000028, "Member 'PDA_UI_Styleguide_C_GetBlueTeamColor::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetColorByName
// 0x0070 (0x0070 - 0x0000)
struct PDA_UI_Styleguide_C_GetColorByName final
{
public:
	class FName                                   ColorName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Opacity;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LinearColor;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            SlateColor;                                        // 0x0020(0x0014)(Parm, OutParm)
	struct FLinearColor                           SelectedColor;                                     // 0x0034(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0058(0x0014)()
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetColorByName) == 0x000008, "Wrong alignment on PDA_UI_Styleguide_C_GetColorByName");
static_assert(sizeof(PDA_UI_Styleguide_C_GetColorByName) == 0x000070, "Wrong size on PDA_UI_Styleguide_C_GetColorByName");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, ColorName) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetColorByName::ColorName' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, Opacity) == 0x000008, "Member 'PDA_UI_Styleguide_C_GetColorByName::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, LinearColor) == 0x000010, "Member 'PDA_UI_Styleguide_C_GetColorByName::LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, SlateColor) == 0x000020, "Member 'PDA_UI_Styleguide_C_GetColorByName::SlateColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, SelectedColor) == 0x000034, "Member 'PDA_UI_Styleguide_C_GetColorByName::SelectedColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, K2Node_SwitchName_CmpSuccess) == 0x000044, "Member 'PDA_UI_Styleguide_C_GetColorByName::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, K2Node_MakeStruct_LinearColor) == 0x000048, "Member 'PDA_UI_Styleguide_C_GetColorByName::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, K2Node_MakeStruct_SlateColor) == 0x000058, "Member 'PDA_UI_Styleguide_C_GetColorByName::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetColorByName, K2Node_MakeStruct_A_ImplicitCast) == 0x00006C, "Member 'PDA_UI_Styleguide_C_GetColorByName::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetGoldTeamColor
// 0x0018 (0x0018 - 0x0000)
struct PDA_UI_Styleguide_C_GetGoldTeamColor final
{
public:
	double                                        Opacity;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           GoldTeam_0;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetGoldTeamColor) == 0x000008, "Wrong alignment on PDA_UI_Styleguide_C_GetGoldTeamColor");
static_assert(sizeof(PDA_UI_Styleguide_C_GetGoldTeamColor) == 0x000018, "Wrong size on PDA_UI_Styleguide_C_GetGoldTeamColor");
static_assert(offsetof(PDA_UI_Styleguide_C_GetGoldTeamColor, Opacity) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetGoldTeamColor::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetGoldTeamColor, GoldTeam_0) == 0x000008, "Member 'PDA_UI_Styleguide_C_GetGoldTeamColor::GoldTeam_0' has a wrong offset!");

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetRedTeamColor
// 0x0030 (0x0030 - 0x0000)
struct PDA_UI_Styleguide_C_GetRedTeamColor final
{
public:
	double                                        Opacity;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RedTeam_0;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetRedTeamColor) == 0x000008, "Wrong alignment on PDA_UI_Styleguide_C_GetRedTeamColor");
static_assert(sizeof(PDA_UI_Styleguide_C_GetRedTeamColor) == 0x000030, "Wrong size on PDA_UI_Styleguide_C_GetRedTeamColor");
static_assert(offsetof(PDA_UI_Styleguide_C_GetRedTeamColor, Opacity) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetRedTeamColor::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetRedTeamColor, RedTeam_0) == 0x000008, "Member 'PDA_UI_Styleguide_C_GetRedTeamColor::RedTeam_0' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetRedTeamColor, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'PDA_UI_Styleguide_C_GetRedTeamColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetRedTeamColor, K2Node_MakeStruct_A_ImplicitCast) == 0x000028, "Member 'PDA_UI_Styleguide_C_GetRedTeamColor::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function PDA_UI_Styleguide.PDA_UI_Styleguide_C.GetTeamColors
// 0x0068 (0x0068 - 0x0000)
struct PDA_UI_Styleguide_C_GetTeamColors final
{
public:
	double                                        Opacity;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Gold;                                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Red_0;                                             // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Blue_0;                                            // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGoldTeamColor_GoldTeam;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetBlueTeamColor_BlueTeam;                // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRedTeamColor_RedTeam;                  // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PDA_UI_Styleguide_C_GetTeamColors) == 0x000008, "Wrong alignment on PDA_UI_Styleguide_C_GetTeamColors");
static_assert(sizeof(PDA_UI_Styleguide_C_GetTeamColors) == 0x000068, "Wrong size on PDA_UI_Styleguide_C_GetTeamColors");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, Opacity) == 0x000000, "Member 'PDA_UI_Styleguide_C_GetTeamColors::Opacity' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, Gold) == 0x000008, "Member 'PDA_UI_Styleguide_C_GetTeamColors::Gold' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, Red_0) == 0x000018, "Member 'PDA_UI_Styleguide_C_GetTeamColors::Red_0' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, Blue_0) == 0x000028, "Member 'PDA_UI_Styleguide_C_GetTeamColors::Blue_0' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, CallFunc_GetGoldTeamColor_GoldTeam) == 0x000038, "Member 'PDA_UI_Styleguide_C_GetTeamColors::CallFunc_GetGoldTeamColor_GoldTeam' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, CallFunc_GetBlueTeamColor_BlueTeam) == 0x000048, "Member 'PDA_UI_Styleguide_C_GetTeamColors::CallFunc_GetBlueTeamColor_BlueTeam' has a wrong offset!");
static_assert(offsetof(PDA_UI_Styleguide_C_GetTeamColors, CallFunc_GetRedTeamColor_RedTeam) == 0x000058, "Member 'PDA_UI_Styleguide_C_GetTeamColors::CallFunc_GetRedTeamColor_RedTeam' has a wrong offset!");

}

