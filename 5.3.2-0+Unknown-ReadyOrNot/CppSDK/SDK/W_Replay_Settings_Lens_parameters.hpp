#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Replay_Settings_Lens

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Replay_Settings_Lens_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_BackPage) == 0x000001, "Wrong alignment on W_Replay_Settings_Lens_C_BackPage");
static_assert(sizeof(W_Replay_Settings_Lens_C_BackPage) == 0x000001, "Wrong size on W_Replay_Settings_Lens_C_BackPage");
static_assert(offsetof(W_Replay_Settings_Lens_C_BackPage, Handled) == 0x000000, "Member 'W_Replay_Settings_Lens_C_BackPage::Handled' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.BndEvt__W_Replay_SettingPanel_Spinbox_Aperture_K2Node_ComponentBoundEvent_17_OnValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_Aperture_K2Node_ComponentBoundEvent_17_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_Aperture_K2Node_ComponentBoundEvent_17_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_Aperture_K2Node_ComponentBoundEvent_17_OnValueChanged__DelegateSignature");
static_assert(sizeof(W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_Aperture_K2Node_ComponentBoundEvent_17_OnValueChanged__DelegateSignature) == 0x000008, "Wrong size on W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_Aperture_K2Node_ComponentBoundEvent_17_OnValueChanged__DelegateSignature");
static_assert(offsetof(W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_Aperture_K2Node_ComponentBoundEvent_17_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_Aperture_K2Node_ComponentBoundEvent_17_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.BndEvt__W_Replay_SettingPanel_Spinbox_FieldOfView_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FieldOfView_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FieldOfView_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FieldOfView_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature");
static_assert(sizeof(W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FieldOfView_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature) == 0x000008, "Wrong size on W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FieldOfView_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature");
static_assert(offsetof(W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FieldOfView_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FieldOfView_K2Node_ComponentBoundEvent_16_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.BndEvt__W_Replay_SettingPanel_Spinbox_FocalDistance_K2Node_ComponentBoundEvent_21_OnValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FocalDistance_K2Node_ComponentBoundEvent_21_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FocalDistance_K2Node_ComponentBoundEvent_21_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FocalDistance_K2Node_ComponentBoundEvent_21_OnValueChanged__DelegateSignature");
static_assert(sizeof(W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FocalDistance_K2Node_ComponentBoundEvent_21_OnValueChanged__DelegateSignature) == 0x000008, "Wrong size on W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FocalDistance_K2Node_ComponentBoundEvent_21_OnValueChanged__DelegateSignature");
static_assert(offsetof(W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FocalDistance_K2Node_ComponentBoundEvent_21_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'W_Replay_Settings_Lens_C_BndEvt__W_Replay_SettingPanel_Spinbox_FocalDistance_K2Node_ComponentBoundEvent_21_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.CanApplyValues
// 0x0002 (0x0002 - 0x0000)
struct W_Replay_Settings_Lens_C_CanApplyValues final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_CanApplyValues) == 0x000001, "Wrong alignment on W_Replay_Settings_Lens_C_CanApplyValues");
static_assert(sizeof(W_Replay_Settings_Lens_C_CanApplyValues) == 0x000002, "Wrong size on W_Replay_Settings_Lens_C_CanApplyValues");
static_assert(offsetof(W_Replay_Settings_Lens_C_CanApplyValues, ReturnValue) == 0x000000, "Member 'W_Replay_Settings_Lens_C_CanApplyValues::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_CanApplyValues, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_Replay_Settings_Lens_C_CanApplyValues::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Replay_Settings_Lens_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_ChangePage) == 0x000004, "Wrong alignment on W_Replay_Settings_Lens_C_ChangePage");
static_assert(sizeof(W_Replay_Settings_Lens_C_ChangePage) == 0x000008, "Wrong size on W_Replay_Settings_Lens_C_ChangePage");
static_assert(offsetof(W_Replay_Settings_Lens_C_ChangePage, PageName) == 0x000000, "Member 'W_Replay_Settings_Lens_C_ChangePage::PageName' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.ExecuteUbergraph_W_Replay_Settings_Lens
// 0x00D0 (0x00D0 - 0x0000)
struct W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Spinbox_C*                           K2Node_DynamicCast_AsW_Spinbox;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReplayCameraPawn*                      K2Node_DynamicCast_AsReplay_Camera_Pawn;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   K2Node_DynamicCast_AsCine_Camera_Component;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IReadyOrNotUI_C>       CallFunc_SetInputMode_self_CastInput;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_CustomEvent_Button;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PageName;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_Value_2;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Value_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Value;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCommonButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate;           // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_ManualFocusDistance_ImplicitCast; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCurrentAperture_NewCurrentAperture_ImplicitCast; // 0x00C4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCurrentFocalLength_InFocalLength_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens");
static_assert(sizeof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens) == 0x0000D0, "Wrong size on W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, EntryPoint) == 0x000000, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_DynamicCast_AsW_Spinbox) == 0x000008, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_DynamicCast_AsW_Spinbox' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_GetPlayerPawn_ReturnValue) == 0x000018, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_DynamicCast_AsReplay_Camera_Pawn) == 0x000020, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_DynamicCast_AsReplay_Camera_Pawn' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_DynamicCast_AsCine_Camera_Component) == 0x000030, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_DynamicCast_AsCine_Camera_Component' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_Event_IsGamepad) == 0x000039, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x000040, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_SetInputMode_self_CastInput) == 0x000048, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_SetInputMode_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_IsUsingGamepad_ReturnValue) == 0x000058, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_CustomEvent_Button) == 0x000060, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_Not_PreBool_ReturnValue_1) == 0x000069, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_IsValid_ReturnValue_1) == 0x00006B, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_Event_PageName) == 0x00006C, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_Not_PreBool_ReturnValue_2) == 0x000074, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_ComponentBoundEvent_Value_2) == 0x000078, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_ComponentBoundEvent_Value_2' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_ComponentBoundEvent_Value_1) == 0x000080, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_ComponentBoundEvent_Value) == 0x000088, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_Event_Delay_1) == 0x000098, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_Event_Collapse) == 0x0000A0, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_CreateDelegate_OutputDelegate) == 0x0000A4, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_Event_Delay) == 0x0000B8, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, K2Node_SetFieldsInStruct_ManualFocusDistance_ImplicitCast) == 0x0000C0, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::K2Node_SetFieldsInStruct_ManualFocusDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_SetCurrentAperture_NewCurrentAperture_ImplicitCast) == 0x0000C4, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_SetCurrentAperture_NewCurrentAperture_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens, CallFunc_SetCurrentFocalLength_InFocalLength_ImplicitCast) == 0x0000C8, "Member 'W_Replay_Settings_Lens_C_ExecuteUbergraph_W_Replay_Settings_Lens::CallFunc_SetCurrentFocalLength_InFocalLength_ImplicitCast' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Replay_Settings_Lens_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_Hide) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_Hide");
static_assert(sizeof(W_Replay_Settings_Lens_C_Hide) == 0x000010, "Wrong size on W_Replay_Settings_Lens_C_Hide");
static_assert(offsetof(W_Replay_Settings_Lens_C_Hide, Delay) == 0x000000, "Member 'W_Replay_Settings_Lens_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_Hide, Collapse) == 0x000008, "Member 'W_Replay_Settings_Lens_C_Hide::Collapse' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.NavApplySpinboxDelta
// 0x0068 (0x0068 - 0x0000)
struct W_Replay_Settings_Lens_C_NavApplySpinboxDelta final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUINavigation                                 Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Spinbox_C*                           K2Node_DynamicCast_AsW_Spinbox;                    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_NavApplySpinboxDelta");
static_assert(sizeof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta) == 0x000068, "Wrong size on W_Replay_Settings_Lens_C_NavApplySpinboxDelta");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, Navigation_0) == 0x000000, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::Navigation_0' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, ReturnValue) == 0x000008, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, Temp_real_Variable) == 0x000010, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, Temp_real_Variable_1) == 0x000018, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, Temp_real_Variable_2) == 0x000020, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, Temp_real_Variable_3) == 0x000028, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, Temp_real_Variable_4) == 0x000030, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, Temp_byte_Variable) == 0x000038, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, K2Node_DynamicCast_AsW_Spinbox) == 0x000040, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::K2Node_DynamicCast_AsW_Spinbox' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_NavApplySpinboxDelta, K2Node_Select_Default) == 0x000060, "Member 'W_Replay_Settings_Lens_C_NavApplySpinboxDelta::K2Node_Select_Default' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.OnSpinboxHovered
// 0x0008 (0x0008 - 0x0000)
struct W_Replay_Settings_Lens_C_OnSpinboxHovered final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_OnSpinboxHovered) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_OnSpinboxHovered");
static_assert(sizeof(W_Replay_Settings_Lens_C_OnSpinboxHovered) == 0x000008, "Wrong size on W_Replay_Settings_Lens_C_OnSpinboxHovered");
static_assert(offsetof(W_Replay_Settings_Lens_C_OnSpinboxHovered, Button) == 0x000000, "Member 'W_Replay_Settings_Lens_C_OnSpinboxHovered::Button' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Replay_Settings_Lens_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_Reveal) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_Reveal");
static_assert(sizeof(W_Replay_Settings_Lens_C_Reveal) == 0x000008, "Wrong size on W_Replay_Settings_Lens_C_Reveal");
static_assert(offsetof(W_Replay_Settings_Lens_C_Reveal, Delay) == 0x000000, "Member 'W_Replay_Settings_Lens_C_Reveal::Delay' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.SetDefaults
// 0x0040 (0x0040 - 0x0000)
struct W_Replay_Settings_Lens_C_SetDefaults final
{
public:
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReplayController*                      K2Node_DynamicCast_AsReplay_Controller;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_ReplayControls_C*                    K2Node_DynamicCast_AsW_Replay_Controls;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetDefaultValue_DefaultValue_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetDefaultValue_DefaultValue_ImplicitCast_1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetDefaultValue_DefaultValue_ImplicitCast_2; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_SetDefaults) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_SetDefaults");
static_assert(sizeof(W_Replay_Settings_Lens_C_SetDefaults) == 0x000040, "Wrong size on W_Replay_Settings_Lens_C_SetDefaults");
static_assert(offsetof(W_Replay_Settings_Lens_C_SetDefaults, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x000000, "Member 'W_Replay_Settings_Lens_C_SetDefaults::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_SetDefaults, K2Node_DynamicCast_AsReplay_Controller) == 0x000008, "Member 'W_Replay_Settings_Lens_C_SetDefaults::K2Node_DynamicCast_AsReplay_Controller' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_SetDefaults, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'W_Replay_Settings_Lens_C_SetDefaults::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_SetDefaults, K2Node_DynamicCast_AsW_Replay_Controls) == 0x000018, "Member 'W_Replay_Settings_Lens_C_SetDefaults::K2Node_DynamicCast_AsW_Replay_Controls' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_SetDefaults, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'W_Replay_Settings_Lens_C_SetDefaults::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_SetDefaults, CallFunc_SetDefaultValue_DefaultValue_ImplicitCast) == 0x000028, "Member 'W_Replay_Settings_Lens_C_SetDefaults::CallFunc_SetDefaultValue_DefaultValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_SetDefaults, CallFunc_SetDefaultValue_DefaultValue_ImplicitCast_1) == 0x000030, "Member 'W_Replay_Settings_Lens_C_SetDefaults::CallFunc_SetDefaultValue_DefaultValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_SetDefaults, CallFunc_SetDefaultValue_DefaultValue_ImplicitCast_2) == 0x000038, "Member 'W_Replay_Settings_Lens_C_SetDefaults::CallFunc_SetDefaultValue_DefaultValue_ImplicitCast_2' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Replay_Settings_Lens_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_SetInputMode) == 0x000001, "Wrong alignment on W_Replay_Settings_Lens_C_SetInputMode");
static_assert(sizeof(W_Replay_Settings_Lens_C_SetInputMode) == 0x000001, "Wrong size on W_Replay_Settings_Lens_C_SetInputMode");
static_assert(offsetof(W_Replay_Settings_Lens_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Replay_Settings_Lens_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.UpdateValueAperature
// 0x0010 (0x0010 - 0x0000)
struct W_Replay_Settings_Lens_C_UpdateValueAperature final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetValue_Value_ImplicitCast;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_UpdateValueAperature) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_UpdateValueAperature");
static_assert(sizeof(W_Replay_Settings_Lens_C_UpdateValueAperature) == 0x000010, "Wrong size on W_Replay_Settings_Lens_C_UpdateValueAperature");
static_assert(offsetof(W_Replay_Settings_Lens_C_UpdateValueAperature, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_Replay_Settings_Lens_C_UpdateValueAperature::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_UpdateValueAperature, CallFunc_SetValue_Value_ImplicitCast) == 0x000008, "Member 'W_Replay_Settings_Lens_C_UpdateValueAperature::CallFunc_SetValue_Value_ImplicitCast' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.UpdateValueFieldOfView
// 0x0010 (0x0010 - 0x0000)
struct W_Replay_Settings_Lens_C_UpdateValueFieldOfView final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetValue_Value_ImplicitCast;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_UpdateValueFieldOfView) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_UpdateValueFieldOfView");
static_assert(sizeof(W_Replay_Settings_Lens_C_UpdateValueFieldOfView) == 0x000010, "Wrong size on W_Replay_Settings_Lens_C_UpdateValueFieldOfView");
static_assert(offsetof(W_Replay_Settings_Lens_C_UpdateValueFieldOfView, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_Replay_Settings_Lens_C_UpdateValueFieldOfView::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_UpdateValueFieldOfView, CallFunc_SetValue_Value_ImplicitCast) == 0x000008, "Member 'W_Replay_Settings_Lens_C_UpdateValueFieldOfView::CallFunc_SetValue_Value_ImplicitCast' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.UpdateValueFocalDistance
// 0x0010 (0x0010 - 0x0000)
struct W_Replay_Settings_Lens_C_UpdateValueFocalDistance final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetValue_Value_ImplicitCast;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_UpdateValueFocalDistance) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_UpdateValueFocalDistance");
static_assert(sizeof(W_Replay_Settings_Lens_C_UpdateValueFocalDistance) == 0x000010, "Wrong size on W_Replay_Settings_Lens_C_UpdateValueFocalDistance");
static_assert(offsetof(W_Replay_Settings_Lens_C_UpdateValueFocalDistance, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_Replay_Settings_Lens_C_UpdateValueFocalDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_UpdateValueFocalDistance, CallFunc_SetValue_Value_ImplicitCast) == 0x000008, "Member 'W_Replay_Settings_Lens_C_UpdateValueFocalDistance::CallFunc_SetValue_Value_ImplicitCast' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct W_Replay_Settings_Lens_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusTarget_Focus;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(W_Replay_Settings_Lens_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on W_Replay_Settings_Lens_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(W_Replay_Settings_Lens_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'W_Replay_Settings_Lens_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Replay_Settings_Lens_C_BP_GetDesiredFocusTarget, CallFunc_GetFocusTarget_Focus) == 0x000008, "Member 'W_Replay_Settings_Lens_C_BP_GetDesiredFocusTarget::CallFunc_GetFocusTarget_Focus' has a wrong offset!");

// Function W_Replay_Settings_Lens.W_Replay_Settings_Lens_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Replay_Settings_Lens_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Replay_Settings_Lens_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Replay_Settings_Lens_C_GetFocusTarget");
static_assert(sizeof(W_Replay_Settings_Lens_C_GetFocusTarget) == 0x000008, "Wrong size on W_Replay_Settings_Lens_C_GetFocusTarget");
static_assert(offsetof(W_Replay_Settings_Lens_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Replay_Settings_Lens_C_GetFocusTarget::Focus' has a wrong offset!");

}

