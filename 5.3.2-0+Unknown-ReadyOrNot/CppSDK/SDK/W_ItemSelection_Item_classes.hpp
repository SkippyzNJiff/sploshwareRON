#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ItemSelection_Item

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ItemSelection_Item.W_ItemSelection_Item_C
// 0x0198 (0x0480 - 0x02E8)
class UW_ItemSelection_Item_C final : public UBaseWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Focus;                                        // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Select;                                       // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_FadeOut;                                      // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BG_Blur;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_Image;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Image;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Selected_Image;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateBrush                            DefaultIcon;                                       // 0x0330(0x00D0)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateColor                            BackgroundColor;                                   // 0x0400(0x0014)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateColor                            IconColor;                                         // 0x0414(0x0014)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateColor                            SelectedColor;                                     // 0x0428(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              ED_OnAnimFadeOutFinished;                          // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSlateColor                            UnselectedColor;                                   // 0x0450(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsPirated;                                        // 0x0464(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InDesignTime;                                      // 0x0465(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_466[0x2];                                      // 0x0466(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              ED_OnAnimSelectFinished;                           // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ChangeIconsIfBuildIsPirated();
	void ConfirmSelection();
	void Construct();
	void CustomEvent_0();
	void CustomEvent_1();
	void Deselect();
	void ExecuteUbergraph_W_ItemSelection_Item(int32 EntryPoint);
	void FadeOut();
	void Initialize(const struct FSlateBrush& InBrush, bool bIsVisible);
	void OnAnimFadeOut_Finished();
	void PreConstruct(bool IsDesignTime);
	void Re_Initialize(bool bVisible);
	void Reset_Selection_Indicator();
	void Select();
	void StopConfirmAnim();
	void StopFadeOutAnim();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ItemSelection_Item_C">();
	}
	static class UW_ItemSelection_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ItemSelection_Item_C>();
	}
};
static_assert(alignof(UW_ItemSelection_Item_C) == 0x000010, "Wrong alignment on UW_ItemSelection_Item_C");
static_assert(sizeof(UW_ItemSelection_Item_C) == 0x000480, "Wrong size on UW_ItemSelection_Item_C");
static_assert(offsetof(UW_ItemSelection_Item_C, UberGraphFrame) == 0x0002E8, "Member 'UW_ItemSelection_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, Anim_Focus) == 0x0002F0, "Member 'UW_ItemSelection_Item_C::Anim_Focus' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, Anim_Select) == 0x0002F8, "Member 'UW_ItemSelection_Item_C::Anim_Select' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, Anim_FadeOut) == 0x000300, "Member 'UW_ItemSelection_Item_C::Anim_FadeOut' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, BG_Blur) == 0x000308, "Member 'UW_ItemSelection_Item_C::BG_Blur' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, BG_Image) == 0x000310, "Member 'UW_ItemSelection_Item_C::BG_Image' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, CanvasPanel) == 0x000318, "Member 'UW_ItemSelection_Item_C::CanvasPanel' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, Icon_Image) == 0x000320, "Member 'UW_ItemSelection_Item_C::Icon_Image' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, Selected_Image) == 0x000328, "Member 'UW_ItemSelection_Item_C::Selected_Image' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, DefaultIcon) == 0x000330, "Member 'UW_ItemSelection_Item_C::DefaultIcon' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, BackgroundColor) == 0x000400, "Member 'UW_ItemSelection_Item_C::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, IconColor) == 0x000414, "Member 'UW_ItemSelection_Item_C::IconColor' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, SelectedColor) == 0x000428, "Member 'UW_ItemSelection_Item_C::SelectedColor' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, ED_OnAnimFadeOutFinished) == 0x000440, "Member 'UW_ItemSelection_Item_C::ED_OnAnimFadeOutFinished' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, UnselectedColor) == 0x000450, "Member 'UW_ItemSelection_Item_C::UnselectedColor' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, bIsPirated) == 0x000464, "Member 'UW_ItemSelection_Item_C::bIsPirated' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, InDesignTime) == 0x000465, "Member 'UW_ItemSelection_Item_C::InDesignTime' has a wrong offset!");
static_assert(offsetof(UW_ItemSelection_Item_C, ED_OnAnimSelectFinished) == 0x000468, "Member 'UW_ItemSelection_Item_C::ED_OnAnimSelectFinished' has a wrong offset!");

}

