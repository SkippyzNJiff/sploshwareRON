#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RedpointEOSFramework

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "EnhancedInput_classes.hpp"


namespace SDK
{

// Class RedpointEOSFramework.RedpointEOSPartyMember
// 0x0040 (0x02D8 - 0x0298)
class ARedpointEOSPartyMember final : public AActor
{
public:
	uint8                                         Pad_298[0x38];                                     // 0x0298(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyMemberSlot;                                   // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PartyMemberChanged(const struct FRedpointEOSPartyMemberInfo& PartyMember);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RedpointEOSPartyMember">();
	}
	static class ARedpointEOSPartyMember* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARedpointEOSPartyMember>();
	}
};
static_assert(alignof(ARedpointEOSPartyMember) == 0x000008, "Wrong alignment on ARedpointEOSPartyMember");
static_assert(sizeof(ARedpointEOSPartyMember) == 0x0002D8, "Wrong size on ARedpointEOSPartyMember");
static_assert(offsetof(ARedpointEOSPartyMember, PartyMemberSlot) == 0x0002D0, "Member 'ARedpointEOSPartyMember::PartyMemberSlot' has a wrong offset!");

// Class RedpointEOSFramework.RedpointEOSStarterCharacter
// 0x0010 (0x0690 - 0x0680)
class ARedpointEOSStarterCharacter final : public ACharacter
{
public:
	class UStaticMeshComponent*                   Sphere;                                            // 0x0678(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraComponent*                       Camera;                                            // 0x0680(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_688[0x8];                                      // 0x0688(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RedpointEOSStarterCharacter">();
	}
	static class ARedpointEOSStarterCharacter* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARedpointEOSStarterCharacter>();
	}
};
static_assert(alignof(ARedpointEOSStarterCharacter) == 0x000010, "Wrong alignment on ARedpointEOSStarterCharacter");
static_assert(sizeof(ARedpointEOSStarterCharacter) == 0x000690, "Wrong size on ARedpointEOSStarterCharacter");
static_assert(offsetof(ARedpointEOSStarterCharacter, Sphere) == 0x000678, "Member 'ARedpointEOSStarterCharacter::Sphere' has a wrong offset!");
static_assert(offsetof(ARedpointEOSStarterCharacter, Camera) == 0x000680, "Member 'ARedpointEOSStarterCharacter::Camera' has a wrong offset!");

// Class RedpointEOSFramework.RedpointEOSStarterGameMode
// 0x0000 (0x0338 - 0x0338)
class ARedpointEOSStarterGameMode final : public AGameModeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RedpointEOSStarterGameMode">();
	}
	static class ARedpointEOSStarterGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARedpointEOSStarterGameMode>();
	}
};
static_assert(alignof(ARedpointEOSStarterGameMode) == 0x000008, "Wrong alignment on ARedpointEOSStarterGameMode");
static_assert(sizeof(ARedpointEOSStarterGameMode) == 0x000338, "Wrong size on ARedpointEOSStarterGameMode");

// Class RedpointEOSFramework.RedpointEOSStarterInputMappingContext
// 0x0000 (0x0058 - 0x0058)
class URedpointEOSStarterInputMappingContext final : public UInputMappingContext
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RedpointEOSStarterInputMappingContext">();
	}
	static class URedpointEOSStarterInputMappingContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<URedpointEOSStarterInputMappingContext>();
	}
};
static_assert(alignof(URedpointEOSStarterInputMappingContext) == 0x000008, "Wrong alignment on URedpointEOSStarterInputMappingContext");
static_assert(sizeof(URedpointEOSStarterInputMappingContext) == 0x000058, "Wrong size on URedpointEOSStarterInputMappingContext");

// Class RedpointEOSFramework.RedpointEOSStarterJumpAction
// 0x0000 (0x0080 - 0x0080)
class URedpointEOSStarterJumpAction final : public UInputAction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RedpointEOSStarterJumpAction">();
	}
	static class URedpointEOSStarterJumpAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<URedpointEOSStarterJumpAction>();
	}
};
static_assert(alignof(URedpointEOSStarterJumpAction) == 0x000008, "Wrong alignment on URedpointEOSStarterJumpAction");
static_assert(sizeof(URedpointEOSStarterJumpAction) == 0x000080, "Wrong size on URedpointEOSStarterJumpAction");

// Class RedpointEOSFramework.RedpointEOSStarterMoveAction
// 0x0000 (0x0080 - 0x0080)
class URedpointEOSStarterMoveAction final : public UInputAction
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RedpointEOSStarterMoveAction">();
	}
	static class URedpointEOSStarterMoveAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<URedpointEOSStarterMoveAction>();
	}
};
static_assert(alignof(URedpointEOSStarterMoveAction) == 0x000008, "Wrong alignment on URedpointEOSStarterMoveAction");
static_assert(sizeof(URedpointEOSStarterMoveAction) == 0x000080, "Wrong size on URedpointEOSStarterMoveAction");

// Class RedpointEOSFramework.RedpointEOSStarterPlayerController
// 0x0080 (0x08D8 - 0x0858)
class ARedpointEOSStarterPlayerController final : public APlayerController
{
public:
	TSoftObjectPtr<class UInputAction>            MoveAction;                                        // 0x0858(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInputAction>            JumpAction;                                        // 0x0880(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInputMappingContext>    InputMappingContext;                               // 0x08A8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSkipInputMappingContext;                          // 0x08D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RedpointEOSStarterPlayerController">();
	}
	static class ARedpointEOSStarterPlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARedpointEOSStarterPlayerController>();
	}
};
static_assert(alignof(ARedpointEOSStarterPlayerController) == 0x000008, "Wrong alignment on ARedpointEOSStarterPlayerController");
static_assert(sizeof(ARedpointEOSStarterPlayerController) == 0x0008D8, "Wrong size on ARedpointEOSStarterPlayerController");
static_assert(offsetof(ARedpointEOSStarterPlayerController, MoveAction) == 0x000858, "Member 'ARedpointEOSStarterPlayerController::MoveAction' has a wrong offset!");
static_assert(offsetof(ARedpointEOSStarterPlayerController, JumpAction) == 0x000880, "Member 'ARedpointEOSStarterPlayerController::JumpAction' has a wrong offset!");
static_assert(offsetof(ARedpointEOSStarterPlayerController, InputMappingContext) == 0x0008A8, "Member 'ARedpointEOSStarterPlayerController::InputMappingContext' has a wrong offset!");
static_assert(offsetof(ARedpointEOSStarterPlayerController, bSkipInputMappingContext) == 0x0008D0, "Member 'ARedpointEOSStarterPlayerController::bSkipInputMappingContext' has a wrong offset!");

}

