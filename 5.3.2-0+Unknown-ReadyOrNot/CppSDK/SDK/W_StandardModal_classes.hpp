#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StandardModal

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_StandardModal.W_StandardModal_C
// 0x0160 (0x0618 - 0x04B8)
class UW_StandardModal_C : public UStandardModal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animDisplayWarningText;                            // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_InputActionButton_C*                 btn_Apply;                                         // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_InputActionButton_C*                 btn_Cancel;                                        // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_InputActionButton_C*                 btn_Ok;                                            // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ContentSizeBox;                                    // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ContentSwitcher;                                   // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                DescriptionBox;                                    // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Header;                                            // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_64;                                          // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableTextBox*                       input_TextInput;                                   // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         rtxt_Description;                                  // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_DescriptionBox;                                 // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_TextBlock;                               // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         txt_PressToType;                                   // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_TextInputError;                                // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_TextInputLabel;                                // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Title;                                         // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_TextInput;                                      // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_103;                                   // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       W_PageWrapper;                                     // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> OnOkClicked; // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> OnApplyClicked; // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ScrolledToBottom;                                  // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TextEntryModal;                                    // 0x0581(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_582[0x6];                                      // 0x0582(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextEntryLabel;                                    // 0x0588(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   TextEntryHint;                                     // 0x05A0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   TextEntryText;                                     // 0x05B8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMulticastInlineDelegate<void(class UW_StandardModal_C* CallingModal, class FText TextEntry)> OnTextCommitted; // 0x05D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsTextConfirm;                                     // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDescriptionBox;                                // 0x05E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_5E2[0x2];                                      // 0x05E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TextEntryMaxCharacters;                            // 0x05E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         TextEntryMinCharacters;                            // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            FocusTarget;                                       // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   DefaultEntryText;                                  // 0x05F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bOkButtonHoldAction;                               // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bApplyButtonHoldAction;                            // 0x0611(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bCancelButtonHoldAction;                           // 0x0612(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__W_StandardModal_btn_Apply_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__W_StandardModal_EditableTextBox_80_K2Node_ComponentBoundEvent_6_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	bool BP_OnHandleBackAction();
	void CancelConfirmTextEntry();
	void Confirm(bool OkClicked, bool ApplyClicked, bool TextInputConfirm);
	void ConfirmTextEntry(const class FText& ConfirmTitleText, const class FText& ConfirmDescriptionText);
	void Construct();
	void Destruct();
	void DisplayWarningText(const class FText& WarningText);
	class UWidget* Do_Custom_Navigation_Cancel_Up(EUINavigation Navigation_0);
	void ExecuteUbergraph_W_StandardModal(int32 EntryPoint);
	bool Get_OkButton_bIsEnabled_0();
	void HideWarningText();
	void InputMethodChanged(ECommonInputType bNewInputType);
	bool IsTextOverMax();
	bool IsTextUnderMin();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnTextChange(const class FText& InText);
	void OnTextChanged_Event(const class FText& Text);
	void OnUserScrolled_Event_0(float CurrentOffset);
	void PreConstruct(bool IsDesignTime);
	void SetDescriptionText(const class FText& ModalDescription_0);
	void SetGamepadHintVisibility();
	void Try_Set_Default_Value();
	void WarnTextOverMax();
	void WarnTextUnderMin();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_StandardModal_C">();
	}
	static class UW_StandardModal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_StandardModal_C>();
	}
};
static_assert(alignof(UW_StandardModal_C) == 0x000008, "Wrong alignment on UW_StandardModal_C");
static_assert(sizeof(UW_StandardModal_C) == 0x000618, "Wrong size on UW_StandardModal_C");
static_assert(offsetof(UW_StandardModal_C, UberGraphFrame) == 0x0004B8, "Member 'UW_StandardModal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, animDisplayWarningText) == 0x0004C0, "Member 'UW_StandardModal_C::animDisplayWarningText' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, btn_Apply) == 0x0004C8, "Member 'UW_StandardModal_C::btn_Apply' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, btn_Cancel) == 0x0004D0, "Member 'UW_StandardModal_C::btn_Cancel' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, btn_Ok) == 0x0004D8, "Member 'UW_StandardModal_C::btn_Ok' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, ContentSizeBox) == 0x0004E0, "Member 'UW_StandardModal_C::ContentSizeBox' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, ContentSwitcher) == 0x0004E8, "Member 'UW_StandardModal_C::ContentSwitcher' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, DescriptionBox) == 0x0004F0, "Member 'UW_StandardModal_C::DescriptionBox' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, Header) == 0x0004F8, "Member 'UW_StandardModal_C::Header' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, Image_64) == 0x000500, "Member 'UW_StandardModal_C::Image_64' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, input_TextInput) == 0x000508, "Member 'UW_StandardModal_C::input_TextInput' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, rtxt_Description) == 0x000510, "Member 'UW_StandardModal_C::rtxt_Description' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, SB_DescriptionBox) == 0x000518, "Member 'UW_StandardModal_C::SB_DescriptionBox' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, ScrollBox_TextBlock) == 0x000520, "Member 'UW_StandardModal_C::ScrollBox_TextBlock' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, txt_PressToType) == 0x000528, "Member 'UW_StandardModal_C::txt_PressToType' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, txt_TextInputError) == 0x000530, "Member 'UW_StandardModal_C::txt_TextInputError' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, txt_TextInputLabel) == 0x000538, "Member 'UW_StandardModal_C::txt_TextInputLabel' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, txt_Title) == 0x000540, "Member 'UW_StandardModal_C::txt_Title' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, VB_TextInput) == 0x000548, "Member 'UW_StandardModal_C::VB_TextInput' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, VerticalBox_103) == 0x000550, "Member 'UW_StandardModal_C::VerticalBox_103' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, W_PageWrapper) == 0x000558, "Member 'UW_StandardModal_C::W_PageWrapper' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, OnOkClicked) == 0x000560, "Member 'UW_StandardModal_C::OnOkClicked' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, OnApplyClicked) == 0x000570, "Member 'UW_StandardModal_C::OnApplyClicked' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, ScrolledToBottom) == 0x000580, "Member 'UW_StandardModal_C::ScrolledToBottom' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, TextEntryModal) == 0x000581, "Member 'UW_StandardModal_C::TextEntryModal' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, TextEntryLabel) == 0x000588, "Member 'UW_StandardModal_C::TextEntryLabel' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, TextEntryHint) == 0x0005A0, "Member 'UW_StandardModal_C::TextEntryHint' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, TextEntryText) == 0x0005B8, "Member 'UW_StandardModal_C::TextEntryText' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, OnTextCommitted) == 0x0005D0, "Member 'UW_StandardModal_C::OnTextCommitted' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, IsTextConfirm) == 0x0005E0, "Member 'UW_StandardModal_C::IsTextConfirm' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, ShowDescriptionBox) == 0x0005E1, "Member 'UW_StandardModal_C::ShowDescriptionBox' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, TextEntryMaxCharacters) == 0x0005E4, "Member 'UW_StandardModal_C::TextEntryMaxCharacters' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, TextEntryMinCharacters) == 0x0005E8, "Member 'UW_StandardModal_C::TextEntryMinCharacters' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, FocusTarget) == 0x0005F0, "Member 'UW_StandardModal_C::FocusTarget' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, DefaultEntryText) == 0x0005F8, "Member 'UW_StandardModal_C::DefaultEntryText' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, bOkButtonHoldAction) == 0x000610, "Member 'UW_StandardModal_C::bOkButtonHoldAction' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, bApplyButtonHoldAction) == 0x000611, "Member 'UW_StandardModal_C::bApplyButtonHoldAction' has a wrong offset!");
static_assert(offsetof(UW_StandardModal_C, bCancelButtonHoldAction) == 0x000612, "Member 'UW_StandardModal_C::bCancelButtonHoldAction' has a wrong offset!");

}

