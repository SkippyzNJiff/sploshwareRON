#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ScreenFooterEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_ScreenFooterEntry_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_BackPage) == 0x000001, "Wrong alignment on W_ScreenFooterEntry_C_BackPage");
static_assert(sizeof(W_ScreenFooterEntry_C_BackPage) == 0x000001, "Wrong size on W_ScreenFooterEntry_C_BackPage");
static_assert(offsetof(W_ScreenFooterEntry_C_BackPage, Handled) == 0x000000, "Member 'W_ScreenFooterEntry_C_BackPage::Handled' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooterEntry_C_BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(W_ScreenFooterEntry_C_BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on W_ScreenFooterEntry_C_BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(W_ScreenFooterEntry_C_BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'W_ScreenFooterEntry_C_BndEvt__W_ScreenFooterEntry_W_FooterInputActionButton_K2Node_ComponentBoundEvent_12_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooterEntry_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_ChangePage) == 0x000004, "Wrong alignment on W_ScreenFooterEntry_C_ChangePage");
static_assert(sizeof(W_ScreenFooterEntry_C_ChangePage) == 0x000008, "Wrong size on W_ScreenFooterEntry_C_ChangePage");
static_assert(offsetof(W_ScreenFooterEntry_C_ChangePage, PageName) == 0x000000, "Member 'W_ScreenFooterEntry_C_ChangePage::PageName' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.ExecuteUbergraph_W_ScreenFooterEntry
// 0x0080 (0x0080 - 0x0000)
struct W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue_1; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_1;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry");
static_assert(sizeof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry) == 0x000080, "Wrong size on W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, EntryPoint) == 0x000000, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_CustomEvent_bNewInputType) == 0x000004, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_Event_IsGamepad) == 0x000006, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_Event_Delay_1) == 0x000008, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_Event_Collapse) == 0x000010, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_Event_Delay) == 0x000018, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_Event_IsDesignTime) == 0x000020, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_Event_PageName) == 0x000024, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x000030, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000038, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000040, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, CallFunc_GetCurrentInputType_ReturnValue) == 0x000048, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_SwitchEnum_CmpSuccess_1) == 0x000049, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, CallFunc_GetReadyOrNotPlayerController_ReturnValue_1) == 0x000050, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::CallFunc_GetReadyOrNotPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1) == 0x000058, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_ComponentBoundEvent_Button) == 0x000060, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, CallFunc_GetCurrentInputType_ReturnValue_1) == 0x000068, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::CallFunc_GetCurrentInputType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'W_ScreenFooterEntry_C_ExecuteUbergraph_W_ScreenFooterEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetButtonID
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooterEntry_C_GetButtonID final
{
public:
	class FString                                 ButtonId;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_GetButtonID) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_GetButtonID");
static_assert(sizeof(W_ScreenFooterEntry_C_GetButtonID) == 0x000010, "Wrong size on W_ScreenFooterEntry_C_GetButtonID");
static_assert(offsetof(W_ScreenFooterEntry_C_GetButtonID, ButtonId) == 0x000000, "Member 'W_ScreenFooterEntry_C_GetButtonID::ButtonId' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetButtonLabel
// 0x0018 (0x0018 - 0x0000)
struct W_ScreenFooterEntry_C_GetButtonLabel final
{
public:
	class FText                                   ButtonLabel;                                       // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(W_ScreenFooterEntry_C_GetButtonLabel) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_GetButtonLabel");
static_assert(sizeof(W_ScreenFooterEntry_C_GetButtonLabel) == 0x000018, "Wrong size on W_ScreenFooterEntry_C_GetButtonLabel");
static_assert(offsetof(W_ScreenFooterEntry_C_GetButtonLabel, ButtonLabel) == 0x000000, "Member 'W_ScreenFooterEntry_C_GetButtonLabel::ButtonLabel' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetInputAction
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooterEntry_C_GetInputAction final
{
public:
	struct FDataTableRowHandle                    InputAction;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(W_ScreenFooterEntry_C_GetInputAction) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_GetInputAction");
static_assert(sizeof(W_ScreenFooterEntry_C_GetInputAction) == 0x000010, "Wrong size on W_ScreenFooterEntry_C_GetInputAction");
static_assert(offsetof(W_ScreenFooterEntry_C_GetInputAction, InputAction) == 0x000000, "Member 'W_ScreenFooterEntry_C_GetInputAction::InputAction' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetInputActions
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooterEntry_C_GetInputActions final
{
public:
	TArray<struct FDataTableRowHandle>            InputActions;                                      // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(W_ScreenFooterEntry_C_GetInputActions) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_GetInputActions");
static_assert(sizeof(W_ScreenFooterEntry_C_GetInputActions) == 0x000010, "Wrong size on W_ScreenFooterEntry_C_GetInputActions");
static_assert(offsetof(W_ScreenFooterEntry_C_GetInputActions, InputActions) == 0x000000, "Member 'W_ScreenFooterEntry_C_GetInputActions::InputActions' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetIsButton
// 0x0001 (0x0001 - 0x0000)
struct W_ScreenFooterEntry_C_GetIsButton final
{
public:
	bool                                          IsButton;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_GetIsButton) == 0x000001, "Wrong alignment on W_ScreenFooterEntry_C_GetIsButton");
static_assert(sizeof(W_ScreenFooterEntry_C_GetIsButton) == 0x000001, "Wrong size on W_ScreenFooterEntry_C_GetIsButton");
static_assert(offsetof(W_ScreenFooterEntry_C_GetIsButton, IsButton) == 0x000000, "Member 'W_ScreenFooterEntry_C_GetIsButton::IsButton' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetIsMultiInput
// 0x0001 (0x0001 - 0x0000)
struct W_ScreenFooterEntry_C_GetIsMultiInput final
{
public:
	bool                                          IsMulti;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_GetIsMultiInput) == 0x000001, "Wrong alignment on W_ScreenFooterEntry_C_GetIsMultiInput");
static_assert(sizeof(W_ScreenFooterEntry_C_GetIsMultiInput) == 0x000001, "Wrong size on W_ScreenFooterEntry_C_GetIsMultiInput");
static_assert(offsetof(W_ScreenFooterEntry_C_GetIsMultiInput, IsMulti) == 0x000000, "Member 'W_ScreenFooterEntry_C_GetIsMultiInput::IsMulti' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetMultipleInputActions
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooterEntry_C_GetMultipleInputActions final
{
public:
	TArray<struct FDataTableRowHandle>            InputActions;                                      // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(W_ScreenFooterEntry_C_GetMultipleInputActions) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_GetMultipleInputActions");
static_assert(sizeof(W_ScreenFooterEntry_C_GetMultipleInputActions) == 0x000010, "Wrong size on W_ScreenFooterEntry_C_GetMultipleInputActions");
static_assert(offsetof(W_ScreenFooterEntry_C_GetMultipleInputActions, InputActions) == 0x000000, "Member 'W_ScreenFooterEntry_C_GetMultipleInputActions::InputActions' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetTriggeringInputAction
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooterEntry_C_GetTriggeringInputAction final
{
public:
	struct FDataTableRowHandle                    TriggeringInputAction;                             // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(W_ScreenFooterEntry_C_GetTriggeringInputAction) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_GetTriggeringInputAction");
static_assert(sizeof(W_ScreenFooterEntry_C_GetTriggeringInputAction) == 0x000010, "Wrong size on W_ScreenFooterEntry_C_GetTriggeringInputAction");
static_assert(offsetof(W_ScreenFooterEntry_C_GetTriggeringInputAction, TriggeringInputAction) == 0x000000, "Member 'W_ScreenFooterEntry_C_GetTriggeringInputAction::TriggeringInputAction' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooterEntry_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_Hide) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_Hide");
static_assert(sizeof(W_ScreenFooterEntry_C_Hide) == 0x000010, "Wrong size on W_ScreenFooterEntry_C_Hide");
static_assert(offsetof(W_ScreenFooterEntry_C_Hide, Delay) == 0x000000, "Member 'W_ScreenFooterEntry_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Hide, Collapse) == 0x000008, "Member 'W_ScreenFooterEntry_C_Hide::Collapse' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.InputSwitched
// 0x0001 (0x0001 - 0x0000)
struct W_ScreenFooterEntry_C_InputSwitched final
{
public:
	bool                                          UseGamepad_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_InputSwitched) == 0x000001, "Wrong alignment on W_ScreenFooterEntry_C_InputSwitched");
static_assert(sizeof(W_ScreenFooterEntry_C_InputSwitched) == 0x000001, "Wrong size on W_ScreenFooterEntry_C_InputSwitched");
static_assert(offsetof(W_ScreenFooterEntry_C_InputSwitched, UseGamepad_0) == 0x000000, "Member 'W_ScreenFooterEntry_C_InputSwitched::UseGamepad_0' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.InputTypeChanged
// 0x0001 (0x0001 - 0x0000)
struct W_ScreenFooterEntry_C_InputTypeChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_InputTypeChanged) == 0x000001, "Wrong alignment on W_ScreenFooterEntry_C_InputTypeChanged");
static_assert(sizeof(W_ScreenFooterEntry_C_InputTypeChanged) == 0x000001, "Wrong size on W_ScreenFooterEntry_C_InputTypeChanged");
static_assert(offsetof(W_ScreenFooterEntry_C_InputTypeChanged, bNewInputType) == 0x000000, "Member 'W_ScreenFooterEntry_C_InputTypeChanged::bNewInputType' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ScreenFooterEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_PreConstruct) == 0x000001, "Wrong alignment on W_ScreenFooterEntry_C_PreConstruct");
static_assert(sizeof(W_ScreenFooterEntry_C_PreConstruct) == 0x000001, "Wrong size on W_ScreenFooterEntry_C_PreConstruct");
static_assert(offsetof(W_ScreenFooterEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ScreenFooterEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_ScreenFooterEntry_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_Reveal) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_Reveal");
static_assert(sizeof(W_ScreenFooterEntry_C_Reveal) == 0x000008, "Wrong size on W_ScreenFooterEntry_C_Reveal");
static_assert(offsetof(W_ScreenFooterEntry_C_Reveal, Delay) == 0x000000, "Member 'W_ScreenFooterEntry_C_Reveal::Delay' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.Set Button Text
// 0x0018 (0x0018 - 0x0000)
struct W_ScreenFooterEntry_C_Set_Button_Text final
{
public:
	class FText                                   ButtonText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_ScreenFooterEntry_C_Set_Button_Text) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_Set_Button_Text");
static_assert(sizeof(W_ScreenFooterEntry_C_Set_Button_Text) == 0x000018, "Wrong size on W_ScreenFooterEntry_C_Set_Button_Text");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Button_Text, ButtonText) == 0x000000, "Member 'W_ScreenFooterEntry_C_Set_Button_Text::ButtonText' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.Set Input Actions
// 0x0138 (0x0138 - 0x0000)
struct W_ScreenFooterEntry_C_Set_Input_Actions final
{
public:
	TArray<struct FDataTableRowHandle>            InInputActions;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FKey                                   Key;                                               // 0x0010(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FDataTableRowHandle>            Actions;                                           // 0x0028(0x0010)(Edit, BlueprintVisible)
	class FText                                   LabelText;                                         // 0x0038(0x0018)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Abbreviate_Key_Abreviated_Name;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetButtonLabel_ButtonLabel;               // 0x0080(0x0018)()
	class FText                                   CallFunc_GetButtonLabel_ButtonLabel_1;             // 0x0098(0x0018)()
	struct FDataTableRowHandle                    CallFunc_GetTriggeringInputAction_TriggeringInputAction; // 0x00B0(0x0010)(NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataTableRowHandle>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FDataTableRowHandle>            CallFunc_GetInputActions_InputActions;             // 0x00D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetInputActionData_ActionName;            // 0x00F0(0x0018)()
	struct FKey                                   CallFunc_GetInputActionData_ActionKey;             // 0x0108(0x0018)(HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0120(0x0010)(NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_Set_Input_Actions) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_Set_Input_Actions");
static_assert(sizeof(W_ScreenFooterEntry_C_Set_Input_Actions) == 0x000138, "Wrong size on W_ScreenFooterEntry_C_Set_Input_Actions");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, InInputActions) == 0x000000, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::InInputActions' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, Key) == 0x000010, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::Key' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, Actions) == 0x000028, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::Actions' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, LabelText) == 0x000038, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::LabelText' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_Abbreviate_Key_Abreviated_Name) == 0x000050, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_Abbreviate_Key_Abreviated_Name' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_TextIsEmpty_ReturnValue) == 0x000078, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_GetButtonLabel_ButtonLabel) == 0x000080, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_GetButtonLabel_ButtonLabel' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_GetButtonLabel_ButtonLabel_1) == 0x000098, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_GetButtonLabel_ButtonLabel_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_GetTriggeringInputAction_TriggeringInputAction) == 0x0000B0, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_GetTriggeringInputAction_TriggeringInputAction' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_TextIsEmpty_ReturnValue_1) == 0x0000C0, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, K2Node_MakeArray_Array) == 0x0000C8, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_GetInputActions_InputActions) == 0x0000D8, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_GetInputActions_InputActions' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000E8, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_Array_Add_ReturnValue) == 0x0000EC, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_GetInputActionData_ActionName) == 0x0000F0, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_GetInputActionData_ActionName' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_GetInputActionData_ActionKey) == 0x000108, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_GetInputActionData_ActionKey' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, K2Node_MakeStruct_DataTableRowHandle) == 0x000120, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_Set_Input_Actions, CallFunc_Array_Contains_ReturnValue) == 0x000130, "Member 'W_ScreenFooterEntry_C_Set_Input_Actions::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetFooterEntryData
// 0x0078 (0x0078 - 0x0000)
struct W_ScreenFooterEntry_C_SetFooterEntryData final
{
public:
	struct FScreenFooterEntry                     FooterEntryData_0;                                 // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_ScreenFooterEntry_C_SetFooterEntryData) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_SetFooterEntryData");
static_assert(sizeof(W_ScreenFooterEntry_C_SetFooterEntryData) == 0x000078, "Wrong size on W_ScreenFooterEntry_C_SetFooterEntryData");
static_assert(offsetof(W_ScreenFooterEntry_C_SetFooterEntryData, FooterEntryData_0) == 0x000000, "Member 'W_ScreenFooterEntry_C_SetFooterEntryData::FooterEntryData_0' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetInputAction
// 0x0088 (0x0088 - 0x0000)
struct W_ScreenFooterEntry_C_SetInputAction final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FText                                   CallFunc_GetInputActionData_ActionName;            // 0x0010(0x0018)()
	struct FKey                                   CallFunc_GetInputActionData_ActionKey;             // 0x0028(0x0018)(HasGetValueTypeHash)
	class FString                                 CallFunc_Abbreviate_Key_Abreviated_Name;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
	class FText                                   CallFunc_GetButtonLabel_ButtonLabel;               // 0x0068(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_SetInputAction) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_SetInputAction");
static_assert(sizeof(W_ScreenFooterEntry_C_SetInputAction) == 0x000088, "Wrong size on W_ScreenFooterEntry_C_SetInputAction");
static_assert(offsetof(W_ScreenFooterEntry_C_SetInputAction, InputActionRow) == 0x000000, "Member 'W_ScreenFooterEntry_C_SetInputAction::InputActionRow' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_SetInputAction, CallFunc_GetInputActionData_ActionName) == 0x000010, "Member 'W_ScreenFooterEntry_C_SetInputAction::CallFunc_GetInputActionData_ActionName' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_SetInputAction, CallFunc_GetInputActionData_ActionKey) == 0x000028, "Member 'W_ScreenFooterEntry_C_SetInputAction::CallFunc_GetInputActionData_ActionKey' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_SetInputAction, CallFunc_Abbreviate_Key_Abreviated_Name) == 0x000040, "Member 'W_ScreenFooterEntry_C_SetInputAction::CallFunc_Abbreviate_Key_Abreviated_Name' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_SetInputAction, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'W_ScreenFooterEntry_C_SetInputAction::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_SetInputAction, CallFunc_GetButtonLabel_ButtonLabel) == 0x000068, "Member 'W_ScreenFooterEntry_C_SetInputAction::CallFunc_GetButtonLabel_ButtonLabel' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_SetInputAction, CallFunc_TextIsEmpty_ReturnValue) == 0x000080, "Member 'W_ScreenFooterEntry_C_SetInputAction::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_ScreenFooterEntry_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_SetInputMode) == 0x000001, "Wrong alignment on W_ScreenFooterEntry_C_SetInputMode");
static_assert(sizeof(W_ScreenFooterEntry_C_SetInputMode) == 0x000001, "Wrong size on W_ScreenFooterEntry_C_SetInputMode");
static_assert(offsetof(W_ScreenFooterEntry_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_ScreenFooterEntry_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetLabel
// 0x0018 (0x0018 - 0x0000)
struct W_ScreenFooterEntry_C_SetLabel final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_ScreenFooterEntry_C_SetLabel) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_SetLabel");
static_assert(sizeof(W_ScreenFooterEntry_C_SetLabel) == 0x000018, "Wrong size on W_ScreenFooterEntry_C_SetLabel");
static_assert(offsetof(W_ScreenFooterEntry_C_SetLabel, InText) == 0x000000, "Member 'W_ScreenFooterEntry_C_SetLabel::InText' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.SetMultiInputAction
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooterEntry_C_SetMultiInputAction final
{
public:
	TArray<struct FDataTableRowHandle>            InputActionRows;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(W_ScreenFooterEntry_C_SetMultiInputAction) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_SetMultiInputAction");
static_assert(sizeof(W_ScreenFooterEntry_C_SetMultiInputAction) == 0x000010, "Wrong size on W_ScreenFooterEntry_C_SetMultiInputAction");
static_assert(offsetof(W_ScreenFooterEntry_C_SetMultiInputAction, InputActionRows) == 0x000000, "Member 'W_ScreenFooterEntry_C_SetMultiInputAction::InputActionRows' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.UpdateEntry
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooterEntry_C_UpdateEntry final
{
public:
	TArray<struct FDataTableRowHandle>            Temp_struct_Variable;                              // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(W_ScreenFooterEntry_C_UpdateEntry) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_UpdateEntry");
static_assert(sizeof(W_ScreenFooterEntry_C_UpdateEntry) == 0x000010, "Wrong size on W_ScreenFooterEntry_C_UpdateEntry");
static_assert(offsetof(W_ScreenFooterEntry_C_UpdateEntry, Temp_struct_Variable) == 0x000000, "Member 'W_ScreenFooterEntry_C_UpdateEntry::Temp_struct_Variable' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.UpdateVisualState
// 0x0005 (0x0005 - 0x0000)
struct W_ScreenFooterEntry_C_UpdateVisualState final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsButton_IsButton;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsButton_IsButton_1;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_UpdateVisualState) == 0x000001, "Wrong alignment on W_ScreenFooterEntry_C_UpdateVisualState");
static_assert(sizeof(W_ScreenFooterEntry_C_UpdateVisualState) == 0x000005, "Wrong size on W_ScreenFooterEntry_C_UpdateVisualState");
static_assert(offsetof(W_ScreenFooterEntry_C_UpdateVisualState, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'W_ScreenFooterEntry_C_UpdateVisualState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_UpdateVisualState, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'W_ScreenFooterEntry_C_UpdateVisualState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_UpdateVisualState, CallFunc_GetIsButton_IsButton) == 0x000002, "Member 'W_ScreenFooterEntry_C_UpdateVisualState::CallFunc_GetIsButton_IsButton' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_UpdateVisualState, CallFunc_GetIsButton_IsButton_1) == 0x000003, "Member 'W_ScreenFooterEntry_C_UpdateVisualState::CallFunc_GetIsButton_IsButton_1' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_UpdateVisualState, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'W_ScreenFooterEntry_C_UpdateVisualState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_ScreenFooterEntry.W_ScreenFooterEntry_C.GetFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct W_ScreenFooterEntry_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ScreenFooterEntry_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_ScreenFooterEntry_C_GetFocusTarget");
static_assert(sizeof(W_ScreenFooterEntry_C_GetFocusTarget) == 0x000010, "Wrong size on W_ScreenFooterEntry_C_GetFocusTarget");
static_assert(offsetof(W_ScreenFooterEntry_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_ScreenFooterEntry_C_GetFocusTarget::Focus' has a wrong offset!");
static_assert(offsetof(W_ScreenFooterEntry_C_GetFocusTarget, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'W_ScreenFooterEntry_C_GetFocusTarget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

}

