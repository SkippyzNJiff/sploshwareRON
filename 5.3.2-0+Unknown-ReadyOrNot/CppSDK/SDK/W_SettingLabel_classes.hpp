#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SettingLabel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_SettingLabel.W_SettingLabel_C
// 0x0090 (0x0350 - 0x02C0)
class UW_SettingLabel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_Button_C*                            Button;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_SettingName;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   BindText;                                          // 0x02D8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UTextBlock*                             DescriptionTextWidget;                             // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x02F8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMulticastInlineDelegate<void()>              OnLabelHovered;                                    // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnLabelUnhovered;                                  // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UW_StandardCheckbox_C*                  CopyDescriptionFromCheckbox;                       // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UW_StandardSlider_C*                    CopyDescriptionFromSlider;                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UW_StandardCombobox_New_C*              CopyDescriptionFromCombobox;                       // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFMODEvent*                             SettingLabelHoveredSound;                          // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__W_SettingLabel_Button_K2Node_ComponentBoundEvent_2_Hovered__DelegateSignature(class UW_Button_C* Button_0);
	void BndEvt__W_SettingLabel_Button_K2Node_ComponentBoundEvent_3_Unhovered__DelegateSignature();
	void Construct();
	void CopyFromCheckbox();
	void CopyFromCombo();
	void CopyFromSlider();
	void ExecuteUbergraph_W_SettingLabel(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_SettingLabel_C">();
	}
	static class UW_SettingLabel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_SettingLabel_C>();
	}
};
static_assert(alignof(UW_SettingLabel_C) == 0x000008, "Wrong alignment on UW_SettingLabel_C");
static_assert(sizeof(UW_SettingLabel_C) == 0x000350, "Wrong size on UW_SettingLabel_C");
static_assert(offsetof(UW_SettingLabel_C, UberGraphFrame) == 0x0002C0, "Member 'UW_SettingLabel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, Button) == 0x0002C8, "Member 'UW_SettingLabel_C::Button' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, txt_SettingName) == 0x0002D0, "Member 'UW_SettingLabel_C::txt_SettingName' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, BindText) == 0x0002D8, "Member 'UW_SettingLabel_C::BindText' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, DescriptionTextWidget) == 0x0002F0, "Member 'UW_SettingLabel_C::DescriptionTextWidget' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, Description) == 0x0002F8, "Member 'UW_SettingLabel_C::Description' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, OnLabelHovered) == 0x000310, "Member 'UW_SettingLabel_C::OnLabelHovered' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, OnLabelUnhovered) == 0x000320, "Member 'UW_SettingLabel_C::OnLabelUnhovered' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, CopyDescriptionFromCheckbox) == 0x000330, "Member 'UW_SettingLabel_C::CopyDescriptionFromCheckbox' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, CopyDescriptionFromSlider) == 0x000338, "Member 'UW_SettingLabel_C::CopyDescriptionFromSlider' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, CopyDescriptionFromCombobox) == 0x000340, "Member 'UW_SettingLabel_C::CopyDescriptionFromCombobox' has a wrong offset!");
static_assert(offsetof(UW_SettingLabel_C, SettingLabelHoveredSound) == 0x000348, "Member 'UW_SettingLabel_C::SettingLabelHoveredSound' has a wrong offset!");

}

