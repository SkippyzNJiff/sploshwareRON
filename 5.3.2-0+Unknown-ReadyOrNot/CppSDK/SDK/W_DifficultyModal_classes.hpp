#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DifficultyModal

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_DifficultyModal.W_DifficultyModal_C
// 0x0170 (0x0628 - 0x04B8)
class UW_DifficultyModal_C final : public UStandardModal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animDisplayWarningText;                            // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_InputActionButton_C*                 btn_Cancel;                                        // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Crossplay;                                     // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_InputActionButton_C*                 btn_Ok;                                            // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ContentSizeBox;                                    // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               CrossplaySettings;                                 // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                DescriptionBox;                                    // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           DifficultyOptionsList;                             // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Header;                                            // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_DifficultySelect_C*                  HostingGameDifficultySelect;                       // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        HostingJoiningSwitcher;                            // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_64;                                          // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               JoiningGameDifficultySelect;                       // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         rtxt_Description;                                  // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_DescriptionBox;                                 // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_TextBlock;                               // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           SM_JoinGame;                                       // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_ErrorWarning;                                  // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Title;                                         // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_103;                                   // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_DifficultyModalEntry_C*              W_DifficultyModalEntry;                            // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_DifficultyModalEntry_C*              W_DifficultyModalEntry_1;                          // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_DifficultyModalEntry_C*              W_DifficultyModalEntry_2;                          // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       W_PageWrapper;                                     // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UW_DifficultyModal_C* CallingModal, ECrossplayOverride Crossplay_Override)> OnOkClicked; // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_DifficultyModal_C* CallingModal, class FText TextEntry)> OnApplyClicked; // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ScrolledToBottom;                                  // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TextEntryModal;                                    // 0x05A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_5A2[0x6];                                      // 0x05A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextEntryLabel;                                    // 0x05A8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   TextEntryHint;                                     // 0x05C0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   TextEntryText;                                     // 0x05D8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          IsTextConfirm;                                     // 0x05F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDescriptionBox;                                // 0x05F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_5F2[0x2];                                      // 0x05F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TextEntryMaxCharacters;                            // 0x05F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         TextEntryMinCharacters;                            // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Button_C*                            FocusTarget;                                       // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHosting;                                        // 0x0608(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   EnabledDifficulties;                               // 0x0610(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bFriendsOnly;                                      // 0x0620(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ECrossplayOverride                            Crossplay_Override;                                // 0x0621(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__W_DifficultyModal_W_Button_K2Node_ComponentBoundEvent_2_CommonSelectedStateChangedBase__DelegateSignature(class UCommonButtonBase* Button, bool Selected);
	void BndEvt__W_DifficultyModal_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonId);
	void BndEvt__W_StandardModal_btn_Cancel_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__W_StandardModal_btn_Ok_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BP_OnActivated();
	void BP_OnDeactivated();
	bool BP_OnHandleBackAction();
	void Confirm(bool OkClicked, bool ApplyClicked, bool TextInputConfirm);
	void Construct();
	void Destruct();
	void DisplayWarningText(const class FText& WarningText);
	class UWidget* Do_Custom_Navigation_Cancel_Down(EUINavigation Navigation_0);
	void ExecuteUbergraph_W_DifficultyModal(int32 EntryPoint);
	bool Get_OkButton_bIsEnabled_0();
	void HideWarningText();
	void InputMethodChanged(ECommonInputType bNewInputType);
	void OnButtonStateChanged(bool bEnabled, const struct FGameplayTag& DifficultyTag);
	void OnUserScrolled_Event_0(float CurrentOffset);
	void PopulateDifficultyEntries();
	void PreConstruct(bool IsDesignTime);
	void Reconfigure(bool IsHosting, bool FriendsOnly);
	void ReconfigureButtons(bool ShowOkButton_0, bool ShowCancelButton_0, bool ShowApplyButton_0);
	void Set_Crossplay_Settings_Visibility();
	void SetDescriptionText(const class FText& ModalDescription_0);
	bool Should_Show_Crossplay_Toggle();
	void Toggle_Crossplay_Button();
	void UpdateHeaderText();
	void UpdateSearchButtonActive();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_DifficultyModal_C">();
	}
	static class UW_DifficultyModal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_DifficultyModal_C>();
	}
};
static_assert(alignof(UW_DifficultyModal_C) == 0x000008, "Wrong alignment on UW_DifficultyModal_C");
static_assert(sizeof(UW_DifficultyModal_C) == 0x000628, "Wrong size on UW_DifficultyModal_C");
static_assert(offsetof(UW_DifficultyModal_C, UberGraphFrame) == 0x0004B8, "Member 'UW_DifficultyModal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, animDisplayWarningText) == 0x0004C0, "Member 'UW_DifficultyModal_C::animDisplayWarningText' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, btn_Cancel) == 0x0004C8, "Member 'UW_DifficultyModal_C::btn_Cancel' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, btn_Crossplay) == 0x0004D0, "Member 'UW_DifficultyModal_C::btn_Crossplay' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, btn_Ok) == 0x0004D8, "Member 'UW_DifficultyModal_C::btn_Ok' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, ContentSizeBox) == 0x0004E0, "Member 'UW_DifficultyModal_C::ContentSizeBox' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, CrossplaySettings) == 0x0004E8, "Member 'UW_DifficultyModal_C::CrossplaySettings' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, DescriptionBox) == 0x0004F0, "Member 'UW_DifficultyModal_C::DescriptionBox' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, DifficultyOptionsList) == 0x0004F8, "Member 'UW_DifficultyModal_C::DifficultyOptionsList' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, Header) == 0x000500, "Member 'UW_DifficultyModal_C::Header' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, HostingGameDifficultySelect) == 0x000508, "Member 'UW_DifficultyModal_C::HostingGameDifficultySelect' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, HostingJoiningSwitcher) == 0x000510, "Member 'UW_DifficultyModal_C::HostingJoiningSwitcher' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, Image_64) == 0x000518, "Member 'UW_DifficultyModal_C::Image_64' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, JoiningGameDifficultySelect) == 0x000520, "Member 'UW_DifficultyModal_C::JoiningGameDifficultySelect' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, rtxt_Description) == 0x000528, "Member 'UW_DifficultyModal_C::rtxt_Description' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, SB_DescriptionBox) == 0x000530, "Member 'UW_DifficultyModal_C::SB_DescriptionBox' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, ScrollBox_TextBlock) == 0x000538, "Member 'UW_DifficultyModal_C::ScrollBox_TextBlock' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, SM_JoinGame) == 0x000540, "Member 'UW_DifficultyModal_C::SM_JoinGame' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, txt_ErrorWarning) == 0x000548, "Member 'UW_DifficultyModal_C::txt_ErrorWarning' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, txt_Title) == 0x000550, "Member 'UW_DifficultyModal_C::txt_Title' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, VerticalBox_103) == 0x000558, "Member 'UW_DifficultyModal_C::VerticalBox_103' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, W_DifficultyModalEntry) == 0x000560, "Member 'UW_DifficultyModal_C::W_DifficultyModalEntry' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, W_DifficultyModalEntry_1) == 0x000568, "Member 'UW_DifficultyModal_C::W_DifficultyModalEntry_1' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, W_DifficultyModalEntry_2) == 0x000570, "Member 'UW_DifficultyModal_C::W_DifficultyModalEntry_2' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, W_PageWrapper) == 0x000578, "Member 'UW_DifficultyModal_C::W_PageWrapper' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, OnOkClicked) == 0x000580, "Member 'UW_DifficultyModal_C::OnOkClicked' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, OnApplyClicked) == 0x000590, "Member 'UW_DifficultyModal_C::OnApplyClicked' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, ScrolledToBottom) == 0x0005A0, "Member 'UW_DifficultyModal_C::ScrolledToBottom' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, TextEntryModal) == 0x0005A1, "Member 'UW_DifficultyModal_C::TextEntryModal' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, TextEntryLabel) == 0x0005A8, "Member 'UW_DifficultyModal_C::TextEntryLabel' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, TextEntryHint) == 0x0005C0, "Member 'UW_DifficultyModal_C::TextEntryHint' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, TextEntryText) == 0x0005D8, "Member 'UW_DifficultyModal_C::TextEntryText' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, IsTextConfirm) == 0x0005F0, "Member 'UW_DifficultyModal_C::IsTextConfirm' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, ShowDescriptionBox) == 0x0005F1, "Member 'UW_DifficultyModal_C::ShowDescriptionBox' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, TextEntryMaxCharacters) == 0x0005F4, "Member 'UW_DifficultyModal_C::TextEntryMaxCharacters' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, TextEntryMinCharacters) == 0x0005F8, "Member 'UW_DifficultyModal_C::TextEntryMinCharacters' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, FocusTarget) == 0x000600, "Member 'UW_DifficultyModal_C::FocusTarget' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, bIsHosting) == 0x000608, "Member 'UW_DifficultyModal_C::bIsHosting' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, EnabledDifficulties) == 0x000610, "Member 'UW_DifficultyModal_C::EnabledDifficulties' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, bFriendsOnly) == 0x000620, "Member 'UW_DifficultyModal_C::bFriendsOnly' has a wrong offset!");
static_assert(offsetof(UW_DifficultyModal_C, Crossplay_Override) == 0x000621, "Member 'UW_DifficultyModal_C::Crossplay_Override' has a wrong offset!");

}

