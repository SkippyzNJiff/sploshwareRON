#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Page_Gear

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BackPage
// 0x0002 (0x0002 - 0x0000)
struct W_Loadout_Page_Gear_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BackPage_Handled;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BackPage) == 0x000001, "Wrong alignment on W_Loadout_Page_Gear_C_BackPage");
static_assert(sizeof(W_Loadout_Page_Gear_C_BackPage) == 0x000002, "Wrong size on W_Loadout_Page_Gear_C_BackPage");
static_assert(offsetof(W_Loadout_Page_Gear_C_BackPage, Handled) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BackPage::Handled' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_BackPage, CallFunc_BackPage_Handled) == 0x000001, "Member 'W_Loadout_Page_Gear_C_BackPage::CallFunc_BackPage_Handled' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature final
{
public:
	class UW_LoadoutSlot_v2_C*                    TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature");
static_assert(sizeof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature");
static_assert(offsetof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_4_OnSlotClicked__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature final
{
public:
	class UW_LoadoutSlot_v2_C*                    TriggeringSlot;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature");
static_assert(sizeof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature");
static_assert(offsetof(W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature, TriggeringSlot) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BndEvt__W_Loadout_Page_Gear_LongTactical_K2Node_ComponentBoundEvent_5_OnSlotHovered__DelegateSignature::TriggeringSlot' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BP_OnHandleBackAction
// 0x0002 (0x0002 - 0x0000)
struct W_Loadout_Page_Gear_C_BP_OnHandleBackAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BackPage_Handled;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on W_Loadout_Page_Gear_C_BP_OnHandleBackAction");
static_assert(sizeof(W_Loadout_Page_Gear_C_BP_OnHandleBackAction) == 0x000002, "Wrong size on W_Loadout_Page_Gear_C_BP_OnHandleBackAction");
static_assert(offsetof(W_Loadout_Page_Gear_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_BP_OnHandleBackAction, CallFunc_BackPage_Handled) == 0x000001, "Member 'W_Loadout_Page_Gear_C_BP_OnHandleBackAction::CallFunc_BackPage_Handled' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_ChangePage) == 0x000004, "Wrong alignment on W_Loadout_Page_Gear_C_ChangePage");
static_assert(sizeof(W_Loadout_Page_Gear_C_ChangePage) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_ChangePage");
static_assert(offsetof(W_Loadout_Page_Gear_C_ChangePage, PageName) == 0x000000, "Member 'W_Loadout_Page_Gear_C_ChangePage::PageName' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.ExecuteUbergraph_W_Loadout_Page_Gear
// 0x03E8 (0x03E8 - 0x0000)
struct W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSavedLoadout                          K2Node_Event_ActiveLoadout;                        // 0x0020(0x02E8)()
	TMap<EItemCategory, class UClass*>            K2Node_Event_ItemCategory;                         // 0x0308(0x0050)()
	class FName                                   K2Node_Event_OptionNameID;                         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1;        // 0x0380(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2;        // 0x0388(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    K2Node_ComponentBoundEvent_TriggeringSlot_1;       // 0x0390(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    K2Node_ComponentBoundEvent_TriggeringSlot;         // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PageName;                             // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3;        // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear");
static_assert(sizeof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear) == 0x0003E8, "Wrong size on W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, EntryPoint) == 0x000000, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetLoadoutWidget_AsW_Loadout_V2) == 0x000008, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetLoadoutWidget_AsW_Loadout_V2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_ActiveLoadout) == 0x000020, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_ActiveLoadout' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_ItemCategory) == 0x000308, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_ItemCategory' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_OptionNameID) == 0x000358, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_OptionNameID' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_IsGamepad) == 0x000360, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_Delay_1) == 0x000368, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_Collapse) == 0x000370, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_Delay) == 0x000378, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1) == 0x000380, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetLoadoutWidget_AsW_Loadout_V2_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2) == 0x000388, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetLoadoutWidget_AsW_Loadout_V2_2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_ComponentBoundEvent_TriggeringSlot_1) == 0x000390, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_ComponentBoundEvent_TriggeringSlot_1' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_ComponentBoundEvent_TriggeringSlot) == 0x000398, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_ComponentBoundEvent_TriggeringSlot' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetObjectClass_ReturnValue) == 0x0003A0, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_IsValid_ReturnValue) == 0x0003A8, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x0003B0, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_Event_PageName) == 0x0003B8, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, K2Node_CustomEvent_bNewInputType) == 0x0003C0, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003C1, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x0003C8, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetCurrentInputType_ReturnValue) == 0x0003D0, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3) == 0x0003D8, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_GetLoadoutWidget_AsW_Loadout_V2_3' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear, CallFunc_PlayEvent2D_ReturnValue) == 0x0003E0, "Member 'W_Loadout_Page_Gear_C_ExecuteUbergraph_W_Loadout_Page_Gear::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.HeaderSubpageNavigation
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_HeaderSubpageNavigation final
{
public:
	class FName                                   OptionNameID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_HeaderSubpageNavigation) == 0x000004, "Wrong alignment on W_Loadout_Page_Gear_C_HeaderSubpageNavigation");
static_assert(sizeof(W_Loadout_Page_Gear_C_HeaderSubpageNavigation) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_HeaderSubpageNavigation");
static_assert(offsetof(W_Loadout_Page_Gear_C_HeaderSubpageNavigation, OptionNameID) == 0x000000, "Member 'W_Loadout_Page_Gear_C_HeaderSubpageNavigation::OptionNameID' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_Page_Gear_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_Hide) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_Hide");
static_assert(sizeof(W_Loadout_Page_Gear_C_Hide) == 0x000010, "Wrong size on W_Loadout_Page_Gear_C_Hide");
static_assert(offsetof(W_Loadout_Page_Gear_C_Hide, Delay) == 0x000000, "Member 'W_Loadout_Page_Gear_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_Hide, Collapse) == 0x000008, "Member 'W_Loadout_Page_Gear_C_Hide::Collapse' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.InputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Page_Gear_C_InputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_InputMethodChanged) == 0x000001, "Wrong alignment on W_Loadout_Page_Gear_C_InputMethodChanged");
static_assert(sizeof(W_Loadout_Page_Gear_C_InputMethodChanged) == 0x000001, "Wrong size on W_Loadout_Page_Gear_C_InputMethodChanged");
static_assert(offsetof(W_Loadout_Page_Gear_C_InputMethodChanged, bNewInputType) == 0x000000, "Member 'W_Loadout_Page_Gear_C_InputMethodChanged::bNewInputType' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Loadout_Page_Gear_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_Reveal) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_Reveal");
static_assert(sizeof(W_Loadout_Page_Gear_C_Reveal) == 0x000008, "Wrong size on W_Loadout_Page_Gear_C_Reveal");
static_assert(offsetof(W_Loadout_Page_Gear_C_Reveal, Delay) == 0x000000, "Member 'W_Loadout_Page_Gear_C_Reveal::Delay' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Page_Gear_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_SetInputMode) == 0x000001, "Wrong alignment on W_Loadout_Page_Gear_C_SetInputMode");
static_assert(sizeof(W_Loadout_Page_Gear_C_SetInputMode) == 0x000001, "Wrong size on W_Loadout_Page_Gear_C_SetInputMode");
static_assert(offsetof(W_Loadout_Page_Gear_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Loadout_Page_Gear_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.TabChanged
// 0x0020 (0x0020 - 0x0000)
struct W_Loadout_Page_Gear_C_TabChanged final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_V2_C*                        CallFunc_GetLoadoutWidget_AsW_Loadout_V2;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotGameState*                   CallFunc_GetReadyOrNotGameState_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_TabChanged) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_TabChanged");
static_assert(sizeof(W_Loadout_Page_Gear_C_TabChanged) == 0x000020, "Wrong size on W_Loadout_Page_Gear_C_TabChanged");
static_assert(offsetof(W_Loadout_Page_Gear_C_TabChanged, TabId) == 0x000000, "Member 'W_Loadout_Page_Gear_C_TabChanged::TabId' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_TabChanged, K2Node_SwitchName_CmpSuccess) == 0x000008, "Member 'W_Loadout_Page_Gear_C_TabChanged::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_TabChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'W_Loadout_Page_Gear_C_TabChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_TabChanged, CallFunc_GetLoadoutWidget_AsW_Loadout_V2) == 0x000010, "Member 'W_Loadout_Page_Gear_C_TabChanged::CallFunc_GetLoadoutWidget_AsW_Loadout_V2' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_TabChanged, CallFunc_GetReadyOrNotGameState_ReturnValue) == 0x000018, "Member 'W_Loadout_Page_Gear_C_TabChanged::CallFunc_GetReadyOrNotGameState_ReturnValue' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.UpdateActiveLoadout
// 0x02E8 (0x02E8 - 0x0000)
struct W_Loadout_Page_Gear_C_UpdateActiveLoadout final
{
public:
	struct FSavedLoadout                          ActiveLoadout;                                     // 0x0000(0x02E8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_Page_Gear_C_UpdateActiveLoadout) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_UpdateActiveLoadout");
static_assert(sizeof(W_Loadout_Page_Gear_C_UpdateActiveLoadout) == 0x0002E8, "Wrong size on W_Loadout_Page_Gear_C_UpdateActiveLoadout");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateActiveLoadout, ActiveLoadout) == 0x000000, "Member 'W_Loadout_Page_Gear_C_UpdateActiveLoadout::ActiveLoadout' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.UpdateCurrentItemMap
// 0x0050 (0x0050 - 0x0000)
struct W_Loadout_Page_Gear_C_UpdateCurrentItemMap final
{
public:
	TMap<EItemCategory, class UClass*>            ItemCategory;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Loadout_Page_Gear_C_UpdateCurrentItemMap) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_UpdateCurrentItemMap");
static_assert(sizeof(W_Loadout_Page_Gear_C_UpdateCurrentItemMap) == 0x000050, "Wrong size on W_Loadout_Page_Gear_C_UpdateCurrentItemMap");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateCurrentItemMap, ItemCategory) == 0x000000, "Member 'W_Loadout_Page_Gear_C_UpdateCurrentItemMap::ItemCategory' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.UpdateStyle
// 0x0001 (0x0001 - 0x0000)
struct W_Loadout_Page_Gear_C_UpdateStyle final
{
public:
	bool                                          bUseGamepad;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_UpdateStyle) == 0x000001, "Wrong alignment on W_Loadout_Page_Gear_C_UpdateStyle");
static_assert(sizeof(W_Loadout_Page_Gear_C_UpdateStyle) == 0x000001, "Wrong size on W_Loadout_Page_Gear_C_UpdateStyle");
static_assert(offsetof(W_Loadout_Page_Gear_C_UpdateStyle, bUseGamepad) == 0x000000, "Member 'W_Loadout_Page_Gear_C_UpdateStyle::bUseGamepad' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusTarget_Focus;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget, CallFunc_GetFocusTarget_Focus) == 0x000008, "Member 'W_Loadout_Page_Gear_C_BP_GetDesiredFocusTarget::CallFunc_GetFocusTarget_Focus' has a wrong offset!");

// Function W_Loadout_Page_Gear.W_Loadout_Page_Gear_C.GetFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct W_Loadout_Page_Gear_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusTarget_Focus;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Loadout_Page_Gear_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Loadout_Page_Gear_C_GetFocusTarget");
static_assert(sizeof(W_Loadout_Page_Gear_C_GetFocusTarget) == 0x000010, "Wrong size on W_Loadout_Page_Gear_C_GetFocusTarget");
static_assert(offsetof(W_Loadout_Page_Gear_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Loadout_Page_Gear_C_GetFocusTarget::Focus' has a wrong offset!");
static_assert(offsetof(W_Loadout_Page_Gear_C_GetFocusTarget, CallFunc_GetFocusTarget_Focus) == 0x000008, "Member 'W_Loadout_Page_Gear_C_GetFocusTarget::CallFunc_GetFocusTarget_Focus' has a wrong offset!");

}

