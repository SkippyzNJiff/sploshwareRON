#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_RosterManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet_RosterManager.W_PreMission_Tablet_RosterManager_C
// 0x02E0 (0x0700 - 0x0420)
class UW_PreMission_Tablet_RosterManager_C final : public URosterSelectionWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animCommanderPageChange;                           // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundImage;                                   // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButton_C*                        btn_ChangeTeam;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                btn_ClickAway;                                     // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ClosePage;                                     // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_ClosePage_1;                                   // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatableWidgetSwitcher*       CardWidgetSwitcher;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              CharacterPreviewCard;                              // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Characters;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         CharactersHorizontalBox;                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              EnlistCharacter_1;                                 // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              EnlistCharacter_2;                                 // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              EnlistCharacter_3;                                 // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_CharacterDetails;                               // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 icn_Close;                                         // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 icn_Close_1;                                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_92;                                          // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_div_header;                                    // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_div_header_1;                                  // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               PlayerWrapBox;                                     // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              PreviousCharacterCard;                             // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         RecruitmentHorizontalBox;                          // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SelectForTherapyText;                              // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SquadMembersHorizontalBox;                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SquadMembersScaleBox;                              // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           SubMenu_CharacterDetails;                          // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           SubMenu_CharacterEnlist;                           // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           SubMenu_CharacterSwap;                             // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           SubMenu_Roster;                                    // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SubMenu_C*                           SubMenu_Therapy;                                   // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SwapHorizontalBox;                                 // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_HeaderTitle;                                   // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_HeaderTitle_1;                                 // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_PlayerCount;                                   // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_CharacterEnlist;                                // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_CharacterRoster;                                // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_CharacterSwap;                                  // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Commander;                                      // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Multiplayer;                                    // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_PlayerList;                                     // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_Details_C*                    W_Roster_Details;                                  // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          W_RosterPlayer_1;                                  // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          W_RosterPlayer_2;                                  // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          W_RosterPlayer_3;                                  // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          W_RosterPlayer_4;                                  // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Roster_PlayerStatus_Card_C*          W_RosterPlayer_Card_1;                             // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              W_RosterSelection_Card;                            // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              W_RosterSelection_Card_1;                          // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              W_RosterSelection_Card_2;                          // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_Card_C*              W_RosterSelection_Card_3;                          // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard;                        // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_1;                      // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_2;                      // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_3;                      // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_4;                      // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_5;                      // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_6;                      // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_7;                      // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_8;                      // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelection_MiniCard_C*          W_RosterSelection_MiniCard_9;                      // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSelf_Card_C*                   W_RosterSelf_Card;                                 // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSpecialty_C*                   W_RosterSpecialty;                                 // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSpecialty_C*                   W_RosterSpecialty_1;                               // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_RosterSpecialty_C*                   W_RosterSpecialty_2;                               // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class AReadyOrNotPlayerState*, class UW_PreMission_Tablet_Roster_Entry_C*> RosterMap;       // 0x0628(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)
	ERosterSquadPosition                          CurrentPositionSelection;                          // 0x0678(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Swapping;                                          // 0x0679(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67A[0x6];                                      // 0x067A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_RosterSelection_MiniCard_C*          ActiveMiniCard;                                    // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        SquadRevealDelay;                                  // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class APlayerState*, class UW_Roster_PlayerStatus_Card_C*> CurrentPlayerMap;                // 0x0690(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)
	class UW_RosterSelection_MiniCard_C*          HoveredMiniCard;                                   // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          DetailsOpen;                                       // 0x06E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PageChanging;                                      // 0x06E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EA[0x2];                                      // 0x06EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DebugAvailableCharacterSlots;                      // 0x06EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DebugMaxCharacterSlots;                            // 0x06F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x06F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnlistOpen;                                        // 0x06F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F6[0x2];                                      // 0x06F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCharacterSlots;                                 // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AvailableCharacterSlots;                           // 0x06FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AudioPlayerVisible(class UW_AudioPlayer_C* PlayerWidget, bool PlayerVisible);
	void BackPage(bool* Handled);
	void BndEvt__W_PreMission_Tablet_Roster_btn_ClickAway_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__W_PreMission_Tablet_Roster_btn_ClosePage_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_PreMission_Tablet_RosterManager_SubMenu_CharacterDetails_K2Node_ComponentBoundEvent_4_HandleBackPress__DelegateSignature();
	void BndEvt__W_PreMission_Tablet_RosterManager_SubMenu_CharacterEnlist_K2Node_ComponentBoundEvent_3_HandleBackPress__DelegateSignature();
	void BndEvt__W_PreMission_Tablet_RosterManager_SubMenu_CharacterSwap_K2Node_ComponentBoundEvent_2_HandleBackPress__DelegateSignature();
	void BP_OnActivated();
	bool BP_OnHandleBackAction();
	void ChangePage(class FName PageName);
	void ChangeRosterPage(const class FText& PageTitle, bool ShowCloseButton);
	void CloseDetailsPage();
	void CloseEnlistPage();
	void CloseSwapping();
	void Construct();
	void CreateEmptyMiniCards(int32 Count);
	void CreateLockedMiniCards(int32 MissionUnlockCount);
	void EmptyMiniCardClicked(class UW_RosterSelection_MiniCard_C* Card);
	void EnlistCharacterClicked(class UW_RosterSelection_Card_C* Card);
	void ExecuteUbergraph_W_PreMission_Tablet_RosterManager(int32 EntryPoint);
	void GetFirstEnlistCard(class UWidget** FirstEnlistCard);
	void GetFirstMiniCard(class UWidget** FirstMiniCard);
	bool GetIsSelfHost();
	class UW_Roster_PlayerStatus_Card_C* GetPlayerCardByIndex(int32 Index_0);
	void GoBack();
	void Hide(double Delay, bool Collapse);
	void InitializeRoster();
	bool IsPlayerSelf(class UObject* PlayerState);
	void MiniCardClicked(class UW_RosterSelection_MiniCard_C* Card);
	void MiniCardHovered(class UW_RosterSelection_MiniCard_C* Card);
	void MiniCardUnhovered(class UW_RosterSelection_MiniCard_C* Card);
	void OnCharactersUpdated();
	void OnNestedBackPress();
	void OnPlayersUpdated();
	void OnPracticeUnitsUpdated();
	void OpenDetailsPage(class URosterCharacter* RosterCharacter);
	void OpenEnlistPage();
	void PageChangeReveal();
	void PlayerClicked(class UW_Roster_PlayerStatus_Card_C* PlayerCard);
	void PopulateCharacterList();
	void PopulateDebugCharacterList();
	void PopulatePlayerList();
	void PopulatePracticeUnits();
	void PopulateSquadCharacters();
	void RefreshPage();
	void RefreshRosterEvent();
	void Reveal(double Delay);
	void SetInputMode(bool IsGamepad);
	void SetTabletState(bool IsAwake);
	void SetVisualTheme(bool UseDarkTheme);
	void SquadMemberClicked(class UW_RosterSelection_Card_C* Card);
	void UpdateFocusTargets();

	class UWidget* BP_GetDesiredFocusTarget() const;
	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_RosterManager_C">();
	}
	static class UW_PreMission_Tablet_RosterManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_RosterManager_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_RosterManager_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_RosterManager_C");
static_assert(sizeof(UW_PreMission_Tablet_RosterManager_C) == 0x000700, "Wrong size on UW_PreMission_Tablet_RosterManager_C");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, UberGraphFrame) == 0x000420, "Member 'UW_PreMission_Tablet_RosterManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, animCommanderPageChange) == 0x000428, "Member 'UW_PreMission_Tablet_RosterManager_C::animCommanderPageChange' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, BackgroundImage) == 0x000430, "Member 'UW_PreMission_Tablet_RosterManager_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, btn_ChangeTeam) == 0x000438, "Member 'UW_PreMission_Tablet_RosterManager_C::btn_ChangeTeam' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, btn_ClickAway) == 0x000440, "Member 'UW_PreMission_Tablet_RosterManager_C::btn_ClickAway' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, btn_ClosePage) == 0x000448, "Member 'UW_PreMission_Tablet_RosterManager_C::btn_ClosePage' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, btn_ClosePage_1) == 0x000450, "Member 'UW_PreMission_Tablet_RosterManager_C::btn_ClosePage_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, CardWidgetSwitcher) == 0x000458, "Member 'UW_PreMission_Tablet_RosterManager_C::CardWidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, CharacterPreviewCard) == 0x000460, "Member 'UW_PreMission_Tablet_RosterManager_C::CharacterPreviewCard' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Characters) == 0x000468, "Member 'UW_PreMission_Tablet_RosterManager_C::Characters' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, CharactersHorizontalBox) == 0x000470, "Member 'UW_PreMission_Tablet_RosterManager_C::CharactersHorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, EnlistCharacter_1) == 0x000478, "Member 'UW_PreMission_Tablet_RosterManager_C::EnlistCharacter_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, EnlistCharacter_2) == 0x000480, "Member 'UW_PreMission_Tablet_RosterManager_C::EnlistCharacter_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, EnlistCharacter_3) == 0x000488, "Member 'UW_PreMission_Tablet_RosterManager_C::EnlistCharacter_3' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, HB_CharacterDetails) == 0x000490, "Member 'UW_PreMission_Tablet_RosterManager_C::HB_CharacterDetails' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, icn_Close) == 0x000498, "Member 'UW_PreMission_Tablet_RosterManager_C::icn_Close' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, icn_Close_1) == 0x0004A0, "Member 'UW_PreMission_Tablet_RosterManager_C::icn_Close_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Image_92) == 0x0004A8, "Member 'UW_PreMission_Tablet_RosterManager_C::Image_92' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, img_div_header) == 0x0004B0, "Member 'UW_PreMission_Tablet_RosterManager_C::img_div_header' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, img_div_header_1) == 0x0004B8, "Member 'UW_PreMission_Tablet_RosterManager_C::img_div_header_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, PlayerWrapBox) == 0x0004C0, "Member 'UW_PreMission_Tablet_RosterManager_C::PlayerWrapBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, PreviousCharacterCard) == 0x0004C8, "Member 'UW_PreMission_Tablet_RosterManager_C::PreviousCharacterCard' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, RecruitmentHorizontalBox) == 0x0004D0, "Member 'UW_PreMission_Tablet_RosterManager_C::RecruitmentHorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SelectForTherapyText) == 0x0004D8, "Member 'UW_PreMission_Tablet_RosterManager_C::SelectForTherapyText' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SquadMembersHorizontalBox) == 0x0004E0, "Member 'UW_PreMission_Tablet_RosterManager_C::SquadMembersHorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SquadMembersScaleBox) == 0x0004E8, "Member 'UW_PreMission_Tablet_RosterManager_C::SquadMembersScaleBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SubMenu_CharacterDetails) == 0x0004F0, "Member 'UW_PreMission_Tablet_RosterManager_C::SubMenu_CharacterDetails' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SubMenu_CharacterEnlist) == 0x0004F8, "Member 'UW_PreMission_Tablet_RosterManager_C::SubMenu_CharacterEnlist' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SubMenu_CharacterSwap) == 0x000500, "Member 'UW_PreMission_Tablet_RosterManager_C::SubMenu_CharacterSwap' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SubMenu_Roster) == 0x000508, "Member 'UW_PreMission_Tablet_RosterManager_C::SubMenu_Roster' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SubMenu_Therapy) == 0x000510, "Member 'UW_PreMission_Tablet_RosterManager_C::SubMenu_Therapy' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SwapHorizontalBox) == 0x000518, "Member 'UW_PreMission_Tablet_RosterManager_C::SwapHorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, txt_HeaderTitle) == 0x000520, "Member 'UW_PreMission_Tablet_RosterManager_C::txt_HeaderTitle' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, txt_HeaderTitle_1) == 0x000528, "Member 'UW_PreMission_Tablet_RosterManager_C::txt_HeaderTitle_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, txt_PlayerCount) == 0x000530, "Member 'UW_PreMission_Tablet_RosterManager_C::txt_PlayerCount' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_CharacterEnlist) == 0x000538, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_CharacterEnlist' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_CharacterRoster) == 0x000540, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_CharacterRoster' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_CharacterSwap) == 0x000548, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_CharacterSwap' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_Commander) == 0x000550, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_Commander' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_Multiplayer) == 0x000558, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_Multiplayer' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, VB_PlayerList) == 0x000560, "Member 'UW_PreMission_Tablet_RosterManager_C::VB_PlayerList' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_Roster_Details) == 0x000568, "Member 'UW_PreMission_Tablet_RosterManager_C::W_Roster_Details' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterPlayer_1) == 0x000570, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterPlayer_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterPlayer_2) == 0x000578, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterPlayer_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterPlayer_3) == 0x000580, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterPlayer_3' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterPlayer_4) == 0x000588, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterPlayer_4' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterPlayer_Card_1) == 0x000590, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterPlayer_Card_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_Card) == 0x000598, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_Card' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_Card_1) == 0x0005A0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_Card_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_Card_2) == 0x0005A8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_Card_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_Card_3) == 0x0005B0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_Card_3' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard) == 0x0005B8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_1) == 0x0005C0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_2) == 0x0005C8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_3) == 0x0005D0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_3' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_4) == 0x0005D8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_4' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_5) == 0x0005E0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_5' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_6) == 0x0005E8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_6' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_7) == 0x0005F0, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_7' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_8) == 0x0005F8, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_8' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelection_MiniCard_9) == 0x000600, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelection_MiniCard_9' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSelf_Card) == 0x000608, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSelf_Card' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSpecialty) == 0x000610, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSpecialty' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSpecialty_1) == 0x000618, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSpecialty_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, W_RosterSpecialty_2) == 0x000620, "Member 'UW_PreMission_Tablet_RosterManager_C::W_RosterSpecialty_2' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, RosterMap) == 0x000628, "Member 'UW_PreMission_Tablet_RosterManager_C::RosterMap' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, CurrentPositionSelection) == 0x000678, "Member 'UW_PreMission_Tablet_RosterManager_C::CurrentPositionSelection' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Swapping) == 0x000679, "Member 'UW_PreMission_Tablet_RosterManager_C::Swapping' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, ActiveMiniCard) == 0x000680, "Member 'UW_PreMission_Tablet_RosterManager_C::ActiveMiniCard' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, SquadRevealDelay) == 0x000688, "Member 'UW_PreMission_Tablet_RosterManager_C::SquadRevealDelay' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, CurrentPlayerMap) == 0x000690, "Member 'UW_PreMission_Tablet_RosterManager_C::CurrentPlayerMap' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, HoveredMiniCard) == 0x0006E0, "Member 'UW_PreMission_Tablet_RosterManager_C::HoveredMiniCard' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, DetailsOpen) == 0x0006E8, "Member 'UW_PreMission_Tablet_RosterManager_C::DetailsOpen' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, PageChanging) == 0x0006E9, "Member 'UW_PreMission_Tablet_RosterManager_C::PageChanging' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, DebugAvailableCharacterSlots) == 0x0006EC, "Member 'UW_PreMission_Tablet_RosterManager_C::DebugAvailableCharacterSlots' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, DebugMaxCharacterSlots) == 0x0006F0, "Member 'UW_PreMission_Tablet_RosterManager_C::DebugMaxCharacterSlots' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, Debug) == 0x0006F4, "Member 'UW_PreMission_Tablet_RosterManager_C::Debug' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, EnlistOpen) == 0x0006F5, "Member 'UW_PreMission_Tablet_RosterManager_C::EnlistOpen' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, MaxCharacterSlots) == 0x0006F8, "Member 'UW_PreMission_Tablet_RosterManager_C::MaxCharacterSlots' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_RosterManager_C, AvailableCharacterSlots) == 0x0006FC, "Member 'UW_PreMission_Tablet_RosterManager_C::AvailableCharacterSlots' has a wrong offset!");

}

