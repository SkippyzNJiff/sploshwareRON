#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WheelIcon_Pip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WheelIcon_Pip.W_WheelIcon_Pip_C
// 0x0018 (0x02D8 - 0x02C0)
class UW_WheelIcon_Pip_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Icon;                                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Sizer;                                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_WheelIcon_Pip(int32 EntryPoint);
	void OnHighlight(bool Selected);
	void OnUnhighlight(bool Unselected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WheelIcon_Pip_C">();
	}
	static class UW_WheelIcon_Pip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WheelIcon_Pip_C>();
	}
};
static_assert(alignof(UW_WheelIcon_Pip_C) == 0x000008, "Wrong alignment on UW_WheelIcon_Pip_C");
static_assert(sizeof(UW_WheelIcon_Pip_C) == 0x0002D8, "Wrong size on UW_WheelIcon_Pip_C");
static_assert(offsetof(UW_WheelIcon_Pip_C, UberGraphFrame) == 0x0002C0, "Member 'UW_WheelIcon_Pip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_WheelIcon_Pip_C, Icon) == 0x0002C8, "Member 'UW_WheelIcon_Pip_C::Icon' has a wrong offset!");
static_assert(offsetof(UW_WheelIcon_Pip_C, Sizer) == 0x0002D0, "Member 'UW_WheelIcon_Pip_C::Sizer' has a wrong offset!");

}

