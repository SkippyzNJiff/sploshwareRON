#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WeaponWheel_ItemStat

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_WeaponWheel_ItemStat.W_WeaponWheel_ItemStat_C
// 0x0760 (0x0A20 - 0x02C0)
class UW_WeaponWheel_ItemStat_C final : public UWeaponWheel_ItemStat_Base
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         Stat_Container;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StandardText_C*                      StatName_Text;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           StatVisual_ProgressBar;                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   StatName;                                          // 0x02E0(0x0018)(Edit, BlueprintVisible)
	double                                        ProgressBarValue;                                  // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxStatValue;                                      // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAnimating;                                      // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeElapsed;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FillSpeed;                                         // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        TargetPercent;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   EasingFunction;                                    // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemLookupTable                       ItemLookupTable;                                   // 0x0330(0x06D0)(Edit, BlueprintVisible, ExposeOnSpawn)
	double                                        WheelSize;                                         // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MaxWheelSize;                                      // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              WidgetSize;                                        // 0x0A10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_WeaponWheel_ItemStat(int32 EntryPoint);
	void Initialize();
	void OnRefresh();
	void OnWheelCreated();
	void PreConstruct(bool IsDesignTime);
	void SetupFontSize();
	void SetupWidgetSize();
	void StartAnimating();
	void StopAnimating();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_WeaponWheel_ItemStat_C">();
	}
	static class UW_WeaponWheel_ItemStat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_WeaponWheel_ItemStat_C>();
	}
};
static_assert(alignof(UW_WeaponWheel_ItemStat_C) == 0x000010, "Wrong alignment on UW_WeaponWheel_ItemStat_C");
static_assert(sizeof(UW_WeaponWheel_ItemStat_C) == 0x000A20, "Wrong size on UW_WeaponWheel_ItemStat_C");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, UberGraphFrame) == 0x0002C0, "Member 'UW_WeaponWheel_ItemStat_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, Stat_Container) == 0x0002C8, "Member 'UW_WeaponWheel_ItemStat_C::Stat_Container' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, StatName_Text) == 0x0002D0, "Member 'UW_WeaponWheel_ItemStat_C::StatName_Text' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, StatVisual_ProgressBar) == 0x0002D8, "Member 'UW_WeaponWheel_ItemStat_C::StatVisual_ProgressBar' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, StatName) == 0x0002E0, "Member 'UW_WeaponWheel_ItemStat_C::StatName' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, ProgressBarValue) == 0x0002F8, "Member 'UW_WeaponWheel_ItemStat_C::ProgressBarValue' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, MaxStatValue) == 0x000300, "Member 'UW_WeaponWheel_ItemStat_C::MaxStatValue' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, bIsAnimating) == 0x000308, "Member 'UW_WeaponWheel_ItemStat_C::bIsAnimating' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, TimeElapsed) == 0x000310, "Member 'UW_WeaponWheel_ItemStat_C::TimeElapsed' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, FillSpeed) == 0x000318, "Member 'UW_WeaponWheel_ItemStat_C::FillSpeed' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, TargetPercent) == 0x000320, "Member 'UW_WeaponWheel_ItemStat_C::TargetPercent' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, EasingFunction) == 0x000328, "Member 'UW_WeaponWheel_ItemStat_C::EasingFunction' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, ItemLookupTable) == 0x000330, "Member 'UW_WeaponWheel_ItemStat_C::ItemLookupTable' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, WheelSize) == 0x000A00, "Member 'UW_WeaponWheel_ItemStat_C::WheelSize' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, MaxWheelSize) == 0x000A08, "Member 'UW_WeaponWheel_ItemStat_C::MaxWheelSize' has a wrong offset!");
static_assert(offsetof(UW_WeaponWheel_ItemStat_C, WidgetSize) == 0x000A10, "Member 'UW_WeaponWheel_ItemStat_C::WidgetSize' has a wrong offset!");

}

