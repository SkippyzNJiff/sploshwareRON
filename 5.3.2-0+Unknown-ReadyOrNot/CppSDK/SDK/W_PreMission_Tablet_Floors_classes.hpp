#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Floors

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet_Floors.W_PreMission_Tablet_Floors_C
// 0x0190 (0x0450 - 0x02C0)
class UW_PreMission_Tablet_Floors_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animReveal;                                        // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animShowInfo;                                      // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            btn_DnFloor;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_DnFloor_Gamepad;                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_UpFloor;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_UpFloor_Gamepad;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                FloorNavigation;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                FloorNavigationGamepad;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_EntryPoints;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 icn_Down;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 icn_Down_1;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 icn_EntryPoint;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 icn_Up;                                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 icn_Up_1;                                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_EntryPoints;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_FloorName;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_FloorNumber;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_FloorNumber_Gamepad;                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        InfoFadeDelay;                                     // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InfoVisible;                                       // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnFloorUp;                                         // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnFloorDown;                                       // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   TestFloorName;                                     // 0x0388(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TestFloorLevel;                                    // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLevelFloor                            FloorData;                                         // 0x03A8(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 CurrentMissionURL;                                 // 0x0410(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         TotalFloorCount;                                   // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLevelFloor>                    Floors;                                            // 0x0428(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentFloorIndex;                                 // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PreMission_PlanningMap_C*            W_Pre_Mission_Planning_Map;                        // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentFloorNumber;                                // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hidden;                                            // 0x044C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsingGamepad;                                    // 0x044D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BackPage(bool* Handled);
	void BndEvt__W_PreMission_Tablet_Floors_btn_DnFloor_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_PreMission_Tablet_Floors_btn_UpFloor_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_PreMission_Tablet_Floors_Button_0_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void ChangePage(class FName PageName);
	void Construct();
	void DecrementFloor();
	void ExecuteUbergraph_W_PreMission_Tablet_Floors(int32 EntryPoint);
	void Hide(double Delay, bool Collapse);
	void HideFloorInfo();
	void IncrementFloor();
	void InputChanged(ECommonInputType bNewInputType);
	struct FEventReply NavigateFloors(const struct FKey& Key);
	void Reveal(double Delay);
	void SetInputMode(bool IsGamepad);
	void ShowFloorInfo(double Delay);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateFloorInfo(const class FString& MissionURL, const struct FLevelFloor& FloorData_0);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_Floors_C">();
	}
	static class UW_PreMission_Tablet_Floors_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_Floors_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_Floors_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_Floors_C");
static_assert(sizeof(UW_PreMission_Tablet_Floors_C) == 0x000450, "Wrong size on UW_PreMission_Tablet_Floors_C");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, UberGraphFrame) == 0x0002C0, "Member 'UW_PreMission_Tablet_Floors_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, animReveal) == 0x0002C8, "Member 'UW_PreMission_Tablet_Floors_C::animReveal' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, animShowInfo) == 0x0002D0, "Member 'UW_PreMission_Tablet_Floors_C::animShowInfo' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, btn_DnFloor) == 0x0002D8, "Member 'UW_PreMission_Tablet_Floors_C::btn_DnFloor' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, btn_DnFloor_Gamepad) == 0x0002E0, "Member 'UW_PreMission_Tablet_Floors_C::btn_DnFloor_Gamepad' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, btn_UpFloor) == 0x0002E8, "Member 'UW_PreMission_Tablet_Floors_C::btn_UpFloor' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, btn_UpFloor_Gamepad) == 0x0002F0, "Member 'UW_PreMission_Tablet_Floors_C::btn_UpFloor_Gamepad' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, FloorNavigation) == 0x0002F8, "Member 'UW_PreMission_Tablet_Floors_C::FloorNavigation' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, FloorNavigationGamepad) == 0x000300, "Member 'UW_PreMission_Tablet_Floors_C::FloorNavigationGamepad' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, HB_EntryPoints) == 0x000308, "Member 'UW_PreMission_Tablet_Floors_C::HB_EntryPoints' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, icn_Down) == 0x000310, "Member 'UW_PreMission_Tablet_Floors_C::icn_Down' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, icn_Down_1) == 0x000318, "Member 'UW_PreMission_Tablet_Floors_C::icn_Down_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, icn_EntryPoint) == 0x000320, "Member 'UW_PreMission_Tablet_Floors_C::icn_EntryPoint' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, icn_Up) == 0x000328, "Member 'UW_PreMission_Tablet_Floors_C::icn_Up' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, icn_Up_1) == 0x000330, "Member 'UW_PreMission_Tablet_Floors_C::icn_Up_1' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, txt_EntryPoints) == 0x000338, "Member 'UW_PreMission_Tablet_Floors_C::txt_EntryPoints' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, txt_FloorName) == 0x000340, "Member 'UW_PreMission_Tablet_Floors_C::txt_FloorName' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, txt_FloorNumber) == 0x000348, "Member 'UW_PreMission_Tablet_Floors_C::txt_FloorNumber' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, txt_FloorNumber_Gamepad) == 0x000350, "Member 'UW_PreMission_Tablet_Floors_C::txt_FloorNumber_Gamepad' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, InfoFadeDelay) == 0x000358, "Member 'UW_PreMission_Tablet_Floors_C::InfoFadeDelay' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, InfoVisible) == 0x000360, "Member 'UW_PreMission_Tablet_Floors_C::InfoVisible' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, OnFloorUp) == 0x000368, "Member 'UW_PreMission_Tablet_Floors_C::OnFloorUp' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, OnFloorDown) == 0x000378, "Member 'UW_PreMission_Tablet_Floors_C::OnFloorDown' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, TestFloorName) == 0x000388, "Member 'UW_PreMission_Tablet_Floors_C::TestFloorName' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, TestFloorLevel) == 0x0003A0, "Member 'UW_PreMission_Tablet_Floors_C::TestFloorLevel' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, FloorData) == 0x0003A8, "Member 'UW_PreMission_Tablet_Floors_C::FloorData' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, CurrentMissionURL) == 0x000410, "Member 'UW_PreMission_Tablet_Floors_C::CurrentMissionURL' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, TotalFloorCount) == 0x000420, "Member 'UW_PreMission_Tablet_Floors_C::TotalFloorCount' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Floors) == 0x000428, "Member 'UW_PreMission_Tablet_Floors_C::Floors' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, CurrentFloorIndex) == 0x000438, "Member 'UW_PreMission_Tablet_Floors_C::CurrentFloorIndex' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, W_Pre_Mission_Planning_Map) == 0x000440, "Member 'UW_PreMission_Tablet_Floors_C::W_Pre_Mission_Planning_Map' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, CurrentFloorNumber) == 0x000448, "Member 'UW_PreMission_Tablet_Floors_C::CurrentFloorNumber' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, Hidden) == 0x00044C, "Member 'UW_PreMission_Tablet_Floors_C::Hidden' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Floors_C, IsUsingGamepad) == 0x00044D, "Member 'UW_PreMission_Tablet_Floors_C::IsUsingGamepad' has a wrong offset!");

}

