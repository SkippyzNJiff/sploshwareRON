#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModioUICore

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Modio_structs.hpp"
#include "ModioUICore_structs.hpp"


namespace SDK::Params
{

// Function ModioUICore.ModioModTagSelectorEntry.OnTagEntryClicked
// 0x0008 (0x0008 - 0x0000)
struct ModioModTagSelectorEntry_OnTagEntryClicked final
{
public:
	class UObject*                                ClickedObject;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelectorEntry_OnTagEntryClicked) == 0x000008, "Wrong alignment on ModioModTagSelectorEntry_OnTagEntryClicked");
static_assert(sizeof(ModioModTagSelectorEntry_OnTagEntryClicked) == 0x000008, "Wrong size on ModioModTagSelectorEntry_OnTagEntryClicked");
static_assert(offsetof(ModioModTagSelectorEntry_OnTagEntryClicked, ClickedObject) == 0x000000, "Member 'ModioModTagSelectorEntry_OnTagEntryClicked::ClickedObject' has a wrong offset!");

// Function ModioUICore.ModioModTagSelectorEntry.GetClickableWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagSelectorEntry_GetClickableWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelectorEntry_GetClickableWidget) == 0x000008, "Wrong alignment on ModioModTagSelectorEntry_GetClickableWidget");
static_assert(sizeof(ModioModTagSelectorEntry_GetClickableWidget) == 0x000010, "Wrong size on ModioModTagSelectorEntry_GetClickableWidget");
static_assert(offsetof(ModioModTagSelectorEntry_GetClickableWidget, ReturnValue) == 0x000000, "Member 'ModioModTagSelectorEntry_GetClickableWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagSelectorEntry.GetSelectionWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagSelectorEntry_GetSelectionWidget final
{
public:
	TScriptInterface<class IModioUISelectableWidget> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelectorEntry_GetSelectionWidget) == 0x000008, "Wrong alignment on ModioModTagSelectorEntry_GetSelectionWidget");
static_assert(sizeof(ModioModTagSelectorEntry_GetSelectionWidget) == 0x000010, "Wrong size on ModioModTagSelectorEntry_GetSelectionWidget");
static_assert(offsetof(ModioModTagSelectorEntry_GetSelectionWidget, ReturnValue) == 0x000000, "Member 'ModioModTagSelectorEntry_GetSelectionWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagSelectorEntry.GetTagLabelWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagSelectorEntry_GetTagLabelWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelectorEntry_GetTagLabelWidget) == 0x000008, "Wrong alignment on ModioModTagSelectorEntry_GetTagLabelWidget");
static_assert(sizeof(ModioModTagSelectorEntry_GetTagLabelWidget) == 0x000010, "Wrong size on ModioModTagSelectorEntry_GetTagLabelWidget");
static_assert(offsetof(ModioModTagSelectorEntry_GetTagLabelWidget, ReturnValue) == 0x000000, "Member 'ModioModTagSelectorEntry_GetTagLabelWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioActivatableWidget.AddActivationChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioActivatableWidget_AddActivationChangedHandler final
{
public:
	TDelegate<void(class UObject* ActivationContext, bool bIsActivated)> Handler;                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioActivatableWidget_AddActivationChangedHandler) == 0x000004, "Wrong alignment on ModioActivatableWidget_AddActivationChangedHandler");
static_assert(sizeof(ModioActivatableWidget_AddActivationChangedHandler) == 0x000010, "Wrong size on ModioActivatableWidget_AddActivationChangedHandler");
static_assert(offsetof(ModioActivatableWidget_AddActivationChangedHandler, Handler) == 0x000000, "Member 'ModioActivatableWidget_AddActivationChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioActivatableWidget.RemoveActivationChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioActivatableWidget_RemoveActivationChangedHandler final
{
public:
	TDelegate<void(class UObject* ActivationContext, bool bIsActivated)> Handler;                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioActivatableWidget_RemoveActivationChangedHandler) == 0x000004, "Wrong alignment on ModioActivatableWidget_RemoveActivationChangedHandler");
static_assert(sizeof(ModioActivatableWidget_RemoveActivationChangedHandler) == 0x000010, "Wrong size on ModioActivatableWidget_RemoveActivationChangedHandler");
static_assert(offsetof(ModioActivatableWidget_RemoveActivationChangedHandler, Handler) == 0x000000, "Member 'ModioActivatableWidget_RemoveActivationChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioEnumEntryUIDetails.GetEnumEntryDetails
// 0x0020 (0x0020 - 0x0000)
struct ModioEnumEntryUIDetails_GetEnumEntryDetails final
{
public:
	uint8                                         EnumValue;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   EnumValueDisplayText;                              // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumEntryUIDetails_GetEnumEntryDetails) == 0x000008, "Wrong alignment on ModioEnumEntryUIDetails_GetEnumEntryDetails");
static_assert(sizeof(ModioEnumEntryUIDetails_GetEnumEntryDetails) == 0x000020, "Wrong size on ModioEnumEntryUIDetails_GetEnumEntryDetails");
static_assert(offsetof(ModioEnumEntryUIDetails_GetEnumEntryDetails, EnumValue) == 0x000000, "Member 'ModioEnumEntryUIDetails_GetEnumEntryDetails::EnumValue' has a wrong offset!");
static_assert(offsetof(ModioEnumEntryUIDetails_GetEnumEntryDetails, EnumValueDisplayText) == 0x000008, "Member 'ModioEnumEntryUIDetails_GetEnumEntryDetails::EnumValueDisplayText' has a wrong offset!");

// Function ModioUICore.ModioRetryLibrary.CanRetry
// 0x0008 (0x0008 - 0x0000)
struct ModioRetryLibrary_CanRetry final
{
public:
	struct FModioRetryCounter                     Target;                                            // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioRetryLibrary_CanRetry) == 0x000004, "Wrong alignment on ModioRetryLibrary_CanRetry");
static_assert(sizeof(ModioRetryLibrary_CanRetry) == 0x000008, "Wrong size on ModioRetryLibrary_CanRetry");
static_assert(offsetof(ModioRetryLibrary_CanRetry, Target) == 0x000000, "Member 'ModioRetryLibrary_CanRetry::Target' has a wrong offset!");
static_assert(offsetof(ModioRetryLibrary_CanRetry, ReturnValue) == 0x000004, "Member 'ModioRetryLibrary_CanRetry::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioRetryLibrary.CanRetryAsExec
// 0x0008 (0x0008 - 0x0000)
struct ModioRetryLibrary_CanRetryAsExec final
{
public:
	struct FModioRetryCounter                     Target;                                            // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioRetryLibrary_CanRetryAsExec) == 0x000004, "Wrong alignment on ModioRetryLibrary_CanRetryAsExec");
static_assert(sizeof(ModioRetryLibrary_CanRetryAsExec) == 0x000008, "Wrong size on ModioRetryLibrary_CanRetryAsExec");
static_assert(offsetof(ModioRetryLibrary_CanRetryAsExec, Target) == 0x000000, "Member 'ModioRetryLibrary_CanRetryAsExec::Target' has a wrong offset!");
static_assert(offsetof(ModioRetryLibrary_CanRetryAsExec, ReturnValue) == 0x000004, "Member 'ModioRetryLibrary_CanRetryAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioRetryLibrary.ResetRetryCount
// 0x0004 (0x0004 - 0x0000)
struct ModioRetryLibrary_ResetRetryCount final
{
public:
	struct FModioRetryCounter                     Target;                                            // 0x0000(0x0004)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioRetryLibrary_ResetRetryCount) == 0x000004, "Wrong alignment on ModioRetryLibrary_ResetRetryCount");
static_assert(sizeof(ModioRetryLibrary_ResetRetryCount) == 0x000004, "Wrong size on ModioRetryLibrary_ResetRetryCount");
static_assert(offsetof(ModioRetryLibrary_ResetRetryCount, Target) == 0x000000, "Member 'ModioRetryLibrary_ResetRetryCount::Target' has a wrong offset!");

// Function ModioUICore.ModioRetryLibrary.ResetRetryCountPure
// 0x0008 (0x0008 - 0x0000)
struct ModioRetryLibrary_ResetRetryCountPure final
{
public:
	struct FModioRetryCounter                     Target;                                            // 0x0000(0x0004)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioRetryCounter                     ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioRetryLibrary_ResetRetryCountPure) == 0x000004, "Wrong alignment on ModioRetryLibrary_ResetRetryCountPure");
static_assert(sizeof(ModioRetryLibrary_ResetRetryCountPure) == 0x000008, "Wrong size on ModioRetryLibrary_ResetRetryCountPure");
static_assert(offsetof(ModioRetryLibrary_ResetRetryCountPure, Target) == 0x000000, "Member 'ModioRetryLibrary_ResetRetryCountPure::Target' has a wrong offset!");
static_assert(offsetof(ModioRetryLibrary_ResetRetryCountPure, ReturnValue) == 0x000004, "Member 'ModioRetryLibrary_ResetRetryCountPure::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioRetryLibrary.Retry
// 0x0008 (0x0008 - 0x0000)
struct ModioRetryLibrary_Retry final
{
public:
	struct FModioRetryCounter                     Target;                                            // 0x0000(0x0004)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioRetryLibrary_Retry) == 0x000004, "Wrong alignment on ModioRetryLibrary_Retry");
static_assert(sizeof(ModioRetryLibrary_Retry) == 0x000008, "Wrong size on ModioRetryLibrary_Retry");
static_assert(offsetof(ModioRetryLibrary_Retry, Target) == 0x000000, "Member 'ModioRetryLibrary_Retry::Target' has a wrong offset!");
static_assert(offsetof(ModioRetryLibrary_Retry, ReturnValue) == 0x000004, "Member 'ModioRetryLibrary_Retry::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioFocusableWidget.AddFocusPathChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioFocusableWidget_AddFocusPathChangedHandler final
{
public:
	TDelegate<void(class UObject* FocusContext, const struct FFocusEvent& InFocusEvent, bool bIsFocused)> Handler; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFocusableWidget_AddFocusPathChangedHandler) == 0x000004, "Wrong alignment on ModioFocusableWidget_AddFocusPathChangedHandler");
static_assert(sizeof(ModioFocusableWidget_AddFocusPathChangedHandler) == 0x000010, "Wrong size on ModioFocusableWidget_AddFocusPathChangedHandler");
static_assert(offsetof(ModioFocusableWidget_AddFocusPathChangedHandler, Handler) == 0x000000, "Member 'ModioFocusableWidget_AddFocusPathChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioFocusableWidget.RemoveFocusPathChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioFocusableWidget_RemoveFocusPathChangedHandler final
{
public:
	TDelegate<void(class UObject* FocusContext, const struct FFocusEvent& InFocusEvent, bool bIsFocused)> Handler; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFocusableWidget_RemoveFocusPathChangedHandler) == 0x000004, "Wrong alignment on ModioFocusableWidget_RemoveFocusPathChangedHandler");
static_assert(sizeof(ModioFocusableWidget_RemoveFocusPathChangedHandler) == 0x000010, "Wrong size on ModioFocusableWidget_RemoveFocusPathChangedHandler");
static_assert(offsetof(ModioFocusableWidget_RemoveFocusPathChangedHandler, Handler) == 0x000000, "Member 'ModioFocusableWidget_RemoveFocusPathChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioFocusableWidget.GetWidgetToFocus
// 0x0010 (0x0010 - 0x0000)
struct ModioFocusableWidget_GetWidgetToFocus final
{
public:
	EUINavigation                                 NavigationType;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFocusableWidget_GetWidgetToFocus) == 0x000008, "Wrong alignment on ModioFocusableWidget_GetWidgetToFocus");
static_assert(sizeof(ModioFocusableWidget_GetWidgetToFocus) == 0x000010, "Wrong size on ModioFocusableWidget_GetWidgetToFocus");
static_assert(offsetof(ModioFocusableWidget_GetWidgetToFocus, NavigationType) == 0x000000, "Member 'ModioFocusableWidget_GetWidgetToFocus::NavigationType' has a wrong offset!");
static_assert(offsetof(ModioFocusableWidget_GetWidgetToFocus, ReturnValue) == 0x000008, "Member 'ModioFocusableWidget_GetWidgetToFocus::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioGalleryImageUIDetails.GetImage
// 0x0010 (0x0010 - 0x0000)
struct ModioGalleryImageUIDetails_GetImage final
{
public:
	struct FModioImageWrapper                     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioGalleryImageUIDetails_GetImage) == 0x000008, "Wrong alignment on ModioGalleryImageUIDetails_GetImage");
static_assert(sizeof(ModioGalleryImageUIDetails_GetImage) == 0x000010, "Wrong size on ModioGalleryImageUIDetails_GetImage");
static_assert(offsetof(ModioGalleryImageUIDetails_GetImage, ReturnValue) == 0x000000, "Member 'ModioGalleryImageUIDetails_GetImage::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioGalleryImageUIDetails.GetIndex
// 0x0004 (0x0004 - 0x0000)
struct ModioGalleryImageUIDetails_GetIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioGalleryImageUIDetails_GetIndex) == 0x000004, "Wrong alignment on ModioGalleryImageUIDetails_GetIndex");
static_assert(sizeof(ModioGalleryImageUIDetails_GetIndex) == 0x000004, "Wrong size on ModioGalleryImageUIDetails_GetIndex");
static_assert(offsetof(ModioGalleryImageUIDetails_GetIndex, ReturnValue) == 0x000000, "Member 'ModioGalleryImageUIDetails_GetIndex::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDependencyUIDetails.GetModDependency
// 0x00F8 (0x00F8 - 0x0000)
struct ModioModDependencyUIDetails_GetModDependency final
{
public:
	struct FModioModDependency                    ReturnValue;                                       // 0x0000(0x00F8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDependencyUIDetails_GetModDependency) == 0x000008, "Wrong alignment on ModioModDependencyUIDetails_GetModDependency");
static_assert(sizeof(ModioModDependencyUIDetails_GetModDependency) == 0x0000F8, "Wrong size on ModioModDependencyUIDetails_GetModDependency");
static_assert(offsetof(ModioModDependencyUIDetails_GetModDependency, ReturnValue) == 0x000000, "Member 'ModioModDependencyUIDetails_GetModDependency::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDependencyUIDetails.GetModID
// 0x0008 (0x0008 - 0x0000)
struct ModioModDependencyUIDetails_GetModID final
{
public:
	struct FModioModID                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDependencyUIDetails_GetModID) == 0x000008, "Wrong alignment on ModioModDependencyUIDetails_GetModID");
static_assert(sizeof(ModioModDependencyUIDetails_GetModID) == 0x000008, "Wrong size on ModioModDependencyUIDetails_GetModID");
static_assert(offsetof(ModioModDependencyUIDetails_GetModID, ReturnValue) == 0x000000, "Member 'ModioModDependencyUIDetails_GetModID::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModFilterUIDetails.GetFilterName
// 0x0020 (0x0020 - 0x0000)
struct ModioModFilterUIDetails_GetFilterName final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModFilterUIDetails_GetFilterName) == 0x000008, "Wrong alignment on ModioModFilterUIDetails_GetFilterName");
static_assert(sizeof(ModioModFilterUIDetails_GetFilterName) == 0x000020, "Wrong size on ModioModFilterUIDetails_GetFilterName");
static_assert(offsetof(ModioModFilterUIDetails_GetFilterName, Name_0) == 0x000000, "Member 'ModioModFilterUIDetails_GetFilterName::Name_0' has a wrong offset!");
static_assert(offsetof(ModioModFilterUIDetails_GetFilterName, ReturnValue) == 0x000018, "Member 'ModioModFilterUIDetails_GetFilterName::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModFilterUIDetails.GetFilterParams
// 0x00B8 (0x00B8 - 0x0000)
struct ModioModFilterUIDetails_GetFilterParams final
{
public:
	struct FModioFilterParams                     ReturnValue;                                       // 0x0000(0x00B8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModFilterUIDetails_GetFilterParams) == 0x000008, "Wrong alignment on ModioModFilterUIDetails_GetFilterParams");
static_assert(sizeof(ModioModFilterUIDetails_GetFilterParams) == 0x0000B8, "Wrong size on ModioModFilterUIDetails_GetFilterParams");
static_assert(offsetof(ModioModFilterUIDetails_GetFilterParams, ReturnValue) == 0x000000, "Member 'ModioModFilterUIDetails_GetFilterParams::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagSelector.GetMenuToggleClickableWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagSelector_GetMenuToggleClickableWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelector_GetMenuToggleClickableWidget) == 0x000008, "Wrong alignment on ModioModTagSelector_GetMenuToggleClickableWidget");
static_assert(sizeof(ModioModTagSelector_GetMenuToggleClickableWidget) == 0x000010, "Wrong size on ModioModTagSelector_GetMenuToggleClickableWidget");
static_assert(offsetof(ModioModTagSelector_GetMenuToggleClickableWidget, ReturnValue) == 0x000000, "Member 'ModioModTagSelector_GetMenuToggleClickableWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagSelector.GetSelectorMenuWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagSelector_GetSelectorMenuWidget final
{
public:
	TScriptInterface<class IModioUIModTagSelector> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelector_GetSelectorMenuWidget) == 0x000008, "Wrong alignment on ModioModTagSelector_GetSelectorMenuWidget");
static_assert(sizeof(ModioModTagSelector_GetSelectorMenuWidget) == 0x000010, "Wrong size on ModioModTagSelector_GetSelectorMenuWidget");
static_assert(offsetof(ModioModTagSelector_GetSelectorMenuWidget, ReturnValue) == 0x000000, "Member 'ModioModTagSelector_GetSelectorMenuWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModInfoUIDetails.GetFullModInfo
// 0x01E8 (0x01E8 - 0x0000)
struct ModioModInfoUIDetails_GetFullModInfo final
{
public:
	struct FModioModInfo                          ReturnValue;                                       // 0x0000(0x01E8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModInfoUIDetails_GetFullModInfo) == 0x000008, "Wrong alignment on ModioModInfoUIDetails_GetFullModInfo");
static_assert(sizeof(ModioModInfoUIDetails_GetFullModInfo) == 0x0001E8, "Wrong size on ModioModInfoUIDetails_GetFullModInfo");
static_assert(offsetof(ModioModInfoUIDetails_GetFullModInfo, ReturnValue) == 0x000000, "Member 'ModioModInfoUIDetails_GetFullModInfo::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModInfoUIDetails.GetModID
// 0x0008 (0x0008 - 0x0000)
struct ModioModInfoUIDetails_GetModID final
{
public:
	struct FModioModID                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModInfoUIDetails_GetModID) == 0x000008, "Wrong alignment on ModioModInfoUIDetails_GetModID");
static_assert(sizeof(ModioModInfoUIDetails_GetModID) == 0x000008, "Wrong size on ModioModInfoUIDetails_GetModID");
static_assert(offsetof(ModioModInfoUIDetails_GetModID, ReturnValue) == 0x000000, "Member 'ModioModInfoUIDetails_GetModID::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagUIDetails.GetLocalizedText
// 0x0018 (0x0018 - 0x0000)
struct ModioModTagUIDetails_GetLocalizedText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagUIDetails_GetLocalizedText) == 0x000008, "Wrong alignment on ModioModTagUIDetails_GetLocalizedText");
static_assert(sizeof(ModioModTagUIDetails_GetLocalizedText) == 0x000018, "Wrong size on ModioModTagUIDetails_GetLocalizedText");
static_assert(offsetof(ModioModTagUIDetails_GetLocalizedText, ReturnValue) == 0x000000, "Member 'ModioModTagUIDetails_GetLocalizedText::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagUIDetails.GetRawStringValue
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagUIDetails_GetRawStringValue final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagUIDetails_GetRawStringValue) == 0x000008, "Wrong alignment on ModioModTagUIDetails_GetRawStringValue");
static_assert(sizeof(ModioModTagUIDetails_GetRawStringValue) == 0x000010, "Wrong size on ModioModTagUIDetails_GetRawStringValue");
static_assert(offsetof(ModioModTagUIDetails_GetRawStringValue, ReturnValue) == 0x000000, "Member 'ModioModTagUIDetails_GetRawStringValue::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagUIDetails.GetSelectionState
// 0x0001 (0x0001 - 0x0000)
struct ModioModTagUIDetails_GetSelectionState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagUIDetails_GetSelectionState) == 0x000001, "Wrong alignment on ModioModTagUIDetails_GetSelectionState");
static_assert(sizeof(ModioModTagUIDetails_GetSelectionState) == 0x000001, "Wrong size on ModioModTagUIDetails_GetSelectionState");
static_assert(offsetof(ModioModTagUIDetails_GetSelectionState, ReturnValue) == 0x000000, "Member 'ModioModTagUIDetails_GetSelectionState::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagUIDetails.SetSelectionState
// 0x0001 (0x0001 - 0x0000)
struct ModioModTagUIDetails_SetSelectionState final
{
public:
	bool                                          bNewSelectionState;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagUIDetails_SetSelectionState) == 0x000001, "Wrong alignment on ModioModTagUIDetails_SetSelectionState");
static_assert(sizeof(ModioModTagUIDetails_SetSelectionState) == 0x000001, "Wrong size on ModioModTagUIDetails_SetSelectionState");
static_assert(offsetof(ModioModTagUIDetails_SetSelectionState, bNewSelectionState) == 0x000000, "Member 'ModioModTagUIDetails_SetSelectionState::bNewSelectionState' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ApplyClassPathOverride
// 0x0068 (0x0068 - 0x0000)
struct PropertyOverridesLibrary_ApplyClassPathOverride final
{
public:
	struct FClassPathOverride                     Target;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         DefaultValue;                                      // 0x0028(0x0020)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                         ReturnValue;                                       // 0x0048(0x0020)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ApplyClassPathOverride) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ApplyClassPathOverride");
static_assert(sizeof(PropertyOverridesLibrary_ApplyClassPathOverride) == 0x000068, "Wrong size on PropertyOverridesLibrary_ApplyClassPathOverride");
static_assert(offsetof(PropertyOverridesLibrary_ApplyClassPathOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ApplyClassPathOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyClassPathOverride, DefaultValue) == 0x000028, "Member 'PropertyOverridesLibrary_ApplyClassPathOverride::DefaultValue' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyClassPathOverride, ReturnValue) == 0x000048, "Member 'PropertyOverridesLibrary_ApplyClassPathOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ApplyClassPathOverride_Casted
// 0x0040 (0x0040 - 0x0000)
struct PropertyOverridesLibrary_ApplyClassPathOverride_Casted final
{
public:
	struct FClassPathOverride                     Target;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSubclassOf<class UObject>                    BaseClass;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 DefaultValue;                                      // 0x0030(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ApplyClassPathOverride_Casted) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ApplyClassPathOverride_Casted");
static_assert(sizeof(PropertyOverridesLibrary_ApplyClassPathOverride_Casted) == 0x000040, "Wrong size on PropertyOverridesLibrary_ApplyClassPathOverride_Casted");
static_assert(offsetof(PropertyOverridesLibrary_ApplyClassPathOverride_Casted, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ApplyClassPathOverride_Casted::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyClassPathOverride_Casted, BaseClass) == 0x000028, "Member 'PropertyOverridesLibrary_ApplyClassPathOverride_Casted::BaseClass' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyClassPathOverride_Casted, DefaultValue) == 0x000030, "Member 'PropertyOverridesLibrary_ApplyClassPathOverride_Casted::DefaultValue' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyClassPathOverride_Casted, ReturnValue) == 0x000038, "Member 'PropertyOverridesLibrary_ApplyClassPathOverride_Casted::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ApplyFloatOverride
// 0x0010 (0x0010 - 0x0000)
struct PropertyOverridesLibrary_ApplyFloatOverride final
{
public:
	struct FFloatOverride                         Target;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         DefaultValue;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ApplyFloatOverride) == 0x000004, "Wrong alignment on PropertyOverridesLibrary_ApplyFloatOverride");
static_assert(sizeof(PropertyOverridesLibrary_ApplyFloatOverride) == 0x000010, "Wrong size on PropertyOverridesLibrary_ApplyFloatOverride");
static_assert(offsetof(PropertyOverridesLibrary_ApplyFloatOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ApplyFloatOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyFloatOverride, DefaultValue) == 0x000008, "Member 'PropertyOverridesLibrary_ApplyFloatOverride::DefaultValue' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyFloatOverride, ReturnValue) == 0x00000C, "Member 'PropertyOverridesLibrary_ApplyFloatOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ApplyFontInfoOverride
// 0x0110 (0x0110 - 0x0000)
struct PropertyOverridesLibrary_ApplyFontInfoOverride final
{
public:
	struct FSlateFontInfoOverride                 Target;                                            // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                         DefaultValue;                                      // 0x0060(0x0058)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                         ReturnValue;                                       // 0x00B8(0x0058)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ApplyFontInfoOverride) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ApplyFontInfoOverride");
static_assert(sizeof(PropertyOverridesLibrary_ApplyFontInfoOverride) == 0x000110, "Wrong size on PropertyOverridesLibrary_ApplyFontInfoOverride");
static_assert(offsetof(PropertyOverridesLibrary_ApplyFontInfoOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ApplyFontInfoOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyFontInfoOverride, DefaultValue) == 0x000060, "Member 'PropertyOverridesLibrary_ApplyFontInfoOverride::DefaultValue' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyFontInfoOverride, ReturnValue) == 0x0000B8, "Member 'PropertyOverridesLibrary_ApplyFontInfoOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ApplyHAlignOverride
// 0x0004 (0x0004 - 0x0000)
struct PropertyOverridesLibrary_ApplyHAlignOverride final
{
public:
	struct FHAlignOverride                        Target;                                            // 0x0000(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          DefaultValue;                                      // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ApplyHAlignOverride) == 0x000001, "Wrong alignment on PropertyOverridesLibrary_ApplyHAlignOverride");
static_assert(sizeof(PropertyOverridesLibrary_ApplyHAlignOverride) == 0x000004, "Wrong size on PropertyOverridesLibrary_ApplyHAlignOverride");
static_assert(offsetof(PropertyOverridesLibrary_ApplyHAlignOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ApplyHAlignOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyHAlignOverride, DefaultValue) == 0x000002, "Member 'PropertyOverridesLibrary_ApplyHAlignOverride::DefaultValue' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyHAlignOverride, ReturnValue) == 0x000003, "Member 'PropertyOverridesLibrary_ApplyHAlignOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ApplyInputActionOverride
// 0x0038 (0x0038 - 0x0000)
struct PropertyOverridesLibrary_ApplyInputActionOverride final
{
public:
	struct FInputActionOverride                   Target;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    DefaultValue;                                      // 0x0018(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ApplyInputActionOverride) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ApplyInputActionOverride");
static_assert(sizeof(PropertyOverridesLibrary_ApplyInputActionOverride) == 0x000038, "Wrong size on PropertyOverridesLibrary_ApplyInputActionOverride");
static_assert(offsetof(PropertyOverridesLibrary_ApplyInputActionOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ApplyInputActionOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyInputActionOverride, DefaultValue) == 0x000018, "Member 'PropertyOverridesLibrary_ApplyInputActionOverride::DefaultValue' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyInputActionOverride, ReturnValue) == 0x000028, "Member 'PropertyOverridesLibrary_ApplyInputActionOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ApplyIntOverride
// 0x0010 (0x0010 - 0x0000)
struct PropertyOverridesLibrary_ApplyIntOverride final
{
public:
	struct FIntegerOverride                       Target;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         DefaultValue;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ApplyIntOverride) == 0x000004, "Wrong alignment on PropertyOverridesLibrary_ApplyIntOverride");
static_assert(sizeof(PropertyOverridesLibrary_ApplyIntOverride) == 0x000010, "Wrong size on PropertyOverridesLibrary_ApplyIntOverride");
static_assert(offsetof(PropertyOverridesLibrary_ApplyIntOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ApplyIntOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyIntOverride, DefaultValue) == 0x000008, "Member 'PropertyOverridesLibrary_ApplyIntOverride::DefaultValue' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyIntOverride, ReturnValue) == 0x00000C, "Member 'PropertyOverridesLibrary_ApplyIntOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ApplyTextOverride
// 0x0050 (0x0050 - 0x0000)
struct PropertyOverridesLibrary_ApplyTextOverride final
{
public:
	struct FTextOverride                          Target;                                            // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   DefaultValue;                                      // 0x0020(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0038(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ApplyTextOverride) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ApplyTextOverride");
static_assert(sizeof(PropertyOverridesLibrary_ApplyTextOverride) == 0x000050, "Wrong size on PropertyOverridesLibrary_ApplyTextOverride");
static_assert(offsetof(PropertyOverridesLibrary_ApplyTextOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ApplyTextOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyTextOverride, DefaultValue) == 0x000020, "Member 'PropertyOverridesLibrary_ApplyTextOverride::DefaultValue' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyTextOverride, ReturnValue) == 0x000038, "Member 'PropertyOverridesLibrary_ApplyTextOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ApplyTextTransformOverride
// 0x0004 (0x0004 - 0x0000)
struct PropertyOverridesLibrary_ApplyTextTransformOverride final
{
public:
	struct FTextTransformOverride                 Target;                                            // 0x0000(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	ETextTransformPolicy                          DefaultValue;                                      // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextTransformPolicy                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ApplyTextTransformOverride) == 0x000001, "Wrong alignment on PropertyOverridesLibrary_ApplyTextTransformOverride");
static_assert(sizeof(PropertyOverridesLibrary_ApplyTextTransformOverride) == 0x000004, "Wrong size on PropertyOverridesLibrary_ApplyTextTransformOverride");
static_assert(offsetof(PropertyOverridesLibrary_ApplyTextTransformOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ApplyTextTransformOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyTextTransformOverride, DefaultValue) == 0x000002, "Member 'PropertyOverridesLibrary_ApplyTextTransformOverride::DefaultValue' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ApplyTextTransformOverride, ReturnValue) == 0x000003, "Member 'PropertyOverridesLibrary_ApplyTextTransformOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveClassPathOverride
// 0x0050 (0x0050 - 0x0000)
struct PropertyOverridesLibrary_ResolveClassPathOverride final
{
public:
	struct FClassPathOverride                     Target;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftClassPath                         ReturnValue;                                       // 0x0030(0x0020)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveClassPathOverride) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ResolveClassPathOverride");
static_assert(sizeof(PropertyOverridesLibrary_ResolveClassPathOverride) == 0x000050, "Wrong size on PropertyOverridesLibrary_ResolveClassPathOverride");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveClassPathOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverride, bOverrideSet) == 0x000028, "Member 'PropertyOverridesLibrary_ResolveClassPathOverride::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverride, ReturnValue) == 0x000030, "Member 'PropertyOverridesLibrary_ResolveClassPathOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveClassPathOverride_Casted
// 0x0040 (0x0040 - 0x0000)
struct PropertyOverridesLibrary_ResolveClassPathOverride_Casted final
{
public:
	struct FClassPathOverride                     Target;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSubclassOf<class UObject>                    BaseClass;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveClassPathOverride_Casted) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ResolveClassPathOverride_Casted");
static_assert(sizeof(PropertyOverridesLibrary_ResolveClassPathOverride_Casted) == 0x000040, "Wrong size on PropertyOverridesLibrary_ResolveClassPathOverride_Casted");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverride_Casted, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveClassPathOverride_Casted::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverride_Casted, BaseClass) == 0x000028, "Member 'PropertyOverridesLibrary_ResolveClassPathOverride_Casted::BaseClass' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverride_Casted, bOverrideSet) == 0x000030, "Member 'PropertyOverridesLibrary_ResolveClassPathOverride_Casted::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverride_Casted, ReturnValue) == 0x000038, "Member 'PropertyOverridesLibrary_ResolveClassPathOverride_Casted::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveClassPathOverrideAsExec
// 0x0050 (0x0050 - 0x0000)
struct PropertyOverridesLibrary_ResolveClassPathOverrideAsExec final
{
public:
	struct FClassPathOverride                     Target;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftClassPath                         ReturnValue;                                       // 0x0030(0x0020)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ResolveClassPathOverrideAsExec");
static_assert(sizeof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec) == 0x000050, "Wrong size on PropertyOverridesLibrary_ResolveClassPathOverrideAsExec");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveClassPathOverrideAsExec::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec, bOverrideSet) == 0x000028, "Member 'PropertyOverridesLibrary_ResolveClassPathOverrideAsExec::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec, ReturnValue) == 0x000030, "Member 'PropertyOverridesLibrary_ResolveClassPathOverrideAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveClassPathOverrideAsExec_Casted
// 0x0040 (0x0040 - 0x0000)
struct PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted final
{
public:
	struct FClassPathOverride                     Target;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TSubclassOf<class UObject>                    BaseClass;                                         // 0x0028(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted");
static_assert(sizeof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted) == 0x000040, "Wrong size on PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted, BaseClass) == 0x000028, "Member 'PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted::BaseClass' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted, bOverrideSet) == 0x000030, "Member 'PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted, ReturnValue) == 0x000038, "Member 'PropertyOverridesLibrary_ResolveClassPathOverrideAsExec_Casted::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveFloatOverride
// 0x0010 (0x0010 - 0x0000)
struct PropertyOverridesLibrary_ResolveFloatOverride final
{
public:
	struct FFloatOverride                         Target;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveFloatOverride) == 0x000004, "Wrong alignment on PropertyOverridesLibrary_ResolveFloatOverride");
static_assert(sizeof(PropertyOverridesLibrary_ResolveFloatOverride) == 0x000010, "Wrong size on PropertyOverridesLibrary_ResolveFloatOverride");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFloatOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveFloatOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFloatOverride, bOverrideSet) == 0x000008, "Member 'PropertyOverridesLibrary_ResolveFloatOverride::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFloatOverride, ReturnValue) == 0x00000C, "Member 'PropertyOverridesLibrary_ResolveFloatOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveFloatOverrideAsExec
// 0x0010 (0x0010 - 0x0000)
struct PropertyOverridesLibrary_ResolveFloatOverrideAsExec final
{
public:
	struct FFloatOverride                         Target;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveFloatOverrideAsExec) == 0x000004, "Wrong alignment on PropertyOverridesLibrary_ResolveFloatOverrideAsExec");
static_assert(sizeof(PropertyOverridesLibrary_ResolveFloatOverrideAsExec) == 0x000010, "Wrong size on PropertyOverridesLibrary_ResolveFloatOverrideAsExec");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFloatOverrideAsExec, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveFloatOverrideAsExec::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFloatOverrideAsExec, bOverrideSet) == 0x000008, "Member 'PropertyOverridesLibrary_ResolveFloatOverrideAsExec::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFloatOverrideAsExec, ReturnValue) == 0x00000C, "Member 'PropertyOverridesLibrary_ResolveFloatOverrideAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveFontInfoOverride
// 0x00C0 (0x00C0 - 0x0000)
struct PropertyOverridesLibrary_ResolveFontInfoOverride final
{
public:
	struct FSlateFontInfoOverride                 Target;                                            // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         ReturnValue;                                       // 0x0068(0x0058)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveFontInfoOverride) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ResolveFontInfoOverride");
static_assert(sizeof(PropertyOverridesLibrary_ResolveFontInfoOverride) == 0x0000C0, "Wrong size on PropertyOverridesLibrary_ResolveFontInfoOverride");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFontInfoOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveFontInfoOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFontInfoOverride, bOverrideSet) == 0x000060, "Member 'PropertyOverridesLibrary_ResolveFontInfoOverride::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFontInfoOverride, ReturnValue) == 0x000068, "Member 'PropertyOverridesLibrary_ResolveFontInfoOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveFontInfoOverrideAsExec
// 0x00C0 (0x00C0 - 0x0000)
struct PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec final
{
public:
	struct FSlateFontInfoOverride                 Target;                                            // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         ReturnValue;                                       // 0x0068(0x0058)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec");
static_assert(sizeof(PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec) == 0x0000C0, "Wrong size on PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec, bOverrideSet) == 0x000060, "Member 'PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec, ReturnValue) == 0x000068, "Member 'PropertyOverridesLibrary_ResolveFontInfoOverrideAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveHAlignOverride
// 0x0004 (0x0004 - 0x0000)
struct PropertyOverridesLibrary_ResolveHAlignOverride final
{
public:
	struct FHAlignOverride                        Target;                                            // 0x0000(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveHAlignOverride) == 0x000001, "Wrong alignment on PropertyOverridesLibrary_ResolveHAlignOverride");
static_assert(sizeof(PropertyOverridesLibrary_ResolveHAlignOverride) == 0x000004, "Wrong size on PropertyOverridesLibrary_ResolveHAlignOverride");
static_assert(offsetof(PropertyOverridesLibrary_ResolveHAlignOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveHAlignOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveHAlignOverride, bOverrideSet) == 0x000002, "Member 'PropertyOverridesLibrary_ResolveHAlignOverride::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveHAlignOverride, ReturnValue) == 0x000003, "Member 'PropertyOverridesLibrary_ResolveHAlignOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveHAlignOverrideAsExec
// 0x0004 (0x0004 - 0x0000)
struct PropertyOverridesLibrary_ResolveHAlignOverrideAsExec final
{
public:
	struct FHAlignOverride                        Target;                                            // 0x0000(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveHAlignOverrideAsExec) == 0x000001, "Wrong alignment on PropertyOverridesLibrary_ResolveHAlignOverrideAsExec");
static_assert(sizeof(PropertyOverridesLibrary_ResolveHAlignOverrideAsExec) == 0x000004, "Wrong size on PropertyOverridesLibrary_ResolveHAlignOverrideAsExec");
static_assert(offsetof(PropertyOverridesLibrary_ResolveHAlignOverrideAsExec, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveHAlignOverrideAsExec::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveHAlignOverrideAsExec, bOverrideSet) == 0x000002, "Member 'PropertyOverridesLibrary_ResolveHAlignOverrideAsExec::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveHAlignOverrideAsExec, ReturnValue) == 0x000003, "Member 'PropertyOverridesLibrary_ResolveHAlignOverrideAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveInputActionOverride
// 0x0030 (0x0030 - 0x0000)
struct PropertyOverridesLibrary_ResolveInputActionOverride final
{
public:
	struct FInputActionOverride                   Target;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveInputActionOverride) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ResolveInputActionOverride");
static_assert(sizeof(PropertyOverridesLibrary_ResolveInputActionOverride) == 0x000030, "Wrong size on PropertyOverridesLibrary_ResolveInputActionOverride");
static_assert(offsetof(PropertyOverridesLibrary_ResolveInputActionOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveInputActionOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveInputActionOverride, bOverrideSet) == 0x000018, "Member 'PropertyOverridesLibrary_ResolveInputActionOverride::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveInputActionOverride, ReturnValue) == 0x000020, "Member 'PropertyOverridesLibrary_ResolveInputActionOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveInputActionOverrideAsExec
// 0x0030 (0x0030 - 0x0000)
struct PropertyOverridesLibrary_ResolveInputActionOverrideAsExec final
{
public:
	struct FInputActionOverride                   Target;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveInputActionOverrideAsExec) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ResolveInputActionOverrideAsExec");
static_assert(sizeof(PropertyOverridesLibrary_ResolveInputActionOverrideAsExec) == 0x000030, "Wrong size on PropertyOverridesLibrary_ResolveInputActionOverrideAsExec");
static_assert(offsetof(PropertyOverridesLibrary_ResolveInputActionOverrideAsExec, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveInputActionOverrideAsExec::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveInputActionOverrideAsExec, bOverrideSet) == 0x000018, "Member 'PropertyOverridesLibrary_ResolveInputActionOverrideAsExec::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveInputActionOverrideAsExec, ReturnValue) == 0x000020, "Member 'PropertyOverridesLibrary_ResolveInputActionOverrideAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveIntOverride
// 0x0010 (0x0010 - 0x0000)
struct PropertyOverridesLibrary_ResolveIntOverride final
{
public:
	struct FIntegerOverride                       Target;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveIntOverride) == 0x000004, "Wrong alignment on PropertyOverridesLibrary_ResolveIntOverride");
static_assert(sizeof(PropertyOverridesLibrary_ResolveIntOverride) == 0x000010, "Wrong size on PropertyOverridesLibrary_ResolveIntOverride");
static_assert(offsetof(PropertyOverridesLibrary_ResolveIntOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveIntOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveIntOverride, bOverrideSet) == 0x000008, "Member 'PropertyOverridesLibrary_ResolveIntOverride::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveIntOverride, ReturnValue) == 0x00000C, "Member 'PropertyOverridesLibrary_ResolveIntOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveIntOverrideAsExec
// 0x0010 (0x0010 - 0x0000)
struct PropertyOverridesLibrary_ResolveIntOverrideAsExec final
{
public:
	struct FIntegerOverride                       Target;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveIntOverrideAsExec) == 0x000004, "Wrong alignment on PropertyOverridesLibrary_ResolveIntOverrideAsExec");
static_assert(sizeof(PropertyOverridesLibrary_ResolveIntOverrideAsExec) == 0x000010, "Wrong size on PropertyOverridesLibrary_ResolveIntOverrideAsExec");
static_assert(offsetof(PropertyOverridesLibrary_ResolveIntOverrideAsExec, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveIntOverrideAsExec::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveIntOverrideAsExec, bOverrideSet) == 0x000008, "Member 'PropertyOverridesLibrary_ResolveIntOverrideAsExec::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveIntOverrideAsExec, ReturnValue) == 0x00000C, "Member 'PropertyOverridesLibrary_ResolveIntOverrideAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveTextOverride
// 0x0040 (0x0040 - 0x0000)
struct PropertyOverridesLibrary_ResolveTextOverride final
{
public:
	struct FTextOverride                          Target;                                            // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0028(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveTextOverride) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ResolveTextOverride");
static_assert(sizeof(PropertyOverridesLibrary_ResolveTextOverride) == 0x000040, "Wrong size on PropertyOverridesLibrary_ResolveTextOverride");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveTextOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextOverride, bOverrideSet) == 0x000020, "Member 'PropertyOverridesLibrary_ResolveTextOverride::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextOverride, ReturnValue) == 0x000028, "Member 'PropertyOverridesLibrary_ResolveTextOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveTextOverrideAsExec
// 0x0040 (0x0040 - 0x0000)
struct PropertyOverridesLibrary_ResolveTextOverrideAsExec final
{
public:
	struct FTextOverride                          Target;                                            // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0028(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveTextOverrideAsExec) == 0x000008, "Wrong alignment on PropertyOverridesLibrary_ResolveTextOverrideAsExec");
static_assert(sizeof(PropertyOverridesLibrary_ResolveTextOverrideAsExec) == 0x000040, "Wrong size on PropertyOverridesLibrary_ResolveTextOverrideAsExec");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextOverrideAsExec, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveTextOverrideAsExec::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextOverrideAsExec, bOverrideSet) == 0x000020, "Member 'PropertyOverridesLibrary_ResolveTextOverrideAsExec::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextOverrideAsExec, ReturnValue) == 0x000028, "Member 'PropertyOverridesLibrary_ResolveTextOverrideAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveTextTransformOverride
// 0x0004 (0x0004 - 0x0000)
struct PropertyOverridesLibrary_ResolveTextTransformOverride final
{
public:
	struct FTextTransformOverride                 Target;                                            // 0x0000(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextTransformPolicy                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveTextTransformOverride) == 0x000001, "Wrong alignment on PropertyOverridesLibrary_ResolveTextTransformOverride");
static_assert(sizeof(PropertyOverridesLibrary_ResolveTextTransformOverride) == 0x000004, "Wrong size on PropertyOverridesLibrary_ResolveTextTransformOverride");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextTransformOverride, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveTextTransformOverride::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextTransformOverride, bOverrideSet) == 0x000002, "Member 'PropertyOverridesLibrary_ResolveTextTransformOverride::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextTransformOverride, ReturnValue) == 0x000003, "Member 'PropertyOverridesLibrary_ResolveTextTransformOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.PropertyOverridesLibrary.ResolveTextTransformOverrideAsExec
// 0x0004 (0x0004 - 0x0000)
struct PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec final
{
public:
	struct FTextTransformOverride                 Target;                                            // 0x0000(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETextTransformPolicy                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec) == 0x000001, "Wrong alignment on PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec");
static_assert(sizeof(PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec) == 0x000004, "Wrong size on PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec, Target) == 0x000000, "Member 'PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec::Target' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec, bOverrideSet) == 0x000002, "Member 'PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec::bOverrideSet' has a wrong offset!");
static_assert(offsetof(PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec, ReturnValue) == 0x000003, "Member 'PropertyOverridesLibrary_ResolveTextTransformOverrideAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagCategoryUIDetails.GetAllowMultipleSelection
// 0x0001 (0x0001 - 0x0000)
struct ModioModTagCategoryUIDetails_GetAllowMultipleSelection final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagCategoryUIDetails_GetAllowMultipleSelection) == 0x000001, "Wrong alignment on ModioModTagCategoryUIDetails_GetAllowMultipleSelection");
static_assert(sizeof(ModioModTagCategoryUIDetails_GetAllowMultipleSelection) == 0x000001, "Wrong size on ModioModTagCategoryUIDetails_GetAllowMultipleSelection");
static_assert(offsetof(ModioModTagCategoryUIDetails_GetAllowMultipleSelection, ReturnValue) == 0x000000, "Member 'ModioModTagCategoryUIDetails_GetAllowMultipleSelection::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagCategoryUIDetails.GetCategoryTags
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagCategoryUIDetails_GetCategoryTags final
{
public:
	TArray<TScriptInterface<class IModioModTagUIDetails>> ReturnValue;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagCategoryUIDetails_GetCategoryTags) == 0x000008, "Wrong alignment on ModioModTagCategoryUIDetails_GetCategoryTags");
static_assert(sizeof(ModioModTagCategoryUIDetails_GetCategoryTags) == 0x000010, "Wrong size on ModioModTagCategoryUIDetails_GetCategoryTags");
static_assert(offsetof(ModioModTagCategoryUIDetails_GetCategoryTags, ReturnValue) == 0x000000, "Member 'ModioModTagCategoryUIDetails_GetCategoryTags::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagCategoryUIDetails.GetIsCategoryHidden
// 0x0001 (0x0001 - 0x0000)
struct ModioModTagCategoryUIDetails_GetIsCategoryHidden final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagCategoryUIDetails_GetIsCategoryHidden) == 0x000001, "Wrong alignment on ModioModTagCategoryUIDetails_GetIsCategoryHidden");
static_assert(sizeof(ModioModTagCategoryUIDetails_GetIsCategoryHidden) == 0x000001, "Wrong size on ModioModTagCategoryUIDetails_GetIsCategoryHidden");
static_assert(offsetof(ModioModTagCategoryUIDetails_GetIsCategoryHidden, ReturnValue) == 0x000000, "Member 'ModioModTagCategoryUIDetails_GetIsCategoryHidden::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagCategoryUIDetails.GetIsCategoryLocked
// 0x0001 (0x0001 - 0x0000)
struct ModioModTagCategoryUIDetails_GetIsCategoryLocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagCategoryUIDetails_GetIsCategoryLocked) == 0x000001, "Wrong alignment on ModioModTagCategoryUIDetails_GetIsCategoryLocked");
static_assert(sizeof(ModioModTagCategoryUIDetails_GetIsCategoryLocked) == 0x000001, "Wrong size on ModioModTagCategoryUIDetails_GetIsCategoryLocked");
static_assert(offsetof(ModioModTagCategoryUIDetails_GetIsCategoryLocked, ReturnValue) == 0x000000, "Member 'ModioModTagCategoryUIDetails_GetIsCategoryLocked::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagCategoryUIDetails.GetLocalizedCategoryName
// 0x0018 (0x0018 - 0x0000)
struct ModioModTagCategoryUIDetails_GetLocalizedCategoryName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagCategoryUIDetails_GetLocalizedCategoryName) == 0x000008, "Wrong alignment on ModioModTagCategoryUIDetails_GetLocalizedCategoryName");
static_assert(sizeof(ModioModTagCategoryUIDetails_GetLocalizedCategoryName) == 0x000018, "Wrong size on ModioModTagCategoryUIDetails_GetLocalizedCategoryName");
static_assert(offsetof(ModioModTagCategoryUIDetails_GetLocalizedCategoryName, ReturnValue) == 0x000000, "Member 'ModioModTagCategoryUIDetails_GetLocalizedCategoryName::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagCategoryUIDetails.GetRawCategoryName
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagCategoryUIDetails_GetRawCategoryName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagCategoryUIDetails_GetRawCategoryName) == 0x000008, "Wrong alignment on ModioModTagCategoryUIDetails_GetRawCategoryName");
static_assert(sizeof(ModioModTagCategoryUIDetails_GetRawCategoryName) == 0x000010, "Wrong size on ModioModTagCategoryUIDetails_GetRawCategoryName");
static_assert(offsetof(ModioModTagCategoryUIDetails_GetRawCategoryName, ReturnValue) == 0x000000, "Member 'ModioModTagCategoryUIDetails_GetRawCategoryName::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagCategoryUIDetails.GetSelectedTags
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagCategoryUIDetails_GetSelectedTags final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagCategoryUIDetails_GetSelectedTags) == 0x000008, "Wrong alignment on ModioModTagCategoryUIDetails_GetSelectedTags");
static_assert(sizeof(ModioModTagCategoryUIDetails_GetSelectedTags) == 0x000010, "Wrong size on ModioModTagCategoryUIDetails_GetSelectedTags");
static_assert(offsetof(ModioModTagCategoryUIDetails_GetSelectedTags, ReturnValue) == 0x000000, "Member 'ModioModTagCategoryUIDetails_GetSelectedTags::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagOptionsUIDetails.GetCategories
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagOptionsUIDetails_GetCategories final
{
public:
	TArray<TScriptInterface<class IModioModTagCategoryUIDetails>> ReturnValue;                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagOptionsUIDetails_GetCategories) == 0x000008, "Wrong alignment on ModioModTagOptionsUIDetails_GetCategories");
static_assert(sizeof(ModioModTagOptionsUIDetails_GetCategories) == 0x000010, "Wrong size on ModioModTagOptionsUIDetails_GetCategories");
static_assert(offsetof(ModioModTagOptionsUIDetails_GetCategories, ReturnValue) == 0x000000, "Member 'ModioModTagOptionsUIDetails_GetCategories::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagOptionsUIDetails.GetSelectedTags
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagOptionsUIDetails_GetSelectedTags final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagOptionsUIDetails_GetSelectedTags) == 0x000008, "Wrong alignment on ModioModTagOptionsUIDetails_GetSelectedTags");
static_assert(sizeof(ModioModTagOptionsUIDetails_GetSelectedTags) == 0x000010, "Wrong size on ModioModTagOptionsUIDetails_GetSelectedTags");
static_assert(offsetof(ModioModTagOptionsUIDetails_GetSelectedTags, ReturnValue) == 0x000000, "Member 'ModioModTagOptionsUIDetails_GetSelectedTags::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioTokenPackBrowser.GetTitleTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioTokenPackBrowser_GetTitleTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTokenPackBrowser_GetTitleTextWidget) == 0x000008, "Wrong alignment on ModioTokenPackBrowser_GetTitleTextWidget");
static_assert(sizeof(ModioTokenPackBrowser_GetTitleTextWidget) == 0x000010, "Wrong size on ModioTokenPackBrowser_GetTitleTextWidget");
static_assert(offsetof(ModioTokenPackBrowser_GetTitleTextWidget, ReturnValue) == 0x000000, "Member 'ModioTokenPackBrowser_GetTitleTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioTokenPackBrowser.GetTokenTileViewWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioTokenPackBrowser_GetTokenTileViewWidget final
{
public:
	TScriptInterface<class IModioUITokenPackListInterface> ReturnValue;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTokenPackBrowser_GetTokenTileViewWidget) == 0x000008, "Wrong alignment on ModioTokenPackBrowser_GetTokenTileViewWidget");
static_assert(sizeof(ModioTokenPackBrowser_GetTokenTileViewWidget) == 0x000010, "Wrong size on ModioTokenPackBrowser_GetTokenTileViewWidget");
static_assert(offsetof(ModioTokenPackBrowser_GetTokenTileViewWidget, ReturnValue) == 0x000000, "Member 'ModioTokenPackBrowser_GetTokenTileViewWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioScrollableWidget.SetScrollOffset
// 0x0004 (0x0004 - 0x0000)
struct ModioScrollableWidget_SetScrollOffset final
{
public:
	float                                         Offset;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioScrollableWidget_SetScrollOffset) == 0x000004, "Wrong alignment on ModioScrollableWidget_SetScrollOffset");
static_assert(sizeof(ModioScrollableWidget_SetScrollOffset) == 0x000004, "Wrong size on ModioScrollableWidget_SetScrollOffset");
static_assert(offsetof(ModioScrollableWidget_SetScrollOffset, Offset) == 0x000000, "Member 'ModioScrollableWidget_SetScrollOffset::Offset' has a wrong offset!");

// Function ModioUICore.ModioScrollableWidget.GetScrollOffset
// 0x0004 (0x0004 - 0x0000)
struct ModioScrollableWidget_GetScrollOffset final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioScrollableWidget_GetScrollOffset) == 0x000004, "Wrong alignment on ModioScrollableWidget_GetScrollOffset");
static_assert(sizeof(ModioScrollableWidget_GetScrollOffset) == 0x000004, "Wrong size on ModioScrollableWidget_GetScrollOffset");
static_assert(offsetof(ModioScrollableWidget_GetScrollOffset, ReturnValue) == 0x000000, "Member 'ModioScrollableWidget_GetScrollOffset::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioToggleableWidget.AddToggleStateChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioToggleableWidget_AddToggleStateChangedHandler final
{
public:
	TDelegate<void(class UObject* Context, bool bIsOpen)> Handler;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioToggleableWidget_AddToggleStateChangedHandler) == 0x000004, "Wrong alignment on ModioToggleableWidget_AddToggleStateChangedHandler");
static_assert(sizeof(ModioToggleableWidget_AddToggleStateChangedHandler) == 0x000010, "Wrong size on ModioToggleableWidget_AddToggleStateChangedHandler");
static_assert(offsetof(ModioToggleableWidget_AddToggleStateChangedHandler, Handler) == 0x000000, "Member 'ModioToggleableWidget_AddToggleStateChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioToggleableWidget.Open
// 0x0002 (0x0002 - 0x0000)
struct ModioToggleableWidget_Open final
{
public:
	bool                                          bForce;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFocusMenu;                                        // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioToggleableWidget_Open) == 0x000001, "Wrong alignment on ModioToggleableWidget_Open");
static_assert(sizeof(ModioToggleableWidget_Open) == 0x000002, "Wrong size on ModioToggleableWidget_Open");
static_assert(offsetof(ModioToggleableWidget_Open, bForce) == 0x000000, "Member 'ModioToggleableWidget_Open::bForce' has a wrong offset!");
static_assert(offsetof(ModioToggleableWidget_Open, bFocusMenu) == 0x000001, "Member 'ModioToggleableWidget_Open::bFocusMenu' has a wrong offset!");

// Function ModioUICore.ModioToggleableWidget.RemoveToggleStateChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioToggleableWidget_RemoveToggleStateChangedHandler final
{
public:
	TDelegate<void(class UObject* Context, bool bIsOpen)> Handler;                                   // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioToggleableWidget_RemoveToggleStateChangedHandler) == 0x000004, "Wrong alignment on ModioToggleableWidget_RemoveToggleStateChangedHandler");
static_assert(sizeof(ModioToggleableWidget_RemoveToggleStateChangedHandler) == 0x000010, "Wrong size on ModioToggleableWidget_RemoveToggleStateChangedHandler");
static_assert(offsetof(ModioToggleableWidget_RemoveToggleStateChangedHandler, Handler) == 0x000000, "Member 'ModioToggleableWidget_RemoveToggleStateChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioToggleableWidget.IsOpen
// 0x0001 (0x0001 - 0x0000)
struct ModioToggleableWidget_IsOpen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioToggleableWidget_IsOpen) == 0x000001, "Wrong alignment on ModioToggleableWidget_IsOpen");
static_assert(sizeof(ModioToggleableWidget_IsOpen) == 0x000001, "Wrong size on ModioToggleableWidget_IsOpen");
static_assert(offsetof(ModioToggleableWidget_IsOpen, ReturnValue) == 0x000000, "Member 'ModioToggleableWidget_IsOpen::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioStackedBoolLibrary.PeekBoolValue
// 0x0018 (0x0018 - 0x0000)
struct ModioStackedBoolLibrary_PeekBoolValue final
{
public:
	struct FModioStackedBool                      Target;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bDidPeekSuccessfully;                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioStackedBoolLibrary_PeekBoolValue) == 0x000008, "Wrong alignment on ModioStackedBoolLibrary_PeekBoolValue");
static_assert(sizeof(ModioStackedBoolLibrary_PeekBoolValue) == 0x000018, "Wrong size on ModioStackedBoolLibrary_PeekBoolValue");
static_assert(offsetof(ModioStackedBoolLibrary_PeekBoolValue, Target) == 0x000000, "Member 'ModioStackedBoolLibrary_PeekBoolValue::Target' has a wrong offset!");
static_assert(offsetof(ModioStackedBoolLibrary_PeekBoolValue, bDidPeekSuccessfully) == 0x000010, "Member 'ModioStackedBoolLibrary_PeekBoolValue::bDidPeekSuccessfully' has a wrong offset!");
static_assert(offsetof(ModioStackedBoolLibrary_PeekBoolValue, ReturnValue) == 0x000011, "Member 'ModioStackedBoolLibrary_PeekBoolValue::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioStackedBoolLibrary.PopBoolValue
// 0x0018 (0x0018 - 0x0000)
struct ModioStackedBoolLibrary_PopBoolValue final
{
public:
	struct FModioStackedBool                      Target;                                            // 0x0000(0x0010)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bDidPopSuccessfully;                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioStackedBoolLibrary_PopBoolValue) == 0x000008, "Wrong alignment on ModioStackedBoolLibrary_PopBoolValue");
static_assert(sizeof(ModioStackedBoolLibrary_PopBoolValue) == 0x000018, "Wrong size on ModioStackedBoolLibrary_PopBoolValue");
static_assert(offsetof(ModioStackedBoolLibrary_PopBoolValue, Target) == 0x000000, "Member 'ModioStackedBoolLibrary_PopBoolValue::Target' has a wrong offset!");
static_assert(offsetof(ModioStackedBoolLibrary_PopBoolValue, bDidPopSuccessfully) == 0x000010, "Member 'ModioStackedBoolLibrary_PopBoolValue::bDidPopSuccessfully' has a wrong offset!");
static_assert(offsetof(ModioStackedBoolLibrary_PopBoolValue, ReturnValue) == 0x000011, "Member 'ModioStackedBoolLibrary_PopBoolValue::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioStackedBoolLibrary.PushBoolValue
// 0x0018 (0x0018 - 0x0000)
struct ModioStackedBoolLibrary_PushBoolValue final
{
public:
	struct FModioStackedBool                      Target;                                            // 0x0000(0x0010)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bNewValue;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioStackedBoolLibrary_PushBoolValue) == 0x000008, "Wrong alignment on ModioStackedBoolLibrary_PushBoolValue");
static_assert(sizeof(ModioStackedBoolLibrary_PushBoolValue) == 0x000018, "Wrong size on ModioStackedBoolLibrary_PushBoolValue");
static_assert(offsetof(ModioStackedBoolLibrary_PushBoolValue, Target) == 0x000000, "Member 'ModioStackedBoolLibrary_PushBoolValue::Target' has a wrong offset!");
static_assert(offsetof(ModioStackedBoolLibrary_PushBoolValue, bNewValue) == 0x000010, "Member 'ModioStackedBoolLibrary_PushBoolValue::bNewValue' has a wrong offset!");

// Function ModioUICore.ModioUIClickableWidget.AddClickedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIClickableWidget_AddClickedHandler final
{
public:
	TDelegate<void(class UObject* ClickContext)>  Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIClickableWidget_AddClickedHandler) == 0x000004, "Wrong alignment on ModioUIClickableWidget_AddClickedHandler");
static_assert(sizeof(ModioUIClickableWidget_AddClickedHandler) == 0x000010, "Wrong size on ModioUIClickableWidget_AddClickedHandler");
static_assert(offsetof(ModioUIClickableWidget_AddClickedHandler, Handler) == 0x000000, "Member 'ModioUIClickableWidget_AddClickedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIClickableWidget.RemoveClickedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIClickableWidget_RemoveClickedHandler final
{
public:
	TDelegate<void(class UObject* ClickContext)>  Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIClickableWidget_RemoveClickedHandler) == 0x000004, "Wrong alignment on ModioUIClickableWidget_RemoveClickedHandler");
static_assert(sizeof(ModioUIClickableWidget_RemoveClickedHandler) == 0x000010, "Wrong size on ModioUIClickableWidget_RemoveClickedHandler");
static_assert(offsetof(ModioUIClickableWidget_RemoveClickedHandler, Handler) == 0x000000, "Member 'ModioUIClickableWidget_RemoveClickedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIBoundActionWidget.AddActionCompletedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIBoundActionWidget_AddActionCompletedHandler final
{
public:
	TDelegate<void(const struct FDataTableRowHandle& BoundAction)> Handler;                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIBoundActionWidget_AddActionCompletedHandler) == 0x000004, "Wrong alignment on ModioUIBoundActionWidget_AddActionCompletedHandler");
static_assert(sizeof(ModioUIBoundActionWidget_AddActionCompletedHandler) == 0x000010, "Wrong size on ModioUIBoundActionWidget_AddActionCompletedHandler");
static_assert(offsetof(ModioUIBoundActionWidget_AddActionCompletedHandler, Handler) == 0x000000, "Member 'ModioUIBoundActionWidget_AddActionCompletedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIBoundActionWidget.AddActionProgressHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIBoundActionWidget_AddActionProgressHandler final
{
public:
	TDelegate<void(const struct FDataTableRowHandle& BoundAction, float Progress)> Handler;          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIBoundActionWidget_AddActionProgressHandler) == 0x000004, "Wrong alignment on ModioUIBoundActionWidget_AddActionProgressHandler");
static_assert(sizeof(ModioUIBoundActionWidget_AddActionProgressHandler) == 0x000010, "Wrong size on ModioUIBoundActionWidget_AddActionProgressHandler");
static_assert(offsetof(ModioUIBoundActionWidget_AddActionProgressHandler, Handler) == 0x000000, "Member 'ModioUIBoundActionWidget_AddActionProgressHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIBoundActionWidget.RemoveActionCompletedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIBoundActionWidget_RemoveActionCompletedHandler final
{
public:
	TDelegate<void(const struct FDataTableRowHandle& BoundAction)> Handler;                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIBoundActionWidget_RemoveActionCompletedHandler) == 0x000004, "Wrong alignment on ModioUIBoundActionWidget_RemoveActionCompletedHandler");
static_assert(sizeof(ModioUIBoundActionWidget_RemoveActionCompletedHandler) == 0x000010, "Wrong size on ModioUIBoundActionWidget_RemoveActionCompletedHandler");
static_assert(offsetof(ModioUIBoundActionWidget_RemoveActionCompletedHandler, Handler) == 0x000000, "Member 'ModioUIBoundActionWidget_RemoveActionCompletedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIBoundActionWidget.RemoveActionProgressHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIBoundActionWidget_RemoveActionProgressHandler final
{
public:
	TDelegate<void(const struct FDataTableRowHandle& BoundAction, float Progress)> Handler;          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIBoundActionWidget_RemoveActionProgressHandler) == 0x000004, "Wrong alignment on ModioUIBoundActionWidget_RemoveActionProgressHandler");
static_assert(sizeof(ModioUIBoundActionWidget_RemoveActionProgressHandler) == 0x000010, "Wrong size on ModioUIBoundActionWidget_RemoveActionProgressHandler");
static_assert(offsetof(ModioUIBoundActionWidget_RemoveActionProgressHandler, Handler) == 0x000000, "Member 'ModioUIBoundActionWidget_RemoveActionProgressHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIBoundActionWidget.SetBoundAction
// 0x0010 (0x0010 - 0x0000)
struct ModioUIBoundActionWidget_SetBoundAction final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIBoundActionWidget_SetBoundAction) == 0x000008, "Wrong alignment on ModioUIBoundActionWidget_SetBoundAction");
static_assert(sizeof(ModioUIBoundActionWidget_SetBoundAction) == 0x000010, "Wrong size on ModioUIBoundActionWidget_SetBoundAction");
static_assert(offsetof(ModioUIBoundActionWidget_SetBoundAction, InputActionRow) == 0x000000, "Member 'ModioUIBoundActionWidget_SetBoundAction::InputActionRow' has a wrong offset!");

// Function ModioUICore.ModioUIBoundActionWidget.TryGetBoundAction
// 0x0018 (0x0018 - 0x0000)
struct ModioUIBoundActionWidget_TryGetBoundAction final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIBoundActionWidget_TryGetBoundAction) == 0x000008, "Wrong alignment on ModioUIBoundActionWidget_TryGetBoundAction");
static_assert(sizeof(ModioUIBoundActionWidget_TryGetBoundAction) == 0x000018, "Wrong size on ModioUIBoundActionWidget_TryGetBoundAction");
static_assert(offsetof(ModioUIBoundActionWidget_TryGetBoundAction, InputActionRow) == 0x000000, "Member 'ModioUIBoundActionWidget_TryGetBoundAction::InputActionRow' has a wrong offset!");
static_assert(offsetof(ModioUIBoundActionWidget_TryGetBoundAction, ReturnValue) == 0x000010, "Member 'ModioUIBoundActionWidget_TryGetBoundAction::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioPresetFilterEntryWidget.GetLabelWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioPresetFilterEntryWidget_GetLabelWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioPresetFilterEntryWidget_GetLabelWidget) == 0x000008, "Wrong alignment on ModioPresetFilterEntryWidget_GetLabelWidget");
static_assert(sizeof(ModioPresetFilterEntryWidget_GetLabelWidget) == 0x000010, "Wrong size on ModioPresetFilterEntryWidget_GetLabelWidget");
static_assert(offsetof(ModioPresetFilterEntryWidget_GetLabelWidget, ReturnValue) == 0x000000, "Member 'ModioPresetFilterEntryWidget_GetLabelWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommandMenu.AddCommandListBuilder
// 0x0010 (0x0010 - 0x0000)
struct ModioUICommandMenu_AddCommandListBuilder final
{
public:
	TDelegate<void(TArray<class UObject*>* CommandList, class UObject* Context)> Builder;            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandMenu_AddCommandListBuilder) == 0x000004, "Wrong alignment on ModioUICommandMenu_AddCommandListBuilder");
static_assert(sizeof(ModioUICommandMenu_AddCommandListBuilder) == 0x000010, "Wrong size on ModioUICommandMenu_AddCommandListBuilder");
static_assert(offsetof(ModioUICommandMenu_AddCommandListBuilder, Builder) == 0x000000, "Member 'ModioUICommandMenu_AddCommandListBuilder::Builder' has a wrong offset!");

// Function ModioUICore.ModioUICommandMenu.RemoveCommandListBuilder
// 0x0010 (0x0010 - 0x0000)
struct ModioUICommandMenu_RemoveCommandListBuilder final
{
public:
	TDelegate<void(TArray<class UObject*>* CommandList, class UObject* Context)> Builder;            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandMenu_RemoveCommandListBuilder) == 0x000004, "Wrong alignment on ModioUICommandMenu_RemoveCommandListBuilder");
static_assert(sizeof(ModioUICommandMenu_RemoveCommandListBuilder) == 0x000010, "Wrong size on ModioUICommandMenu_RemoveCommandListBuilder");
static_assert(offsetof(ModioUICommandMenu_RemoveCommandListBuilder, Builder) == 0x000000, "Member 'ModioUICommandMenu_RemoveCommandListBuilder::Builder' has a wrong offset!");

// Function ModioUICore.ModioUICommandObject.CanExecute
// 0x0010 (0x0010 - 0x0000)
struct ModioUICommandObject_CanExecute final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUICommandObject_CanExecute) == 0x000008, "Wrong alignment on ModioUICommandObject_CanExecute");
static_assert(sizeof(ModioUICommandObject_CanExecute) == 0x000010, "Wrong size on ModioUICommandObject_CanExecute");
static_assert(offsetof(ModioUICommandObject_CanExecute, Context) == 0x000000, "Member 'ModioUICommandObject_CanExecute::Context' has a wrong offset!");
static_assert(offsetof(ModioUICommandObject_CanExecute, ReturnValue) == 0x000008, "Member 'ModioUICommandObject_CanExecute::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommandObject.Execute
// 0x0008 (0x0008 - 0x0000)
struct ModioUICommandObject_Execute final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandObject_Execute) == 0x000008, "Wrong alignment on ModioUICommandObject_Execute");
static_assert(sizeof(ModioUICommandObject_Execute) == 0x000008, "Wrong size on ModioUICommandObject_Execute");
static_assert(offsetof(ModioUICommandObject_Execute, Context) == 0x000000, "Member 'ModioUICommandObject_Execute::Context' has a wrong offset!");

// Function ModioUICore.ModioUICommandObject.GetCommandBrush
// 0x00D0 (0x00D0 - 0x0000)
struct ModioUICommandObject_GetCommandBrush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandObject_GetCommandBrush) == 0x000010, "Wrong alignment on ModioUICommandObject_GetCommandBrush");
static_assert(sizeof(ModioUICommandObject_GetCommandBrush) == 0x0000D0, "Wrong size on ModioUICommandObject_GetCommandBrush");
static_assert(offsetof(ModioUICommandObject_GetCommandBrush, ReturnValue) == 0x000000, "Member 'ModioUICommandObject_GetCommandBrush::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommandObject.GetCommandDisplayString
// 0x0018 (0x0018 - 0x0000)
struct ModioUICommandObject_GetCommandDisplayString final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandObject_GetCommandDisplayString) == 0x000008, "Wrong alignment on ModioUICommandObject_GetCommandDisplayString");
static_assert(sizeof(ModioUICommandObject_GetCommandDisplayString) == 0x000018, "Wrong size on ModioUICommandObject_GetCommandDisplayString");
static_assert(offsetof(ModioUICommandObject_GetCommandDisplayString, ReturnValue) == 0x000000, "Member 'ModioUICommandObject_GetCommandDisplayString::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommandObject.SetDataSource
// 0x0008 (0x0008 - 0x0000)
struct ModioUICommandObject_SetDataSource final
{
public:
	class UObject*                                InDataSource;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandObject_SetDataSource) == 0x000008, "Wrong alignment on ModioUICommandObject_SetDataSource");
static_assert(sizeof(ModioUICommandObject_SetDataSource) == 0x000008, "Wrong size on ModioUICommandObject_SetDataSource");
static_assert(offsetof(ModioUICommandObject_SetDataSource, InDataSource) == 0x000000, "Member 'ModioUICommandObject_SetDataSource::InDataSource' has a wrong offset!");

// Function ModioUICore.ModioUICommandLibrary.GetCommandAssetEntry
// 0x00C0 (0x00C0 - 0x0000)
struct ModioUICommandLibrary_GetCommandAssetEntry final
{
public:
	class FString                                 CommandID;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResolved;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioUICommandAssetEntry              ReturnValue;                                       // 0x0018(0x00A8)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandLibrary_GetCommandAssetEntry) == 0x000008, "Wrong alignment on ModioUICommandLibrary_GetCommandAssetEntry");
static_assert(sizeof(ModioUICommandLibrary_GetCommandAssetEntry) == 0x0000C0, "Wrong size on ModioUICommandLibrary_GetCommandAssetEntry");
static_assert(offsetof(ModioUICommandLibrary_GetCommandAssetEntry, CommandID) == 0x000000, "Member 'ModioUICommandLibrary_GetCommandAssetEntry::CommandID' has a wrong offset!");
static_assert(offsetof(ModioUICommandLibrary_GetCommandAssetEntry, bResolved) == 0x000010, "Member 'ModioUICommandLibrary_GetCommandAssetEntry::bResolved' has a wrong offset!");
static_assert(offsetof(ModioUICommandLibrary_GetCommandAssetEntry, ReturnValue) == 0x000018, "Member 'ModioUICommandLibrary_GetCommandAssetEntry::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommandLibrary.GetCommandBrush
// 0x00F0 (0x00F0 - 0x0000)
struct ModioUICommandLibrary_GetCommandBrush final
{
public:
	class FString                                 CommandID;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   BrushName;                                         // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResolved;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ReturnValue;                                       // 0x0020(0x00D0)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandLibrary_GetCommandBrush) == 0x000010, "Wrong alignment on ModioUICommandLibrary_GetCommandBrush");
static_assert(sizeof(ModioUICommandLibrary_GetCommandBrush) == 0x0000F0, "Wrong size on ModioUICommandLibrary_GetCommandBrush");
static_assert(offsetof(ModioUICommandLibrary_GetCommandBrush, CommandID) == 0x000000, "Member 'ModioUICommandLibrary_GetCommandBrush::CommandID' has a wrong offset!");
static_assert(offsetof(ModioUICommandLibrary_GetCommandBrush, BrushName) == 0x000010, "Member 'ModioUICommandLibrary_GetCommandBrush::BrushName' has a wrong offset!");
static_assert(offsetof(ModioUICommandLibrary_GetCommandBrush, bResolved) == 0x000018, "Member 'ModioUICommandLibrary_GetCommandBrush::bResolved' has a wrong offset!");
static_assert(offsetof(ModioUICommandLibrary_GetCommandBrush, ReturnValue) == 0x000020, "Member 'ModioUICommandLibrary_GetCommandBrush::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommandLibrary.GetCommandText
// 0x0038 (0x0038 - 0x0000)
struct ModioUICommandLibrary_GetCommandText final
{
public:
	class FString                                 CommandID;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TextName;                                          // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResolved;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0020(0x0018)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommandLibrary_GetCommandText) == 0x000008, "Wrong alignment on ModioUICommandLibrary_GetCommandText");
static_assert(sizeof(ModioUICommandLibrary_GetCommandText) == 0x000038, "Wrong size on ModioUICommandLibrary_GetCommandText");
static_assert(offsetof(ModioUICommandLibrary_GetCommandText, CommandID) == 0x000000, "Member 'ModioUICommandLibrary_GetCommandText::CommandID' has a wrong offset!");
static_assert(offsetof(ModioUICommandLibrary_GetCommandText, TextName) == 0x000010, "Member 'ModioUICommandLibrary_GetCommandText::TextName' has a wrong offset!");
static_assert(offsetof(ModioUICommandLibrary_GetCommandText, bResolved) == 0x000018, "Member 'ModioUICommandLibrary_GetCommandText::bResolved' has a wrong offset!");
static_assert(offsetof(ModioUICommandLibrary_GetCommandText, ReturnValue) == 0x000020, "Member 'ModioUICommandLibrary_GetCommandText::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonButtonWidget.ConfigureCommonButton
// 0x0078 (0x0078 - 0x0000)
struct ModioUICommonButtonWidget_ConfigureCommonButton final
{
public:
	struct FModioCommonButtonParams               Params_0;                                          // 0x0000(0x0078)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonButtonWidget_ConfigureCommonButton) == 0x000008, "Wrong alignment on ModioUICommonButtonWidget_ConfigureCommonButton");
static_assert(sizeof(ModioUICommonButtonWidget_ConfigureCommonButton) == 0x000078, "Wrong size on ModioUICommonButtonWidget_ConfigureCommonButton");
static_assert(offsetof(ModioUICommonButtonWidget_ConfigureCommonButton, Params_0) == 0x000000, "Member 'ModioUICommonButtonWidget_ConfigureCommonButton::Params_0' has a wrong offset!");

// Function ModioUICore.ModioUIConnectivityChangedReceiver.OnConnectivityChanged
// 0x0001 (0x0001 - 0x0000)
struct ModioUIConnectivityChangedReceiver_OnConnectivityChanged final
{
public:
	bool                                          bNewConnectivityState;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIConnectivityChangedReceiver_OnConnectivityChanged) == 0x000001, "Wrong alignment on ModioUIConnectivityChangedReceiver_OnConnectivityChanged");
static_assert(sizeof(ModioUIConnectivityChangedReceiver_OnConnectivityChanged) == 0x000001, "Wrong size on ModioUIConnectivityChangedReceiver_OnConnectivityChanged");
static_assert(offsetof(ModioUIConnectivityChangedReceiver_OnConnectivityChanged, bNewConnectivityState) == 0x000000, "Member 'ModioUIConnectivityChangedReceiver_OnConnectivityChanged::bNewConnectivityState' has a wrong offset!");

// Function ModioUICore.ModioUIConnectivityChangedReceiverLibrary.DeregisterConnectivityChangedReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIConnectivityChangedReceiverLibrary_DeregisterConnectivityChangedReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIConnectivityChangedReceiverLibrary_DeregisterConnectivityChangedReceiver) == 0x000008, "Wrong alignment on ModioUIConnectivityChangedReceiverLibrary_DeregisterConnectivityChangedReceiver");
static_assert(sizeof(ModioUIConnectivityChangedReceiverLibrary_DeregisterConnectivityChangedReceiver) == 0x000008, "Wrong size on ModioUIConnectivityChangedReceiverLibrary_DeregisterConnectivityChangedReceiver");
static_assert(offsetof(ModioUIConnectivityChangedReceiverLibrary_DeregisterConnectivityChangedReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUIConnectivityChangedReceiverLibrary_DeregisterConnectivityChangedReceiver::ObjectToDeregister' has a wrong offset!");

// Function ModioUICore.ModioUIConnectivityChangedReceiverLibrary.RegisterConnectivityChangedReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIConnectivityChangedReceiverLibrary_RegisterConnectivityChangedReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIConnectivityChangedReceiverLibrary_RegisterConnectivityChangedReceiver) == 0x000008, "Wrong alignment on ModioUIConnectivityChangedReceiverLibrary_RegisterConnectivityChangedReceiver");
static_assert(sizeof(ModioUIConnectivityChangedReceiverLibrary_RegisterConnectivityChangedReceiver) == 0x000008, "Wrong size on ModioUIConnectivityChangedReceiverLibrary_RegisterConnectivityChangedReceiver");
static_assert(offsetof(ModioUIConnectivityChangedReceiverLibrary_RegisterConnectivityChangedReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUIConnectivityChangedReceiverLibrary_RegisterConnectivityChangedReceiver::ObjectToRegister' has a wrong offset!");

// Function ModioUICore.ModioTokenPackUIDetails.GetFullTokenPack
// 0x0118 (0x0118 - 0x0000)
struct ModioTokenPackUIDetails_GetFullTokenPack final
{
public:
	struct FModioTokenPack                        ReturnValue;                                       // 0x0000(0x0118)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTokenPackUIDetails_GetFullTokenPack) == 0x000008, "Wrong alignment on ModioTokenPackUIDetails_GetFullTokenPack");
static_assert(sizeof(ModioTokenPackUIDetails_GetFullTokenPack) == 0x000118, "Wrong size on ModioTokenPackUIDetails_GetFullTokenPack");
static_assert(offsetof(ModioTokenPackUIDetails_GetFullTokenPack, ReturnValue) == 0x000000, "Member 'ModioTokenPackUIDetails_GetFullTokenPack::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioTokenPackUIDetails.GetTokenPackID
// 0x0010 (0x0010 - 0x0000)
struct ModioTokenPackUIDetails_GetTokenPackID final
{
public:
	struct FModioTokenPackID                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTokenPackUIDetails_GetTokenPackID) == 0x000008, "Wrong alignment on ModioTokenPackUIDetails_GetTokenPackID");
static_assert(sizeof(ModioTokenPackUIDetails_GetTokenPackID) == 0x000010, "Wrong size on ModioTokenPackUIDetails_GetTokenPackID");
static_assert(offsetof(ModioTokenPackUIDetails_GetTokenPackID, ReturnValue) == 0x000000, "Member 'ModioTokenPackUIDetails_GetTokenPackID::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIDataSourceWidget.GetDataSource
// 0x0008 (0x0008 - 0x0000)
struct ModioUIDataSourceWidget_GetDataSource final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDataSourceWidget_GetDataSource) == 0x000008, "Wrong alignment on ModioUIDataSourceWidget_GetDataSource");
static_assert(sizeof(ModioUIDataSourceWidget_GetDataSource) == 0x000008, "Wrong size on ModioUIDataSourceWidget_GetDataSource");
static_assert(offsetof(ModioUIDataSourceWidget_GetDataSource, ReturnValue) == 0x000000, "Member 'ModioUIDataSourceWidget_GetDataSource::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIDataSourceWidget.SetDataSource
// 0x0008 (0x0008 - 0x0000)
struct ModioUIDataSourceWidget_SetDataSource final
{
public:
	class UObject*                                InDataSource;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDataSourceWidget_SetDataSource) == 0x000008, "Wrong alignment on ModioUIDataSourceWidget_SetDataSource");
static_assert(sizeof(ModioUIDataSourceWidget_SetDataSource) == 0x000008, "Wrong size on ModioUIDataSourceWidget_SetDataSource");
static_assert(offsetof(ModioUIDataSourceWidget_SetDataSource, InDataSource) == 0x000000, "Member 'ModioUIDataSourceWidget_SetDataSource::InDataSource' has a wrong offset!");

// Function ModioUICore.ModioUIDialog.AddDialogButtonClickedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIDialog_AddDialogButtonClickedHandler final
{
public:
	TDelegate<void(int32 ButtonIndex)>            Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialog_AddDialogButtonClickedHandler) == 0x000004, "Wrong alignment on ModioUIDialog_AddDialogButtonClickedHandler");
static_assert(sizeof(ModioUIDialog_AddDialogButtonClickedHandler) == 0x000010, "Wrong size on ModioUIDialog_AddDialogButtonClickedHandler");
static_assert(offsetof(ModioUIDialog_AddDialogButtonClickedHandler, Handler) == 0x000000, "Member 'ModioUIDialog_AddDialogButtonClickedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIDialog.AddDialogCanceledHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIDialog_AddDialogCanceledHandler final
{
public:
	TDelegate<void()>                             Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialog_AddDialogCanceledHandler) == 0x000004, "Wrong alignment on ModioUIDialog_AddDialogCanceledHandler");
static_assert(sizeof(ModioUIDialog_AddDialogCanceledHandler) == 0x000010, "Wrong size on ModioUIDialog_AddDialogCanceledHandler");
static_assert(offsetof(ModioUIDialog_AddDialogCanceledHandler, Handler) == 0x000000, "Member 'ModioUIDialog_AddDialogCanceledHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIDialog.AddDialogConfirmedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIDialog_AddDialogConfirmedHandler final
{
public:
	TDelegate<void()>                             Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialog_AddDialogConfirmedHandler) == 0x000004, "Wrong alignment on ModioUIDialog_AddDialogConfirmedHandler");
static_assert(sizeof(ModioUIDialog_AddDialogConfirmedHandler) == 0x000010, "Wrong size on ModioUIDialog_AddDialogConfirmedHandler");
static_assert(offsetof(ModioUIDialog_AddDialogConfirmedHandler, Handler) == 0x000000, "Member 'ModioUIDialog_AddDialogConfirmedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIDialog.AddDialogShownHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIDialog_AddDialogShownHandler final
{
public:
	TDelegate<void(bool bOpen)>                   Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialog_AddDialogShownHandler) == 0x000004, "Wrong alignment on ModioUIDialog_AddDialogShownHandler");
static_assert(sizeof(ModioUIDialog_AddDialogShownHandler) == 0x000010, "Wrong size on ModioUIDialog_AddDialogShownHandler");
static_assert(offsetof(ModioUIDialog_AddDialogShownHandler, Handler) == 0x000000, "Member 'ModioUIDialog_AddDialogShownHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIDialog.RemoveDialogButtonClickedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIDialog_RemoveDialogButtonClickedHandler final
{
public:
	TDelegate<void(int32 ButtonIndex)>            Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialog_RemoveDialogButtonClickedHandler) == 0x000004, "Wrong alignment on ModioUIDialog_RemoveDialogButtonClickedHandler");
static_assert(sizeof(ModioUIDialog_RemoveDialogButtonClickedHandler) == 0x000010, "Wrong size on ModioUIDialog_RemoveDialogButtonClickedHandler");
static_assert(offsetof(ModioUIDialog_RemoveDialogButtonClickedHandler, Handler) == 0x000000, "Member 'ModioUIDialog_RemoveDialogButtonClickedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIDialog.RemoveDialogCanceledHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIDialog_RemoveDialogCanceledHandler final
{
public:
	TDelegate<void()>                             Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialog_RemoveDialogCanceledHandler) == 0x000004, "Wrong alignment on ModioUIDialog_RemoveDialogCanceledHandler");
static_assert(sizeof(ModioUIDialog_RemoveDialogCanceledHandler) == 0x000010, "Wrong size on ModioUIDialog_RemoveDialogCanceledHandler");
static_assert(offsetof(ModioUIDialog_RemoveDialogCanceledHandler, Handler) == 0x000000, "Member 'ModioUIDialog_RemoveDialogCanceledHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIDialog.RemoveDialogConfirmedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIDialog_RemoveDialogConfirmedHandler final
{
public:
	TDelegate<void()>                             Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialog_RemoveDialogConfirmedHandler) == 0x000004, "Wrong alignment on ModioUIDialog_RemoveDialogConfirmedHandler");
static_assert(sizeof(ModioUIDialog_RemoveDialogConfirmedHandler) == 0x000010, "Wrong size on ModioUIDialog_RemoveDialogConfirmedHandler");
static_assert(offsetof(ModioUIDialog_RemoveDialogConfirmedHandler, Handler) == 0x000000, "Member 'ModioUIDialog_RemoveDialogConfirmedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIDialog.RemoveDialogShownHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIDialog_RemoveDialogShownHandler final
{
public:
	TDelegate<void(bool bOpen)>                   Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialog_RemoveDialogShownHandler) == 0x000004, "Wrong alignment on ModioUIDialog_RemoveDialogShownHandler");
static_assert(sizeof(ModioUIDialog_RemoveDialogShownHandler) == 0x000010, "Wrong size on ModioUIDialog_RemoveDialogShownHandler");
static_assert(offsetof(ModioUIDialog_RemoveDialogShownHandler, Handler) == 0x000000, "Member 'ModioUIDialog_RemoveDialogShownHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIDialog.ShowModal
// 0x0001 (0x0001 - 0x0000)
struct ModioUIDialog_ShowModal final
{
public:
	bool                                          bFocusCancelButton;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialog_ShowModal) == 0x000001, "Wrong alignment on ModioUIDialog_ShowModal");
static_assert(sizeof(ModioUIDialog_ShowModal) == 0x000001, "Wrong size on ModioUIDialog_ShowModal");
static_assert(offsetof(ModioUIDialog_ShowModal, bFocusCancelButton) == 0x000000, "Member 'ModioUIDialog_ShowModal::bFocusCancelButton' has a wrong offset!");

// Function ModioUICore.ModioTagCounterIcon.GetCounterLabelWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioTagCounterIcon_GetCounterLabelWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTagCounterIcon_GetCounterLabelWidget) == 0x000008, "Wrong alignment on ModioTagCounterIcon_GetCounterLabelWidget");
static_assert(sizeof(ModioTagCounterIcon_GetCounterLabelWidget) == 0x000010, "Wrong size on ModioTagCounterIcon_GetCounterLabelWidget");
static_assert(offsetof(ModioTagCounterIcon_GetCounterLabelWidget, ReturnValue) == 0x000000, "Member 'ModioTagCounterIcon_GetCounterLabelWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioTagCounterIcon.SynchronizeCounter
// 0x0004 (0x0004 - 0x0000)
struct ModioTagCounterIcon_SynchronizeCounter final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioTagCounterIcon_SynchronizeCounter) == 0x000004, "Wrong alignment on ModioTagCounterIcon_SynchronizeCounter");
static_assert(sizeof(ModioTagCounterIcon_SynchronizeCounter) == 0x000004, "Wrong size on ModioTagCounterIcon_SynchronizeCounter");
static_assert(offsetof(ModioTagCounterIcon_SynchronizeCounter, ReturnValue) == 0x000000, "Member 'ModioTagCounterIcon_SynchronizeCounter::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIDialogDisplayEventReceiver.OnDialogDisplayEvent
// 0x0010 (0x0010 - 0x0000)
struct ModioUIDialogDisplayEventReceiver_OnDialogDisplayEvent final
{
public:
	EModioUIDialogType                            DialogRequested;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                DataSource;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialogDisplayEventReceiver_OnDialogDisplayEvent) == 0x000008, "Wrong alignment on ModioUIDialogDisplayEventReceiver_OnDialogDisplayEvent");
static_assert(sizeof(ModioUIDialogDisplayEventReceiver_OnDialogDisplayEvent) == 0x000010, "Wrong size on ModioUIDialogDisplayEventReceiver_OnDialogDisplayEvent");
static_assert(offsetof(ModioUIDialogDisplayEventReceiver_OnDialogDisplayEvent, DialogRequested) == 0x000000, "Member 'ModioUIDialogDisplayEventReceiver_OnDialogDisplayEvent::DialogRequested' has a wrong offset!");
static_assert(offsetof(ModioUIDialogDisplayEventReceiver_OnDialogDisplayEvent, DataSource) == 0x000008, "Member 'ModioUIDialogDisplayEventReceiver_OnDialogDisplayEvent::DataSource' has a wrong offset!");

// Function ModioUICore.ModioUIDialogDisplayEventReceiverLibrary.DeregisterDialogDisplayEventReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIDialogDisplayEventReceiverLibrary_DeregisterDialogDisplayEventReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialogDisplayEventReceiverLibrary_DeregisterDialogDisplayEventReceiver) == 0x000008, "Wrong alignment on ModioUIDialogDisplayEventReceiverLibrary_DeregisterDialogDisplayEventReceiver");
static_assert(sizeof(ModioUIDialogDisplayEventReceiverLibrary_DeregisterDialogDisplayEventReceiver) == 0x000008, "Wrong size on ModioUIDialogDisplayEventReceiverLibrary_DeregisterDialogDisplayEventReceiver");
static_assert(offsetof(ModioUIDialogDisplayEventReceiverLibrary_DeregisterDialogDisplayEventReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUIDialogDisplayEventReceiverLibrary_DeregisterDialogDisplayEventReceiver::ObjectToDeregister' has a wrong offset!");

// Function ModioUICore.ModioUIDialogDisplayEventReceiverLibrary.RegisterDialogDisplayEventReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIDialogDisplayEventReceiverLibrary_RegisterDialogDisplayEventReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDialogDisplayEventReceiverLibrary_RegisterDialogDisplayEventReceiver) == 0x000008, "Wrong alignment on ModioUIDialogDisplayEventReceiverLibrary_RegisterDialogDisplayEventReceiver");
static_assert(sizeof(ModioUIDialogDisplayEventReceiverLibrary_RegisterDialogDisplayEventReceiver) == 0x000008, "Wrong size on ModioUIDialogDisplayEventReceiverLibrary_RegisterDialogDisplayEventReceiver");
static_assert(offsetof(ModioUIDialogDisplayEventReceiverLibrary_RegisterDialogDisplayEventReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUIDialogDisplayEventReceiverLibrary_RegisterDialogDisplayEventReceiver::ObjectToRegister' has a wrong offset!");

// Function ModioUICore.ModioUIEntitlementRefreshEventReceiverLibrary.DeregisterEntitlementRefreshEventReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIEntitlementRefreshEventReceiverLibrary_DeregisterEntitlementRefreshEventReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIEntitlementRefreshEventReceiverLibrary_DeregisterEntitlementRefreshEventReceiver) == 0x000008, "Wrong alignment on ModioUIEntitlementRefreshEventReceiverLibrary_DeregisterEntitlementRefreshEventReceiver");
static_assert(sizeof(ModioUIEntitlementRefreshEventReceiverLibrary_DeregisterEntitlementRefreshEventReceiver) == 0x000008, "Wrong size on ModioUIEntitlementRefreshEventReceiverLibrary_DeregisterEntitlementRefreshEventReceiver");
static_assert(offsetof(ModioUIEntitlementRefreshEventReceiverLibrary_DeregisterEntitlementRefreshEventReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUIEntitlementRefreshEventReceiverLibrary_DeregisterEntitlementRefreshEventReceiver::ObjectToDeregister' has a wrong offset!");

// Function ModioUICore.ModioUIEntitlementRefreshEventReceiverLibrary.RegisterEntitlementRefreshEventReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIEntitlementRefreshEventReceiverLibrary_RegisterEntitlementRefreshEventReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIEntitlementRefreshEventReceiverLibrary_RegisterEntitlementRefreshEventReceiver) == 0x000008, "Wrong alignment on ModioUIEntitlementRefreshEventReceiverLibrary_RegisterEntitlementRefreshEventReceiver");
static_assert(sizeof(ModioUIEntitlementRefreshEventReceiverLibrary_RegisterEntitlementRefreshEventReceiver) == 0x000008, "Wrong size on ModioUIEntitlementRefreshEventReceiverLibrary_RegisterEntitlementRefreshEventReceiver");
static_assert(offsetof(ModioUIEntitlementRefreshEventReceiverLibrary_RegisterEntitlementRefreshEventReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUIEntitlementRefreshEventReceiverLibrary_RegisterEntitlementRefreshEventReceiver::ObjectToRegister' has a wrong offset!");

// Function ModioUICore.ModioUIHasConfigurableColor.ConfigureWidgetColor
// 0x0020 (0x0020 - 0x0000)
struct ModioUIHasConfigurableColor_ConfigureWidgetColor final
{
public:
	class FName                                   ColorName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColorRef                        ColorValue;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasConfigurableColor_ConfigureWidgetColor) == 0x000004, "Wrong alignment on ModioUIHasConfigurableColor_ConfigureWidgetColor");
static_assert(sizeof(ModioUIHasConfigurableColor_ConfigureWidgetColor) == 0x000020, "Wrong size on ModioUIHasConfigurableColor_ConfigureWidgetColor");
static_assert(offsetof(ModioUIHasConfigurableColor_ConfigureWidgetColor, ColorName) == 0x000000, "Member 'ModioUIHasConfigurableColor_ConfigureWidgetColor::ColorName' has a wrong offset!");
static_assert(offsetof(ModioUIHasConfigurableColor_ConfigureWidgetColor, ColorValue) == 0x000008, "Member 'ModioUIHasConfigurableColor_ConfigureWidgetColor::ColorValue' has a wrong offset!");

// Function ModioUICore.ModioUIHasConfigurableColor.ConfigureWidgetColorDirectly
// 0x001C (0x001C - 0x0000)
struct ModioUIHasConfigurableColor_ConfigureWidgetColorDirectly final
{
public:
	class FName                                   ColorName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            ColorValue;                                        // 0x0008(0x0014)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasConfigurableColor_ConfigureWidgetColorDirectly) == 0x000004, "Wrong alignment on ModioUIHasConfigurableColor_ConfigureWidgetColorDirectly");
static_assert(sizeof(ModioUIHasConfigurableColor_ConfigureWidgetColorDirectly) == 0x00001C, "Wrong size on ModioUIHasConfigurableColor_ConfigureWidgetColorDirectly");
static_assert(offsetof(ModioUIHasConfigurableColor_ConfigureWidgetColorDirectly, ColorName) == 0x000000, "Member 'ModioUIHasConfigurableColor_ConfigureWidgetColorDirectly::ColorName' has a wrong offset!");
static_assert(offsetof(ModioUIHasConfigurableColor_ConfigureWidgetColorDirectly, ColorValue) == 0x000008, "Member 'ModioUIHasConfigurableColor_ConfigureWidgetColorDirectly::ColorValue' has a wrong offset!");

// Function ModioUICore.ModioUIHasLoadStateWidget.AddLoadStateChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIHasLoadStateWidget_AddLoadStateChangedHandler final
{
public:
	TDelegate<void(class UObject* Object, EModioUILoadState NewState)> Handler;                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasLoadStateWidget_AddLoadStateChangedHandler) == 0x000004, "Wrong alignment on ModioUIHasLoadStateWidget_AddLoadStateChangedHandler");
static_assert(sizeof(ModioUIHasLoadStateWidget_AddLoadStateChangedHandler) == 0x000010, "Wrong size on ModioUIHasLoadStateWidget_AddLoadStateChangedHandler");
static_assert(offsetof(ModioUIHasLoadStateWidget_AddLoadStateChangedHandler, Handler) == 0x000000, "Member 'ModioUIHasLoadStateWidget_AddLoadStateChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIHasLoadStateWidget.RemoveLoadStateChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIHasLoadStateWidget_RemoveLoadStateChangedHandler final
{
public:
	TDelegate<void(class UObject* Object, EModioUILoadState NewState)> Handler;                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasLoadStateWidget_RemoveLoadStateChangedHandler) == 0x000004, "Wrong alignment on ModioUIHasLoadStateWidget_RemoveLoadStateChangedHandler");
static_assert(sizeof(ModioUIHasLoadStateWidget_RemoveLoadStateChangedHandler) == 0x000010, "Wrong size on ModioUIHasLoadStateWidget_RemoveLoadStateChangedHandler");
static_assert(offsetof(ModioUIHasLoadStateWidget_RemoveLoadStateChangedHandler, Handler) == 0x000000, "Member 'ModioUIHasLoadStateWidget_RemoveLoadStateChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIHasLoadStateWidget.SetLoadState
// 0x0001 (0x0001 - 0x0000)
struct ModioUIHasLoadStateWidget_SetLoadState final
{
public:
	EModioUILoadState                             NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasLoadStateWidget_SetLoadState) == 0x000001, "Wrong alignment on ModioUIHasLoadStateWidget_SetLoadState");
static_assert(sizeof(ModioUIHasLoadStateWidget_SetLoadState) == 0x000001, "Wrong size on ModioUIHasLoadStateWidget_SetLoadState");
static_assert(offsetof(ModioUIHasLoadStateWidget_SetLoadState, NewState) == 0x000000, "Member 'ModioUIHasLoadStateWidget_SetLoadState::NewState' has a wrong offset!");

// Function ModioUICore.ModioUIHasLoadStateWidget.GetLoadState
// 0x0001 (0x0001 - 0x0000)
struct ModioUIHasLoadStateWidget_GetLoadState final
{
public:
	EModioUILoadState                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasLoadStateWidget_GetLoadState) == 0x000001, "Wrong alignment on ModioUIHasLoadStateWidget_GetLoadState");
static_assert(sizeof(ModioUIHasLoadStateWidget_GetLoadState) == 0x000001, "Wrong size on ModioUIHasLoadStateWidget_GetLoadState");
static_assert(offsetof(ModioUIHasLoadStateWidget_GetLoadState, ReturnValue) == 0x000000, "Member 'ModioUIHasLoadStateWidget_GetLoadState::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIHasTextWidget.GetWidgetText
// 0x0018 (0x0018 - 0x0000)
struct ModioUIHasTextWidget_GetWidgetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasTextWidget_GetWidgetText) == 0x000008, "Wrong alignment on ModioUIHasTextWidget_GetWidgetText");
static_assert(sizeof(ModioUIHasTextWidget_GetWidgetText) == 0x000018, "Wrong size on ModioUIHasTextWidget_GetWidgetText");
static_assert(offsetof(ModioUIHasTextWidget_GetWidgetText, ReturnValue) == 0x000000, "Member 'ModioUIHasTextWidget_GetWidgetText::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIHasTextWidget.GetWidgetTextFont
// 0x0058 (0x0058 - 0x0000)
struct ModioUIHasTextWidget_GetWidgetTextFont final
{
public:
	struct FSlateFontInfo                         ReturnValue;                                       // 0x0000(0x0058)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasTextWidget_GetWidgetTextFont) == 0x000008, "Wrong alignment on ModioUIHasTextWidget_GetWidgetTextFont");
static_assert(sizeof(ModioUIHasTextWidget_GetWidgetTextFont) == 0x000058, "Wrong size on ModioUIHasTextWidget_GetWidgetTextFont");
static_assert(offsetof(ModioUIHasTextWidget_GetWidgetTextFont, ReturnValue) == 0x000000, "Member 'ModioUIHasTextWidget_GetWidgetTextFont::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIHasTextWidget.SetWidgetText
// 0x0018 (0x0018 - 0x0000)
struct ModioUIHasTextWidget_SetWidgetText final
{
public:
	class FText                                   DisplayText;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasTextWidget_SetWidgetText) == 0x000008, "Wrong alignment on ModioUIHasTextWidget_SetWidgetText");
static_assert(sizeof(ModioUIHasTextWidget_SetWidgetText) == 0x000018, "Wrong size on ModioUIHasTextWidget_SetWidgetText");
static_assert(offsetof(ModioUIHasTextWidget_SetWidgetText, DisplayText) == 0x000000, "Member 'ModioUIHasTextWidget_SetWidgetText::DisplayText' has a wrong offset!");

// Function ModioUICore.ModioUIHasTextWidget.SetWidgetTextFont
// 0x0058 (0x0058 - 0x0000)
struct ModioUIHasTextWidget_SetWidgetTextFont final
{
public:
	struct FSlateFontInfo                         FontInfo;                                          // 0x0000(0x0058)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasTextWidget_SetWidgetTextFont) == 0x000008, "Wrong alignment on ModioUIHasTextWidget_SetWidgetTextFont");
static_assert(sizeof(ModioUIHasTextWidget_SetWidgetTextFont) == 0x000058, "Wrong size on ModioUIHasTextWidget_SetWidgetTextFont");
static_assert(offsetof(ModioUIHasTextWidget_SetWidgetTextFont, FontInfo) == 0x000000, "Member 'ModioUIHasTextWidget_SetWidgetTextFont::FontInfo' has a wrong offset!");

// Function ModioUICore.ModioUIHasTooltipWidget.ConfigureTooltip
// 0x0048 (0x0048 - 0x0000)
struct ModioUIHasTooltipWidget_ConfigureTooltip final
{
public:
	class FText                                   TitleText;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   InfoText;                                          // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   TagText;                                           // 0x0030(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasTooltipWidget_ConfigureTooltip) == 0x000008, "Wrong alignment on ModioUIHasTooltipWidget_ConfigureTooltip");
static_assert(sizeof(ModioUIHasTooltipWidget_ConfigureTooltip) == 0x000048, "Wrong size on ModioUIHasTooltipWidget_ConfigureTooltip");
static_assert(offsetof(ModioUIHasTooltipWidget_ConfigureTooltip, TitleText) == 0x000000, "Member 'ModioUIHasTooltipWidget_ConfigureTooltip::TitleText' has a wrong offset!");
static_assert(offsetof(ModioUIHasTooltipWidget_ConfigureTooltip, InfoText) == 0x000018, "Member 'ModioUIHasTooltipWidget_ConfigureTooltip::InfoText' has a wrong offset!");
static_assert(offsetof(ModioUIHasTooltipWidget_ConfigureTooltip, TagText) == 0x000030, "Member 'ModioUIHasTooltipWidget_ConfigureTooltip::TagText' has a wrong offset!");

// Function ModioUICore.ModioUIHasTooltipWidget.SetTooltipEnabledState
// 0x0001 (0x0001 - 0x0000)
struct ModioUIHasTooltipWidget_SetTooltipEnabledState final
{
public:
	bool                                          bNewEnabledState;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHasTooltipWidget_SetTooltipEnabledState) == 0x000001, "Wrong alignment on ModioUIHasTooltipWidget_SetTooltipEnabledState");
static_assert(sizeof(ModioUIHasTooltipWidget_SetTooltipEnabledState) == 0x000001, "Wrong size on ModioUIHasTooltipWidget_SetTooltipEnabledState");
static_assert(offsetof(ModioUIHasTooltipWidget_SetTooltipEnabledState, bNewEnabledState) == 0x000000, "Member 'ModioUIHasTooltipWidget_SetTooltipEnabledState::bNewEnabledState' has a wrong offset!");

// Function ModioUICore.ModioUIHoverableWidget.AddHoverStateChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIHoverableWidget_AddHoverStateChangedHandler final
{
public:
	TDelegate<void(class UObject* HoverContext, bool bHoveredState)> Handler;                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHoverableWidget_AddHoverStateChangedHandler) == 0x000004, "Wrong alignment on ModioUIHoverableWidget_AddHoverStateChangedHandler");
static_assert(sizeof(ModioUIHoverableWidget_AddHoverStateChangedHandler) == 0x000010, "Wrong size on ModioUIHoverableWidget_AddHoverStateChangedHandler");
static_assert(offsetof(ModioUIHoverableWidget_AddHoverStateChangedHandler, Handler) == 0x000000, "Member 'ModioUIHoverableWidget_AddHoverStateChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIHoverableWidget.RemoveHoverStateChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIHoverableWidget_RemoveHoverStateChangedHandler final
{
public:
	TDelegate<void(class UObject* HoverContext, bool bHoveredState)> Handler;                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIHoverableWidget_RemoveHoverStateChangedHandler) == 0x000004, "Wrong alignment on ModioUIHoverableWidget_RemoveHoverStateChangedHandler");
static_assert(sizeof(ModioUIHoverableWidget_RemoveHoverStateChangedHandler) == 0x000010, "Wrong size on ModioUIHoverableWidget_RemoveHoverStateChangedHandler");
static_assert(offsetof(ModioUIHoverableWidget_RemoveHoverStateChangedHandler, Handler) == 0x000000, "Member 'ModioUIHoverableWidget_RemoveHoverStateChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIImageDisplayWidget.AddImageLoadEventHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIImageDisplayWidget_AddImageLoadEventHandler final
{
public:
	TDelegate<void(class UObject* LoadContext, bool bLoadSuccess)> Handler;                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIImageDisplayWidget_AddImageLoadEventHandler) == 0x000004, "Wrong alignment on ModioUIImageDisplayWidget_AddImageLoadEventHandler");
static_assert(sizeof(ModioUIImageDisplayWidget_AddImageLoadEventHandler) == 0x000010, "Wrong size on ModioUIImageDisplayWidget_AddImageLoadEventHandler");
static_assert(offsetof(ModioUIImageDisplayWidget_AddImageLoadEventHandler, Handler) == 0x000000, "Member 'ModioUIImageDisplayWidget_AddImageLoadEventHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIImageDisplayWidget.BeginLoadImageFromFile
// 0x0010 (0x0010 - 0x0000)
struct ModioUIImageDisplayWidget_BeginLoadImageFromFile final
{
public:
	struct FModioImageWrapper                     Image;                                             // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIImageDisplayWidget_BeginLoadImageFromFile) == 0x000008, "Wrong alignment on ModioUIImageDisplayWidget_BeginLoadImageFromFile");
static_assert(sizeof(ModioUIImageDisplayWidget_BeginLoadImageFromFile) == 0x000010, "Wrong size on ModioUIImageDisplayWidget_BeginLoadImageFromFile");
static_assert(offsetof(ModioUIImageDisplayWidget_BeginLoadImageFromFile, Image) == 0x000000, "Member 'ModioUIImageDisplayWidget_BeginLoadImageFromFile::Image' has a wrong offset!");

// Function ModioUICore.ModioUIImageDisplayWidget.RemoveImageLoadEventHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIImageDisplayWidget_RemoveImageLoadEventHandler final
{
public:
	TDelegate<void(class UObject* LoadContext, bool bLoadSuccess)> Handler;                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIImageDisplayWidget_RemoveImageLoadEventHandler) == 0x000004, "Wrong alignment on ModioUIImageDisplayWidget_RemoveImageLoadEventHandler");
static_assert(sizeof(ModioUIImageDisplayWidget_RemoveImageLoadEventHandler) == 0x000010, "Wrong size on ModioUIImageDisplayWidget_RemoveImageLoadEventHandler");
static_assert(offsetof(ModioUIImageDisplayWidget_RemoveImageLoadEventHandler, Handler) == 0x000000, "Member 'ModioUIImageDisplayWidget_RemoveImageLoadEventHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIImageDisplayWidget.SetBrushDirectly
// 0x00D0 (0x00D0 - 0x0000)
struct ModioUIImageDisplayWidget_SetBrushDirectly final
{
public:
	struct FSlateBrush                            NewBrush;                                          // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIImageDisplayWidget_SetBrushDirectly) == 0x000010, "Wrong alignment on ModioUIImageDisplayWidget_SetBrushDirectly");
static_assert(sizeof(ModioUIImageDisplayWidget_SetBrushDirectly) == 0x0000D0, "Wrong size on ModioUIImageDisplayWidget_SetBrushDirectly");
static_assert(offsetof(ModioUIImageDisplayWidget_SetBrushDirectly, NewBrush) == 0x000000, "Member 'ModioUIImageDisplayWidget_SetBrushDirectly::NewBrush' has a wrong offset!");

// Function ModioUICore.ModioUIImageDisplayWidget.SetBrushMatchTextureSize
// 0x0001 (0x0001 - 0x0000)
struct ModioUIImageDisplayWidget_SetBrushMatchTextureSize final
{
public:
	bool                                          bMatchTextureSize;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIImageDisplayWidget_SetBrushMatchTextureSize) == 0x000001, "Wrong alignment on ModioUIImageDisplayWidget_SetBrushMatchTextureSize");
static_assert(sizeof(ModioUIImageDisplayWidget_SetBrushMatchTextureSize) == 0x000001, "Wrong size on ModioUIImageDisplayWidget_SetBrushMatchTextureSize");
static_assert(offsetof(ModioUIImageDisplayWidget_SetBrushMatchTextureSize, bMatchTextureSize) == 0x000000, "Member 'ModioUIImageDisplayWidget_SetBrushMatchTextureSize::bMatchTextureSize' has a wrong offset!");

// Function ModioUICore.ModioUIImageDisplayWidget.SetDesiredBrushSize
// 0x0010 (0x0010 - 0x0000)
struct ModioUIImageDisplayWidget_SetDesiredBrushSize final
{
public:
	struct FVector2D                              DesiredSize;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIImageDisplayWidget_SetDesiredBrushSize) == 0x000008, "Wrong alignment on ModioUIImageDisplayWidget_SetDesiredBrushSize");
static_assert(sizeof(ModioUIImageDisplayWidget_SetDesiredBrushSize) == 0x000010, "Wrong size on ModioUIImageDisplayWidget_SetDesiredBrushSize");
static_assert(offsetof(ModioUIImageDisplayWidget_SetDesiredBrushSize, DesiredSize) == 0x000000, "Member 'ModioUIImageDisplayWidget_SetDesiredBrushSize::DesiredSize' has a wrong offset!");

// Function ModioUICore.ModioUIMediaDownloadCompletedReceiver.OnModCreatorAvatarDownloadCompleted
// 0x0028 (0x0028 - 0x0000)
struct ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioErrorCode                        ErrorCode;                                         // 0x0008(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FModioOptionalImage                    Image;                                             // 0x0010(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted) == 0x000008, "Wrong alignment on ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted");
static_assert(sizeof(ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted) == 0x000028, "Wrong size on ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted, ModId) == 0x000000, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted::ModId' has a wrong offset!");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted, ErrorCode) == 0x000008, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted, Image) == 0x000010, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModCreatorAvatarDownloadCompleted::Image' has a wrong offset!");

// Function ModioUICore.ModioUIMediaDownloadCompletedReceiver.OnModGalleryImageDownloadCompleted
// 0x0030 (0x0030 - 0x0000)
struct ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioErrorCode                        ErrorCode;                                         // 0x0008(0x0008)(Parm, NativeAccessSpecifierPublic)
	int32                                         ImageIndex;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioOptionalImage                    Image;                                             // 0x0018(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted) == 0x000008, "Wrong alignment on ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted");
static_assert(sizeof(ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted) == 0x000030, "Wrong size on ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted, ModId) == 0x000000, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted::ModId' has a wrong offset!");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted, ErrorCode) == 0x000008, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted, ImageIndex) == 0x000010, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted::ImageIndex' has a wrong offset!");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted, Image) == 0x000018, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModGalleryImageDownloadCompleted::Image' has a wrong offset!");

// Function ModioUICore.ModioUIMediaDownloadCompletedReceiver.OnModLogoDownloadCompleted
// 0x0030 (0x0030 - 0x0000)
struct ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioErrorCode                        ErrorCode;                                         // 0x0008(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FModioOptionalImage                    Image;                                             // 0x0010(0x0018)(Parm, NativeAccessSpecifierPublic)
	EModioLogoSize                                LogoSize;                                          // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted) == 0x000008, "Wrong alignment on ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted");
static_assert(sizeof(ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted) == 0x000030, "Wrong size on ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted, ModId) == 0x000000, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted::ModId' has a wrong offset!");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted, ErrorCode) == 0x000008, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted, Image) == 0x000010, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted::Image' has a wrong offset!");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted, LogoSize) == 0x000028, "Member 'ModioUIMediaDownloadCompletedReceiver_OnModLogoDownloadCompleted::LogoSize' has a wrong offset!");

// Function ModioUICore.ModioUIMediaDownloadCompletedReceiverLibrary.DeregisterMediaDownloadCompletedReceiver
// 0x0010 (0x0010 - 0x0000)
struct ModioUIMediaDownloadCompletedReceiverLibrary_DeregisterMediaDownloadCompletedReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioUIMediaDownloadEventType                DownloadTypes;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIMediaDownloadCompletedReceiverLibrary_DeregisterMediaDownloadCompletedReceiver) == 0x000008, "Wrong alignment on ModioUIMediaDownloadCompletedReceiverLibrary_DeregisterMediaDownloadCompletedReceiver");
static_assert(sizeof(ModioUIMediaDownloadCompletedReceiverLibrary_DeregisterMediaDownloadCompletedReceiver) == 0x000010, "Wrong size on ModioUIMediaDownloadCompletedReceiverLibrary_DeregisterMediaDownloadCompletedReceiver");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiverLibrary_DeregisterMediaDownloadCompletedReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUIMediaDownloadCompletedReceiverLibrary_DeregisterMediaDownloadCompletedReceiver::ObjectToDeregister' has a wrong offset!");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiverLibrary_DeregisterMediaDownloadCompletedReceiver, DownloadTypes) == 0x000008, "Member 'ModioUIMediaDownloadCompletedReceiverLibrary_DeregisterMediaDownloadCompletedReceiver::DownloadTypes' has a wrong offset!");

// Function ModioUICore.ModioUIMediaDownloadCompletedReceiverLibrary.RegisterMediaDownloadCompletedReceiver
// 0x0010 (0x0010 - 0x0000)
struct ModioUIMediaDownloadCompletedReceiverLibrary_RegisterMediaDownloadCompletedReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioUIMediaDownloadEventType                DownloadTypes;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIMediaDownloadCompletedReceiverLibrary_RegisterMediaDownloadCompletedReceiver) == 0x000008, "Wrong alignment on ModioUIMediaDownloadCompletedReceiverLibrary_RegisterMediaDownloadCompletedReceiver");
static_assert(sizeof(ModioUIMediaDownloadCompletedReceiverLibrary_RegisterMediaDownloadCompletedReceiver) == 0x000010, "Wrong size on ModioUIMediaDownloadCompletedReceiverLibrary_RegisterMediaDownloadCompletedReceiver");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiverLibrary_RegisterMediaDownloadCompletedReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUIMediaDownloadCompletedReceiverLibrary_RegisterMediaDownloadCompletedReceiver::ObjectToRegister' has a wrong offset!");
static_assert(offsetof(ModioUIMediaDownloadCompletedReceiverLibrary_RegisterMediaDownloadCompletedReceiver, DownloadTypes) == 0x000008, "Member 'ModioUIMediaDownloadCompletedReceiverLibrary_RegisterMediaDownloadCompletedReceiver::DownloadTypes' has a wrong offset!");

// Function ModioUICore.ModioUIModEnabledStateChangedReceiver.OnModEnabledStateChanged
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModEnabledStateChangedReceiver_OnModEnabledStateChanged final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewEnabledState;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIModEnabledStateChangedReceiver_OnModEnabledStateChanged) == 0x000008, "Wrong alignment on ModioUIModEnabledStateChangedReceiver_OnModEnabledStateChanged");
static_assert(sizeof(ModioUIModEnabledStateChangedReceiver_OnModEnabledStateChanged) == 0x000010, "Wrong size on ModioUIModEnabledStateChangedReceiver_OnModEnabledStateChanged");
static_assert(offsetof(ModioUIModEnabledStateChangedReceiver_OnModEnabledStateChanged, ModId) == 0x000000, "Member 'ModioUIModEnabledStateChangedReceiver_OnModEnabledStateChanged::ModId' has a wrong offset!");
static_assert(offsetof(ModioUIModEnabledStateChangedReceiver_OnModEnabledStateChanged, bNewEnabledState) == 0x000008, "Member 'ModioUIModEnabledStateChangedReceiver_OnModEnabledStateChanged::bNewEnabledState' has a wrong offset!");

// Function ModioUICore.ModioUIModEnabledStateChangedReceiverLibrary.DeregisterModEnabledStateChangedReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIModEnabledStateChangedReceiverLibrary_DeregisterModEnabledStateChangedReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModEnabledStateChangedReceiverLibrary_DeregisterModEnabledStateChangedReceiver) == 0x000008, "Wrong alignment on ModioUIModEnabledStateChangedReceiverLibrary_DeregisterModEnabledStateChangedReceiver");
static_assert(sizeof(ModioUIModEnabledStateChangedReceiverLibrary_DeregisterModEnabledStateChangedReceiver) == 0x000008, "Wrong size on ModioUIModEnabledStateChangedReceiverLibrary_DeregisterModEnabledStateChangedReceiver");
static_assert(offsetof(ModioUIModEnabledStateChangedReceiverLibrary_DeregisterModEnabledStateChangedReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUIModEnabledStateChangedReceiverLibrary_DeregisterModEnabledStateChangedReceiver::ObjectToDeregister' has a wrong offset!");

// Function ModioUICore.ModioUIModEnabledStateChangedReceiverLibrary.RegisterModEnabledStateChangedReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIModEnabledStateChangedReceiverLibrary_RegisterModEnabledStateChangedReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModEnabledStateChangedReceiverLibrary_RegisterModEnabledStateChangedReceiver) == 0x000008, "Wrong alignment on ModioUIModEnabledStateChangedReceiverLibrary_RegisterModEnabledStateChangedReceiver");
static_assert(sizeof(ModioUIModEnabledStateChangedReceiverLibrary_RegisterModEnabledStateChangedReceiver) == 0x000008, "Wrong size on ModioUIModEnabledStateChangedReceiverLibrary_RegisterModEnabledStateChangedReceiver");
static_assert(offsetof(ModioUIModEnabledStateChangedReceiverLibrary_RegisterModEnabledStateChangedReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUIModEnabledStateChangedReceiverLibrary_RegisterModEnabledStateChangedReceiver::ObjectToRegister' has a wrong offset!");

// Function ModioUICore.ModioUIModEnabledStateProvider.AddModEnabledStateChangeHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModEnabledStateProvider_AddModEnabledStateChangeHandler final
{
public:
	TDelegate<void(int64 RawID, bool bNewEnabledState)> Handler;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModEnabledStateProvider_AddModEnabledStateChangeHandler) == 0x000004, "Wrong alignment on ModioUIModEnabledStateProvider_AddModEnabledStateChangeHandler");
static_assert(sizeof(ModioUIModEnabledStateProvider_AddModEnabledStateChangeHandler) == 0x000010, "Wrong size on ModioUIModEnabledStateProvider_AddModEnabledStateChangeHandler");
static_assert(offsetof(ModioUIModEnabledStateProvider_AddModEnabledStateChangeHandler, Handler) == 0x000000, "Member 'ModioUIModEnabledStateProvider_AddModEnabledStateChangeHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIModEnabledStateProvider.QueryIsModEnabled
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModEnabledStateProvider_QueryIsModEnabled final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIModEnabledStateProvider_QueryIsModEnabled) == 0x000008, "Wrong alignment on ModioUIModEnabledStateProvider_QueryIsModEnabled");
static_assert(sizeof(ModioUIModEnabledStateProvider_QueryIsModEnabled) == 0x000010, "Wrong size on ModioUIModEnabledStateProvider_QueryIsModEnabled");
static_assert(offsetof(ModioUIModEnabledStateProvider_QueryIsModEnabled, ModId) == 0x000000, "Member 'ModioUIModEnabledStateProvider_QueryIsModEnabled::ModId' has a wrong offset!");
static_assert(offsetof(ModioUIModEnabledStateProvider_QueryIsModEnabled, ReturnValue) == 0x000008, "Member 'ModioUIModEnabledStateProvider_QueryIsModEnabled::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIModEnabledStateProvider.RemoveModEnabledStateChangeHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModEnabledStateProvider_RemoveModEnabledStateChangeHandler final
{
public:
	TDelegate<void(int64 RawID, bool bNewEnabledState)> Handler;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModEnabledStateProvider_RemoveModEnabledStateChangeHandler) == 0x000004, "Wrong alignment on ModioUIModEnabledStateProvider_RemoveModEnabledStateChangeHandler");
static_assert(sizeof(ModioUIModEnabledStateProvider_RemoveModEnabledStateChangeHandler) == 0x000010, "Wrong size on ModioUIModEnabledStateProvider_RemoveModEnabledStateChangeHandler");
static_assert(offsetof(ModioUIModEnabledStateProvider_RemoveModEnabledStateChangeHandler, Handler) == 0x000000, "Member 'ModioUIModEnabledStateProvider_RemoveModEnabledStateChangeHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIModEnabledStateProvider.RequestModEnabledStateChange
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModEnabledStateProvider_RequestModEnabledStateChange final
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewEnabledState;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIModEnabledStateProvider_RequestModEnabledStateChange) == 0x000008, "Wrong alignment on ModioUIModEnabledStateProvider_RequestModEnabledStateChange");
static_assert(sizeof(ModioUIModEnabledStateProvider_RequestModEnabledStateChange) == 0x000010, "Wrong size on ModioUIModEnabledStateProvider_RequestModEnabledStateChange");
static_assert(offsetof(ModioUIModEnabledStateProvider_RequestModEnabledStateChange, ID) == 0x000000, "Member 'ModioUIModEnabledStateProvider_RequestModEnabledStateChange::ID' has a wrong offset!");
static_assert(offsetof(ModioUIModEnabledStateProvider_RequestModEnabledStateChange, bNewEnabledState) == 0x000008, "Member 'ModioUIModEnabledStateProvider_RequestModEnabledStateChange::bNewEnabledState' has a wrong offset!");
static_assert(offsetof(ModioUIModEnabledStateProvider_RequestModEnabledStateChange, ReturnValue) == 0x000009, "Member 'ModioUIModEnabledStateProvider_RequestModEnabledStateChange::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIModInfoReceiver.OnListAllModsRequestCompleted
// 0x0048 (0x0048 - 0x0000)
struct ModioUIModInfoReceiver_OnListAllModsRequestCompleted final
{
public:
	class FString                                 RequestIdentifier;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioErrorCode                        ErrorCode;                                         // 0x0010(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FModioOptionalModInfoList              List;                                              // 0x0018(0x0030)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModInfoReceiver_OnListAllModsRequestCompleted) == 0x000008, "Wrong alignment on ModioUIModInfoReceiver_OnListAllModsRequestCompleted");
static_assert(sizeof(ModioUIModInfoReceiver_OnListAllModsRequestCompleted) == 0x000048, "Wrong size on ModioUIModInfoReceiver_OnListAllModsRequestCompleted");
static_assert(offsetof(ModioUIModInfoReceiver_OnListAllModsRequestCompleted, RequestIdentifier) == 0x000000, "Member 'ModioUIModInfoReceiver_OnListAllModsRequestCompleted::RequestIdentifier' has a wrong offset!");
static_assert(offsetof(ModioUIModInfoReceiver_OnListAllModsRequestCompleted, ErrorCode) == 0x000010, "Member 'ModioUIModInfoReceiver_OnListAllModsRequestCompleted::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUIModInfoReceiver_OnListAllModsRequestCompleted, List) == 0x000018, "Member 'ModioUIModInfoReceiver_OnListAllModsRequestCompleted::List' has a wrong offset!");

// Function ModioUICore.ModioUIModInfoReceiver.OnModInfoRequestCompleted
// 0x0200 (0x0200 - 0x0000)
struct ModioUIModInfoReceiver_OnModInfoRequestCompleted final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioErrorCode                        ErrorCode;                                         // 0x0008(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FModioOptionalModInfo                  Info;                                              // 0x0010(0x01F0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModInfoReceiver_OnModInfoRequestCompleted) == 0x000008, "Wrong alignment on ModioUIModInfoReceiver_OnModInfoRequestCompleted");
static_assert(sizeof(ModioUIModInfoReceiver_OnModInfoRequestCompleted) == 0x000200, "Wrong size on ModioUIModInfoReceiver_OnModInfoRequestCompleted");
static_assert(offsetof(ModioUIModInfoReceiver_OnModInfoRequestCompleted, ModId) == 0x000000, "Member 'ModioUIModInfoReceiver_OnModInfoRequestCompleted::ModId' has a wrong offset!");
static_assert(offsetof(ModioUIModInfoReceiver_OnModInfoRequestCompleted, ErrorCode) == 0x000008, "Member 'ModioUIModInfoReceiver_OnModInfoRequestCompleted::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUIModInfoReceiver_OnModInfoRequestCompleted, Info) == 0x000010, "Member 'ModioUIModInfoReceiver_OnModInfoRequestCompleted::Info' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.EnableModManagement
// 0x0008 (0x0008 - 0x0000)
struct ModioUISubsystem_EnableModManagement final
{
public:
	struct FModioErrorCode                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_EnableModManagement) == 0x000008, "Wrong alignment on ModioUISubsystem_EnableModManagement");
static_assert(sizeof(ModioUISubsystem_EnableModManagement) == 0x000008, "Wrong size on ModioUISubsystem_EnableModManagement");
static_assert(offsetof(ModioUISubsystem_EnableModManagement, ReturnValue) == 0x000000, "Member 'ModioUISubsystem_EnableModManagement::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.GetCurrentDPIScaleValue
// 0x0004 (0x0004 - 0x0000)
struct ModioUISubsystem_GetCurrentDPIScaleValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_GetCurrentDPIScaleValue) == 0x000004, "Wrong alignment on ModioUISubsystem_GetCurrentDPIScaleValue");
static_assert(sizeof(ModioUISubsystem_GetCurrentDPIScaleValue) == 0x000004, "Wrong size on ModioUISubsystem_GetCurrentDPIScaleValue");
static_assert(offsetof(ModioUISubsystem_GetCurrentDPIScaleValue, ReturnValue) == 0x000000, "Member 'ModioUISubsystem_GetCurrentDPIScaleValue::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.IsUGCFeatureEnabled
// 0x0002 (0x0002 - 0x0000)
struct ModioUISubsystem_IsUGCFeatureEnabled final
{
public:
	EModioUIFeatureFlags                          Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_IsUGCFeatureEnabled) == 0x000001, "Wrong alignment on ModioUISubsystem_IsUGCFeatureEnabled");
static_assert(sizeof(ModioUISubsystem_IsUGCFeatureEnabled) == 0x000002, "Wrong size on ModioUISubsystem_IsUGCFeatureEnabled");
static_assert(offsetof(ModioUISubsystem_IsUGCFeatureEnabled, Feature) == 0x000000, "Member 'ModioUISubsystem_IsUGCFeatureEnabled::Feature' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_IsUGCFeatureEnabled, ReturnValue) == 0x000001, "Member 'ModioUISubsystem_IsUGCFeatureEnabled::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.NotifyConnectivityChange
// 0x0001 (0x0001 - 0x0000)
struct ModioUISubsystem_NotifyConnectivityChange final
{
public:
	bool                                          bNewConnectivityState;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_NotifyConnectivityChange) == 0x000001, "Wrong alignment on ModioUISubsystem_NotifyConnectivityChange");
static_assert(sizeof(ModioUISubsystem_NotifyConnectivityChange) == 0x000001, "Wrong size on ModioUISubsystem_NotifyConnectivityChange");
static_assert(offsetof(ModioUISubsystem_NotifyConnectivityChange, bNewConnectivityState) == 0x000000, "Member 'ModioUISubsystem_NotifyConnectivityChange::bNewConnectivityState' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.OnModEnabledChanged
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_OnModEnabledChanged final
{
public:
	int64                                         RawModID;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewEnabledState;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUISubsystem_OnModEnabledChanged) == 0x000008, "Wrong alignment on ModioUISubsystem_OnModEnabledChanged");
static_assert(sizeof(ModioUISubsystem_OnModEnabledChanged) == 0x000010, "Wrong size on ModioUISubsystem_OnModEnabledChanged");
static_assert(offsetof(ModioUISubsystem_OnModEnabledChanged, RawModID) == 0x000000, "Member 'ModioUISubsystem_OnModEnabledChanged::RawModID' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_OnModEnabledChanged, bNewEnabledState) == 0x000008, "Member 'ModioUISubsystem_OnModEnabledChanged::bNewEnabledState' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.QueryConnectivityState
// 0x0001 (0x0001 - 0x0000)
struct ModioUISubsystem_QueryConnectivityState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_QueryConnectivityState) == 0x000001, "Wrong alignment on ModioUISubsystem_QueryConnectivityState");
static_assert(sizeof(ModioUISubsystem_QueryConnectivityState) == 0x000001, "Wrong size on ModioUISubsystem_QueryConnectivityState");
static_assert(offsetof(ModioUISubsystem_QueryConnectivityState, ReturnValue) == 0x000000, "Member 'ModioUISubsystem_QueryConnectivityState::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.QueryIsModEnabled
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_QueryIsModEnabled final
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUISubsystem_QueryIsModEnabled) == 0x000008, "Wrong alignment on ModioUISubsystem_QueryIsModEnabled");
static_assert(sizeof(ModioUISubsystem_QueryIsModEnabled) == 0x000010, "Wrong size on ModioUISubsystem_QueryIsModEnabled");
static_assert(offsetof(ModioUISubsystem_QueryIsModEnabled, ID) == 0x000000, "Member 'ModioUISubsystem_QueryIsModEnabled::ID' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_QueryIsModEnabled, ReturnValue) == 0x000008, "Member 'ModioUISubsystem_QueryIsModEnabled::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestEmailAuthenticationWithHandler
// 0x0020 (0x0020 - 0x0000)
struct ModioUISubsystem_RequestEmailAuthenticationWithHandler final
{
public:
	struct FModioEmailAuthCode                    Code;                                              // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                               // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_RequestEmailAuthenticationWithHandler) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestEmailAuthenticationWithHandler");
static_assert(sizeof(ModioUISubsystem_RequestEmailAuthenticationWithHandler) == 0x000020, "Wrong size on ModioUISubsystem_RequestEmailAuthenticationWithHandler");
static_assert(offsetof(ModioUISubsystem_RequestEmailAuthenticationWithHandler, Code) == 0x000000, "Member 'ModioUISubsystem_RequestEmailAuthenticationWithHandler::Code' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestEmailAuthenticationWithHandler, Callback) == 0x000010, "Member 'ModioUISubsystem_RequestEmailAuthenticationWithHandler::Callback' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestGalleryImageDownloadForModID
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_RequestGalleryImageDownloadForModID final
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioGallerySize                             ImageSize;                                         // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUISubsystem_RequestGalleryImageDownloadForModID) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestGalleryImageDownloadForModID");
static_assert(sizeof(ModioUISubsystem_RequestGalleryImageDownloadForModID) == 0x000010, "Wrong size on ModioUISubsystem_RequestGalleryImageDownloadForModID");
static_assert(offsetof(ModioUISubsystem_RequestGalleryImageDownloadForModID, ID) == 0x000000, "Member 'ModioUISubsystem_RequestGalleryImageDownloadForModID::ID' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestGalleryImageDownloadForModID, Index_0) == 0x000008, "Member 'ModioUISubsystem_RequestGalleryImageDownloadForModID::Index_0' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestGalleryImageDownloadForModID, ImageSize) == 0x00000C, "Member 'ModioUISubsystem_RequestGalleryImageDownloadForModID::ImageSize' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestListAllMods
// 0x00C8 (0x00C8 - 0x0000)
struct ModioUISubsystem_RequestListAllMods final
{
public:
	struct FModioFilterParams                     Params_0;                                          // 0x0000(0x00B8)(Parm, NativeAccessSpecifierPublic)
	class FString                                 RequestIdentifier;                                 // 0x00B8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_RequestListAllMods) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestListAllMods");
static_assert(sizeof(ModioUISubsystem_RequestListAllMods) == 0x0000C8, "Wrong size on ModioUISubsystem_RequestListAllMods");
static_assert(offsetof(ModioUISubsystem_RequestListAllMods, Params_0) == 0x000000, "Member 'ModioUISubsystem_RequestListAllMods::Params_0' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestListAllMods, RequestIdentifier) == 0x0000B8, "Member 'ModioUISubsystem_RequestListAllMods::RequestIdentifier' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestLogoDownloadForModID
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_RequestLogoDownloadForModID final
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioLogoSize                                LogoSize;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUISubsystem_RequestLogoDownloadForModID) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestLogoDownloadForModID");
static_assert(sizeof(ModioUISubsystem_RequestLogoDownloadForModID) == 0x000010, "Wrong size on ModioUISubsystem_RequestLogoDownloadForModID");
static_assert(offsetof(ModioUISubsystem_RequestLogoDownloadForModID, ID) == 0x000000, "Member 'ModioUISubsystem_RequestLogoDownloadForModID::ID' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestLogoDownloadForModID, LogoSize) == 0x000008, "Member 'ModioUISubsystem_RequestLogoDownloadForModID::LogoSize' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestModEnabledStateChange
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_RequestModEnabledStateChange final
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewEnabledState;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUISubsystem_RequestModEnabledStateChange) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestModEnabledStateChange");
static_assert(sizeof(ModioUISubsystem_RequestModEnabledStateChange) == 0x000010, "Wrong size on ModioUISubsystem_RequestModEnabledStateChange");
static_assert(offsetof(ModioUISubsystem_RequestModEnabledStateChange, ID) == 0x000000, "Member 'ModioUISubsystem_RequestModEnabledStateChange::ID' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestModEnabledStateChange, bNewEnabledState) == 0x000008, "Member 'ModioUISubsystem_RequestModEnabledStateChange::bNewEnabledState' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestModEnabledStateChange, ReturnValue) == 0x000009, "Member 'ModioUISubsystem_RequestModEnabledStateChange::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestModInfoForModIDs
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_RequestModInfoForModIDs final
{
public:
	TArray<struct FModioModID>                    IDs;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_RequestModInfoForModIDs) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestModInfoForModIDs");
static_assert(sizeof(ModioUISubsystem_RequestModInfoForModIDs) == 0x000010, "Wrong size on ModioUISubsystem_RequestModInfoForModIDs");
static_assert(offsetof(ModioUISubsystem_RequestModInfoForModIDs, IDs) == 0x000000, "Member 'ModioUISubsystem_RequestModInfoForModIDs::IDs' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestPurchaseForModIDWithHandler
// 0x0020 (0x0020 - 0x0000)
struct ModioUISubsystem_RequestPurchaseForModIDWithHandler final
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       ExpectedPrice;                                     // 0x0008(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalTransactionRecord& Transaction)> Callback; // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_RequestPurchaseForModIDWithHandler) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestPurchaseForModIDWithHandler");
static_assert(sizeof(ModioUISubsystem_RequestPurchaseForModIDWithHandler) == 0x000020, "Wrong size on ModioUISubsystem_RequestPurchaseForModIDWithHandler");
static_assert(offsetof(ModioUISubsystem_RequestPurchaseForModIDWithHandler, ID) == 0x000000, "Member 'ModioUISubsystem_RequestPurchaseForModIDWithHandler::ID' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestPurchaseForModIDWithHandler, ExpectedPrice) == 0x000008, "Member 'ModioUISubsystem_RequestPurchaseForModIDWithHandler::ExpectedPrice' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestPurchaseForModIDWithHandler, Callback) == 0x000010, "Member 'ModioUISubsystem_RequestPurchaseForModIDWithHandler::Callback' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestPurchaseTokenPack
// 0x0028 (0x0028 - 0x0000)
struct ModioUISubsystem_RequestPurchaseTokenPack final
{
public:
	struct FModioTokenPackID                      TokenPackID;                                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, const class FString& Message)> Callback;                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUISubsystem_RequestPurchaseTokenPack) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestPurchaseTokenPack");
static_assert(sizeof(ModioUISubsystem_RequestPurchaseTokenPack) == 0x000028, "Wrong size on ModioUISubsystem_RequestPurchaseTokenPack");
static_assert(offsetof(ModioUISubsystem_RequestPurchaseTokenPack, TokenPackID) == 0x000000, "Member 'ModioUISubsystem_RequestPurchaseTokenPack::TokenPackID' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestPurchaseTokenPack, Callback) == 0x000010, "Member 'ModioUISubsystem_RequestPurchaseTokenPack::Callback' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestPurchaseTokenPack, ReturnValue) == 0x000020, "Member 'ModioUISubsystem_RequestPurchaseTokenPack::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestRemoveSubscriptionForModID
// 0x0008 (0x0008 - 0x0000)
struct ModioUISubsystem_RequestRemoveSubscriptionForModID final
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_RequestRemoveSubscriptionForModID) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestRemoveSubscriptionForModID");
static_assert(sizeof(ModioUISubsystem_RequestRemoveSubscriptionForModID) == 0x000008, "Wrong size on ModioUISubsystem_RequestRemoveSubscriptionForModID");
static_assert(offsetof(ModioUISubsystem_RequestRemoveSubscriptionForModID, ID) == 0x000000, "Member 'ModioUISubsystem_RequestRemoveSubscriptionForModID::ID' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestRemoveSubscriptionForModIDWithHandler
// 0x0018 (0x0018 - 0x0000)
struct ModioUISubsystem_RequestRemoveSubscriptionForModIDWithHandler final
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> DedicatedCallback;                      // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_RequestRemoveSubscriptionForModIDWithHandler) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestRemoveSubscriptionForModIDWithHandler");
static_assert(sizeof(ModioUISubsystem_RequestRemoveSubscriptionForModIDWithHandler) == 0x000018, "Wrong size on ModioUISubsystem_RequestRemoveSubscriptionForModIDWithHandler");
static_assert(offsetof(ModioUISubsystem_RequestRemoveSubscriptionForModIDWithHandler, ID) == 0x000000, "Member 'ModioUISubsystem_RequestRemoveSubscriptionForModIDWithHandler::ID' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestRemoveSubscriptionForModIDWithHandler, DedicatedCallback) == 0x000008, "Member 'ModioUISubsystem_RequestRemoveSubscriptionForModIDWithHandler::DedicatedCallback' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestShowDialog
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_RequestShowDialog final
{
public:
	EModioUIDialogType                            DialogType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                DataSource;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_RequestShowDialog) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestShowDialog");
static_assert(sizeof(ModioUISubsystem_RequestShowDialog) == 0x000010, "Wrong size on ModioUISubsystem_RequestShowDialog");
static_assert(offsetof(ModioUISubsystem_RequestShowDialog, DialogType) == 0x000000, "Member 'ModioUISubsystem_RequestShowDialog::DialogType' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestShowDialog, DataSource) == 0x000008, "Member 'ModioUISubsystem_RequestShowDialog::DataSource' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestShowTokenPurchaseUI
// 0x0001 (0x0001 - 0x0000)
struct ModioUISubsystem_RequestShowTokenPurchaseUI final
{
public:
	EModioOpenStoreResult                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_RequestShowTokenPurchaseUI) == 0x000001, "Wrong alignment on ModioUISubsystem_RequestShowTokenPurchaseUI");
static_assert(sizeof(ModioUISubsystem_RequestShowTokenPurchaseUI) == 0x000001, "Wrong size on ModioUISubsystem_RequestShowTokenPurchaseUI");
static_assert(offsetof(ModioUISubsystem_RequestShowTokenPurchaseUI, ReturnValue) == 0x000000, "Member 'ModioUISubsystem_RequestShowTokenPurchaseUI::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestShowTokenPurchaseUIWithHandler
// 0x0014 (0x0014 - 0x0000)
struct ModioUISubsystem_RequestShowTokenPurchaseUIWithHandler final
{
public:
	TDelegate<void(bool bResult, const class FString& Message)> Callback;                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioOpenStoreResult                         ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUISubsystem_RequestShowTokenPurchaseUIWithHandler) == 0x000004, "Wrong alignment on ModioUISubsystem_RequestShowTokenPurchaseUIWithHandler");
static_assert(sizeof(ModioUISubsystem_RequestShowTokenPurchaseUIWithHandler) == 0x000014, "Wrong size on ModioUISubsystem_RequestShowTokenPurchaseUIWithHandler");
static_assert(offsetof(ModioUISubsystem_RequestShowTokenPurchaseUIWithHandler, Callback) == 0x000000, "Member 'ModioUISubsystem_RequestShowTokenPurchaseUIWithHandler::Callback' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestShowTokenPurchaseUIWithHandler, ReturnValue) == 0x000010, "Member 'ModioUISubsystem_RequestShowTokenPurchaseUIWithHandler::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestSubscriptionForModID
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_RequestSubscriptionForModID final
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IncludeDependencies;                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUISubsystem_RequestSubscriptionForModID) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestSubscriptionForModID");
static_assert(sizeof(ModioUISubsystem_RequestSubscriptionForModID) == 0x000010, "Wrong size on ModioUISubsystem_RequestSubscriptionForModID");
static_assert(offsetof(ModioUISubsystem_RequestSubscriptionForModID, ID) == 0x000000, "Member 'ModioUISubsystem_RequestSubscriptionForModID::ID' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestSubscriptionForModID, IncludeDependencies) == 0x000008, "Member 'ModioUISubsystem_RequestSubscriptionForModID::IncludeDependencies' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestSubscriptionForModIDWithHandler
// 0x0020 (0x0020 - 0x0000)
struct ModioUISubsystem_RequestSubscriptionForModIDWithHandler final
{
public:
	struct FModioModID                            ID;                                                // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IncludeDependencies;                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                               // 0x000C(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUISubsystem_RequestSubscriptionForModIDWithHandler) == 0x000008, "Wrong alignment on ModioUISubsystem_RequestSubscriptionForModIDWithHandler");
static_assert(sizeof(ModioUISubsystem_RequestSubscriptionForModIDWithHandler) == 0x000020, "Wrong size on ModioUISubsystem_RequestSubscriptionForModIDWithHandler");
static_assert(offsetof(ModioUISubsystem_RequestSubscriptionForModIDWithHandler, ID) == 0x000000, "Member 'ModioUISubsystem_RequestSubscriptionForModIDWithHandler::ID' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestSubscriptionForModIDWithHandler, IncludeDependencies) == 0x000008, "Member 'ModioUISubsystem_RequestSubscriptionForModIDWithHandler::IncludeDependencies' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_RequestSubscriptionForModIDWithHandler, Callback) == 0x00000C, "Member 'ModioUISubsystem_RequestSubscriptionForModIDWithHandler::Callback' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.RequestWalletBalanceRefreshWithHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_RequestWalletBalanceRefreshWithHandler final
{
public:
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalUInt64& WalletBalance)> Callback; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_RequestWalletBalanceRefreshWithHandler) == 0x000004, "Wrong alignment on ModioUISubsystem_RequestWalletBalanceRefreshWithHandler");
static_assert(sizeof(ModioUISubsystem_RequestWalletBalanceRefreshWithHandler) == 0x000010, "Wrong size on ModioUISubsystem_RequestWalletBalanceRefreshWithHandler");
static_assert(offsetof(ModioUISubsystem_RequestWalletBalanceRefreshWithHandler, Callback) == 0x000000, "Member 'ModioUISubsystem_RequestWalletBalanceRefreshWithHandler::Callback' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.SetModEnabledStateDataProvider
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_SetModEnabledStateDataProvider final
{
public:
	TScriptInterface<class IModioUIModEnabledStateProvider> InModEnabledStateDataProvider;           // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_SetModEnabledStateDataProvider) == 0x000008, "Wrong alignment on ModioUISubsystem_SetModEnabledStateDataProvider");
static_assert(sizeof(ModioUISubsystem_SetModEnabledStateDataProvider) == 0x000010, "Wrong size on ModioUISubsystem_SetModEnabledStateDataProvider");
static_assert(offsetof(ModioUISubsystem_SetModEnabledStateDataProvider, InModEnabledStateDataProvider) == 0x000000, "Member 'ModioUISubsystem_SetModEnabledStateDataProvider::InModEnabledStateDataProvider' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.SetModRatingStateDataProvider
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_SetModRatingStateDataProvider final
{
public:
	TScriptInterface<class IModRatingStateProvider> InModRatingStateProvider;                        // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_SetModRatingStateDataProvider) == 0x000008, "Wrong alignment on ModioUISubsystem_SetModRatingStateDataProvider");
static_assert(sizeof(ModioUISubsystem_SetModRatingStateDataProvider) == 0x000010, "Wrong size on ModioUISubsystem_SetModRatingStateDataProvider");
static_assert(offsetof(ModioUISubsystem_SetModRatingStateDataProvider, InModRatingStateProvider) == 0x000000, "Member 'ModioUISubsystem_SetModRatingStateDataProvider::InModRatingStateProvider' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.SubscriptionHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_SubscriptionHandler final
{
public:
	struct FModioErrorCode                        ErrorCode;                                         // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FModioModID                            ID;                                                // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_SubscriptionHandler) == 0x000008, "Wrong alignment on ModioUISubsystem_SubscriptionHandler");
static_assert(sizeof(ModioUISubsystem_SubscriptionHandler) == 0x000010, "Wrong size on ModioUISubsystem_SubscriptionHandler");
static_assert(offsetof(ModioUISubsystem_SubscriptionHandler, ErrorCode) == 0x000000, "Member 'ModioUISubsystem_SubscriptionHandler::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_SubscriptionHandler, ID) == 0x000008, "Member 'ModioUISubsystem_SubscriptionHandler::ID' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.UninstallHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_UninstallHandler final
{
public:
	struct FModioErrorCode                        ErrorCode;                                         // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FModioModID                            ID;                                                // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_UninstallHandler) == 0x000008, "Wrong alignment on ModioUISubsystem_UninstallHandler");
static_assert(sizeof(ModioUISubsystem_UninstallHandler) == 0x000010, "Wrong size on ModioUISubsystem_UninstallHandler");
static_assert(offsetof(ModioUISubsystem_UninstallHandler, ErrorCode) == 0x000000, "Member 'ModioUISubsystem_UninstallHandler::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_UninstallHandler, ID) == 0x000008, "Member 'ModioUISubsystem_UninstallHandler::ID' has a wrong offset!");

// Function ModioUICore.ModioUISubsystem.UnsubscribeHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubsystem_UnsubscribeHandler final
{
public:
	struct FModioErrorCode                        ErrorCode;                                         // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FModioModID                            ID;                                                // 0x0008(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubsystem_UnsubscribeHandler) == 0x000008, "Wrong alignment on ModioUISubsystem_UnsubscribeHandler");
static_assert(sizeof(ModioUISubsystem_UnsubscribeHandler) == 0x000010, "Wrong size on ModioUISubsystem_UnsubscribeHandler");
static_assert(offsetof(ModioUISubsystem_UnsubscribeHandler, ErrorCode) == 0x000000, "Member 'ModioUISubsystem_UnsubscribeHandler::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUISubsystem_UnsubscribeHandler, ID) == 0x000008, "Member 'ModioUISubsystem_UnsubscribeHandler::ID' has a wrong offset!");

// Function ModioUICore.ModioUIModInfoReceiverLibrary.DeregisterModInfoReceiver
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModInfoReceiverLibrary_DeregisterModInfoReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioUIModInfoEventType                      EventType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIModInfoReceiverLibrary_DeregisterModInfoReceiver) == 0x000008, "Wrong alignment on ModioUIModInfoReceiverLibrary_DeregisterModInfoReceiver");
static_assert(sizeof(ModioUIModInfoReceiverLibrary_DeregisterModInfoReceiver) == 0x000010, "Wrong size on ModioUIModInfoReceiverLibrary_DeregisterModInfoReceiver");
static_assert(offsetof(ModioUIModInfoReceiverLibrary_DeregisterModInfoReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUIModInfoReceiverLibrary_DeregisterModInfoReceiver::ObjectToDeregister' has a wrong offset!");
static_assert(offsetof(ModioUIModInfoReceiverLibrary_DeregisterModInfoReceiver, EventType) == 0x000008, "Member 'ModioUIModInfoReceiverLibrary_DeregisterModInfoReceiver::EventType' has a wrong offset!");

// Function ModioUICore.ModioUIModInfoReceiverLibrary.RegisterModInfoReceiver
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModInfoReceiverLibrary_RegisterModInfoReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioUIModInfoEventType                      EventType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIModInfoReceiverLibrary_RegisterModInfoReceiver) == 0x000008, "Wrong alignment on ModioUIModInfoReceiverLibrary_RegisterModInfoReceiver");
static_assert(sizeof(ModioUIModInfoReceiverLibrary_RegisterModInfoReceiver) == 0x000010, "Wrong size on ModioUIModInfoReceiverLibrary_RegisterModInfoReceiver");
static_assert(offsetof(ModioUIModInfoReceiverLibrary_RegisterModInfoReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUIModInfoReceiverLibrary_RegisterModInfoReceiver::ObjectToRegister' has a wrong offset!");
static_assert(offsetof(ModioUIModInfoReceiverLibrary_RegisterModInfoReceiver, EventType) == 0x000008, "Member 'ModioUIModInfoReceiverLibrary_RegisterModInfoReceiver::EventType' has a wrong offset!");

// Function ModioUICore.ModioUIModListViewInterface.SetModSelectionByID
// 0x0008 (0x0008 - 0x0000)
struct ModioUIModListViewInterface_SetModSelectionByID final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModListViewInterface_SetModSelectionByID) == 0x000008, "Wrong alignment on ModioUIModListViewInterface_SetModSelectionByID");
static_assert(sizeof(ModioUIModListViewInterface_SetModSelectionByID) == 0x000008, "Wrong size on ModioUIModListViewInterface_SetModSelectionByID");
static_assert(offsetof(ModioUIModListViewInterface_SetModSelectionByID, ModId) == 0x000000, "Member 'ModioUIModListViewInterface_SetModSelectionByID::ModId' has a wrong offset!");

// Function ModioUICore.ModioUIModListViewInterface.SetModsFromModCollectionEntryArray
// 0x0018 (0x0018 - 0x0000)
struct ModioUIModListViewInterface_SetModsFromModCollectionEntryArray final
{
public:
	TArray<struct FModioModCollectionEntry>       inArray;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bAddToExisting;                                    // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIModListViewInterface_SetModsFromModCollectionEntryArray) == 0x000008, "Wrong alignment on ModioUIModListViewInterface_SetModsFromModCollectionEntryArray");
static_assert(sizeof(ModioUIModListViewInterface_SetModsFromModCollectionEntryArray) == 0x000018, "Wrong size on ModioUIModListViewInterface_SetModsFromModCollectionEntryArray");
static_assert(offsetof(ModioUIModListViewInterface_SetModsFromModCollectionEntryArray, inArray) == 0x000000, "Member 'ModioUIModListViewInterface_SetModsFromModCollectionEntryArray::inArray' has a wrong offset!");
static_assert(offsetof(ModioUIModListViewInterface_SetModsFromModCollectionEntryArray, bAddToExisting) == 0x000010, "Member 'ModioUIModListViewInterface_SetModsFromModCollectionEntryArray::bAddToExisting' has a wrong offset!");

// Function ModioUICore.ModioUIModListViewInterface.SetModsFromModInfoArray
// 0x0018 (0x0018 - 0x0000)
struct ModioUIModListViewInterface_SetModsFromModInfoArray final
{
public:
	TArray<struct FModioModInfo>                  inArray;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bAddToExisting;                                    // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIModListViewInterface_SetModsFromModInfoArray) == 0x000008, "Wrong alignment on ModioUIModListViewInterface_SetModsFromModInfoArray");
static_assert(sizeof(ModioUIModListViewInterface_SetModsFromModInfoArray) == 0x000018, "Wrong size on ModioUIModListViewInterface_SetModsFromModInfoArray");
static_assert(offsetof(ModioUIModListViewInterface_SetModsFromModInfoArray, inArray) == 0x000000, "Member 'ModioUIModListViewInterface_SetModsFromModInfoArray::inArray' has a wrong offset!");
static_assert(offsetof(ModioUIModListViewInterface_SetModsFromModInfoArray, bAddToExisting) == 0x000010, "Member 'ModioUIModListViewInterface_SetModsFromModInfoArray::bAddToExisting' has a wrong offset!");

// Function ModioUICore.ModioUIModListViewInterface.SetModsFromModInfoList
// 0x0030 (0x0030 - 0x0000)
struct ModioUIModListViewInterface_SetModsFromModInfoList final
{
public:
	struct FModioModInfoList                      InList;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddToExisting;                                    // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIModListViewInterface_SetModsFromModInfoList) == 0x000008, "Wrong alignment on ModioUIModListViewInterface_SetModsFromModInfoList");
static_assert(sizeof(ModioUIModListViewInterface_SetModsFromModInfoList) == 0x000030, "Wrong size on ModioUIModListViewInterface_SetModsFromModInfoList");
static_assert(offsetof(ModioUIModListViewInterface_SetModsFromModInfoList, InList) == 0x000000, "Member 'ModioUIModListViewInterface_SetModsFromModInfoList::InList' has a wrong offset!");
static_assert(offsetof(ModioUIModListViewInterface_SetModsFromModInfoList, bAddToExisting) == 0x000028, "Member 'ModioUIModListViewInterface_SetModsFromModInfoList::bAddToExisting' has a wrong offset!");

// Function ModioUICore.ModioUIModManagementEventReceiver.OnModManagementEvent
// 0x0018 (0x0018 - 0x0000)
struct ModioUIModManagementEventReceiver_OnModManagementEvent final
{
public:
	struct FModioModManagementEvent               Event;                                             // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModManagementEventReceiver_OnModManagementEvent) == 0x000008, "Wrong alignment on ModioUIModManagementEventReceiver_OnModManagementEvent");
static_assert(sizeof(ModioUIModManagementEventReceiver_OnModManagementEvent) == 0x000018, "Wrong size on ModioUIModManagementEventReceiver_OnModManagementEvent");
static_assert(offsetof(ModioUIModManagementEventReceiver_OnModManagementEvent, Event) == 0x000000, "Member 'ModioUIModManagementEventReceiver_OnModManagementEvent::Event' has a wrong offset!");

// Function ModioUICore.ModioModManagementEventReceiverLibrary.DeregisterModManagementEventReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioModManagementEventReceiverLibrary_DeregisterModManagementEventReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModManagementEventReceiverLibrary_DeregisterModManagementEventReceiver) == 0x000008, "Wrong alignment on ModioModManagementEventReceiverLibrary_DeregisterModManagementEventReceiver");
static_assert(sizeof(ModioModManagementEventReceiverLibrary_DeregisterModManagementEventReceiver) == 0x000008, "Wrong size on ModioModManagementEventReceiverLibrary_DeregisterModManagementEventReceiver");
static_assert(offsetof(ModioModManagementEventReceiverLibrary_DeregisterModManagementEventReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioModManagementEventReceiverLibrary_DeregisterModManagementEventReceiver::ObjectToDeregister' has a wrong offset!");

// Function ModioUICore.ModioModManagementEventReceiverLibrary.RegisterModManagementEventReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioModManagementEventReceiverLibrary_RegisterModManagementEventReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModManagementEventReceiverLibrary_RegisterModManagementEventReceiver) == 0x000008, "Wrong alignment on ModioModManagementEventReceiverLibrary_RegisterModManagementEventReceiver");
static_assert(sizeof(ModioModManagementEventReceiverLibrary_RegisterModManagementEventReceiver) == 0x000008, "Wrong size on ModioModManagementEventReceiverLibrary_RegisterModManagementEventReceiver");
static_assert(offsetof(ModioModManagementEventReceiverLibrary_RegisterModManagementEventReceiver, ObjectToRegister) == 0x000000, "Member 'ModioModManagementEventReceiverLibrary_RegisterModManagementEventReceiver::ObjectToRegister' has a wrong offset!");

// Function ModioUICore.ModioUIModTagSelector.AddTagSelectionChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModTagSelector_AddTagSelectionChangedHandler final
{
public:
	TDelegate<void()>                             Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModTagSelector_AddTagSelectionChangedHandler) == 0x000004, "Wrong alignment on ModioUIModTagSelector_AddTagSelectionChangedHandler");
static_assert(sizeof(ModioUIModTagSelector_AddTagSelectionChangedHandler) == 0x000010, "Wrong size on ModioUIModTagSelector_AddTagSelectionChangedHandler");
static_assert(offsetof(ModioUIModTagSelector_AddTagSelectionChangedHandler, Handler) == 0x000000, "Member 'ModioUIModTagSelector_AddTagSelectionChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIModTagSelector.GetAllowHiddenTags
// 0x0001 (0x0001 - 0x0000)
struct ModioUIModTagSelector_GetAllowHiddenTags final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModTagSelector_GetAllowHiddenTags) == 0x000001, "Wrong alignment on ModioUIModTagSelector_GetAllowHiddenTags");
static_assert(sizeof(ModioUIModTagSelector_GetAllowHiddenTags) == 0x000001, "Wrong size on ModioUIModTagSelector_GetAllowHiddenTags");
static_assert(offsetof(ModioUIModTagSelector_GetAllowHiddenTags, ReturnValue) == 0x000000, "Member 'ModioUIModTagSelector_GetAllowHiddenTags::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIModTagSelector.GetAllowLockedTags
// 0x0001 (0x0001 - 0x0000)
struct ModioUIModTagSelector_GetAllowLockedTags final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModTagSelector_GetAllowLockedTags) == 0x000001, "Wrong alignment on ModioUIModTagSelector_GetAllowLockedTags");
static_assert(sizeof(ModioUIModTagSelector_GetAllowLockedTags) == 0x000001, "Wrong size on ModioUIModTagSelector_GetAllowLockedTags");
static_assert(offsetof(ModioUIModTagSelector_GetAllowLockedTags, ReturnValue) == 0x000000, "Member 'ModioUIModTagSelector_GetAllowLockedTags::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIModTagSelector.GetSelectedTags
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModTagSelector_GetSelectedTags final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModTagSelector_GetSelectedTags) == 0x000008, "Wrong alignment on ModioUIModTagSelector_GetSelectedTags");
static_assert(sizeof(ModioUIModTagSelector_GetSelectedTags) == 0x000010, "Wrong size on ModioUIModTagSelector_GetSelectedTags");
static_assert(offsetof(ModioUIModTagSelector_GetSelectedTags, ReturnValue) == 0x000000, "Member 'ModioUIModTagSelector_GetSelectedTags::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIModTagSelector.RemoveTagSelectionChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModTagSelector_RemoveTagSelectionChangedHandler final
{
public:
	TDelegate<void()>                             Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModTagSelector_RemoveTagSelectionChangedHandler) == 0x000004, "Wrong alignment on ModioUIModTagSelector_RemoveTagSelectionChangedHandler");
static_assert(sizeof(ModioUIModTagSelector_RemoveTagSelectionChangedHandler) == 0x000010, "Wrong size on ModioUIModTagSelector_RemoveTagSelectionChangedHandler");
static_assert(offsetof(ModioUIModTagSelector_RemoveTagSelectionChangedHandler, Handler) == 0x000000, "Member 'ModioUIModTagSelector_RemoveTagSelectionChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIModTagSelector.SetAvailableTagsFromBoundModTagOptions
// 0x0010 (0x0010 - 0x0000)
struct ModioUIModTagSelector_SetAvailableTagsFromBoundModTagOptions final
{
public:
	TScriptInterface<class IModioModTagOptionsUIDetails> InOptions;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModTagSelector_SetAvailableTagsFromBoundModTagOptions) == 0x000008, "Wrong alignment on ModioUIModTagSelector_SetAvailableTagsFromBoundModTagOptions");
static_assert(sizeof(ModioUIModTagSelector_SetAvailableTagsFromBoundModTagOptions) == 0x000010, "Wrong size on ModioUIModTagSelector_SetAvailableTagsFromBoundModTagOptions");
static_assert(offsetof(ModioUIModTagSelector_SetAvailableTagsFromBoundModTagOptions, InOptions) == 0x000000, "Member 'ModioUIModTagSelector_SetAvailableTagsFromBoundModTagOptions::InOptions' has a wrong offset!");

// Function ModioUICore.ModioUIModTagSelector.SetAvailableTagsFromModTagOptions
// 0x0028 (0x0028 - 0x0000)
struct ModioUIModTagSelector_SetAvailableTagsFromModTagOptions final
{
public:
	struct FModioModTagOptions                    InOptions;                                         // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIModTagSelector_SetAvailableTagsFromModTagOptions) == 0x000008, "Wrong alignment on ModioUIModTagSelector_SetAvailableTagsFromModTagOptions");
static_assert(sizeof(ModioUIModTagSelector_SetAvailableTagsFromModTagOptions) == 0x000028, "Wrong size on ModioUIModTagSelector_SetAvailableTagsFromModTagOptions");
static_assert(offsetof(ModioUIModTagSelector_SetAvailableTagsFromModTagOptions, InOptions) == 0x000000, "Member 'ModioUIModTagSelector_SetAvailableTagsFromModTagOptions::InOptions' has a wrong offset!");

// Function ModioUICore.ModioUIObjectListWidget.AddObjectWidgetCreatedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectListWidget_AddObjectWidgetCreatedHandler final
{
public:
	TDelegate<void(class UWidget* ObjectWidget, class UObject* Object)> Handler;                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectListWidget_AddObjectWidgetCreatedHandler) == 0x000004, "Wrong alignment on ModioUIObjectListWidget_AddObjectWidgetCreatedHandler");
static_assert(sizeof(ModioUIObjectListWidget_AddObjectWidgetCreatedHandler) == 0x000010, "Wrong size on ModioUIObjectListWidget_AddObjectWidgetCreatedHandler");
static_assert(offsetof(ModioUIObjectListWidget_AddObjectWidgetCreatedHandler, Handler) == 0x000000, "Member 'ModioUIObjectListWidget_AddObjectWidgetCreatedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIObjectListWidget.GetFirstEntryWidget
// 0x0008 (0x0008 - 0x0000)
struct ModioUIObjectListWidget_GetFirstEntryWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectListWidget_GetFirstEntryWidget) == 0x000008, "Wrong alignment on ModioUIObjectListWidget_GetFirstEntryWidget");
static_assert(sizeof(ModioUIObjectListWidget_GetFirstEntryWidget) == 0x000008, "Wrong size on ModioUIObjectListWidget_GetFirstEntryWidget");
static_assert(offsetof(ModioUIObjectListWidget_GetFirstEntryWidget, ReturnValue) == 0x000000, "Member 'ModioUIObjectListWidget_GetFirstEntryWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIObjectListWidget.GetObjects
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectListWidget_GetObjects final
{
public:
	TArray<class UObject*>                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectListWidget_GetObjects) == 0x000008, "Wrong alignment on ModioUIObjectListWidget_GetObjects");
static_assert(sizeof(ModioUIObjectListWidget_GetObjects) == 0x000010, "Wrong size on ModioUIObjectListWidget_GetObjects");
static_assert(offsetof(ModioUIObjectListWidget_GetObjects, ReturnValue) == 0x000000, "Member 'ModioUIObjectListWidget_GetObjects::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIObjectListWidget.RemoveObjectWidgetCreatedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectListWidget_RemoveObjectWidgetCreatedHandler final
{
public:
	TDelegate<void(class UWidget* ObjectWidget, class UObject* Object)> Handler;                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectListWidget_RemoveObjectWidgetCreatedHandler) == 0x000004, "Wrong alignment on ModioUIObjectListWidget_RemoveObjectWidgetCreatedHandler");
static_assert(sizeof(ModioUIObjectListWidget_RemoveObjectWidgetCreatedHandler) == 0x000010, "Wrong size on ModioUIObjectListWidget_RemoveObjectWidgetCreatedHandler");
static_assert(offsetof(ModioUIObjectListWidget_RemoveObjectWidgetCreatedHandler, Handler) == 0x000000, "Member 'ModioUIObjectListWidget_RemoveObjectWidgetCreatedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIObjectListWidget.SetObjects
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectListWidget_SetObjects final
{
public:
	TArray<class UObject*>                        InObjects;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectListWidget_SetObjects) == 0x000008, "Wrong alignment on ModioUIObjectListWidget_SetObjects");
static_assert(sizeof(ModioUIObjectListWidget_SetObjects) == 0x000010, "Wrong size on ModioUIObjectListWidget_SetObjects");
static_assert(offsetof(ModioUIObjectListWidget_SetObjects, InObjects) == 0x000000, "Member 'ModioUIObjectListWidget_SetObjects::InObjects' has a wrong offset!");

// Function ModioUICore.ModioUIObjectListWidget.GetObjectAt
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectListWidget_GetObjectAt final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectListWidget_GetObjectAt) == 0x000008, "Wrong alignment on ModioUIObjectListWidget_GetObjectAt");
static_assert(sizeof(ModioUIObjectListWidget_GetObjectAt) == 0x000010, "Wrong size on ModioUIObjectListWidget_GetObjectAt");
static_assert(offsetof(ModioUIObjectListWidget_GetObjectAt, Index_0) == 0x000000, "Member 'ModioUIObjectListWidget_GetObjectAt::Index_0' has a wrong offset!");
static_assert(offsetof(ModioUIObjectListWidget_GetObjectAt, ReturnValue) == 0x000008, "Member 'ModioUIObjectListWidget_GetObjectAt::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.AddSelectionChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectSelector_AddSelectionChangedHandler final
{
public:
	TDelegate<void(class UObject* SelectedValue)> Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_AddSelectionChangedHandler) == 0x000004, "Wrong alignment on ModioUIObjectSelector_AddSelectionChangedHandler");
static_assert(sizeof(ModioUIObjectSelector_AddSelectionChangedHandler) == 0x000010, "Wrong size on ModioUIObjectSelector_AddSelectionChangedHandler");
static_assert(offsetof(ModioUIObjectSelector_AddSelectionChangedHandler, Handler) == 0x000000, "Member 'ModioUIObjectSelector_AddSelectionChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.GetLastSelectionIndex
// 0x0004 (0x0004 - 0x0000)
struct ModioUIObjectSelector_GetLastSelectionIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_GetLastSelectionIndex) == 0x000004, "Wrong alignment on ModioUIObjectSelector_GetLastSelectionIndex");
static_assert(sizeof(ModioUIObjectSelector_GetLastSelectionIndex) == 0x000004, "Wrong size on ModioUIObjectSelector_GetLastSelectionIndex");
static_assert(offsetof(ModioUIObjectSelector_GetLastSelectionIndex, ReturnValue) == 0x000000, "Member 'ModioUIObjectSelector_GetLastSelectionIndex::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.GetMultiSelectionAllowed
// 0x0001 (0x0001 - 0x0000)
struct ModioUIObjectSelector_GetMultiSelectionAllowed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_GetMultiSelectionAllowed) == 0x000001, "Wrong alignment on ModioUIObjectSelector_GetMultiSelectionAllowed");
static_assert(sizeof(ModioUIObjectSelector_GetMultiSelectionAllowed) == 0x000001, "Wrong size on ModioUIObjectSelector_GetMultiSelectionAllowed");
static_assert(offsetof(ModioUIObjectSelector_GetMultiSelectionAllowed, ReturnValue) == 0x000000, "Member 'ModioUIObjectSelector_GetMultiSelectionAllowed::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.GetNumEntries
// 0x0004 (0x0004 - 0x0000)
struct ModioUIObjectSelector_GetNumEntries final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_GetNumEntries) == 0x000004, "Wrong alignment on ModioUIObjectSelector_GetNumEntries");
static_assert(sizeof(ModioUIObjectSelector_GetNumEntries) == 0x000004, "Wrong size on ModioUIObjectSelector_GetNumEntries");
static_assert(offsetof(ModioUIObjectSelector_GetNumEntries, ReturnValue) == 0x000000, "Member 'ModioUIObjectSelector_GetNumEntries::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.GetSelectedValues
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectSelector_GetSelectedValues final
{
public:
	TArray<class UObject*>                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_GetSelectedValues) == 0x000008, "Wrong alignment on ModioUIObjectSelector_GetSelectedValues");
static_assert(sizeof(ModioUIObjectSelector_GetSelectedValues) == 0x000010, "Wrong size on ModioUIObjectSelector_GetSelectedValues");
static_assert(offsetof(ModioUIObjectSelector_GetSelectedValues, ReturnValue) == 0x000000, "Member 'ModioUIObjectSelector_GetSelectedValues::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.GetSingleSelectedValue
// 0x0008 (0x0008 - 0x0000)
struct ModioUIObjectSelector_GetSingleSelectedValue final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_GetSingleSelectedValue) == 0x000008, "Wrong alignment on ModioUIObjectSelector_GetSingleSelectedValue");
static_assert(sizeof(ModioUIObjectSelector_GetSingleSelectedValue) == 0x000008, "Wrong size on ModioUIObjectSelector_GetSingleSelectedValue");
static_assert(offsetof(ModioUIObjectSelector_GetSingleSelectedValue, ReturnValue) == 0x000000, "Member 'ModioUIObjectSelector_GetSingleSelectedValue::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.GetSingleSelectionIndex
// 0x0004 (0x0004 - 0x0000)
struct ModioUIObjectSelector_GetSingleSelectionIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_GetSingleSelectionIndex) == 0x000004, "Wrong alignment on ModioUIObjectSelector_GetSingleSelectionIndex");
static_assert(sizeof(ModioUIObjectSelector_GetSingleSelectionIndex) == 0x000004, "Wrong size on ModioUIObjectSelector_GetSingleSelectionIndex");
static_assert(offsetof(ModioUIObjectSelector_GetSingleSelectionIndex, ReturnValue) == 0x000000, "Member 'ModioUIObjectSelector_GetSingleSelectionIndex::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.RemoveSelectionChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectSelector_RemoveSelectionChangedHandler final
{
public:
	TDelegate<void(class UObject* SelectedValue)> Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_RemoveSelectionChangedHandler) == 0x000004, "Wrong alignment on ModioUIObjectSelector_RemoveSelectionChangedHandler");
static_assert(sizeof(ModioUIObjectSelector_RemoveSelectionChangedHandler) == 0x000010, "Wrong size on ModioUIObjectSelector_RemoveSelectionChangedHandler");
static_assert(offsetof(ModioUIObjectSelector_RemoveSelectionChangedHandler, Handler) == 0x000000, "Member 'ModioUIObjectSelector_RemoveSelectionChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.SetListEntryWidgetClass
// 0x0008 (0x0008 - 0x0000)
struct ModioUIObjectSelector_SetListEntryWidgetClass final
{
public:
	TSubclassOf<class UWidget>                    InNewEntryClass;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_SetListEntryWidgetClass) == 0x000008, "Wrong alignment on ModioUIObjectSelector_SetListEntryWidgetClass");
static_assert(sizeof(ModioUIObjectSelector_SetListEntryWidgetClass) == 0x000008, "Wrong size on ModioUIObjectSelector_SetListEntryWidgetClass");
static_assert(offsetof(ModioUIObjectSelector_SetListEntryWidgetClass, InNewEntryClass) == 0x000000, "Member 'ModioUIObjectSelector_SetListEntryWidgetClass::InNewEntryClass' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.SetMultiSelectionAllowed
// 0x0001 (0x0001 - 0x0000)
struct ModioUIObjectSelector_SetMultiSelectionAllowed final
{
public:
	bool                                          bMultiSelectionAllowed;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_SetMultiSelectionAllowed) == 0x000001, "Wrong alignment on ModioUIObjectSelector_SetMultiSelectionAllowed");
static_assert(sizeof(ModioUIObjectSelector_SetMultiSelectionAllowed) == 0x000001, "Wrong size on ModioUIObjectSelector_SetMultiSelectionAllowed");
static_assert(offsetof(ModioUIObjectSelector_SetMultiSelectionAllowed, bMultiSelectionAllowed) == 0x000000, "Member 'ModioUIObjectSelector_SetMultiSelectionAllowed::bMultiSelectionAllowed' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.SetSelectedStateForIndex
// 0x0008 (0x0008 - 0x0000)
struct ModioUIObjectSelector_SetSelectedStateForIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewSelectionState;                                // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEmitSelectionEvent;                               // 0x0005(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIObjectSelector_SetSelectedStateForIndex) == 0x000004, "Wrong alignment on ModioUIObjectSelector_SetSelectedStateForIndex");
static_assert(sizeof(ModioUIObjectSelector_SetSelectedStateForIndex) == 0x000008, "Wrong size on ModioUIObjectSelector_SetSelectedStateForIndex");
static_assert(offsetof(ModioUIObjectSelector_SetSelectedStateForIndex, Index_0) == 0x000000, "Member 'ModioUIObjectSelector_SetSelectedStateForIndex::Index_0' has a wrong offset!");
static_assert(offsetof(ModioUIObjectSelector_SetSelectedStateForIndex, bNewSelectionState) == 0x000004, "Member 'ModioUIObjectSelector_SetSelectedStateForIndex::bNewSelectionState' has a wrong offset!");
static_assert(offsetof(ModioUIObjectSelector_SetSelectedStateForIndex, bEmitSelectionEvent) == 0x000005, "Member 'ModioUIObjectSelector_SetSelectedStateForIndex::bEmitSelectionEvent' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.SetSelectedStateForValue
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectSelector_SetSelectedStateForValue final
{
public:
	class UObject*                                Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewSelectionState;                                // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEmitSelectionEvent;                               // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIObjectSelector_SetSelectedStateForValue) == 0x000008, "Wrong alignment on ModioUIObjectSelector_SetSelectedStateForValue");
static_assert(sizeof(ModioUIObjectSelector_SetSelectedStateForValue) == 0x000010, "Wrong size on ModioUIObjectSelector_SetSelectedStateForValue");
static_assert(offsetof(ModioUIObjectSelector_SetSelectedStateForValue, Value) == 0x000000, "Member 'ModioUIObjectSelector_SetSelectedStateForValue::Value' has a wrong offset!");
static_assert(offsetof(ModioUIObjectSelector_SetSelectedStateForValue, bNewSelectionState) == 0x000008, "Member 'ModioUIObjectSelector_SetSelectedStateForValue::bNewSelectionState' has a wrong offset!");
static_assert(offsetof(ModioUIObjectSelector_SetSelectedStateForValue, bEmitSelectionEvent) == 0x000009, "Member 'ModioUIObjectSelector_SetSelectedStateForValue::bEmitSelectionEvent' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.SetSingleSelectionByIndex
// 0x0008 (0x0008 - 0x0000)
struct ModioUIObjectSelector_SetSingleSelectionByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEmitSelectionEvent;                               // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIObjectSelector_SetSingleSelectionByIndex) == 0x000004, "Wrong alignment on ModioUIObjectSelector_SetSingleSelectionByIndex");
static_assert(sizeof(ModioUIObjectSelector_SetSingleSelectionByIndex) == 0x000008, "Wrong size on ModioUIObjectSelector_SetSingleSelectionByIndex");
static_assert(offsetof(ModioUIObjectSelector_SetSingleSelectionByIndex, Index_0) == 0x000000, "Member 'ModioUIObjectSelector_SetSingleSelectionByIndex::Index_0' has a wrong offset!");
static_assert(offsetof(ModioUIObjectSelector_SetSingleSelectionByIndex, bEmitSelectionEvent) == 0x000004, "Member 'ModioUIObjectSelector_SetSingleSelectionByIndex::bEmitSelectionEvent' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.SetSingleSelectionByValue
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectSelector_SetSingleSelectionByValue final
{
public:
	class UObject*                                Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEmitSelectionEvent;                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIObjectSelector_SetSingleSelectionByValue) == 0x000008, "Wrong alignment on ModioUIObjectSelector_SetSingleSelectionByValue");
static_assert(sizeof(ModioUIObjectSelector_SetSingleSelectionByValue) == 0x000010, "Wrong size on ModioUIObjectSelector_SetSingleSelectionByValue");
static_assert(offsetof(ModioUIObjectSelector_SetSingleSelectionByValue, Value) == 0x000000, "Member 'ModioUIObjectSelector_SetSingleSelectionByValue::Value' has a wrong offset!");
static_assert(offsetof(ModioUIObjectSelector_SetSingleSelectionByValue, bEmitSelectionEvent) == 0x000008, "Member 'ModioUIObjectSelector_SetSingleSelectionByValue::bEmitSelectionEvent' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.SetValues
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectSelector_SetValues final
{
public:
	TArray<class UObject*>                        InValues;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_SetValues) == 0x000008, "Wrong alignment on ModioUIObjectSelector_SetValues");
static_assert(sizeof(ModioUIObjectSelector_SetValues) == 0x000010, "Wrong size on ModioUIObjectSelector_SetValues");
static_assert(offsetof(ModioUIObjectSelector_SetValues, InValues) == 0x000000, "Member 'ModioUIObjectSelector_SetValues::InValues' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.GetIndexForValue
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectSelector_GetIndexForValue final
{
public:
	class UObject*                                Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIObjectSelector_GetIndexForValue) == 0x000008, "Wrong alignment on ModioUIObjectSelector_GetIndexForValue");
static_assert(sizeof(ModioUIObjectSelector_GetIndexForValue) == 0x000010, "Wrong size on ModioUIObjectSelector_GetIndexForValue");
static_assert(offsetof(ModioUIObjectSelector_GetIndexForValue, Value) == 0x000000, "Member 'ModioUIObjectSelector_GetIndexForValue::Value' has a wrong offset!");
static_assert(offsetof(ModioUIObjectSelector_GetIndexForValue, ReturnValue) == 0x000008, "Member 'ModioUIObjectSelector_GetIndexForValue::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIObjectSelector.GetWidgetForValue
// 0x0010 (0x0010 - 0x0000)
struct ModioUIObjectSelector_GetWidgetForValue final
{
public:
	class UObject*                                Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIObjectSelector_GetWidgetForValue) == 0x000008, "Wrong alignment on ModioUIObjectSelector_GetWidgetForValue");
static_assert(sizeof(ModioUIObjectSelector_GetWidgetForValue) == 0x000010, "Wrong size on ModioUIObjectSelector_GetWidgetForValue");
static_assert(offsetof(ModioUIObjectSelector_GetWidgetForValue, Value) == 0x000000, "Member 'ModioUIObjectSelector_GetWidgetForValue::Value' has a wrong offset!");
static_assert(offsetof(ModioUIObjectSelector_GetWidgetForValue, ReturnValue) == 0x000008, "Member 'ModioUIObjectSelector_GetWidgetForValue::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIProgressWidget.AddValueChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIProgressWidget_AddValueChangedHandler final
{
public:
	TDelegate<void(float NewValue)>               Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIProgressWidget_AddValueChangedHandler) == 0x000004, "Wrong alignment on ModioUIProgressWidget_AddValueChangedHandler");
static_assert(sizeof(ModioUIProgressWidget_AddValueChangedHandler) == 0x000010, "Wrong size on ModioUIProgressWidget_AddValueChangedHandler");
static_assert(offsetof(ModioUIProgressWidget_AddValueChangedHandler, Handler) == 0x000000, "Member 'ModioUIProgressWidget_AddValueChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIProgressWidget.GetProgress
// 0x0004 (0x0004 - 0x0000)
struct ModioUIProgressWidget_GetProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIProgressWidget_GetProgress) == 0x000004, "Wrong alignment on ModioUIProgressWidget_GetProgress");
static_assert(sizeof(ModioUIProgressWidget_GetProgress) == 0x000004, "Wrong size on ModioUIProgressWidget_GetProgress");
static_assert(offsetof(ModioUIProgressWidget_GetProgress, ReturnValue) == 0x000000, "Member 'ModioUIProgressWidget_GetProgress::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIProgressWidget.RemoveValueChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIProgressWidget_RemoveValueChangedHandler final
{
public:
	TDelegate<void(float NewValue)>               Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIProgressWidget_RemoveValueChangedHandler) == 0x000004, "Wrong alignment on ModioUIProgressWidget_RemoveValueChangedHandler");
static_assert(sizeof(ModioUIProgressWidget_RemoveValueChangedHandler) == 0x000010, "Wrong size on ModioUIProgressWidget_RemoveValueChangedHandler");
static_assert(offsetof(ModioUIProgressWidget_RemoveValueChangedHandler, Handler) == 0x000000, "Member 'ModioUIProgressWidget_RemoveValueChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIProgressWidget.SetColorOverride
// 0x0010 (0x0010 - 0x0000)
struct ModioUIProgressWidget_SetColorOverride final
{
public:
	struct FLinearColor                           Override;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIProgressWidget_SetColorOverride) == 0x000004, "Wrong alignment on ModioUIProgressWidget_SetColorOverride");
static_assert(sizeof(ModioUIProgressWidget_SetColorOverride) == 0x000010, "Wrong size on ModioUIProgressWidget_SetColorOverride");
static_assert(offsetof(ModioUIProgressWidget_SetColorOverride, Override) == 0x000000, "Member 'ModioUIProgressWidget_SetColorOverride::Override' has a wrong offset!");

// Function ModioUICore.ModioUIProgressWidget.SetMarquee
// 0x0001 (0x0001 - 0x0000)
struct ModioUIProgressWidget_SetMarquee final
{
public:
	bool                                          bNewIsMarquee;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIProgressWidget_SetMarquee) == 0x000001, "Wrong alignment on ModioUIProgressWidget_SetMarquee");
static_assert(sizeof(ModioUIProgressWidget_SetMarquee) == 0x000001, "Wrong size on ModioUIProgressWidget_SetMarquee");
static_assert(offsetof(ModioUIProgressWidget_SetMarquee, bNewIsMarquee) == 0x000000, "Member 'ModioUIProgressWidget_SetMarquee::bNewIsMarquee' has a wrong offset!");

// Function ModioUICore.ModioUIProgressWidget.SetProgress
// 0x0004 (0x0004 - 0x0000)
struct ModioUIProgressWidget_SetProgress final
{
public:
	float                                         NewProgressValue;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIProgressWidget_SetProgress) == 0x000004, "Wrong alignment on ModioUIProgressWidget_SetProgress");
static_assert(sizeof(ModioUIProgressWidget_SetProgress) == 0x000004, "Wrong size on ModioUIProgressWidget_SetProgress");
static_assert(offsetof(ModioUIProgressWidget_SetProgress, NewProgressValue) == 0x000000, "Member 'ModioUIProgressWidget_SetProgress::NewProgressValue' has a wrong offset!");

// Function ModioUICore.ModioUISelectableWidget.AddSelectedStateChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUISelectableWidget_AddSelectedStateChangedHandler final
{
public:
	TDelegate<void(class UObject* SelectionContext, bool bNewSelectedState)> Handler;                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISelectableWidget_AddSelectedStateChangedHandler) == 0x000004, "Wrong alignment on ModioUISelectableWidget_AddSelectedStateChangedHandler");
static_assert(sizeof(ModioUISelectableWidget_AddSelectedStateChangedHandler) == 0x000010, "Wrong size on ModioUISelectableWidget_AddSelectedStateChangedHandler");
static_assert(offsetof(ModioUISelectableWidget_AddSelectedStateChangedHandler, Handler) == 0x000000, "Member 'ModioUISelectableWidget_AddSelectedStateChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUISelectableWidget.GetSelectable
// 0x0001 (0x0001 - 0x0000)
struct ModioUISelectableWidget_GetSelectable final
{
public:
	bool                                          bIsSelectable;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISelectableWidget_GetSelectable) == 0x000001, "Wrong alignment on ModioUISelectableWidget_GetSelectable");
static_assert(sizeof(ModioUISelectableWidget_GetSelectable) == 0x000001, "Wrong size on ModioUISelectableWidget_GetSelectable");
static_assert(offsetof(ModioUISelectableWidget_GetSelectable, bIsSelectable) == 0x000000, "Member 'ModioUISelectableWidget_GetSelectable::bIsSelectable' has a wrong offset!");

// Function ModioUICore.ModioUISelectableWidget.GetSelectedState
// 0x0001 (0x0001 - 0x0000)
struct ModioUISelectableWidget_GetSelectedState final
{
public:
	bool                                          bCurrentSelectedState;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISelectableWidget_GetSelectedState) == 0x000001, "Wrong alignment on ModioUISelectableWidget_GetSelectedState");
static_assert(sizeof(ModioUISelectableWidget_GetSelectedState) == 0x000001, "Wrong size on ModioUISelectableWidget_GetSelectedState");
static_assert(offsetof(ModioUISelectableWidget_GetSelectedState, bCurrentSelectedState) == 0x000000, "Member 'ModioUISelectableWidget_GetSelectedState::bCurrentSelectedState' has a wrong offset!");

// Function ModioUICore.ModioUISelectableWidget.GetToggleable
// 0x0001 (0x0001 - 0x0000)
struct ModioUISelectableWidget_GetToggleable final
{
public:
	bool                                          bIsToggleable;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISelectableWidget_GetToggleable) == 0x000001, "Wrong alignment on ModioUISelectableWidget_GetToggleable");
static_assert(sizeof(ModioUISelectableWidget_GetToggleable) == 0x000001, "Wrong size on ModioUISelectableWidget_GetToggleable");
static_assert(offsetof(ModioUISelectableWidget_GetToggleable, bIsToggleable) == 0x000000, "Member 'ModioUISelectableWidget_GetToggleable::bIsToggleable' has a wrong offset!");

// Function ModioUICore.ModioUISelectableWidget.RemoveSelectedStateChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUISelectableWidget_RemoveSelectedStateChangedHandler final
{
public:
	TDelegate<void(class UObject* SelectionContext, bool bNewSelectedState)> Handler;                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISelectableWidget_RemoveSelectedStateChangedHandler) == 0x000004, "Wrong alignment on ModioUISelectableWidget_RemoveSelectedStateChangedHandler");
static_assert(sizeof(ModioUISelectableWidget_RemoveSelectedStateChangedHandler) == 0x000010, "Wrong size on ModioUISelectableWidget_RemoveSelectedStateChangedHandler");
static_assert(offsetof(ModioUISelectableWidget_RemoveSelectedStateChangedHandler, Handler) == 0x000000, "Member 'ModioUISelectableWidget_RemoveSelectedStateChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUISelectableWidget.SetSelectable
// 0x0001 (0x0001 - 0x0000)
struct ModioUISelectableWidget_SetSelectable final
{
public:
	bool                                          bNewSelectableState;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISelectableWidget_SetSelectable) == 0x000001, "Wrong alignment on ModioUISelectableWidget_SetSelectable");
static_assert(sizeof(ModioUISelectableWidget_SetSelectable) == 0x000001, "Wrong size on ModioUISelectableWidget_SetSelectable");
static_assert(offsetof(ModioUISelectableWidget_SetSelectable, bNewSelectableState) == 0x000000, "Member 'ModioUISelectableWidget_SetSelectable::bNewSelectableState' has a wrong offset!");

// Function ModioUICore.ModioUISelectableWidget.SetSelectedState
// 0x0001 (0x0001 - 0x0000)
struct ModioUISelectableWidget_SetSelectedState final
{
public:
	bool                                          bNewSelectedState;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISelectableWidget_SetSelectedState) == 0x000001, "Wrong alignment on ModioUISelectableWidget_SetSelectedState");
static_assert(sizeof(ModioUISelectableWidget_SetSelectedState) == 0x000001, "Wrong size on ModioUISelectableWidget_SetSelectedState");
static_assert(offsetof(ModioUISelectableWidget_SetSelectedState, bNewSelectedState) == 0x000000, "Member 'ModioUISelectableWidget_SetSelectedState::bNewSelectedState' has a wrong offset!");

// Function ModioUICore.ModioUISelectableWidget.SetToggleable
// 0x0001 (0x0001 - 0x0000)
struct ModioUISelectableWidget_SetToggleable final
{
public:
	bool                                          bNewToggleableState;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISelectableWidget_SetToggleable) == 0x000001, "Wrong alignment on ModioUISelectableWidget_SetToggleable");
static_assert(sizeof(ModioUISelectableWidget_SetToggleable) == 0x000001, "Wrong size on ModioUISelectableWidget_SetToggleable");
static_assert(offsetof(ModioUISelectableWidget_SetToggleable, bNewToggleableState) == 0x000000, "Member 'ModioUISelectableWidget_SetToggleable::bNewToggleableState' has a wrong offset!");

// Function ModioUICore.ModioUIStringInputWidget.AddTextChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIStringInputWidget_AddTextChangedHandler final
{
public:
	TDelegate<void(class UObject* Context, const class FText& Text)> Handler;                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIStringInputWidget_AddTextChangedHandler) == 0x000004, "Wrong alignment on ModioUIStringInputWidget_AddTextChangedHandler");
static_assert(sizeof(ModioUIStringInputWidget_AddTextChangedHandler) == 0x000010, "Wrong size on ModioUIStringInputWidget_AddTextChangedHandler");
static_assert(offsetof(ModioUIStringInputWidget_AddTextChangedHandler, Handler) == 0x000000, "Member 'ModioUIStringInputWidget_AddTextChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIStringInputWidget.AddTextCommittedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIStringInputWidget_AddTextCommittedHandler final
{
public:
	TDelegate<void(class UObject* Context, const class FText& Text, ETextCommit CommitMethod)> Handler; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIStringInputWidget_AddTextCommittedHandler) == 0x000004, "Wrong alignment on ModioUIStringInputWidget_AddTextCommittedHandler");
static_assert(sizeof(ModioUIStringInputWidget_AddTextCommittedHandler) == 0x000010, "Wrong size on ModioUIStringInputWidget_AddTextCommittedHandler");
static_assert(offsetof(ModioUIStringInputWidget_AddTextCommittedHandler, Handler) == 0x000000, "Member 'ModioUIStringInputWidget_AddTextCommittedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIStringInputWidget.GatherInput
// 0x0010 (0x0010 - 0x0000)
struct ModioUIStringInputWidget_GatherInput final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIStringInputWidget_GatherInput) == 0x000008, "Wrong alignment on ModioUIStringInputWidget_GatherInput");
static_assert(sizeof(ModioUIStringInputWidget_GatherInput) == 0x000010, "Wrong size on ModioUIStringInputWidget_GatherInput");
static_assert(offsetof(ModioUIStringInputWidget_GatherInput, ReturnValue) == 0x000000, "Member 'ModioUIStringInputWidget_GatherInput::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIStringInputWidget.RemoveTextChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIStringInputWidget_RemoveTextChangedHandler final
{
public:
	TDelegate<void(class UObject* Context, const class FText& Text)> Handler;                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIStringInputWidget_RemoveTextChangedHandler) == 0x000004, "Wrong alignment on ModioUIStringInputWidget_RemoveTextChangedHandler");
static_assert(sizeof(ModioUIStringInputWidget_RemoveTextChangedHandler) == 0x000010, "Wrong size on ModioUIStringInputWidget_RemoveTextChangedHandler");
static_assert(offsetof(ModioUIStringInputWidget_RemoveTextChangedHandler, Handler) == 0x000000, "Member 'ModioUIStringInputWidget_RemoveTextChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIStringInputWidget.RemoveTextCommittedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUIStringInputWidget_RemoveTextCommittedHandler final
{
public:
	TDelegate<void(class UObject* Context, const class FText& Text, ETextCommit CommitMethod)> Handler; // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIStringInputWidget_RemoveTextCommittedHandler) == 0x000004, "Wrong alignment on ModioUIStringInputWidget_RemoveTextCommittedHandler");
static_assert(sizeof(ModioUIStringInputWidget_RemoveTextCommittedHandler) == 0x000010, "Wrong size on ModioUIStringInputWidget_RemoveTextCommittedHandler");
static_assert(offsetof(ModioUIStringInputWidget_RemoveTextCommittedHandler, Handler) == 0x000000, "Member 'ModioUIStringInputWidget_RemoveTextCommittedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUIStringInputWidget.SetHint
// 0x0018 (0x0018 - 0x0000)
struct ModioUIStringInputWidget_SetHint final
{
public:
	class FText                                   HintText;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIStringInputWidget_SetHint) == 0x000008, "Wrong alignment on ModioUIStringInputWidget_SetHint");
static_assert(sizeof(ModioUIStringInputWidget_SetHint) == 0x000018, "Wrong size on ModioUIStringInputWidget_SetHint");
static_assert(offsetof(ModioUIStringInputWidget_SetHint, HintText) == 0x000000, "Member 'ModioUIStringInputWidget_SetHint::HintText' has a wrong offset!");

// Function ModioUICore.ModioUIStringInputWidget.SetInput
// 0x0010 (0x0010 - 0x0000)
struct ModioUIStringInputWidget_SetInput final
{
public:
	class FString                                 Input;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIStringInputWidget_SetInput) == 0x000008, "Wrong alignment on ModioUIStringInputWidget_SetInput");
static_assert(sizeof(ModioUIStringInputWidget_SetInput) == 0x000010, "Wrong size on ModioUIStringInputWidget_SetInput");
static_assert(offsetof(ModioUIStringInputWidget_SetInput, Input) == 0x000000, "Member 'ModioUIStringInputWidget_SetInput::Input' has a wrong offset!");

// Function ModioUICore.ModioUISubscriptionsChangedReceiver.OnSubscriptionsChanged
// 0x0010 (0x0010 - 0x0000)
struct ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewSubscriptionState;                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged) == 0x000008, "Wrong alignment on ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged");
static_assert(sizeof(ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged) == 0x000010, "Wrong size on ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged");
static_assert(offsetof(ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged, ModId) == 0x000000, "Member 'ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged::ModId' has a wrong offset!");
static_assert(offsetof(ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged, bNewSubscriptionState) == 0x000008, "Member 'ModioUISubscriptionsChangedReceiver_OnSubscriptionsChanged::bNewSubscriptionState' has a wrong offset!");

// Function ModioUICore.ModioUISubscriptionsChangedReceiverLibrary.DeregisterSubscriptionsChangedReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUISubscriptionsChangedReceiverLibrary_DeregisterSubscriptionsChangedReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubscriptionsChangedReceiverLibrary_DeregisterSubscriptionsChangedReceiver) == 0x000008, "Wrong alignment on ModioUISubscriptionsChangedReceiverLibrary_DeregisterSubscriptionsChangedReceiver");
static_assert(sizeof(ModioUISubscriptionsChangedReceiverLibrary_DeregisterSubscriptionsChangedReceiver) == 0x000008, "Wrong size on ModioUISubscriptionsChangedReceiverLibrary_DeregisterSubscriptionsChangedReceiver");
static_assert(offsetof(ModioUISubscriptionsChangedReceiverLibrary_DeregisterSubscriptionsChangedReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUISubscriptionsChangedReceiverLibrary_DeregisterSubscriptionsChangedReceiver::ObjectToDeregister' has a wrong offset!");

// Function ModioUICore.ModioUISubscriptionsChangedReceiverLibrary.RegisterSubscriptionsChangedReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUISubscriptionsChangedReceiverLibrary_RegisterSubscriptionsChangedReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISubscriptionsChangedReceiverLibrary_RegisterSubscriptionsChangedReceiver) == 0x000008, "Wrong alignment on ModioUISubscriptionsChangedReceiverLibrary_RegisterSubscriptionsChangedReceiver");
static_assert(sizeof(ModioUISubscriptionsChangedReceiverLibrary_RegisterSubscriptionsChangedReceiver) == 0x000008, "Wrong size on ModioUISubscriptionsChangedReceiverLibrary_RegisterSubscriptionsChangedReceiver");
static_assert(offsetof(ModioUISubscriptionsChangedReceiverLibrary_RegisterSubscriptionsChangedReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUISubscriptionsChangedReceiverLibrary_RegisterSubscriptionsChangedReceiver::ObjectToRegister' has a wrong offset!");

// Function ModioUICore.ModioUISupportsCustomNavigation.SetNavigationDelegate
// 0x0014 (0x0014 - 0x0000)
struct ModioUISupportsCustomNavigation_SetNavigationDelegate final
{
public:
	uint8                                         Context;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EUINavigation Navigation)>     ContentNavigationDelegate;                         // 0x0004(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUISupportsCustomNavigation_SetNavigationDelegate) == 0x000004, "Wrong alignment on ModioUISupportsCustomNavigation_SetNavigationDelegate");
static_assert(sizeof(ModioUISupportsCustomNavigation_SetNavigationDelegate) == 0x000014, "Wrong size on ModioUISupportsCustomNavigation_SetNavigationDelegate");
static_assert(offsetof(ModioUISupportsCustomNavigation_SetNavigationDelegate, Context) == 0x000000, "Member 'ModioUISupportsCustomNavigation_SetNavigationDelegate::Context' has a wrong offset!");
static_assert(offsetof(ModioUISupportsCustomNavigation_SetNavigationDelegate, ContentNavigationDelegate) == 0x000004, "Member 'ModioUISupportsCustomNavigation_SetNavigationDelegate::ContentNavigationDelegate' has a wrong offset!");

// Function ModioUICore.ModioUITextValidator.AddTextValidationCompletedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUITextValidator_AddTextValidationCompletedHandler final
{
public:
	TDelegate<void(bool bIsValid)>                Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUITextValidator_AddTextValidationCompletedHandler) == 0x000004, "Wrong alignment on ModioUITextValidator_AddTextValidationCompletedHandler");
static_assert(sizeof(ModioUITextValidator_AddTextValidationCompletedHandler) == 0x000010, "Wrong size on ModioUITextValidator_AddTextValidationCompletedHandler");
static_assert(offsetof(ModioUITextValidator_AddTextValidationCompletedHandler, Handler) == 0x000000, "Member 'ModioUITextValidator_AddTextValidationCompletedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUITextValidator.GetTextValidationRules
// 0x0010 (0x0010 - 0x0000)
struct ModioUITextValidator_GetTextValidationRules final
{
public:
	TArray<struct FModioTextValidationRule>       Rules;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUITextValidator_GetTextValidationRules) == 0x000008, "Wrong alignment on ModioUITextValidator_GetTextValidationRules");
static_assert(sizeof(ModioUITextValidator_GetTextValidationRules) == 0x000010, "Wrong size on ModioUITextValidator_GetTextValidationRules");
static_assert(offsetof(ModioUITextValidator_GetTextValidationRules, Rules) == 0x000000, "Member 'ModioUITextValidator_GetTextValidationRules::Rules' has a wrong offset!");

// Function ModioUICore.ModioUITextValidator.RemoveTextValidationCompletedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioUITextValidator_RemoveTextValidationCompletedHandler final
{
public:
	TDelegate<void(bool bIsValid)>                Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUITextValidator_RemoveTextValidationCompletedHandler) == 0x000004, "Wrong alignment on ModioUITextValidator_RemoveTextValidationCompletedHandler");
static_assert(sizeof(ModioUITextValidator_RemoveTextValidationCompletedHandler) == 0x000010, "Wrong size on ModioUITextValidator_RemoveTextValidationCompletedHandler");
static_assert(offsetof(ModioUITextValidator_RemoveTextValidationCompletedHandler, Handler) == 0x000000, "Member 'ModioUITextValidator_RemoveTextValidationCompletedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioUITextValidator.SetValidationError
// 0x0018 (0x0018 - 0x0000)
struct ModioUITextValidator_SetValidationError final
{
public:
	class FText                                   ErrorText;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUITextValidator_SetValidationError) == 0x000008, "Wrong alignment on ModioUITextValidator_SetValidationError");
static_assert(sizeof(ModioUITextValidator_SetValidationError) == 0x000018, "Wrong size on ModioUITextValidator_SetValidationError");
static_assert(offsetof(ModioUITextValidator_SetValidationError, ErrorText) == 0x000000, "Member 'ModioUITextValidator_SetValidationError::ErrorText' has a wrong offset!");

// Function ModioUICore.ModioUITextValidator.ValidateText
// 0x0038 (0x0038 - 0x0000)
struct ModioUITextValidator_ValidateText final
{
public:
	class FText                                   inputText;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ValidationMessageText;                             // 0x0018(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUITextValidator_ValidateText) == 0x000008, "Wrong alignment on ModioUITextValidator_ValidateText");
static_assert(sizeof(ModioUITextValidator_ValidateText) == 0x000038, "Wrong size on ModioUITextValidator_ValidateText");
static_assert(offsetof(ModioUITextValidator_ValidateText, inputText) == 0x000000, "Member 'ModioUITextValidator_ValidateText::inputText' has a wrong offset!");
static_assert(offsetof(ModioUITextValidator_ValidateText, ValidationMessageText) == 0x000018, "Member 'ModioUITextValidator_ValidateText::ValidationMessageText' has a wrong offset!");
static_assert(offsetof(ModioUITextValidator_ValidateText, ReturnValue) == 0x000030, "Member 'ModioUITextValidator_ValidateText::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIInputValidationLibrary.DefaultValidateText
// 0x0048 (0x0048 - 0x0000)
struct ModioUIInputValidationLibrary_DefaultValidateText final
{
public:
	TScriptInterface<class IModioUITextValidator> TargetObject;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   inputText;                                         // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ValidationMessageText;                             // 0x0028(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_DefaultValidateText) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_DefaultValidateText");
static_assert(sizeof(ModioUIInputValidationLibrary_DefaultValidateText) == 0x000048, "Wrong size on ModioUIInputValidationLibrary_DefaultValidateText");
static_assert(offsetof(ModioUIInputValidationLibrary_DefaultValidateText, TargetObject) == 0x000000, "Member 'ModioUIInputValidationLibrary_DefaultValidateText::TargetObject' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_DefaultValidateText, inputText) == 0x000010, "Member 'ModioUIInputValidationLibrary_DefaultValidateText::inputText' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_DefaultValidateText, ValidationMessageText) == 0x000028, "Member 'ModioUIInputValidationLibrary_DefaultValidateText::ValidationMessageText' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_DefaultValidateText, ReturnValue) == 0x000040, "Member 'ModioUIInputValidationLibrary_DefaultValidateText::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIInputValidationLibrary.ValidateAllLetters
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateAllLetters final
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateAllLetters) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateAllLetters");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateAllLetters) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateAllLetters");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAllLetters, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateAllLetters::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAllLetters, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateAllLetters::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIInputValidationLibrary.ValidateAllNumeric
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateAllNumeric final
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateAllNumeric) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateAllNumeric");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateAllNumeric) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateAllNumeric");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAllNumeric, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateAllNumeric::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAllNumeric, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateAllNumeric::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIInputValidationLibrary.ValidateAlphanumeric
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateAlphanumeric final
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateAlphanumeric) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateAlphanumeric");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateAlphanumeric) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateAlphanumeric");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAlphanumeric, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateAlphanumeric::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateAlphanumeric, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateAlphanumeric::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIInputValidationLibrary.ValidateEmailAddress
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateEmailAddress final
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateEmailAddress) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateEmailAddress");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateEmailAddress) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateEmailAddress");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateEmailAddress, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateEmailAddress::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateEmailAddress, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateEmailAddress::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIInputValidationLibrary.ValidateLength
// 0x0028 (0x0028 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateLength final
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         DesiredMaximumLength;                              // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DesiredMinimumLength;                              // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateLength) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateLength");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateLength) == 0x000028, "Wrong size on ModioUIInputValidationLibrary_ValidateLength");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateLength, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateLength::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateLength, DesiredMaximumLength) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateLength::DesiredMaximumLength' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateLength, DesiredMinimumLength) == 0x00001C, "Member 'ModioUIInputValidationLibrary_ValidateLength::DesiredMinimumLength' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateLength, ReturnValue) == 0x000020, "Member 'ModioUIInputValidationLibrary_ValidateLength::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIInputValidationLibrary.ValidateNotBlank
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateNotBlank final
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateNotBlank) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateNotBlank");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateNotBlank) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateNotBlank");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateNotBlank, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateNotBlank::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateNotBlank, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateNotBlank::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIInputValidationLibrary.ValidateNotEmpty
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateNotEmpty final
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateNotEmpty) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateNotEmpty");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateNotEmpty) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateNotEmpty");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateNotEmpty, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateNotEmpty::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateNotEmpty, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateNotEmpty::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIInputValidationLibrary.ValidateNoWhitespace
// 0x0020 (0x0020 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateNoWhitespace final
{
public:
	class FText                                   TextToValidate;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateNoWhitespace) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateNoWhitespace");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateNoWhitespace) == 0x000020, "Wrong size on ModioUIInputValidationLibrary_ValidateNoWhitespace");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateNoWhitespace, TextToValidate) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateNoWhitespace::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateNoWhitespace, ReturnValue) == 0x000018, "Member 'ModioUIInputValidationLibrary_ValidateNoWhitespace::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIInputValidationLibrary.ValidateUsingRule
// 0x0060 (0x0060 - 0x0000)
struct ModioUIInputValidationLibrary_ValidateUsingRule final
{
public:
	struct FModioTextValidationRule               Rule;                                              // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   TextToValidate;                                    // 0x0028(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ValidationMessageText;                             // 0x0040(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUIInputValidationLibrary_ValidateUsingRule) == 0x000008, "Wrong alignment on ModioUIInputValidationLibrary_ValidateUsingRule");
static_assert(sizeof(ModioUIInputValidationLibrary_ValidateUsingRule) == 0x000060, "Wrong size on ModioUIInputValidationLibrary_ValidateUsingRule");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateUsingRule, Rule) == 0x000000, "Member 'ModioUIInputValidationLibrary_ValidateUsingRule::Rule' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateUsingRule, TextToValidate) == 0x000028, "Member 'ModioUIInputValidationLibrary_ValidateUsingRule::TextToValidate' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateUsingRule, ValidationMessageText) == 0x000040, "Member 'ModioUIInputValidationLibrary_ValidateUsingRule::ValidationMessageText' has a wrong offset!");
static_assert(offsetof(ModioUIInputValidationLibrary_ValidateUsingRule, ReturnValue) == 0x000058, "Member 'ModioUIInputValidationLibrary_ValidateUsingRule::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUITokenPackListInterface.SetTokenPackSelectionByID
// 0x0010 (0x0010 - 0x0000)
struct ModioUITokenPackListInterface_SetTokenPackSelectionByID final
{
public:
	struct FModioTokenPackID                      TokenPackID;                                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUITokenPackListInterface_SetTokenPackSelectionByID) == 0x000008, "Wrong alignment on ModioUITokenPackListInterface_SetTokenPackSelectionByID");
static_assert(sizeof(ModioUITokenPackListInterface_SetTokenPackSelectionByID) == 0x000010, "Wrong size on ModioUITokenPackListInterface_SetTokenPackSelectionByID");
static_assert(offsetof(ModioUITokenPackListInterface_SetTokenPackSelectionByID, TokenPackID) == 0x000000, "Member 'ModioUITokenPackListInterface_SetTokenPackSelectionByID::TokenPackID' has a wrong offset!");

// Function ModioUICore.ModioUITokenPackListInterface.SetTokenPacksFromTokenPackArray
// 0x0018 (0x0018 - 0x0000)
struct ModioUITokenPackListInterface_SetTokenPacksFromTokenPackArray final
{
public:
	TArray<struct FModioTokenPack>                inArray;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bAddToExisting;                                    // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUITokenPackListInterface_SetTokenPacksFromTokenPackArray) == 0x000008, "Wrong alignment on ModioUITokenPackListInterface_SetTokenPacksFromTokenPackArray");
static_assert(sizeof(ModioUITokenPackListInterface_SetTokenPacksFromTokenPackArray) == 0x000018, "Wrong size on ModioUITokenPackListInterface_SetTokenPacksFromTokenPackArray");
static_assert(offsetof(ModioUITokenPackListInterface_SetTokenPacksFromTokenPackArray, inArray) == 0x000000, "Member 'ModioUITokenPackListInterface_SetTokenPacksFromTokenPackArray::inArray' has a wrong offset!");
static_assert(offsetof(ModioUITokenPackListInterface_SetTokenPacksFromTokenPackArray, bAddToExisting) == 0x000010, "Member 'ModioUITokenPackListInterface_SetTokenPacksFromTokenPackArray::bAddToExisting' has a wrong offset!");

// Function ModioUICore.ModioUITokenPackListInterface.SetTokenPacksFromTokenPackList
// 0x0030 (0x0030 - 0x0000)
struct ModioUITokenPackListInterface_SetTokenPacksFromTokenPackList final
{
public:
	struct FModioTokenPackList                    InList;                                            // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddToExisting;                                    // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUITokenPackListInterface_SetTokenPacksFromTokenPackList) == 0x000008, "Wrong alignment on ModioUITokenPackListInterface_SetTokenPacksFromTokenPackList");
static_assert(sizeof(ModioUITokenPackListInterface_SetTokenPacksFromTokenPackList) == 0x000030, "Wrong size on ModioUITokenPackListInterface_SetTokenPacksFromTokenPackList");
static_assert(offsetof(ModioUITokenPackListInterface_SetTokenPacksFromTokenPackList, InList) == 0x000000, "Member 'ModioUITokenPackListInterface_SetTokenPacksFromTokenPackList::InList' has a wrong offset!");
static_assert(offsetof(ModioUITokenPackListInterface_SetTokenPacksFromTokenPackList, bAddToExisting) == 0x000028, "Member 'ModioUITokenPackListInterface_SetTokenPacksFromTokenPackList::bAddToExisting' has a wrong offset!");

// Function ModioUICore.ModioUITokenPackReceiver.OnListAllTokenPacksRequestCompleted
// 0x0038 (0x0038 - 0x0000)
struct ModioUITokenPackReceiver_OnListAllTokenPacksRequestCompleted final
{
public:
	struct FModioErrorCode                        ErrorCode;                                         // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FModioOptionalTokenPackList            List;                                              // 0x0008(0x0030)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUITokenPackReceiver_OnListAllTokenPacksRequestCompleted) == 0x000008, "Wrong alignment on ModioUITokenPackReceiver_OnListAllTokenPacksRequestCompleted");
static_assert(sizeof(ModioUITokenPackReceiver_OnListAllTokenPacksRequestCompleted) == 0x000038, "Wrong size on ModioUITokenPackReceiver_OnListAllTokenPacksRequestCompleted");
static_assert(offsetof(ModioUITokenPackReceiver_OnListAllTokenPacksRequestCompleted, ErrorCode) == 0x000000, "Member 'ModioUITokenPackReceiver_OnListAllTokenPacksRequestCompleted::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUITokenPackReceiver_OnListAllTokenPacksRequestCompleted, List) == 0x000008, "Member 'ModioUITokenPackReceiver_OnListAllTokenPacksRequestCompleted::List' has a wrong offset!");

// Function ModioUICore.ModioUITokenPackReceiver.OnTokenPackRequestCompleted
// 0x0138 (0x0138 - 0x0000)
struct ModioUITokenPackReceiver_OnTokenPackRequestCompleted final
{
public:
	struct FModioTokenPackID                      TokenPackID;                                       // 0x0000(0x0010)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioErrorCode                        ErrorCode;                                         // 0x0010(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FModioOptionalTokenPack                Info;                                              // 0x0018(0x0120)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUITokenPackReceiver_OnTokenPackRequestCompleted) == 0x000008, "Wrong alignment on ModioUITokenPackReceiver_OnTokenPackRequestCompleted");
static_assert(sizeof(ModioUITokenPackReceiver_OnTokenPackRequestCompleted) == 0x000138, "Wrong size on ModioUITokenPackReceiver_OnTokenPackRequestCompleted");
static_assert(offsetof(ModioUITokenPackReceiver_OnTokenPackRequestCompleted, TokenPackID) == 0x000000, "Member 'ModioUITokenPackReceiver_OnTokenPackRequestCompleted::TokenPackID' has a wrong offset!");
static_assert(offsetof(ModioUITokenPackReceiver_OnTokenPackRequestCompleted, ErrorCode) == 0x000010, "Member 'ModioUITokenPackReceiver_OnTokenPackRequestCompleted::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUITokenPackReceiver_OnTokenPackRequestCompleted, Info) == 0x000018, "Member 'ModioUITokenPackReceiver_OnTokenPackRequestCompleted::Info' has a wrong offset!");

// Function ModioUICore.ModioUITokenPackReceiverLibrary.DeregisterTokenPackReceiver
// 0x0010 (0x0010 - 0x0000)
struct ModioUITokenPackReceiverLibrary_DeregisterTokenPackReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioUITokenPackEventType                    EventType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUITokenPackReceiverLibrary_DeregisterTokenPackReceiver) == 0x000008, "Wrong alignment on ModioUITokenPackReceiverLibrary_DeregisterTokenPackReceiver");
static_assert(sizeof(ModioUITokenPackReceiverLibrary_DeregisterTokenPackReceiver) == 0x000010, "Wrong size on ModioUITokenPackReceiverLibrary_DeregisterTokenPackReceiver");
static_assert(offsetof(ModioUITokenPackReceiverLibrary_DeregisterTokenPackReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUITokenPackReceiverLibrary_DeregisterTokenPackReceiver::ObjectToDeregister' has a wrong offset!");
static_assert(offsetof(ModioUITokenPackReceiverLibrary_DeregisterTokenPackReceiver, EventType) == 0x000008, "Member 'ModioUITokenPackReceiverLibrary_DeregisterTokenPackReceiver::EventType' has a wrong offset!");

// Function ModioUICore.ModioUITokenPackReceiverLibrary.RegisterTokenPackReceiver
// 0x0010 (0x0010 - 0x0000)
struct ModioUITokenPackReceiverLibrary_RegisterTokenPackReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioUITokenPackEventType                    EventType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUITokenPackReceiverLibrary_RegisterTokenPackReceiver) == 0x000008, "Wrong alignment on ModioUITokenPackReceiverLibrary_RegisterTokenPackReceiver");
static_assert(sizeof(ModioUITokenPackReceiverLibrary_RegisterTokenPackReceiver) == 0x000010, "Wrong size on ModioUITokenPackReceiverLibrary_RegisterTokenPackReceiver");
static_assert(offsetof(ModioUITokenPackReceiverLibrary_RegisterTokenPackReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUITokenPackReceiverLibrary_RegisterTokenPackReceiver::ObjectToRegister' has a wrong offset!");
static_assert(offsetof(ModioUITokenPackReceiverLibrary_RegisterTokenPackReceiver, EventType) == 0x000008, "Member 'ModioUITokenPackReceiverLibrary_RegisterTokenPackReceiver::EventType' has a wrong offset!");

// Function ModioUICore.ModioUIUserAvatarDownloadCompletedReceiver.OnUserAvatarDownloadCompleted
// 0x0020 (0x0020 - 0x0000)
struct ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted final
{
public:
	struct FModioErrorCode                        ErrorCode;                                         // 0x0000(0x0008)(Parm, NativeAccessSpecifierPublic)
	struct FModioOptionalImage                    Image;                                             // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted) == 0x000008, "Wrong alignment on ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted");
static_assert(sizeof(ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted) == 0x000020, "Wrong size on ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted");
static_assert(offsetof(ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted, ErrorCode) == 0x000000, "Member 'ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted, Image) == 0x000008, "Member 'ModioUIUserAvatarDownloadCompletedReceiver_OnUserAvatarDownloadCompleted::Image' has a wrong offset!");

// Function ModioUICore.ModioUIUserAvatarDownloadCompletedReceiverLibrary.DeregisterUserAvatarDownloadCompletedReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIUserAvatarDownloadCompletedReceiverLibrary_DeregisterUserAvatarDownloadCompletedReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIUserAvatarDownloadCompletedReceiverLibrary_DeregisterUserAvatarDownloadCompletedReceiver) == 0x000008, "Wrong alignment on ModioUIUserAvatarDownloadCompletedReceiverLibrary_DeregisterUserAvatarDownloadCompletedReceiver");
static_assert(sizeof(ModioUIUserAvatarDownloadCompletedReceiverLibrary_DeregisterUserAvatarDownloadCompletedReceiver) == 0x000008, "Wrong size on ModioUIUserAvatarDownloadCompletedReceiverLibrary_DeregisterUserAvatarDownloadCompletedReceiver");
static_assert(offsetof(ModioUIUserAvatarDownloadCompletedReceiverLibrary_DeregisterUserAvatarDownloadCompletedReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUIUserAvatarDownloadCompletedReceiverLibrary_DeregisterUserAvatarDownloadCompletedReceiver::ObjectToDeregister' has a wrong offset!");

// Function ModioUICore.ModioUIUserAvatarDownloadCompletedReceiverLibrary.RegisterUserAvatarDownloadCompletedReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIUserAvatarDownloadCompletedReceiverLibrary_RegisterUserAvatarDownloadCompletedReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIUserAvatarDownloadCompletedReceiverLibrary_RegisterUserAvatarDownloadCompletedReceiver) == 0x000008, "Wrong alignment on ModioUIUserAvatarDownloadCompletedReceiverLibrary_RegisterUserAvatarDownloadCompletedReceiver");
static_assert(sizeof(ModioUIUserAvatarDownloadCompletedReceiverLibrary_RegisterUserAvatarDownloadCompletedReceiver) == 0x000008, "Wrong size on ModioUIUserAvatarDownloadCompletedReceiverLibrary_RegisterUserAvatarDownloadCompletedReceiver");
static_assert(offsetof(ModioUIUserAvatarDownloadCompletedReceiverLibrary_RegisterUserAvatarDownloadCompletedReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUIUserAvatarDownloadCompletedReceiverLibrary_RegisterUserAvatarDownloadCompletedReceiver::ObjectToRegister' has a wrong offset!");

// Function ModioUICore.ModioUIUserChangedReceiver.OnUserChanged
// 0x0048 (0x0048 - 0x0000)
struct ModioUIUserChangedReceiver_OnUserChanged final
{
public:
	struct FModioOptionalUser                     NewUser;                                           // 0x0000(0x0048)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIUserChangedReceiver_OnUserChanged) == 0x000008, "Wrong alignment on ModioUIUserChangedReceiver_OnUserChanged");
static_assert(sizeof(ModioUIUserChangedReceiver_OnUserChanged) == 0x000048, "Wrong size on ModioUIUserChangedReceiver_OnUserChanged");
static_assert(offsetof(ModioUIUserChangedReceiver_OnUserChanged, NewUser) == 0x000000, "Member 'ModioUIUserChangedReceiver_OnUserChanged::NewUser' has a wrong offset!");

// Function ModioUICore.ModioUIUserChangedReceiverLibrary.DeregisterUserChangedReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIUserChangedReceiverLibrary_DeregisterUserChangedReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIUserChangedReceiverLibrary_DeregisterUserChangedReceiver) == 0x000008, "Wrong alignment on ModioUIUserChangedReceiverLibrary_DeregisterUserChangedReceiver");
static_assert(sizeof(ModioUIUserChangedReceiverLibrary_DeregisterUserChangedReceiver) == 0x000008, "Wrong size on ModioUIUserChangedReceiverLibrary_DeregisterUserChangedReceiver");
static_assert(offsetof(ModioUIUserChangedReceiverLibrary_DeregisterUserChangedReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUIUserChangedReceiverLibrary_DeregisterUserChangedReceiver::ObjectToDeregister' has a wrong offset!");

// Function ModioUICore.ModioUIUserChangedReceiverLibrary.RegisterUserChangedReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIUserChangedReceiverLibrary_RegisterUserChangedReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIUserChangedReceiverLibrary_RegisterUserChangedReceiver) == 0x000008, "Wrong alignment on ModioUIUserChangedReceiverLibrary_RegisterUserChangedReceiver");
static_assert(sizeof(ModioUIUserChangedReceiverLibrary_RegisterUserChangedReceiver) == 0x000008, "Wrong size on ModioUIUserChangedReceiverLibrary_RegisterUserChangedReceiver");
static_assert(offsetof(ModioUIUserChangedReceiverLibrary_RegisterUserChangedReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUIUserChangedReceiverLibrary_RegisterUserChangedReceiver::ObjectToRegister' has a wrong offset!");

// Function ModioUICore.ModioUIWalletBalanceUpdatedEventReceiver.OnWalletBalanceUpdated
// 0x0008 (0x0008 - 0x0000)
struct ModioUIWalletBalanceUpdatedEventReceiver_OnWalletBalanceUpdated final
{
public:
	struct FModioUnsigned64                       WalletBalance;                                     // 0x0000(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIWalletBalanceUpdatedEventReceiver_OnWalletBalanceUpdated) == 0x000008, "Wrong alignment on ModioUIWalletBalanceUpdatedEventReceiver_OnWalletBalanceUpdated");
static_assert(sizeof(ModioUIWalletBalanceUpdatedEventReceiver_OnWalletBalanceUpdated) == 0x000008, "Wrong size on ModioUIWalletBalanceUpdatedEventReceiver_OnWalletBalanceUpdated");
static_assert(offsetof(ModioUIWalletBalanceUpdatedEventReceiver_OnWalletBalanceUpdated, WalletBalance) == 0x000000, "Member 'ModioUIWalletBalanceUpdatedEventReceiver_OnWalletBalanceUpdated::WalletBalance' has a wrong offset!");

// Function ModioUICore.ModioUIWalletBalanceUpdatedEventReceiverLibrary.DeregisterWalletBalanceUpdatedEventReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIWalletBalanceUpdatedEventReceiverLibrary_DeregisterWalletBalanceUpdatedEventReceiver final
{
public:
	class UObject*                                ObjectToDeregister;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIWalletBalanceUpdatedEventReceiverLibrary_DeregisterWalletBalanceUpdatedEventReceiver) == 0x000008, "Wrong alignment on ModioUIWalletBalanceUpdatedEventReceiverLibrary_DeregisterWalletBalanceUpdatedEventReceiver");
static_assert(sizeof(ModioUIWalletBalanceUpdatedEventReceiverLibrary_DeregisterWalletBalanceUpdatedEventReceiver) == 0x000008, "Wrong size on ModioUIWalletBalanceUpdatedEventReceiverLibrary_DeregisterWalletBalanceUpdatedEventReceiver");
static_assert(offsetof(ModioUIWalletBalanceUpdatedEventReceiverLibrary_DeregisterWalletBalanceUpdatedEventReceiver, ObjectToDeregister) == 0x000000, "Member 'ModioUIWalletBalanceUpdatedEventReceiverLibrary_DeregisterWalletBalanceUpdatedEventReceiver::ObjectToDeregister' has a wrong offset!");

// Function ModioUICore.ModioUIWalletBalanceUpdatedEventReceiverLibrary.RegisterWalletBalanceUpdatedEventReceiver
// 0x0008 (0x0008 - 0x0000)
struct ModioUIWalletBalanceUpdatedEventReceiverLibrary_RegisterWalletBalanceUpdatedEventReceiver final
{
public:
	class UObject*                                ObjectToRegister;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIWalletBalanceUpdatedEventReceiverLibrary_RegisterWalletBalanceUpdatedEventReceiver) == 0x000008, "Wrong alignment on ModioUIWalletBalanceUpdatedEventReceiverLibrary_RegisterWalletBalanceUpdatedEventReceiver");
static_assert(sizeof(ModioUIWalletBalanceUpdatedEventReceiverLibrary_RegisterWalletBalanceUpdatedEventReceiver) == 0x000008, "Wrong size on ModioUIWalletBalanceUpdatedEventReceiverLibrary_RegisterWalletBalanceUpdatedEventReceiver");
static_assert(offsetof(ModioUIWalletBalanceUpdatedEventReceiverLibrary_RegisterWalletBalanceUpdatedEventReceiver, ObjectToRegister) == 0x000000, "Member 'ModioUIWalletBalanceUpdatedEventReceiverLibrary_RegisterWalletBalanceUpdatedEventReceiver::ObjectToRegister' has a wrong offset!");

// Function ModioUICore.ModioUserUIDetails.GetFullUser
// 0x0040 (0x0040 - 0x0000)
struct ModioUserUIDetails_GetFullUser final
{
public:
	struct FModioUser                             ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUserUIDetails_GetFullUser) == 0x000008, "Wrong alignment on ModioUserUIDetails_GetFullUser");
static_assert(sizeof(ModioUserUIDetails_GetFullUser) == 0x000040, "Wrong size on ModioUserUIDetails_GetFullUser");
static_assert(offsetof(ModioUserUIDetails_GetFullUser, ReturnValue) == 0x000000, "Member 'ModioUserUIDetails_GetFullUser::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUserUIDetails.GetUserID
// 0x0008 (0x0008 - 0x0000)
struct ModioUserUIDetails_GetUserID final
{
public:
	struct FModioUserID                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUserUIDetails_GetUserID) == 0x000008, "Wrong alignment on ModioUserUIDetails_GetUserID");
static_assert(sizeof(ModioUserUIDetails_GetUserID) == 0x000008, "Wrong size on ModioUserUIDetails_GetUserID");
static_assert(offsetof(ModioUserUIDetails_GetUserID, ReturnValue) == 0x000000, "Member 'ModioUserUIDetails_GetUserID::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModRatingStateProvider.QueryModRating
// 0x0010 (0x0010 - 0x0000)
struct ModRatingStateProvider_QueryModRating final
{
public:
	int64                                         ModId;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioRating                                  ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModRatingStateProvider_QueryModRating) == 0x000008, "Wrong alignment on ModRatingStateProvider_QueryModRating");
static_assert(sizeof(ModRatingStateProvider_QueryModRating) == 0x000010, "Wrong size on ModRatingStateProvider_QueryModRating");
static_assert(offsetof(ModRatingStateProvider_QueryModRating, ModId) == 0x000000, "Member 'ModRatingStateProvider_QueryModRating::ModId' has a wrong offset!");
static_assert(offsetof(ModRatingStateProvider_QueryModRating, ReturnValue) == 0x000008, "Member 'ModRatingStateProvider_QueryModRating::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModRatingStateProvider.RequestModRatingChange
// 0x0010 (0x0010 - 0x0000)
struct ModRatingStateProvider_RequestModRatingChange final
{
public:
	int64                                         ID;                                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioRating                                  NewRating;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModRatingStateProvider_RequestModRatingChange) == 0x000008, "Wrong alignment on ModRatingStateProvider_RequestModRatingChange");
static_assert(sizeof(ModRatingStateProvider_RequestModRatingChange) == 0x000010, "Wrong size on ModRatingStateProvider_RequestModRatingChange");
static_assert(offsetof(ModRatingStateProvider_RequestModRatingChange, ID) == 0x000000, "Member 'ModRatingStateProvider_RequestModRatingChange::ID' has a wrong offset!");
static_assert(offsetof(ModRatingStateProvider_RequestModRatingChange, NewRating) == 0x000008, "Member 'ModRatingStateProvider_RequestModRatingChange::NewRating' has a wrong offset!");
static_assert(offsetof(ModRatingStateProvider_RequestModRatingChange, ReturnValue) == 0x000009, "Member 'ModRatingStateProvider_RequestModRatingChange::ReturnValue' has a wrong offset!");

// Function ModioUICore.LinearColorRefLibrary.AddColorChangeHandler
// 0x0010 (0x0010 - 0x0000)
struct LinearColorRefLibrary_AddColorChangeHandler final
{
public:
	TDelegate<void()>                             Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinearColorRefLibrary_AddColorChangeHandler) == 0x000004, "Wrong alignment on LinearColorRefLibrary_AddColorChangeHandler");
static_assert(sizeof(LinearColorRefLibrary_AddColorChangeHandler) == 0x000010, "Wrong size on LinearColorRefLibrary_AddColorChangeHandler");
static_assert(offsetof(LinearColorRefLibrary_AddColorChangeHandler, Handler) == 0x000000, "Member 'LinearColorRefLibrary_AddColorChangeHandler::Handler' has a wrong offset!");

// Function ModioUICore.LinearColorRefLibrary.GetValidColorKeys
// 0x0010 (0x0010 - 0x0000)
struct LinearColorRefLibrary_GetValidColorKeys final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinearColorRefLibrary_GetValidColorKeys) == 0x000008, "Wrong alignment on LinearColorRefLibrary_GetValidColorKeys");
static_assert(sizeof(LinearColorRefLibrary_GetValidColorKeys) == 0x000010, "Wrong size on LinearColorRefLibrary_GetValidColorKeys");
static_assert(offsetof(LinearColorRefLibrary_GetValidColorKeys, ReturnValue) == 0x000000, "Member 'LinearColorRefLibrary_GetValidColorKeys::ReturnValue' has a wrong offset!");

// Function ModioUICore.LinearColorRefLibrary.RemoveColorChangeHandler
// 0x0010 (0x0010 - 0x0000)
struct LinearColorRefLibrary_RemoveColorChangeHandler final
{
public:
	TDelegate<void()>                             Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinearColorRefLibrary_RemoveColorChangeHandler) == 0x000004, "Wrong alignment on LinearColorRefLibrary_RemoveColorChangeHandler");
static_assert(sizeof(LinearColorRefLibrary_RemoveColorChangeHandler) == 0x000010, "Wrong size on LinearColorRefLibrary_RemoveColorChangeHandler");
static_assert(offsetof(LinearColorRefLibrary_RemoveColorChangeHandler, Handler) == 0x000000, "Member 'LinearColorRefLibrary_RemoveColorChangeHandler::Handler' has a wrong offset!");

// Function ModioUICore.LinearColorRefLibrary.Resolve
// 0x002C (0x002C - 0x0000)
struct LinearColorRefLibrary_Resolve final
{
public:
	struct FLinearColorRef                        Target;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bResolved;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x001C(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinearColorRefLibrary_Resolve) == 0x000004, "Wrong alignment on LinearColorRefLibrary_Resolve");
static_assert(sizeof(LinearColorRefLibrary_Resolve) == 0x00002C, "Wrong size on LinearColorRefLibrary_Resolve");
static_assert(offsetof(LinearColorRefLibrary_Resolve, Target) == 0x000000, "Member 'LinearColorRefLibrary_Resolve::Target' has a wrong offset!");
static_assert(offsetof(LinearColorRefLibrary_Resolve, bResolved) == 0x000018, "Member 'LinearColorRefLibrary_Resolve::bResolved' has a wrong offset!");
static_assert(offsetof(LinearColorRefLibrary_Resolve, ReturnValue) == 0x00001C, "Member 'LinearColorRefLibrary_Resolve::ReturnValue' has a wrong offset!");

// Function ModioUICore.LinearColorRefLibrary.ResolveOverride
// 0x0030 (0x0030 - 0x0000)
struct LinearColorRefLibrary_ResolveOverride final
{
public:
	struct FLinearColorRefOverride                Target;                                            // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinearColorRefLibrary_ResolveOverride) == 0x000004, "Wrong alignment on LinearColorRefLibrary_ResolveOverride");
static_assert(sizeof(LinearColorRefLibrary_ResolveOverride) == 0x000030, "Wrong size on LinearColorRefLibrary_ResolveOverride");
static_assert(offsetof(LinearColorRefLibrary_ResolveOverride, Target) == 0x000000, "Member 'LinearColorRefLibrary_ResolveOverride::Target' has a wrong offset!");
static_assert(offsetof(LinearColorRefLibrary_ResolveOverride, bOverrideSet) == 0x00001C, "Member 'LinearColorRefLibrary_ResolveOverride::bOverrideSet' has a wrong offset!");
static_assert(offsetof(LinearColorRefLibrary_ResolveOverride, ReturnValue) == 0x000020, "Member 'LinearColorRefLibrary_ResolveOverride::ReturnValue' has a wrong offset!");

// Function ModioUICore.LinearColorRefLibrary.ResolveOverrideAsExec
// 0x0030 (0x0030 - 0x0000)
struct LinearColorRefLibrary_ResolveOverrideAsExec final
{
public:
	struct FLinearColorRefOverride                Target;                                            // 0x0000(0x001C)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bOverrideSet;                                      // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LinearColorRefLibrary_ResolveOverrideAsExec) == 0x000004, "Wrong alignment on LinearColorRefLibrary_ResolveOverrideAsExec");
static_assert(sizeof(LinearColorRefLibrary_ResolveOverrideAsExec) == 0x000030, "Wrong size on LinearColorRefLibrary_ResolveOverrideAsExec");
static_assert(offsetof(LinearColorRefLibrary_ResolveOverrideAsExec, Target) == 0x000000, "Member 'LinearColorRefLibrary_ResolveOverrideAsExec::Target' has a wrong offset!");
static_assert(offsetof(LinearColorRefLibrary_ResolveOverrideAsExec, bOverrideSet) == 0x00001C, "Member 'LinearColorRefLibrary_ResolveOverrideAsExec::bOverrideSet' has a wrong offset!");
static_assert(offsetof(LinearColorRefLibrary_ResolveOverrideAsExec, ReturnValue) == 0x000020, "Member 'LinearColorRefLibrary_ResolveOverrideAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioCommandEntry.HandleInnerButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct ModioCommandEntry_HandleInnerButtonClicked final
{
public:
	class UObject*                                ClickContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommandEntry_HandleInnerButtonClicked) == 0x000008, "Wrong alignment on ModioCommandEntry_HandleInnerButtonClicked");
static_assert(sizeof(ModioCommandEntry_HandleInnerButtonClicked) == 0x000008, "Wrong size on ModioCommandEntry_HandleInnerButtonClicked");
static_assert(offsetof(ModioCommandEntry_HandleInnerButtonClicked, ClickContext) == 0x000000, "Member 'ModioCommandEntry_HandleInnerButtonClicked::ClickContext' has a wrong offset!");

// Function ModioUICore.ModioCommandEntry.GetClickableWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioCommandEntry_GetClickableWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommandEntry_GetClickableWidget) == 0x000008, "Wrong alignment on ModioCommandEntry_GetClickableWidget");
static_assert(sizeof(ModioCommandEntry_GetClickableWidget) == 0x000010, "Wrong size on ModioCommandEntry_GetClickableWidget");
static_assert(offsetof(ModioCommandEntry_GetClickableWidget, ReturnValue) == 0x000000, "Member 'ModioCommandEntry_GetClickableWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioCommandEntry.GetIconWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioCommandEntry_GetIconWidget final
{
public:
	TScriptInterface<class IModioUIImageDisplayWidget> ReturnValue;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommandEntry_GetIconWidget) == 0x000008, "Wrong alignment on ModioCommandEntry_GetIconWidget");
static_assert(sizeof(ModioCommandEntry_GetIconWidget) == 0x000010, "Wrong size on ModioCommandEntry_GetIconWidget");
static_assert(offsetof(ModioCommandEntry_GetIconWidget, ReturnValue) == 0x000000, "Member 'ModioCommandEntry_GetIconWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioCommandEntry.GetLabelWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioCommandEntry_GetLabelWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommandEntry_GetLabelWidget) == 0x000008, "Wrong alignment on ModioCommandEntry_GetLabelWidget");
static_assert(sizeof(ModioCommandEntry_GetLabelWidget) == 0x000010, "Wrong size on ModioCommandEntry_GetLabelWidget");
static_assert(offsetof(ModioCommandEntry_GetLabelWidget, ReturnValue) == 0x000000, "Member 'ModioCommandEntry_GetLabelWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioCommandMenu.OnCommandSelected
// 0x0008 (0x0008 - 0x0000)
struct ModioCommandMenu_OnCommandSelected final
{
public:
	class UObject*                                SelectedCommandObject;                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommandMenu_OnCommandSelected) == 0x000008, "Wrong alignment on ModioCommandMenu_OnCommandSelected");
static_assert(sizeof(ModioCommandMenu_OnCommandSelected) == 0x000008, "Wrong size on ModioCommandMenu_OnCommandSelected");
static_assert(offsetof(ModioCommandMenu_OnCommandSelected, SelectedCommandObject) == 0x000000, "Member 'ModioCommandMenu_OnCommandSelected::SelectedCommandObject' has a wrong offset!");

// Function ModioUICore.ModioCommandMenu.GetSelectorWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioCommandMenu_GetSelectorWidget final
{
public:
	TScriptInterface<class IModioUIObjectSelector> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommandMenu_GetSelectorWidget) == 0x000008, "Wrong alignment on ModioCommandMenu_GetSelectorWidget");
static_assert(sizeof(ModioCommandMenu_GetSelectorWidget) == 0x000010, "Wrong size on ModioCommandMenu_GetSelectorWidget");
static_assert(offsetof(ModioCommandMenu_GetSelectorWidget, ReturnValue) == 0x000000, "Member 'ModioCommandMenu_GetSelectorWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioCurrentUserAvatarWidget.GetAvatarImageWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioCurrentUserAvatarWidget_GetAvatarImageWidget final
{
public:
	TScriptInterface<class IModioUIImageDisplayWidget> ReturnValue;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCurrentUserAvatarWidget_GetAvatarImageWidget) == 0x000008, "Wrong alignment on ModioCurrentUserAvatarWidget_GetAvatarImageWidget");
static_assert(sizeof(ModioCurrentUserAvatarWidget_GetAvatarImageWidget) == 0x000010, "Wrong size on ModioCurrentUserAvatarWidget_GetAvatarImageWidget");
static_assert(offsetof(ModioCurrentUserAvatarWidget_GetAvatarImageWidget, ReturnValue) == 0x000000, "Member 'ModioCurrentUserAvatarWidget_GetAvatarImageWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultCheckBox.HandleOnCheckStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ModioDefaultCheckBox_HandleOnCheckStateChanged final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultCheckBox_HandleOnCheckStateChanged) == 0x000001, "Wrong alignment on ModioDefaultCheckBox_HandleOnCheckStateChanged");
static_assert(sizeof(ModioDefaultCheckBox_HandleOnCheckStateChanged) == 0x000001, "Wrong size on ModioDefaultCheckBox_HandleOnCheckStateChanged");
static_assert(offsetof(ModioDefaultCheckBox_HandleOnCheckStateChanged, bIsChecked) == 0x000000, "Member 'ModioDefaultCheckBox_HandleOnCheckStateChanged::bIsChecked' has a wrong offset!");

// Function ModioUICore.ModioDefaultCheckBox.SetHovered
// 0x0001 (0x0001 - 0x0000)
struct ModioDefaultCheckBox_SetHovered final
{
public:
	bool                                          bHovered;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultCheckBox_SetHovered) == 0x000001, "Wrong alignment on ModioDefaultCheckBox_SetHovered");
static_assert(sizeof(ModioDefaultCheckBox_SetHovered) == 0x000001, "Wrong size on ModioDefaultCheckBox_SetHovered");
static_assert(offsetof(ModioDefaultCheckBox_SetHovered, bHovered) == 0x000000, "Member 'ModioDefaultCheckBox_SetHovered::bHovered' has a wrong offset!");

// Function ModioUICore.ModioDefaultCheckBox.SetLabel
// 0x0018 (0x0018 - 0x0000)
struct ModioDefaultCheckBox_SetLabel final
{
public:
	class FText                                   InLabelText;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultCheckBox_SetLabel) == 0x000008, "Wrong alignment on ModioDefaultCheckBox_SetLabel");
static_assert(sizeof(ModioDefaultCheckBox_SetLabel) == 0x000018, "Wrong size on ModioDefaultCheckBox_SetLabel");
static_assert(offsetof(ModioDefaultCheckBox_SetLabel, InLabelText) == 0x000000, "Member 'ModioDefaultCheckBox_SetLabel::InLabelText' has a wrong offset!");

// Function ModioUICore.ModioDefaultCheckBox.GetCheckboxContentPadding
// 0x0010 (0x0010 - 0x0000)
struct ModioDefaultCheckBox_GetCheckboxContentPadding final
{
public:
	struct FMargin                                ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultCheckBox_GetCheckboxContentPadding) == 0x000004, "Wrong alignment on ModioDefaultCheckBox_GetCheckboxContentPadding");
static_assert(sizeof(ModioDefaultCheckBox_GetCheckboxContentPadding) == 0x000010, "Wrong size on ModioDefaultCheckBox_GetCheckboxContentPadding");
static_assert(offsetof(ModioDefaultCheckBox_GetCheckboxContentPadding, ReturnValue) == 0x000000, "Member 'ModioDefaultCheckBox_GetCheckboxContentPadding::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultCheckBox.GetLabel
// 0x0018 (0x0018 - 0x0000)
struct ModioDefaultCheckBox_GetLabel final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultCheckBox_GetLabel) == 0x000008, "Wrong alignment on ModioDefaultCheckBox_GetLabel");
static_assert(sizeof(ModioDefaultCheckBox_GetLabel) == 0x000018, "Wrong size on ModioDefaultCheckBox_GetLabel");
static_assert(offsetof(ModioDefaultCheckBox_GetLabel, ReturnValue) == 0x000000, "Member 'ModioDefaultCheckBox_GetLabel::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultCheckBox.GetLabelTextBlockText
// 0x0018 (0x0018 - 0x0000)
struct ModioDefaultCheckBox_GetLabelTextBlockText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultCheckBox_GetLabelTextBlockText) == 0x000008, "Wrong alignment on ModioDefaultCheckBox_GetLabelTextBlockText");
static_assert(sizeof(ModioDefaultCheckBox_GetLabelTextBlockText) == 0x000018, "Wrong size on ModioDefaultCheckBox_GetLabelTextBlockText");
static_assert(offsetof(ModioDefaultCheckBox_GetLabelTextBlockText, ReturnValue) == 0x000000, "Member 'ModioDefaultCheckBox_GetLabelTextBlockText::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultCodeInputTextBox.GetValidationErrorWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioDefaultCodeInputTextBox_GetValidationErrorWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultCodeInputTextBox_GetValidationErrorWidget) == 0x000008, "Wrong alignment on ModioDefaultCodeInputTextBox_GetValidationErrorWidget");
static_assert(sizeof(ModioDefaultCodeInputTextBox_GetValidationErrorWidget) == 0x000010, "Wrong size on ModioDefaultCodeInputTextBox_GetValidationErrorWidget");
static_assert(offsetof(ModioDefaultCodeInputTextBox_GetValidationErrorWidget, ReturnValue) == 0x000000, "Member 'ModioDefaultCodeInputTextBox_GetValidationErrorWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultTextButton.GetLabelWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioDefaultTextButton_GetLabelWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultTextButton_GetLabelWidget) == 0x000008, "Wrong alignment on ModioDefaultTextButton_GetLabelWidget");
static_assert(sizeof(ModioDefaultTextButton_GetLabelWidget) == 0x000010, "Wrong size on ModioDefaultTextButton_GetLabelWidget");
static_assert(offsetof(ModioDefaultTextButton_GetLabelWidget, ReturnValue) == 0x000000, "Member 'ModioDefaultTextButton_GetLabelWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultIconButton.GetImageWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioDefaultIconButton_GetImageWidget final
{
public:
	TScriptInterface<class IModioUIImageDisplayWidget> ReturnValue;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultIconButton_GetImageWidget) == 0x000008, "Wrong alignment on ModioDefaultIconButton_GetImageWidget");
static_assert(sizeof(ModioDefaultIconButton_GetImageWidget) == 0x000010, "Wrong size on ModioDefaultIconButton_GetImageWidget");
static_assert(offsetof(ModioDefaultIconButton_GetImageWidget, ReturnValue) == 0x000000, "Member 'ModioDefaultIconButton_GetImageWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultModTile.GetSelectedStateEx
// 0x0001 (0x0001 - 0x0000)
struct ModioDefaultModTile_GetSelectedStateEx final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultModTile_GetSelectedStateEx) == 0x000001, "Wrong alignment on ModioDefaultModTile_GetSelectedStateEx");
static_assert(sizeof(ModioDefaultModTile_GetSelectedStateEx) == 0x000001, "Wrong size on ModioDefaultModTile_GetSelectedStateEx");
static_assert(offsetof(ModioDefaultModTile_GetSelectedStateEx, ReturnValue) == 0x000000, "Member 'ModioDefaultModTile_GetSelectedStateEx::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultModTile.NotifyHoverStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ModioDefaultModTile_NotifyHoverStateChanged final
{
public:
	bool                                          bNewHoveredState;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultModTile_NotifyHoverStateChanged) == 0x000001, "Wrong alignment on ModioDefaultModTile_NotifyHoverStateChanged");
static_assert(sizeof(ModioDefaultModTile_NotifyHoverStateChanged) == 0x000001, "Wrong size on ModioDefaultModTile_NotifyHoverStateChanged");
static_assert(offsetof(ModioDefaultModTile_NotifyHoverStateChanged, bNewHoveredState) == 0x000000, "Member 'ModioDefaultModTile_NotifyHoverStateChanged::bNewHoveredState' has a wrong offset!");

// Function ModioUICore.ModioDefaultModTile.PopulateExtraOptionsCommands
// 0x0018 (0x0018 - 0x0000)
struct ModioDefaultModTile_PopulateExtraOptionsCommands final
{
public:
	TArray<class UObject*>                        Commands;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class UObject*                                Context;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultModTile_PopulateExtraOptionsCommands) == 0x000008, "Wrong alignment on ModioDefaultModTile_PopulateExtraOptionsCommands");
static_assert(sizeof(ModioDefaultModTile_PopulateExtraOptionsCommands) == 0x000018, "Wrong size on ModioDefaultModTile_PopulateExtraOptionsCommands");
static_assert(offsetof(ModioDefaultModTile_PopulateExtraOptionsCommands, Commands) == 0x000000, "Member 'ModioDefaultModTile_PopulateExtraOptionsCommands::Commands' has a wrong offset!");
static_assert(offsetof(ModioDefaultModTile_PopulateExtraOptionsCommands, Context) == 0x000010, "Member 'ModioDefaultModTile_PopulateExtraOptionsCommands::Context' has a wrong offset!");

// Function ModioUICore.ModioDefaultModTile.GetMoreOptionsMenuWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioDefaultModTile_GetMoreOptionsMenuWidget final
{
public:
	TScriptInterface<class IModioUICommandMenu>   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultModTile_GetMoreOptionsMenuWidget) == 0x000008, "Wrong alignment on ModioDefaultModTile_GetMoreOptionsMenuWidget");
static_assert(sizeof(ModioDefaultModTile_GetMoreOptionsMenuWidget) == 0x000010, "Wrong size on ModioDefaultModTile_GetMoreOptionsMenuWidget");
static_assert(offsetof(ModioDefaultModTile_GetMoreOptionsMenuWidget, ReturnValue) == 0x000000, "Member 'ModioDefaultModTile_GetMoreOptionsMenuWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultObjectSelector.OnEntryWidgetClicked
// 0x0008 (0x0008 - 0x0000)
struct ModioDefaultObjectSelector_OnEntryWidgetClicked final
{
public:
	class UObject*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultObjectSelector_OnEntryWidgetClicked) == 0x000008, "Wrong alignment on ModioDefaultObjectSelector_OnEntryWidgetClicked");
static_assert(sizeof(ModioDefaultObjectSelector_OnEntryWidgetClicked) == 0x000008, "Wrong size on ModioDefaultObjectSelector_OnEntryWidgetClicked");
static_assert(offsetof(ModioDefaultObjectSelector_OnEntryWidgetClicked, Widget) == 0x000000, "Member 'ModioDefaultObjectSelector_OnEntryWidgetClicked::Widget' has a wrong offset!");

// Function ModioUICore.ModioDefaultObjectSelector.GetEntryWidgetFromItem
// 0x0010 (0x0010 - 0x0000)
struct ModioDefaultObjectSelector_GetEntryWidgetFromItem final
{
public:
	const class UObject*                          Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultObjectSelector_GetEntryWidgetFromItem) == 0x000008, "Wrong alignment on ModioDefaultObjectSelector_GetEntryWidgetFromItem");
static_assert(sizeof(ModioDefaultObjectSelector_GetEntryWidgetFromItem) == 0x000010, "Wrong size on ModioDefaultObjectSelector_GetEntryWidgetFromItem");
static_assert(offsetof(ModioDefaultObjectSelector_GetEntryWidgetFromItem, Item) == 0x000000, "Member 'ModioDefaultObjectSelector_GetEntryWidgetFromItem::Item' has a wrong offset!");
static_assert(offsetof(ModioDefaultObjectSelector_GetEntryWidgetFromItem, ReturnValue) == 0x000008, "Member 'ModioDefaultObjectSelector_GetEntryWidgetFromItem::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultScrollBox.HandleCustomBoundaryNavigation
// 0x0010 (0x0010 - 0x0000)
struct ModioDefaultScrollBox_HandleCustomBoundaryNavigation final
{
public:
	EUINavigation                                 InNavigation;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultScrollBox_HandleCustomBoundaryNavigation) == 0x000008, "Wrong alignment on ModioDefaultScrollBox_HandleCustomBoundaryNavigation");
static_assert(sizeof(ModioDefaultScrollBox_HandleCustomBoundaryNavigation) == 0x000010, "Wrong size on ModioDefaultScrollBox_HandleCustomBoundaryNavigation");
static_assert(offsetof(ModioDefaultScrollBox_HandleCustomBoundaryNavigation, InNavigation) == 0x000000, "Member 'ModioDefaultScrollBox_HandleCustomBoundaryNavigation::InNavigation' has a wrong offset!");
static_assert(offsetof(ModioDefaultScrollBox_HandleCustomBoundaryNavigation, ReturnValue) == 0x000008, "Member 'ModioDefaultScrollBox_HandleCustomBoundaryNavigation::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultScrollBox.OnUserScrolledHandle
// 0x0004 (0x0004 - 0x0000)
struct ModioDefaultScrollBox_OnUserScrolledHandle final
{
public:
	float                                         CurrentOffset;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultScrollBox_OnUserScrolledHandle) == 0x000004, "Wrong alignment on ModioDefaultScrollBox_OnUserScrolledHandle");
static_assert(sizeof(ModioDefaultScrollBox_OnUserScrolledHandle) == 0x000004, "Wrong size on ModioDefaultScrollBox_OnUserScrolledHandle");
static_assert(offsetof(ModioDefaultScrollBox_OnUserScrolledHandle, CurrentOffset) == 0x000000, "Member 'ModioDefaultScrollBox_OnUserScrolledHandle::CurrentOffset' has a wrong offset!");

// Function ModioUICore.ModioDefaultScrollBox.UpdateNavigationData
// 0x0004 (0x0004 - 0x0000)
struct ModioDefaultScrollBox_UpdateNavigationData final
{
public:
	int32                                         PendingScrollOffset;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultScrollBox_UpdateNavigationData) == 0x000004, "Wrong alignment on ModioDefaultScrollBox_UpdateNavigationData");
static_assert(sizeof(ModioDefaultScrollBox_UpdateNavigationData) == 0x000004, "Wrong size on ModioDefaultScrollBox_UpdateNavigationData");
static_assert(offsetof(ModioDefaultScrollBox_UpdateNavigationData, PendingScrollOffset) == 0x000000, "Member 'ModioDefaultScrollBox_UpdateNavigationData::PendingScrollOffset' has a wrong offset!");

// Function ModioUICore.ModioDefaultTagWidget.GetLabelWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioDefaultTagWidget_GetLabelWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultTagWidget_GetLabelWidget) == 0x000008, "Wrong alignment on ModioDefaultTagWidget_GetLabelWidget");
static_assert(sizeof(ModioDefaultTagWidget_GetLabelWidget) == 0x000010, "Wrong size on ModioDefaultTagWidget_GetLabelWidget");
static_assert(offsetof(ModioDefaultTagWidget_GetLabelWidget, ReturnValue) == 0x000000, "Member 'ModioDefaultTagWidget_GetLabelWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultTokenPackTile.GetSelectedStateEx
// 0x0001 (0x0001 - 0x0000)
struct ModioDefaultTokenPackTile_GetSelectedStateEx final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultTokenPackTile_GetSelectedStateEx) == 0x000001, "Wrong alignment on ModioDefaultTokenPackTile_GetSelectedStateEx");
static_assert(sizeof(ModioDefaultTokenPackTile_GetSelectedStateEx) == 0x000001, "Wrong size on ModioDefaultTokenPackTile_GetSelectedStateEx");
static_assert(offsetof(ModioDefaultTokenPackTile_GetSelectedStateEx, ReturnValue) == 0x000000, "Member 'ModioDefaultTokenPackTile_GetSelectedStateEx::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDefaultTokenPackTile.NotifyHoverStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ModioDefaultTokenPackTile_NotifyHoverStateChanged final
{
public:
	bool                                          bNewHoveredState;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDefaultTokenPackTile_NotifyHoverStateChanged) == 0x000001, "Wrong alignment on ModioDefaultTokenPackTile_NotifyHoverStateChanged");
static_assert(sizeof(ModioDefaultTokenPackTile_NotifyHoverStateChanged) == 0x000001, "Wrong size on ModioDefaultTokenPackTile_NotifyHoverStateChanged");
static_assert(offsetof(ModioDefaultTokenPackTile_NotifyHoverStateChanged, bNewHoveredState) == 0x000000, "Member 'ModioDefaultTokenPackTile_NotifyHoverStateChanged::bNewHoveredState' has a wrong offset!");

// Function ModioUICore.ModioDialogButtonUIDetails.GetDialogButtonInfo
// 0x00B0 (0x00B0 - 0x0000)
struct ModioDialogButtonUIDetails_GetDialogButtonInfo final
{
public:
	struct FModioDialogButtonInfo                 ReturnValue;                                       // 0x0000(0x00B0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDialogButtonUIDetails_GetDialogButtonInfo) == 0x000008, "Wrong alignment on ModioDialogButtonUIDetails_GetDialogButtonInfo");
static_assert(sizeof(ModioDialogButtonUIDetails_GetDialogButtonInfo) == 0x0000B0, "Wrong size on ModioDialogButtonUIDetails_GetDialogButtonInfo");
static_assert(offsetof(ModioDialogButtonUIDetails_GetDialogButtonInfo, ReturnValue) == 0x000000, "Member 'ModioDialogButtonUIDetails_GetDialogButtonInfo::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioDropdownAnchor.ModioHandleMenuOpenChanged
// 0x0001 (0x0001 - 0x0000)
struct ModioDropdownAnchor_ModioHandleMenuOpenChanged final
{
public:
	bool                                          bIsOpen;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioDropdownAnchor_ModioHandleMenuOpenChanged) == 0x000001, "Wrong alignment on ModioDropdownAnchor_ModioHandleMenuOpenChanged");
static_assert(sizeof(ModioDropdownAnchor_ModioHandleMenuOpenChanged) == 0x000001, "Wrong size on ModioDropdownAnchor_ModioHandleMenuOpenChanged");
static_assert(offsetof(ModioDropdownAnchor_ModioHandleMenuOpenChanged, bIsOpen) == 0x000000, "Member 'ModioDropdownAnchor_ModioHandleMenuOpenChanged::bIsOpen' has a wrong offset!");

// Function ModioUICore.ModioUIComponentStatics.GetAllComponentMetadata
// 0x0050 (0x0050 - 0x0000)
struct ModioUIComponentStatics_GetAllComponentMetadata final
{
public:
	TMap<EModioUIComponentID, struct FModioUIComponentMetadata> ReturnValue;                         // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIComponentStatics_GetAllComponentMetadata) == 0x000008, "Wrong alignment on ModioUIComponentStatics_GetAllComponentMetadata");
static_assert(sizeof(ModioUIComponentStatics_GetAllComponentMetadata) == 0x000050, "Wrong size on ModioUIComponentStatics_GetAllComponentMetadata");
static_assert(offsetof(ModioUIComponentStatics_GetAllComponentMetadata, ReturnValue) == 0x000000, "Member 'ModioUIComponentStatics_GetAllComponentMetadata::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIComponentStatics.GetMetadataForComponent
// 0x0028 (0x0028 - 0x0000)
struct ModioUIComponentStatics_GetMetadataForComponent final
{
public:
	EModioUIComponentID                           ComponentType;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bComponentTypeFound;                               // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioUIComponentMetadata              ReturnValue;                                       // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIComponentStatics_GetMetadataForComponent) == 0x000008, "Wrong alignment on ModioUIComponentStatics_GetMetadataForComponent");
static_assert(sizeof(ModioUIComponentStatics_GetMetadataForComponent) == 0x000028, "Wrong size on ModioUIComponentStatics_GetMetadataForComponent");
static_assert(offsetof(ModioUIComponentStatics_GetMetadataForComponent, ComponentType) == 0x000000, "Member 'ModioUIComponentStatics_GetMetadataForComponent::ComponentType' has a wrong offset!");
static_assert(offsetof(ModioUIComponentStatics_GetMetadataForComponent, bComponentTypeFound) == 0x000001, "Member 'ModioUIComponentStatics_GetMetadataForComponent::bComponentTypeFound' has a wrong offset!");
static_assert(offsetof(ModioUIComponentStatics_GetMetadataForComponent, ReturnValue) == 0x000008, "Member 'ModioUIComponentStatics_GetMetadataForComponent::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioEnumSelector.InternalSelectionChangedHandler
// 0x0008 (0x0008 - 0x0000)
struct ModioEnumSelector_InternalSelectionChangedHandler final
{
public:
	class UObject*                                SelectedObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelector_InternalSelectionChangedHandler) == 0x000008, "Wrong alignment on ModioEnumSelector_InternalSelectionChangedHandler");
static_assert(sizeof(ModioEnumSelector_InternalSelectionChangedHandler) == 0x000008, "Wrong size on ModioEnumSelector_InternalSelectionChangedHandler");
static_assert(offsetof(ModioEnumSelector_InternalSelectionChangedHandler, SelectedObject) == 0x000000, "Member 'ModioEnumSelector_InternalSelectionChangedHandler::SelectedObject' has a wrong offset!");

// Function ModioUICore.ModioEnumSelector.NotifySelectionChanged
// 0x0008 (0x0008 - 0x0000)
struct ModioEnumSelector_NotifySelectionChanged final
{
public:
	class UObject*                                SelectedObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelector_NotifySelectionChanged) == 0x000008, "Wrong alignment on ModioEnumSelector_NotifySelectionChanged");
static_assert(sizeof(ModioEnumSelector_NotifySelectionChanged) == 0x000008, "Wrong size on ModioEnumSelector_NotifySelectionChanged");
static_assert(offsetof(ModioEnumSelector_NotifySelectionChanged, SelectedObject) == 0x000000, "Member 'ModioEnumSelector_NotifySelectionChanged::SelectedObject' has a wrong offset!");

// Function ModioUICore.ModioEnumSelector.GetMenuToggleClickableWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioEnumSelector_GetMenuToggleClickableWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelector_GetMenuToggleClickableWidget) == 0x000008, "Wrong alignment on ModioEnumSelector_GetMenuToggleClickableWidget");
static_assert(sizeof(ModioEnumSelector_GetMenuToggleClickableWidget) == 0x000010, "Wrong size on ModioEnumSelector_GetMenuToggleClickableWidget");
static_assert(offsetof(ModioEnumSelector_GetMenuToggleClickableWidget, ReturnValue) == 0x000000, "Member 'ModioEnumSelector_GetMenuToggleClickableWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioEnumSelector.GetSelectorMenuWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioEnumSelector_GetSelectorMenuWidget final
{
public:
	TScriptInterface<class IModioUIObjectSelector> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelector_GetSelectorMenuWidget) == 0x000008, "Wrong alignment on ModioEnumSelector_GetSelectorMenuWidget");
static_assert(sizeof(ModioEnumSelector_GetSelectorMenuWidget) == 0x000010, "Wrong size on ModioEnumSelector_GetSelectorMenuWidget");
static_assert(offsetof(ModioEnumSelector_GetSelectorMenuWidget, ReturnValue) == 0x000000, "Member 'ModioEnumSelector_GetSelectorMenuWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioEnumSelectorEntry.InternalClickHandler
// 0x0008 (0x0008 - 0x0000)
struct ModioEnumSelectorEntry_InternalClickHandler final
{
public:
	class UObject*                                ClickContext;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelectorEntry_InternalClickHandler) == 0x000008, "Wrong alignment on ModioEnumSelectorEntry_InternalClickHandler");
static_assert(sizeof(ModioEnumSelectorEntry_InternalClickHandler) == 0x000008, "Wrong size on ModioEnumSelectorEntry_InternalClickHandler");
static_assert(offsetof(ModioEnumSelectorEntry_InternalClickHandler, ClickContext) == 0x000000, "Member 'ModioEnumSelectorEntry_InternalClickHandler::ClickContext' has a wrong offset!");

// Function ModioUICore.ModioEnumSelectorEntry.InternalSelectionChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioEnumSelectorEntry_InternalSelectionChangedHandler final
{
public:
	class UObject*                                SelectionContext;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewSelectedState;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioEnumSelectorEntry_InternalSelectionChangedHandler) == 0x000008, "Wrong alignment on ModioEnumSelectorEntry_InternalSelectionChangedHandler");
static_assert(sizeof(ModioEnumSelectorEntry_InternalSelectionChangedHandler) == 0x000010, "Wrong size on ModioEnumSelectorEntry_InternalSelectionChangedHandler");
static_assert(offsetof(ModioEnumSelectorEntry_InternalSelectionChangedHandler, SelectionContext) == 0x000000, "Member 'ModioEnumSelectorEntry_InternalSelectionChangedHandler::SelectionContext' has a wrong offset!");
static_assert(offsetof(ModioEnumSelectorEntry_InternalSelectionChangedHandler, bNewSelectedState) == 0x000008, "Member 'ModioEnumSelectorEntry_InternalSelectionChangedHandler::bNewSelectedState' has a wrong offset!");

// Function ModioUICore.ModioEnumSelectorEntry.NotifySelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct ModioEnumSelectorEntry_NotifySelectionChanged final
{
public:
	bool                                          bNewSelectedState;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelectorEntry_NotifySelectionChanged) == 0x000001, "Wrong alignment on ModioEnumSelectorEntry_NotifySelectionChanged");
static_assert(sizeof(ModioEnumSelectorEntry_NotifySelectionChanged) == 0x000001, "Wrong size on ModioEnumSelectorEntry_NotifySelectionChanged");
static_assert(offsetof(ModioEnumSelectorEntry_NotifySelectionChanged, bNewSelectedState) == 0x000000, "Member 'ModioEnumSelectorEntry_NotifySelectionChanged::bNewSelectedState' has a wrong offset!");

// Function ModioUICore.ModioEnumSelectorEntry.GetClickableWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioEnumSelectorEntry_GetClickableWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelectorEntry_GetClickableWidget) == 0x000008, "Wrong alignment on ModioEnumSelectorEntry_GetClickableWidget");
static_assert(sizeof(ModioEnumSelectorEntry_GetClickableWidget) == 0x000010, "Wrong size on ModioEnumSelectorEntry_GetClickableWidget");
static_assert(offsetof(ModioEnumSelectorEntry_GetClickableWidget, ReturnValue) == 0x000000, "Member 'ModioEnumSelectorEntry_GetClickableWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioEnumSelectorEntry.GetLabelWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioEnumSelectorEntry_GetLabelWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelectorEntry_GetLabelWidget) == 0x000008, "Wrong alignment on ModioEnumSelectorEntry_GetLabelWidget");
static_assert(sizeof(ModioEnumSelectorEntry_GetLabelWidget) == 0x000010, "Wrong size on ModioEnumSelectorEntry_GetLabelWidget");
static_assert(offsetof(ModioEnumSelectorEntry_GetLabelWidget, ReturnValue) == 0x000000, "Member 'ModioEnumSelectorEntry_GetLabelWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioEnumSelectorEntry.GetSelectableWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioEnumSelectorEntry_GetSelectableWidget final
{
public:
	TScriptInterface<class IModioUISelectableWidget> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelectorEntry_GetSelectableWidget) == 0x000008, "Wrong alignment on ModioEnumSelectorEntry_GetSelectableWidget");
static_assert(sizeof(ModioEnumSelectorEntry_GetSelectableWidget) == 0x000010, "Wrong size on ModioEnumSelectorEntry_GetSelectableWidget");
static_assert(offsetof(ModioEnumSelectorEntry_GetSelectableWidget, ReturnValue) == 0x000000, "Member 'ModioEnumSelectorEntry_GetSelectableWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioEnumSelectorMenu.InternalSelectionChangedHandler
// 0x0008 (0x0008 - 0x0000)
struct ModioEnumSelectorMenu_InternalSelectionChangedHandler final
{
public:
	class UObject*                                SelectedObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelectorMenu_InternalSelectionChangedHandler) == 0x000008, "Wrong alignment on ModioEnumSelectorMenu_InternalSelectionChangedHandler");
static_assert(sizeof(ModioEnumSelectorMenu_InternalSelectionChangedHandler) == 0x000008, "Wrong size on ModioEnumSelectorMenu_InternalSelectionChangedHandler");
static_assert(offsetof(ModioEnumSelectorMenu_InternalSelectionChangedHandler, SelectedObject) == 0x000000, "Member 'ModioEnumSelectorMenu_InternalSelectionChangedHandler::SelectedObject' has a wrong offset!");

// Function ModioUICore.ModioEnumSelectorMenu.NotifySelectionChanged
// 0x0008 (0x0008 - 0x0000)
struct ModioEnumSelectorMenu_NotifySelectionChanged final
{
public:
	class UObject*                                SelectedObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelectorMenu_NotifySelectionChanged) == 0x000008, "Wrong alignment on ModioEnumSelectorMenu_NotifySelectionChanged");
static_assert(sizeof(ModioEnumSelectorMenu_NotifySelectionChanged) == 0x000008, "Wrong size on ModioEnumSelectorMenu_NotifySelectionChanged");
static_assert(offsetof(ModioEnumSelectorMenu_NotifySelectionChanged, SelectedObject) == 0x000000, "Member 'ModioEnumSelectorMenu_NotifySelectionChanged::SelectedObject' has a wrong offset!");

// Function ModioUICore.ModioEnumSelectorMenu.GetSelectorWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioEnumSelectorMenu_GetSelectorWidget final
{
public:
	TScriptInterface<class IModioUIObjectSelector> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEnumSelectorMenu_GetSelectorWidget) == 0x000008, "Wrong alignment on ModioEnumSelectorMenu_GetSelectorWidget");
static_assert(sizeof(ModioEnumSelectorMenu_GetSelectorWidget) == 0x000010, "Wrong size on ModioEnumSelectorMenu_GetSelectorWidget");
static_assert(offsetof(ModioEnumSelectorMenu_GetSelectorWidget, ReturnValue) == 0x000000, "Member 'ModioEnumSelectorMenu_GetSelectorWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioFilterCounterButton.GetFilterCounterWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioFilterCounterButton_GetFilterCounterWidget final
{
public:
	TScriptInterface<class IModioUIDataSourceWidget> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterCounterButton_GetFilterCounterWidget) == 0x000008, "Wrong alignment on ModioFilterCounterButton_GetFilterCounterWidget");
static_assert(sizeof(ModioFilterCounterButton_GetFilterCounterWidget) == 0x000010, "Wrong size on ModioFilterCounterButton_GetFilterCounterWidget");
static_assert(offsetof(ModioFilterCounterButton_GetFilterCounterWidget, ReturnValue) == 0x000000, "Member 'ModioFilterCounterButton_GetFilterCounterWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioFilterPanel.AddTagSelectionChangedHandler
// 0x0010 (0x0010 - 0x0000)
struct ModioFilterPanel_AddTagSelectionChangedHandler final
{
public:
	TDelegate<void()>                             Handler;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterPanel_AddTagSelectionChangedHandler) == 0x000004, "Wrong alignment on ModioFilterPanel_AddTagSelectionChangedHandler");
static_assert(sizeof(ModioFilterPanel_AddTagSelectionChangedHandler) == 0x000010, "Wrong size on ModioFilterPanel_AddTagSelectionChangedHandler");
static_assert(offsetof(ModioFilterPanel_AddTagSelectionChangedHandler, Handler) == 0x000000, "Member 'ModioFilterPanel_AddTagSelectionChangedHandler::Handler' has a wrong offset!");

// Function ModioUICore.ModioFilterPanel.GetSelectedTags
// 0x0010 (0x0010 - 0x0000)
struct ModioFilterPanel_GetSelectedTags final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterPanel_GetSelectedTags) == 0x000008, "Wrong alignment on ModioFilterPanel_GetSelectedTags");
static_assert(sizeof(ModioFilterPanel_GetSelectedTags) == 0x000010, "Wrong size on ModioFilterPanel_GetSelectedTags");
static_assert(offsetof(ModioFilterPanel_GetSelectedTags, ReturnValue) == 0x000000, "Member 'ModioFilterPanel_GetSelectedTags::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioFilterPanel.GetBackgroundButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioFilterPanel_GetBackgroundButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterPanel_GetBackgroundButtonWidget) == 0x000008, "Wrong alignment on ModioFilterPanel_GetBackgroundButtonWidget");
static_assert(sizeof(ModioFilterPanel_GetBackgroundButtonWidget) == 0x000010, "Wrong size on ModioFilterPanel_GetBackgroundButtonWidget");
static_assert(offsetof(ModioFilterPanel_GetBackgroundButtonWidget, ReturnValue) == 0x000000, "Member 'ModioFilterPanel_GetBackgroundButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioFilterPanel.GetClearButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioFilterPanel_GetClearButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterPanel_GetClearButtonWidget) == 0x000008, "Wrong alignment on ModioFilterPanel_GetClearButtonWidget");
static_assert(sizeof(ModioFilterPanel_GetClearButtonWidget) == 0x000010, "Wrong size on ModioFilterPanel_GetClearButtonWidget");
static_assert(offsetof(ModioFilterPanel_GetClearButtonWidget, ReturnValue) == 0x000000, "Member 'ModioFilterPanel_GetClearButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioFilterPanel.GetTagSelectorWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioFilterPanel_GetTagSelectorWidget final
{
public:
	TScriptInterface<class IModioUIModTagSelector> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterPanel_GetTagSelectorWidget) == 0x000008, "Wrong alignment on ModioFilterPanel_GetTagSelectorWidget");
static_assert(sizeof(ModioFilterPanel_GetTagSelectorWidget) == 0x000010, "Wrong size on ModioFilterPanel_GetTagSelectorWidget");
static_assert(offsetof(ModioFilterPanel_GetTagSelectorWidget, ReturnValue) == 0x000000, "Member 'ModioFilterPanel_GetTagSelectorWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioImageGallery.GetDecrementSelectionButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioImageGallery_GetDecrementSelectionButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImageGallery_GetDecrementSelectionButtonWidget) == 0x000008, "Wrong alignment on ModioImageGallery_GetDecrementSelectionButtonWidget");
static_assert(sizeof(ModioImageGallery_GetDecrementSelectionButtonWidget) == 0x000010, "Wrong size on ModioImageGallery_GetDecrementSelectionButtonWidget");
static_assert(offsetof(ModioImageGallery_GetDecrementSelectionButtonWidget, ReturnValue) == 0x000000, "Member 'ModioImageGallery_GetDecrementSelectionButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioImageGallery.GetImageSelectorWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioImageGallery_GetImageSelectorWidget final
{
public:
	TScriptInterface<class IModioUIObjectSelector> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImageGallery_GetImageSelectorWidget) == 0x000008, "Wrong alignment on ModioImageGallery_GetImageSelectorWidget");
static_assert(sizeof(ModioImageGallery_GetImageSelectorWidget) == 0x000010, "Wrong size on ModioImageGallery_GetImageSelectorWidget");
static_assert(offsetof(ModioImageGallery_GetImageSelectorWidget, ReturnValue) == 0x000000, "Member 'ModioImageGallery_GetImageSelectorWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioImageGallery.GetImageWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioImageGallery_GetImageWidget final
{
public:
	TScriptInterface<class IModioUIImageDisplayWidget> ReturnValue;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImageGallery_GetImageWidget) == 0x000008, "Wrong alignment on ModioImageGallery_GetImageWidget");
static_assert(sizeof(ModioImageGallery_GetImageWidget) == 0x000010, "Wrong size on ModioImageGallery_GetImageWidget");
static_assert(offsetof(ModioImageGallery_GetImageWidget, ReturnValue) == 0x000000, "Member 'ModioImageGallery_GetImageWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioImageGallery.GetIncrementSelectionButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioImageGallery_GetIncrementSelectionButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImageGallery_GetIncrementSelectionButtonWidget) == 0x000008, "Wrong alignment on ModioImageGallery_GetIncrementSelectionButtonWidget");
static_assert(sizeof(ModioImageGallery_GetIncrementSelectionButtonWidget) == 0x000010, "Wrong size on ModioImageGallery_GetIncrementSelectionButtonWidget");
static_assert(offsetof(ModioImageGallery_GetIncrementSelectionButtonWidget, ReturnValue) == 0x000000, "Member 'ModioImageGallery_GetIncrementSelectionButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.DoFilterParamsIncludeUserId
// 0x00C0 (0x00C0 - 0x0000)
struct ModioModBrowser_DoFilterParamsIncludeUserId final
{
public:
	struct FModioFilterParams                     Params_0;                                          // 0x0000(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModBrowser_DoFilterParamsIncludeUserId) == 0x000008, "Wrong alignment on ModioModBrowser_DoFilterParamsIncludeUserId");
static_assert(sizeof(ModioModBrowser_DoFilterParamsIncludeUserId) == 0x0000C0, "Wrong size on ModioModBrowser_DoFilterParamsIncludeUserId");
static_assert(offsetof(ModioModBrowser_DoFilterParamsIncludeUserId, Params_0) == 0x000000, "Member 'ModioModBrowser_DoFilterParamsIncludeUserId::Params_0' has a wrong offset!");
static_assert(offsetof(ModioModBrowser_DoFilterParamsIncludeUserId, ReturnValue) == 0x0000B8, "Member 'ModioModBrowser_DoFilterParamsIncludeUserId::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.InitializeLibraryTagData
// 0x0008 (0x0008 - 0x0000)
struct ModioModBrowser_InitializeLibraryTagData final
{
public:
	class UObject*                                InTagData;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_InitializeLibraryTagData) == 0x000008, "Wrong alignment on ModioModBrowser_InitializeLibraryTagData");
static_assert(sizeof(ModioModBrowser_InitializeLibraryTagData) == 0x000008, "Wrong size on ModioModBrowser_InitializeLibraryTagData");
static_assert(offsetof(ModioModBrowser_InitializeLibraryTagData, InTagData) == 0x000000, "Member 'ModioModBrowser_InitializeLibraryTagData::InTagData' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.InitializeTagData
// 0x0008 (0x0008 - 0x0000)
struct ModioModBrowser_InitializeTagData final
{
public:
	class UObject*                                InTagData;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_InitializeTagData) == 0x000008, "Wrong alignment on ModioModBrowser_InitializeTagData");
static_assert(sizeof(ModioModBrowser_InitializeTagData) == 0x000008, "Wrong size on ModioModBrowser_InitializeTagData");
static_assert(offsetof(ModioModBrowser_InitializeTagData, InTagData) == 0x000000, "Member 'ModioModBrowser_InitializeTagData::InTagData' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetClearSearchButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetClearSearchButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetClearSearchButtonWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetClearSearchButtonWidget");
static_assert(sizeof(ModioModBrowser_GetClearSearchButtonWidget) == 0x000010, "Wrong size on ModioModBrowser_GetClearSearchButtonWidget");
static_assert(offsetof(ModioModBrowser_GetClearSearchButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetClearSearchButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetCloseBrowserButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetCloseBrowserButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetCloseBrowserButtonWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetCloseBrowserButtonWidget");
static_assert(sizeof(ModioModBrowser_GetCloseBrowserButtonWidget) == 0x000010, "Wrong size on ModioModBrowser_GetCloseBrowserButtonWidget");
static_assert(offsetof(ModioModBrowser_GetCloseBrowserButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetCloseBrowserButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetFilterButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetFilterButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetFilterButtonWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetFilterButtonWidget");
static_assert(sizeof(ModioModBrowser_GetFilterButtonWidget) == 0x000010, "Wrong size on ModioModBrowser_GetFilterButtonWidget");
static_assert(offsetof(ModioModBrowser_GetFilterButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetFilterButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetLibraryViewButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetLibraryViewButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetLibraryViewButtonWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetLibraryViewButtonWidget");
static_assert(sizeof(ModioModBrowser_GetLibraryViewButtonWidget) == 0x000010, "Wrong size on ModioModBrowser_GetLibraryViewButtonWidget");
static_assert(offsetof(ModioModBrowser_GetLibraryViewButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetLibraryViewButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetModTileViewWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetModTileViewWidget final
{
public:
	TScriptInterface<class IModioUIModListViewInterface> ReturnValue;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetModTileViewWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetModTileViewWidget");
static_assert(sizeof(ModioModBrowser_GetModTileViewWidget) == 0x000010, "Wrong size on ModioModBrowser_GetModTileViewWidget");
static_assert(offsetof(ModioModBrowser_GetModTileViewWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetModTileViewWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetPresetFilterSelectorWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetPresetFilterSelectorWidget final
{
public:
	TScriptInterface<class IModioUIObjectSelector> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetPresetFilterSelectorWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetPresetFilterSelectorWidget");
static_assert(sizeof(ModioModBrowser_GetPresetFilterSelectorWidget) == 0x000010, "Wrong size on ModioModBrowser_GetPresetFilterSelectorWidget");
static_assert(offsetof(ModioModBrowser_GetPresetFilterSelectorWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetPresetFilterSelectorWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetSearchButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetSearchButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetSearchButtonWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetSearchButtonWidget");
static_assert(sizeof(ModioModBrowser_GetSearchButtonWidget) == 0x000010, "Wrong size on ModioModBrowser_GetSearchButtonWidget");
static_assert(offsetof(ModioModBrowser_GetSearchButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetSearchButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetSearchEditableTextBoxWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetSearchEditableTextBoxWidget final
{
public:
	TScriptInterface<class IModioUIStringInputWidget> ReturnValue;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetSearchEditableTextBoxWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetSearchEditableTextBoxWidget");
static_assert(sizeof(ModioModBrowser_GetSearchEditableTextBoxWidget) == 0x000010, "Wrong size on ModioModBrowser_GetSearchEditableTextBoxWidget");
static_assert(offsetof(ModioModBrowser_GetSearchEditableTextBoxWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetSearchEditableTextBoxWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetSearchTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetSearchTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetSearchTextWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetSearchTextWidget");
static_assert(sizeof(ModioModBrowser_GetSearchTextWidget) == 0x000010, "Wrong size on ModioModBrowser_GetSearchTextWidget");
static_assert(offsetof(ModioModBrowser_GetSearchTextWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetSearchTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetTabLeftButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetTabLeftButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetTabLeftButtonWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetTabLeftButtonWidget");
static_assert(sizeof(ModioModBrowser_GetTabLeftButtonWidget) == 0x000010, "Wrong size on ModioModBrowser_GetTabLeftButtonWidget");
static_assert(offsetof(ModioModBrowser_GetTabLeftButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetTabLeftButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetTabRightButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetTabRightButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetTabRightButtonWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetTabRightButtonWidget");
static_assert(sizeof(ModioModBrowser_GetTabRightButtonWidget) == 0x000010, "Wrong size on ModioModBrowser_GetTabRightButtonWidget");
static_assert(offsetof(ModioModBrowser_GetTabRightButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetTabRightButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetViewDescriptionImageWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetViewDescriptionImageWidget final
{
public:
	TScriptInterface<class IModioUIImageDisplayWidget> ReturnValue;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetViewDescriptionImageWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetViewDescriptionImageWidget");
static_assert(sizeof(ModioModBrowser_GetViewDescriptionImageWidget) == 0x000010, "Wrong size on ModioModBrowser_GetViewDescriptionImageWidget");
static_assert(offsetof(ModioModBrowser_GetViewDescriptionImageWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetViewDescriptionImageWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetViewDescriptionTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetViewDescriptionTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetViewDescriptionTextWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetViewDescriptionTextWidget");
static_assert(sizeof(ModioModBrowser_GetViewDescriptionTextWidget) == 0x000010, "Wrong size on ModioModBrowser_GetViewDescriptionTextWidget");
static_assert(offsetof(ModioModBrowser_GetViewDescriptionTextWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetViewDescriptionTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.GetWalletButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_GetWalletButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_GetWalletButtonWidget) == 0x000008, "Wrong alignment on ModioModBrowser_GetWalletButtonWidget");
static_assert(sizeof(ModioModBrowser_GetWalletButtonWidget) == 0x000010, "Wrong size on ModioModBrowser_GetWalletButtonWidget");
static_assert(offsetof(ModioModBrowser_GetWalletButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModBrowser_GetWalletButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.SearchLibraryWithStoredParams
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_SearchLibraryWithStoredParams final
{
public:
	TArray<struct FModioModInfo>                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_SearchLibraryWithStoredParams) == 0x000008, "Wrong alignment on ModioModBrowser_SearchLibraryWithStoredParams");
static_assert(sizeof(ModioModBrowser_SearchLibraryWithStoredParams) == 0x000010, "Wrong size on ModioModBrowser_SearchLibraryWithStoredParams");
static_assert(offsetof(ModioModBrowser_SearchLibraryWithStoredParams, ReturnValue) == 0x000000, "Member 'ModioModBrowser_SearchLibraryWithStoredParams::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.SearchPurchasesWithStoredParams
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_SearchPurchasesWithStoredParams final
{
public:
	TArray<struct FModioModInfo>                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_SearchPurchasesWithStoredParams) == 0x000008, "Wrong alignment on ModioModBrowser_SearchPurchasesWithStoredParams");
static_assert(sizeof(ModioModBrowser_SearchPurchasesWithStoredParams) == 0x000010, "Wrong size on ModioModBrowser_SearchPurchasesWithStoredParams");
static_assert(offsetof(ModioModBrowser_SearchPurchasesWithStoredParams, ReturnValue) == 0x000000, "Member 'ModioModBrowser_SearchPurchasesWithStoredParams::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModBrowser.SearchSubscriptionsAndInstallsWithStoredParams
// 0x0010 (0x0010 - 0x0000)
struct ModioModBrowser_SearchSubscriptionsAndInstallsWithStoredParams final
{
public:
	TArray<struct FModioModInfo>                  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModBrowser_SearchSubscriptionsAndInstallsWithStoredParams) == 0x000008, "Wrong alignment on ModioModBrowser_SearchSubscriptionsAndInstallsWithStoredParams");
static_assert(sizeof(ModioModBrowser_SearchSubscriptionsAndInstallsWithStoredParams) == 0x000010, "Wrong size on ModioModBrowser_SearchSubscriptionsAndInstallsWithStoredParams");
static_assert(offsetof(ModioModBrowser_SearchSubscriptionsAndInstallsWithStoredParams, ReturnValue) == 0x000000, "Member 'ModioModBrowser_SearchSubscriptionsAndInstallsWithStoredParams::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.IsModPurchased
// 0x0001 (0x0001 - 0x0000)
struct ModioModDetailsDialog_IsModPurchased final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_IsModPurchased) == 0x000001, "Wrong alignment on ModioModDetailsDialog_IsModPurchased");
static_assert(sizeof(ModioModDetailsDialog_IsModPurchased) == 0x000001, "Wrong size on ModioModDetailsDialog_IsModPurchased");
static_assert(offsetof(ModioModDetailsDialog_IsModPurchased, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_IsModPurchased::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.IsUserSubscribed
// 0x0001 (0x0001 - 0x0000)
struct ModioModDetailsDialog_IsUserSubscribed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_IsUserSubscribed) == 0x000001, "Wrong alignment on ModioModDetailsDialog_IsUserSubscribed");
static_assert(sizeof(ModioModDetailsDialog_IsUserSubscribed) == 0x000001, "Wrong size on ModioModDetailsDialog_IsUserSubscribed");
static_assert(offsetof(ModioModDetailsDialog_IsUserSubscribed, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_IsUserSubscribed::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.PopulateExtraOptionsCommands
// 0x0018 (0x0018 - 0x0000)
struct ModioModDetailsDialog_PopulateExtraOptionsCommands final
{
public:
	TArray<class UObject*>                        Commands;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	class UObject*                                Context;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_PopulateExtraOptionsCommands) == 0x000008, "Wrong alignment on ModioModDetailsDialog_PopulateExtraOptionsCommands");
static_assert(sizeof(ModioModDetailsDialog_PopulateExtraOptionsCommands) == 0x000018, "Wrong size on ModioModDetailsDialog_PopulateExtraOptionsCommands");
static_assert(offsetof(ModioModDetailsDialog_PopulateExtraOptionsCommands, Commands) == 0x000000, "Member 'ModioModDetailsDialog_PopulateExtraOptionsCommands::Commands' has a wrong offset!");
static_assert(offsetof(ModioModDetailsDialog_PopulateExtraOptionsCommands, Context) == 0x000010, "Member 'ModioModDetailsDialog_PopulateExtraOptionsCommands::Context' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetCloseDialogButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetCloseDialogButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetCloseDialogButtonWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetCloseDialogButtonWidget");
static_assert(sizeof(ModioModDetailsDialog_GetCloseDialogButtonWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetCloseDialogButtonWidget");
static_assert(offsetof(ModioModDetailsDialog_GetCloseDialogButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetCloseDialogButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetExpandDescriptionButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetExpandDescriptionButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetExpandDescriptionButtonWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetExpandDescriptionButtonWidget");
static_assert(sizeof(ModioModDetailsDialog_GetExpandDescriptionButtonWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetExpandDescriptionButtonWidget");
static_assert(offsetof(ModioModDetailsDialog_GetExpandDescriptionButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetExpandDescriptionButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetModAuthorDisplayWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetModAuthorDisplayWidget final
{
public:
	TScriptInterface<class IModioUIDataSourceWidget> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetModAuthorDisplayWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetModAuthorDisplayWidget");
static_assert(sizeof(ModioModDetailsDialog_GetModAuthorDisplayWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetModAuthorDisplayWidget");
static_assert(offsetof(ModioModDetailsDialog_GetModAuthorDisplayWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetModAuthorDisplayWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetModDependenciesButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetModDependenciesButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetModDependenciesButtonWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetModDependenciesButtonWidget");
static_assert(sizeof(ModioModDetailsDialog_GetModDependenciesButtonWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetModDependenciesButtonWidget");
static_assert(offsetof(ModioModDetailsDialog_GetModDependenciesButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetModDependenciesButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetModImageGalleryWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetModImageGalleryWidget final
{
public:
	TScriptInterface<class IModioUIMediaDownloadCompletedReceiver> ReturnValue;                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetModImageGalleryWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetModImageGalleryWidget");
static_assert(sizeof(ModioModDetailsDialog_GetModImageGalleryWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetModImageGalleryWidget");
static_assert(offsetof(ModioModDetailsDialog_GetModImageGalleryWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetModImageGalleryWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetModNameTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetModNameTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetModNameTextWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetModNameTextWidget");
static_assert(sizeof(ModioModDetailsDialog_GetModNameTextWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetModNameTextWidget");
static_assert(offsetof(ModioModDetailsDialog_GetModNameTextWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetModNameTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetModPropertiesWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetModPropertiesWidget final
{
public:
	TScriptInterface<class IModioUIDataSourceWidget> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetModPropertiesWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetModPropertiesWidget");
static_assert(sizeof(ModioModDetailsDialog_GetModPropertiesWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetModPropertiesWidget");
static_assert(offsetof(ModioModDetailsDialog_GetModPropertiesWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetModPropertiesWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetModStatusWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetModStatusWidget final
{
public:
	TScriptInterface<class IModioUIDataSourceWidget> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetModStatusWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetModStatusWidget");
static_assert(sizeof(ModioModDetailsDialog_GetModStatusWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetModStatusWidget");
static_assert(offsetof(ModioModDetailsDialog_GetModStatusWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetModStatusWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetModSummaryShortTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetModSummaryShortTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetModSummaryShortTextWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetModSummaryShortTextWidget");
static_assert(sizeof(ModioModDetailsDialog_GetModSummaryShortTextWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetModSummaryShortTextWidget");
static_assert(offsetof(ModioModDetailsDialog_GetModSummaryShortTextWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetModSummaryShortTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetMoreOptionsMenuWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetMoreOptionsMenuWidget final
{
public:
	TScriptInterface<class IModioUICommandMenu>   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetMoreOptionsMenuWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetMoreOptionsMenuWidget");
static_assert(sizeof(ModioModDetailsDialog_GetMoreOptionsMenuWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetMoreOptionsMenuWidget");
static_assert(offsetof(ModioModDetailsDialog_GetMoreOptionsMenuWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetMoreOptionsMenuWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetPurchaseButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetPurchaseButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetPurchaseButtonWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetPurchaseButtonWidget");
static_assert(sizeof(ModioModDetailsDialog_GetPurchaseButtonWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetPurchaseButtonWidget");
static_assert(offsetof(ModioModDetailsDialog_GetPurchaseButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetPurchaseButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetRateDownButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetRateDownButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetRateDownButtonWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetRateDownButtonWidget");
static_assert(sizeof(ModioModDetailsDialog_GetRateDownButtonWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetRateDownButtonWidget");
static_assert(offsetof(ModioModDetailsDialog_GetRateDownButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetRateDownButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetRateUpButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetRateUpButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetRateUpButtonWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetRateUpButtonWidget");
static_assert(sizeof(ModioModDetailsDialog_GetRateUpButtonWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetRateUpButtonWidget");
static_assert(offsetof(ModioModDetailsDialog_GetRateUpButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetRateUpButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetSubscribeButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetSubscribeButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetSubscribeButtonWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetSubscribeButtonWidget");
static_assert(sizeof(ModioModDetailsDialog_GetSubscribeButtonWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetSubscribeButtonWidget");
static_assert(offsetof(ModioModDetailsDialog_GetSubscribeButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetSubscribeButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetTagDisplayWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetTagDisplayWidget final
{
public:
	TScriptInterface<class IModioUIDataSourceWidget> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetTagDisplayWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetTagDisplayWidget");
static_assert(sizeof(ModioModDetailsDialog_GetTagDisplayWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetTagDisplayWidget");
static_assert(offsetof(ModioModDetailsDialog_GetTagDisplayWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetTagDisplayWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModDetailsDialog.GetWalletButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModDetailsDialog_GetWalletButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDetailsDialog_GetWalletButtonWidget) == 0x000008, "Wrong alignment on ModioModDetailsDialog_GetWalletButtonWidget");
static_assert(sizeof(ModioModDetailsDialog_GetWalletButtonWidget) == 0x000010, "Wrong size on ModioModDetailsDialog_GetWalletButtonWidget");
static_assert(offsetof(ModioModDetailsDialog_GetWalletButtonWidget, ReturnValue) == 0x000000, "Member 'ModioModDetailsDialog_GetWalletButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModInstallationStatusWidget.QueryProgressValueForState
// 0x0008 (0x0008 - 0x0000)
struct ModioModInstallationStatusWidget_QueryProgressValueForState final
{
public:
	EModioModProgressState                        ProgressState;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModInstallationStatusWidget_QueryProgressValueForState) == 0x000004, "Wrong alignment on ModioModInstallationStatusWidget_QueryProgressValueForState");
static_assert(sizeof(ModioModInstallationStatusWidget_QueryProgressValueForState) == 0x000008, "Wrong size on ModioModInstallationStatusWidget_QueryProgressValueForState");
static_assert(offsetof(ModioModInstallationStatusWidget_QueryProgressValueForState, ProgressState) == 0x000000, "Member 'ModioModInstallationStatusWidget_QueryProgressValueForState::ProgressState' has a wrong offset!");
static_assert(offsetof(ModioModInstallationStatusWidget_QueryProgressValueForState, ReturnValue) == 0x000004, "Member 'ModioModInstallationStatusWidget_QueryProgressValueForState::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModPropCollectionVisualizer.GetModPropertyVisualizerWidgets
// 0x0010 (0x0010 - 0x0000)
struct ModioModPropCollectionVisualizer_GetModPropertyVisualizerWidgets final
{
public:
	TArray<TScriptInterface<class IModioUIDataSourceWidget>> ReturnValue;                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModPropCollectionVisualizer_GetModPropertyVisualizerWidgets) == 0x000008, "Wrong alignment on ModioModPropCollectionVisualizer_GetModPropertyVisualizerWidgets");
static_assert(sizeof(ModioModPropCollectionVisualizer_GetModPropertyVisualizerWidgets) == 0x000010, "Wrong size on ModioModPropCollectionVisualizer_GetModPropertyVisualizerWidgets");
static_assert(offsetof(ModioModPropCollectionVisualizer_GetModPropertyVisualizerWidgets, ReturnValue) == 0x000000, "Member 'ModioModPropCollectionVisualizer_GetModPropertyVisualizerWidgets::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModRatingDisplay.GetRatingDescriptionLabelWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModRatingDisplay_GetRatingDescriptionLabelWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModRatingDisplay_GetRatingDescriptionLabelWidget) == 0x000008, "Wrong alignment on ModioModRatingDisplay_GetRatingDescriptionLabelWidget");
static_assert(sizeof(ModioModRatingDisplay_GetRatingDescriptionLabelWidget) == 0x000010, "Wrong size on ModioModRatingDisplay_GetRatingDescriptionLabelWidget");
static_assert(offsetof(ModioModRatingDisplay_GetRatingDescriptionLabelWidget, ReturnValue) == 0x000000, "Member 'ModioModRatingDisplay_GetRatingDescriptionLabelWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModRatingDisplay.GetRatingPercentageLabelWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModRatingDisplay_GetRatingPercentageLabelWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModRatingDisplay_GetRatingPercentageLabelWidget) == 0x000008, "Wrong alignment on ModioModRatingDisplay_GetRatingPercentageLabelWidget");
static_assert(sizeof(ModioModRatingDisplay_GetRatingPercentageLabelWidget) == 0x000010, "Wrong size on ModioModRatingDisplay_GetRatingPercentageLabelWidget");
static_assert(offsetof(ModioModRatingDisplay_GetRatingPercentageLabelWidget, ReturnValue) == 0x000000, "Member 'ModioModRatingDisplay_GetRatingPercentageLabelWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagDisplay.GetTagContainerWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagDisplay_GetTagContainerWidget final
{
public:
	TScriptInterface<class IModioUIObjectListWidget> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagDisplay_GetTagContainerWidget) == 0x000008, "Wrong alignment on ModioModTagDisplay_GetTagContainerWidget");
static_assert(sizeof(ModioModTagDisplay_GetTagContainerWidget) == 0x000010, "Wrong size on ModioModTagDisplay_GetTagContainerWidget");
static_assert(offsetof(ModioModTagDisplay_GetTagContainerWidget, ReturnValue) == 0x000000, "Member 'ModioModTagDisplay_GetTagContainerWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagSelectorCategory.GetCategoryTagListWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagSelectorCategory_GetCategoryTagListWidget final
{
public:
	TScriptInterface<class IModioUIObjectSelector> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelectorCategory_GetCategoryTagListWidget) == 0x000008, "Wrong alignment on ModioModTagSelectorCategory_GetCategoryTagListWidget");
static_assert(sizeof(ModioModTagSelectorCategory_GetCategoryTagListWidget) == 0x000010, "Wrong size on ModioModTagSelectorCategory_GetCategoryTagListWidget");
static_assert(offsetof(ModioModTagSelectorCategory_GetCategoryTagListWidget, ReturnValue) == 0x000000, "Member 'ModioModTagSelectorCategory_GetCategoryTagListWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagSelectorCategory.GetTagCategoryLabel
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagSelectorCategory_GetTagCategoryLabel final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelectorCategory_GetTagCategoryLabel) == 0x000008, "Wrong alignment on ModioModTagSelectorCategory_GetTagCategoryLabel");
static_assert(sizeof(ModioModTagSelectorCategory_GetTagCategoryLabel) == 0x000010, "Wrong size on ModioModTagSelectorCategory_GetTagCategoryLabel");
static_assert(offsetof(ModioModTagSelectorCategory_GetTagCategoryLabel, ReturnValue) == 0x000000, "Member 'ModioModTagSelectorCategory_GetTagCategoryLabel::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagSelectorMenu.GetAllowedTags
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagSelectorMenu_GetAllowedTags final
{
public:
	TArray<TScriptInterface<class IModioModTagCategoryUIDetails>> ReturnValue;                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelectorMenu_GetAllowedTags) == 0x000008, "Wrong alignment on ModioModTagSelectorMenu_GetAllowedTags");
static_assert(sizeof(ModioModTagSelectorMenu_GetAllowedTags) == 0x000010, "Wrong size on ModioModTagSelectorMenu_GetAllowedTags");
static_assert(offsetof(ModioModTagSelectorMenu_GetAllowedTags, ReturnValue) == 0x000000, "Member 'ModioModTagSelectorMenu_GetAllowedTags::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioModTagSelectorMenu.OnCategoryEntrySelectionChanged
// 0x0008 (0x0008 - 0x0000)
struct ModioModTagSelectorMenu_OnCategoryEntrySelectionChanged final
{
public:
	class UObject*                                NewlySelectedEntry;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelectorMenu_OnCategoryEntrySelectionChanged) == 0x000008, "Wrong alignment on ModioModTagSelectorMenu_OnCategoryEntrySelectionChanged");
static_assert(sizeof(ModioModTagSelectorMenu_OnCategoryEntrySelectionChanged) == 0x000008, "Wrong size on ModioModTagSelectorMenu_OnCategoryEntrySelectionChanged");
static_assert(offsetof(ModioModTagSelectorMenu_OnCategoryEntrySelectionChanged, NewlySelectedEntry) == 0x000000, "Member 'ModioModTagSelectorMenu_OnCategoryEntrySelectionChanged::NewlySelectedEntry' has a wrong offset!");

// Function ModioUICore.ModioModTagSelectorMenu.OnCategoryWidgetCreated
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagSelectorMenu_OnCategoryWidgetCreated final
{
public:
	class UWidget*                                CategoryWidget;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                CategoryDataSource;                                // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelectorMenu_OnCategoryWidgetCreated) == 0x000008, "Wrong alignment on ModioModTagSelectorMenu_OnCategoryWidgetCreated");
static_assert(sizeof(ModioModTagSelectorMenu_OnCategoryWidgetCreated) == 0x000010, "Wrong size on ModioModTagSelectorMenu_OnCategoryWidgetCreated");
static_assert(offsetof(ModioModTagSelectorMenu_OnCategoryWidgetCreated, CategoryWidget) == 0x000000, "Member 'ModioModTagSelectorMenu_OnCategoryWidgetCreated::CategoryWidget' has a wrong offset!");
static_assert(offsetof(ModioModTagSelectorMenu_OnCategoryWidgetCreated, CategoryDataSource) == 0x000008, "Member 'ModioModTagSelectorMenu_OnCategoryWidgetCreated::CategoryDataSource' has a wrong offset!");

// Function ModioUICore.ModioModTagSelectorMenu.GetCategoryContainerWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioModTagSelectorMenu_GetCategoryContainerWidget final
{
public:
	TScriptInterface<class IModioUIObjectListWidget> ReturnValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagSelectorMenu_GetCategoryContainerWidget) == 0x000008, "Wrong alignment on ModioModTagSelectorMenu_GetCategoryContainerWidget");
static_assert(sizeof(ModioModTagSelectorMenu_GetCategoryContainerWidget) == 0x000010, "Wrong size on ModioModTagSelectorMenu_GetCategoryContainerWidget");
static_assert(offsetof(ModioModTagSelectorMenu_GetCategoryContainerWidget, ReturnValue) == 0x000000, "Member 'ModioModTagSelectorMenu_GetCategoryContainerWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioOperationTracker.GetDownloadSizeTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioOperationTracker_GetDownloadSizeTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioOperationTracker_GetDownloadSizeTextWidget) == 0x000008, "Wrong alignment on ModioOperationTracker_GetDownloadSizeTextWidget");
static_assert(sizeof(ModioOperationTracker_GetDownloadSizeTextWidget) == 0x000010, "Wrong size on ModioOperationTracker_GetDownloadSizeTextWidget");
static_assert(offsetof(ModioOperationTracker_GetDownloadSizeTextWidget, ReturnValue) == 0x000000, "Member 'ModioOperationTracker_GetDownloadSizeTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioOperationTracker.GetDownloadSpeedTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioOperationTracker_GetDownloadSpeedTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioOperationTracker_GetDownloadSpeedTextWidget) == 0x000008, "Wrong alignment on ModioOperationTracker_GetDownloadSpeedTextWidget");
static_assert(sizeof(ModioOperationTracker_GetDownloadSpeedTextWidget) == 0x000010, "Wrong size on ModioOperationTracker_GetDownloadSpeedTextWidget");
static_assert(offsetof(ModioOperationTracker_GetDownloadSpeedTextWidget, ReturnValue) == 0x000000, "Member 'ModioOperationTracker_GetDownloadSpeedTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioOperationTracker.GetOperationTypeIconWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioOperationTracker_GetOperationTypeIconWidget final
{
public:
	TScriptInterface<class IModioUIImageDisplayWidget> ReturnValue;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioOperationTracker_GetOperationTypeIconWidget) == 0x000008, "Wrong alignment on ModioOperationTracker_GetOperationTypeIconWidget");
static_assert(sizeof(ModioOperationTracker_GetOperationTypeIconWidget) == 0x000010, "Wrong size on ModioOperationTracker_GetOperationTypeIconWidget");
static_assert(offsetof(ModioOperationTracker_GetOperationTypeIconWidget, ReturnValue) == 0x000000, "Member 'ModioOperationTracker_GetOperationTypeIconWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioOperationTracker.GetPercentProgressTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioOperationTracker_GetPercentProgressTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioOperationTracker_GetPercentProgressTextWidget) == 0x000008, "Wrong alignment on ModioOperationTracker_GetPercentProgressTextWidget");
static_assert(sizeof(ModioOperationTracker_GetPercentProgressTextWidget) == 0x000010, "Wrong size on ModioOperationTracker_GetPercentProgressTextWidget");
static_assert(offsetof(ModioOperationTracker_GetPercentProgressTextWidget, ReturnValue) == 0x000000, "Member 'ModioOperationTracker_GetPercentProgressTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioOperationTracker.GetQueueCountIconWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioOperationTracker_GetQueueCountIconWidget final
{
public:
	TScriptInterface<class IModioUIImageDisplayWidget> ReturnValue;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioOperationTracker_GetQueueCountIconWidget) == 0x000008, "Wrong alignment on ModioOperationTracker_GetQueueCountIconWidget");
static_assert(sizeof(ModioOperationTracker_GetQueueCountIconWidget) == 0x000010, "Wrong size on ModioOperationTracker_GetQueueCountIconWidget");
static_assert(offsetof(ModioOperationTracker_GetQueueCountIconWidget, ReturnValue) == 0x000000, "Member 'ModioOperationTracker_GetQueueCountIconWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioOperationTracker.GetQueueCountTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioOperationTracker_GetQueueCountTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioOperationTracker_GetQueueCountTextWidget) == 0x000008, "Wrong alignment on ModioOperationTracker_GetQueueCountTextWidget");
static_assert(sizeof(ModioOperationTracker_GetQueueCountTextWidget) == 0x000010, "Wrong size on ModioOperationTracker_GetQueueCountTextWidget");
static_assert(offsetof(ModioOperationTracker_GetQueueCountTextWidget, ReturnValue) == 0x000000, "Member 'ModioOperationTracker_GetQueueCountTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioOperationTracker.GetQueueLabelTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioOperationTracker_GetQueueLabelTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioOperationTracker_GetQueueLabelTextWidget) == 0x000008, "Wrong alignment on ModioOperationTracker_GetQueueLabelTextWidget");
static_assert(sizeof(ModioOperationTracker_GetQueueLabelTextWidget) == 0x000010, "Wrong size on ModioOperationTracker_GetQueueLabelTextWidget");
static_assert(offsetof(ModioOperationTracker_GetQueueLabelTextWidget, ReturnValue) == 0x000000, "Member 'ModioOperationTracker_GetQueueLabelTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioOperationTracker.GetRadialProgressWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioOperationTracker_GetRadialProgressWidget final
{
public:
	TScriptInterface<class IModioUIProgressWidget> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioOperationTracker_GetRadialProgressWidget) == 0x000008, "Wrong alignment on ModioOperationTracker_GetRadialProgressWidget");
static_assert(sizeof(ModioOperationTracker_GetRadialProgressWidget) == 0x000010, "Wrong size on ModioOperationTracker_GetRadialProgressWidget");
static_assert(offsetof(ModioOperationTracker_GetRadialProgressWidget, ReturnValue) == 0x000000, "Member 'ModioOperationTracker_GetRadialProgressWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioPopupCommandMenu.GetCommandMenuWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioPopupCommandMenu_GetCommandMenuWidget final
{
public:
	TScriptInterface<class IModioUICommandMenu>   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioPopupCommandMenu_GetCommandMenuWidget) == 0x000008, "Wrong alignment on ModioPopupCommandMenu_GetCommandMenuWidget");
static_assert(sizeof(ModioPopupCommandMenu_GetCommandMenuWidget) == 0x000010, "Wrong size on ModioPopupCommandMenu_GetCommandMenuWidget");
static_assert(offsetof(ModioPopupCommandMenu_GetCommandMenuWidget, ReturnValue) == 0x000000, "Member 'ModioPopupCommandMenu_GetCommandMenuWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioPresetFilterSelector.GetFilterPresets
// 0x0010 (0x0010 - 0x0000)
struct ModioPresetFilterSelector_GetFilterPresets final
{
public:
	TArray<TScriptInterface<class IModioModFilterUIDetails>> ReturnValue;                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioPresetFilterSelector_GetFilterPresets) == 0x000008, "Wrong alignment on ModioPresetFilterSelector_GetFilterPresets");
static_assert(sizeof(ModioPresetFilterSelector_GetFilterPresets) == 0x000010, "Wrong size on ModioPresetFilterSelector_GetFilterPresets");
static_assert(offsetof(ModioPresetFilterSelector_GetFilterPresets, ReturnValue) == 0x000000, "Member 'ModioPresetFilterSelector_GetFilterPresets::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioPresetFilterSelector.GetPresetListWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioPresetFilterSelector_GetPresetListWidget final
{
public:
	TScriptInterface<class IModioUIObjectSelector> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioPresetFilterSelector_GetPresetListWidget) == 0x000008, "Wrong alignment on ModioPresetFilterSelector_GetPresetListWidget");
static_assert(sizeof(ModioPresetFilterSelector_GetPresetListWidget) == 0x000010, "Wrong size on ModioPresetFilterSelector_GetPresetListWidget");
static_assert(offsetof(ModioPresetFilterSelector_GetPresetListWidget, ReturnValue) == 0x000000, "Member 'ModioPresetFilterSelector_GetPresetListWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioSearchBar.GetButtonWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioSearchBar_GetButtonWidget final
{
public:
	TScriptInterface<class IModioUIClickableWidget> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSearchBar_GetButtonWidget) == 0x000008, "Wrong alignment on ModioSearchBar_GetButtonWidget");
static_assert(sizeof(ModioSearchBar_GetButtonWidget) == 0x000010, "Wrong size on ModioSearchBar_GetButtonWidget");
static_assert(offsetof(ModioSearchBar_GetButtonWidget, ReturnValue) == 0x000000, "Member 'ModioSearchBar_GetButtonWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioSearchBar.GetSearchBoxWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioSearchBar_GetSearchBoxWidget final
{
public:
	TScriptInterface<class IModioUIStringInputWidget> ReturnValue;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSearchBar_GetSearchBoxWidget) == 0x000008, "Wrong alignment on ModioSearchBar_GetSearchBoxWidget");
static_assert(sizeof(ModioSearchBar_GetSearchBoxWidget) == 0x000010, "Wrong size on ModioSearchBar_GetSearchBoxWidget");
static_assert(offsetof(ModioSearchBar_GetSearchBoxWidget, ReturnValue) == 0x000000, "Member 'ModioSearchBar_GetSearchBoxWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioStorageTracker.GetStorageUsedTextWidget
// 0x0010 (0x0010 - 0x0000)
struct ModioStorageTracker_GetStorageUsedTextWidget final
{
public:
	TScriptInterface<class IModioUIHasTextWidget> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioStorageTracker_GetStorageUsedTextWidget) == 0x000008, "Wrong alignment on ModioStorageTracker_GetStorageUsedTextWidget");
static_assert(sizeof(ModioStorageTracker_GetStorageUsedTextWidget) == 0x000010, "Wrong size on ModioStorageTracker_GetStorageUsedTextWidget");
static_assert(offsetof(ModioStorageTracker_GetStorageUsedTextWidget, ReturnValue) == 0x000000, "Member 'ModioStorageTracker_GetStorageUsedTextWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.ApplyTextPropertyOverridesHelper
// 0x0070 (0x0070 - 0x0000)
struct ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper final
{
public:
	struct FSlateFontInfoOverride                 FontPropertiesOverride;                            // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FHAlignOverride                        TextJustificationOverride;                         // 0x0060(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FTextTransformOverride                 TextTransformOverride;                             // 0x0062(0x0002)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Target;                                            // 0x0068(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper");
static_assert(sizeof(ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper) == 0x000070, "Wrong size on ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper");
static_assert(offsetof(ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper, FontPropertiesOverride) == 0x000000, "Member 'ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper::FontPropertiesOverride' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper, TextJustificationOverride) == 0x000060, "Member 'ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper::TextJustificationOverride' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper, TextTransformOverride) == 0x000062, "Member 'ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper::TextTransformOverride' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper, Target) == 0x000068, "Member 'ModioUICommonFunctionLibrary_ApplyTextPropertyOverridesHelper::Target' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.AsObjectArray
// 0x0020 (0x0020 - 0x0000)
struct ModioUICommonFunctionLibrary_AsObjectArray final
{
public:
	TArray<int32>                                 TargetArray;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UObject*>                        ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_AsObjectArray) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_AsObjectArray");
static_assert(sizeof(ModioUICommonFunctionLibrary_AsObjectArray) == 0x000020, "Wrong size on ModioUICommonFunctionLibrary_AsObjectArray");
static_assert(offsetof(ModioUICommonFunctionLibrary_AsObjectArray, TargetArray) == 0x000000, "Member 'ModioUICommonFunctionLibrary_AsObjectArray::TargetArray' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_AsObjectArray, ReturnValue) == 0x000010, "Member 'ModioUICommonFunctionLibrary_AsObjectArray::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CheckLogoDownloadEvent
// 0x0020 (0x0020 - 0x0000)
struct ModioUICommonFunctionLibrary_CheckLogoDownloadEvent final
{
public:
	struct FModioModID                            EventModID;                                        // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioLogoSize                                EventLogoSize;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioModID                            RequestedModID;                                    // 0x0010(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioLogoSize                                RequestedSize;                                     // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUICommonFunctionLibrary_CheckLogoDownloadEvent) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CheckLogoDownloadEvent");
static_assert(sizeof(ModioUICommonFunctionLibrary_CheckLogoDownloadEvent) == 0x000020, "Wrong size on ModioUICommonFunctionLibrary_CheckLogoDownloadEvent");
static_assert(offsetof(ModioUICommonFunctionLibrary_CheckLogoDownloadEvent, EventModID) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CheckLogoDownloadEvent::EventModID' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CheckLogoDownloadEvent, EventLogoSize) == 0x000008, "Member 'ModioUICommonFunctionLibrary_CheckLogoDownloadEvent::EventLogoSize' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CheckLogoDownloadEvent, RequestedModID) == 0x000010, "Member 'ModioUICommonFunctionLibrary_CheckLogoDownloadEvent::RequestedModID' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CheckLogoDownloadEvent, RequestedSize) == 0x000018, "Member 'ModioUICommonFunctionLibrary_CheckLogoDownloadEvent::RequestedSize' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CheckLogoDownloadEvent, ReturnValue) == 0x000019, "Member 'ModioUICommonFunctionLibrary_CheckLogoDownloadEvent::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CheckLogoDownloadEventForDataSource
// 0x0020 (0x0020 - 0x0000)
struct ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource final
{
public:
	struct FModioModID                            EventModID;                                        // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioLogoSize                                EventLogoSize;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                DataSource;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioLogoSize                                RequestedSize;                                     // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource");
static_assert(sizeof(ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource) == 0x000020, "Wrong size on ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource");
static_assert(offsetof(ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource, EventModID) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource::EventModID' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource, EventLogoSize) == 0x000008, "Member 'ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource::EventLogoSize' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource, DataSource) == 0x000010, "Member 'ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource::DataSource' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource, RequestedSize) == 0x000018, "Member 'ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource::RequestedSize' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource, ReturnValue) == 0x000019, "Member 'ModioUICommonFunctionLibrary_CheckLogoDownloadEventForDataSource::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableEnum
// 0x0028 (0x0028 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableEnum final
{
public:
	uint8                                         InValue;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   InText;                                            // 0x0008(0x0018)(ConstParm, Parm, NativeAccessSpecifierPublic)
	class UModioEnumEntryUI*                      ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableEnum) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableEnum");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableEnum) == 0x000028, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableEnum");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableEnum, InValue) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableEnum::InValue' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableEnum, InText) == 0x000008, "Member 'ModioUICommonFunctionLibrary_CreateBindableEnum::InText' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableEnum, ReturnValue) == 0x000020, "Member 'ModioUICommonFunctionLibrary_CreateBindableEnum::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModDependency
// 0x0100 (0x0100 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableModDependency final
{
public:
	struct FModioModDependency                    InModDependency;                                   // 0x0000(0x00F8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UModioModDependencyUI*                  ReturnValue;                                       // 0x00F8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableModDependency) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableModDependency");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableModDependency) == 0x000100, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableModDependency");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModDependency, InModDependency) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableModDependency::InModDependency' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModDependency, ReturnValue) == 0x0000F8, "Member 'ModioUICommonFunctionLibrary_CreateBindableModDependency::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModDependencyArrayFromArray
// 0x0020 (0x0020 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromArray final
{
public:
	TArray<struct FModioModDependency>            InModDependencyArray;                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UModioModDependencyUI*>          ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromArray) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromArray");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromArray) == 0x000020, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromArray");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromArray, InModDependencyArray) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromArray::InModDependencyArray' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromArray, ReturnValue) == 0x000010, "Member 'ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromArray::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModDependencyArrayFromList
// 0x0048 (0x0048 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromList final
{
public:
	struct FModioModDependencyList                InModDependencyList;                               // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UModioModDependencyUI*>          ReturnValue;                                       // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromList) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromList");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromList) == 0x000048, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromList");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromList, InModDependencyList) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromList::InModDependencyList' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromList, ReturnValue) == 0x000038, "Member 'ModioUICommonFunctionLibrary_CreateBindableModDependencyArrayFromList::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModTag
// 0x0068 (0x0068 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableModTag final
{
public:
	struct FModioModTagLocalizationData           InTagLocalizationData;                             // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UModioModTagUI*                         ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableModTag) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableModTag");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableModTag) == 0x000068, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableModTag");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModTag, InTagLocalizationData) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableModTag::InTagLocalizationData' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModTag, ReturnValue) == 0x000060, "Member 'ModioUICommonFunctionLibrary_CreateBindableModTag::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModTagArray
// 0x0020 (0x0020 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableModTagArray final
{
public:
	TArray<struct FModioModTag>                   InTags;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UModioModTagUI*>                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableModTagArray) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableModTagArray");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableModTagArray) == 0x000020, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableModTagArray");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModTagArray, InTags) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableModTagArray::InTags' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModTagArray, ReturnValue) == 0x000010, "Member 'ModioUICommonFunctionLibrary_CreateBindableModTagArray::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModTagInfo
// 0x00C0 (0x00C0 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableModTagInfo final
{
public:
	struct FModioModTagInfo                       InRawTagInfo;                                      // 0x0000(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UModioModTagInfoUI*                     ReturnValue;                                       // 0x00B8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableModTagInfo) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableModTagInfo");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableModTagInfo) == 0x0000C0, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableModTagInfo");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModTagInfo, InRawTagInfo) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableModTagInfo::InRawTagInfo' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModTagInfo, ReturnValue) == 0x0000B8, "Member 'ModioUICommonFunctionLibrary_CreateBindableModTagInfo::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModTagOptions
// 0x0030 (0x0030 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableModTagOptions final
{
public:
	struct FModioModTagOptions                    InRawOptions;                                      // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioModTagOptionsUI*                  ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableModTagOptions) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableModTagOptions");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableModTagOptions) == 0x000030, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableModTagOptions");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModTagOptions, InRawOptions) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableModTagOptions::InRawOptions' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModTagOptions, ReturnValue) == 0x000028, "Member 'ModioUICommonFunctionLibrary_CreateBindableModTagOptions::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableModTagRawValue
// 0x0030 (0x0030 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableModTagRawValue final
{
public:
	struct FModioModTag                           InTag;                                             // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioModTagUI*                         ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableModTagRawValue) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableModTagRawValue");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableModTagRawValue) == 0x000030, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableModTagRawValue");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModTagRawValue, InTag) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableModTagRawValue::InTag' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableModTagRawValue, ReturnValue) == 0x000028, "Member 'ModioUICommonFunctionLibrary_CreateBindableModTagRawValue::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableReportTypeEnumArray
// 0x0010 (0x0010 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableReportTypeEnumArray final
{
public:
	TArray<class UModioEnumEntryUI*>              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableReportTypeEnumArray) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableReportTypeEnumArray");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableReportTypeEnumArray) == 0x000010, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableReportTypeEnumArray");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableReportTypeEnumArray, ReturnValue) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableReportTypeEnumArray::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.CreateBindableUser
// 0x0048 (0x0048 - 0x0000)
struct ModioUICommonFunctionLibrary_CreateBindableUser final
{
public:
	struct FModioUser                             InRawUser;                                         // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UModioUserUI*                           ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_CreateBindableUser) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_CreateBindableUser");
static_assert(sizeof(ModioUICommonFunctionLibrary_CreateBindableUser) == 0x000048, "Wrong size on ModioUICommonFunctionLibrary_CreateBindableUser");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableUser, InRawUser) == 0x000000, "Member 'ModioUICommonFunctionLibrary_CreateBindableUser::InRawUser' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_CreateBindableUser, ReturnValue) == 0x000040, "Member 'ModioUICommonFunctionLibrary_CreateBindableUser::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.FormatNumberWithSIUnit
// 0x0038 (0x0038 - 0x0000)
struct ModioUICommonFunctionLibrary_FormatNumberWithSIUnit final
{
public:
	int64                                         Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   FormatText;                                        // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0020(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_FormatNumberWithSIUnit) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_FormatNumberWithSIUnit");
static_assert(sizeof(ModioUICommonFunctionLibrary_FormatNumberWithSIUnit) == 0x000038, "Wrong size on ModioUICommonFunctionLibrary_FormatNumberWithSIUnit");
static_assert(offsetof(ModioUICommonFunctionLibrary_FormatNumberWithSIUnit, Value) == 0x000000, "Member 'ModioUICommonFunctionLibrary_FormatNumberWithSIUnit::Value' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_FormatNumberWithSIUnit, FormatText) == 0x000008, "Member 'ModioUICommonFunctionLibrary_FormatNumberWithSIUnit::FormatText' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_FormatNumberWithSIUnit, ReturnValue) == 0x000020, "Member 'ModioUICommonFunctionLibrary_FormatNumberWithSIUnit::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.FormatTimespan
// 0x0080 (0x0080 - 0x0000)
struct ModioUICommonFunctionLibrary_FormatTimespan final
{
public:
	struct FTimespan                              Timespan;                                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   YearFormat;                                        // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   MonthFormat;                                       // 0x0020(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   DaysFormat;                                        // 0x0038(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   TodayFormat;                                       // 0x0050(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0068(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_FormatTimespan) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_FormatTimespan");
static_assert(sizeof(ModioUICommonFunctionLibrary_FormatTimespan) == 0x000080, "Wrong size on ModioUICommonFunctionLibrary_FormatTimespan");
static_assert(offsetof(ModioUICommonFunctionLibrary_FormatTimespan, Timespan) == 0x000000, "Member 'ModioUICommonFunctionLibrary_FormatTimespan::Timespan' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_FormatTimespan, YearFormat) == 0x000008, "Member 'ModioUICommonFunctionLibrary_FormatTimespan::YearFormat' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_FormatTimespan, MonthFormat) == 0x000020, "Member 'ModioUICommonFunctionLibrary_FormatTimespan::MonthFormat' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_FormatTimespan, DaysFormat) == 0x000038, "Member 'ModioUICommonFunctionLibrary_FormatTimespan::DaysFormat' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_FormatTimespan, TodayFormat) == 0x000050, "Member 'ModioUICommonFunctionLibrary_FormatTimespan::TodayFormat' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_FormatTimespan, ReturnValue) == 0x000068, "Member 'ModioUICommonFunctionLibrary_FormatTimespan::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.GetLocalizedTagCategory
// 0x00D0 (0x00D0 - 0x0000)
struct ModioUICommonFunctionLibrary_GetLocalizedTagCategory final
{
public:
	struct FModioModTagInfo                       InTagInfo;                                         // 0x0000(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x00B8(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_GetLocalizedTagCategory) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_GetLocalizedTagCategory");
static_assert(sizeof(ModioUICommonFunctionLibrary_GetLocalizedTagCategory) == 0x0000D0, "Wrong size on ModioUICommonFunctionLibrary_GetLocalizedTagCategory");
static_assert(offsetof(ModioUICommonFunctionLibrary_GetLocalizedTagCategory, InTagInfo) == 0x000000, "Member 'ModioUICommonFunctionLibrary_GetLocalizedTagCategory::InTagInfo' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_GetLocalizedTagCategory, ReturnValue) == 0x0000B8, "Member 'ModioUICommonFunctionLibrary_GetLocalizedTagCategory::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.GetLocalizedTagValue
// 0x0078 (0x0078 - 0x0000)
struct ModioUICommonFunctionLibrary_GetLocalizedTagValue final
{
public:
	struct FModioModTagLocalizationData           InTagLocalizationData;                             // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0060(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_GetLocalizedTagValue) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_GetLocalizedTagValue");
static_assert(sizeof(ModioUICommonFunctionLibrary_GetLocalizedTagValue) == 0x000078, "Wrong size on ModioUICommonFunctionLibrary_GetLocalizedTagValue");
static_assert(offsetof(ModioUICommonFunctionLibrary_GetLocalizedTagValue, InTagLocalizationData) == 0x000000, "Member 'ModioUICommonFunctionLibrary_GetLocalizedTagValue::InTagLocalizationData' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_GetLocalizedTagValue, ReturnValue) == 0x000060, "Member 'ModioUICommonFunctionLibrary_GetLocalizedTagValue::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.GetModioText
// 0x0020 (0x0020 - 0x0000)
struct ModioUICommonFunctionLibrary_GetModioText final
{
public:
	class FName                                   StringKey;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_GetModioText) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_GetModioText");
static_assert(sizeof(ModioUICommonFunctionLibrary_GetModioText) == 0x000020, "Wrong size on ModioUICommonFunctionLibrary_GetModioText");
static_assert(offsetof(ModioUICommonFunctionLibrary_GetModioText, StringKey) == 0x000000, "Member 'ModioUICommonFunctionLibrary_GetModioText::StringKey' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_GetModioText, ReturnValue) == 0x000008, "Member 'ModioUICommonFunctionLibrary_GetModioText::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.IsDesignTime
// 0x0010 (0x0010 - 0x0000)
struct ModioUICommonFunctionLibrary_IsDesignTime final
{
public:
	class UWidget*                                Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUICommonFunctionLibrary_IsDesignTime) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_IsDesignTime");
static_assert(sizeof(ModioUICommonFunctionLibrary_IsDesignTime) == 0x000010, "Wrong size on ModioUICommonFunctionLibrary_IsDesignTime");
static_assert(offsetof(ModioUICommonFunctionLibrary_IsDesignTime, Target) == 0x000000, "Member 'ModioUICommonFunctionLibrary_IsDesignTime::Target' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_IsDesignTime, ReturnValue) == 0x000008, "Member 'ModioUICommonFunctionLibrary_IsDesignTime::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.IsDesignTimeAsExec
// 0x0010 (0x0010 - 0x0000)
struct ModioUICommonFunctionLibrary_IsDesignTimeAsExec final
{
public:
	class UWidget*                                Target;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUICommonFunctionLibrary_IsDesignTimeAsExec) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_IsDesignTimeAsExec");
static_assert(sizeof(ModioUICommonFunctionLibrary_IsDesignTimeAsExec) == 0x000010, "Wrong size on ModioUICommonFunctionLibrary_IsDesignTimeAsExec");
static_assert(offsetof(ModioUICommonFunctionLibrary_IsDesignTimeAsExec, Target) == 0x000000, "Member 'ModioUICommonFunctionLibrary_IsDesignTimeAsExec::Target' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_IsDesignTimeAsExec, ReturnValue) == 0x000008, "Member 'ModioUICommonFunctionLibrary_IsDesignTimeAsExec::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.MapValueIntoRangeIndex
// 0x0020 (0x0020 - 0x0000)
struct ModioUICommonFunctionLibrary_MapValueIntoRangeIndex final
{
public:
	TArray<struct FInt32Range>                    ValueRanges;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutIndex;                                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUICommonFunctionLibrary_MapValueIntoRangeIndex) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_MapValueIntoRangeIndex");
static_assert(sizeof(ModioUICommonFunctionLibrary_MapValueIntoRangeIndex) == 0x000020, "Wrong size on ModioUICommonFunctionLibrary_MapValueIntoRangeIndex");
static_assert(offsetof(ModioUICommonFunctionLibrary_MapValueIntoRangeIndex, ValueRanges) == 0x000000, "Member 'ModioUICommonFunctionLibrary_MapValueIntoRangeIndex::ValueRanges' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_MapValueIntoRangeIndex, Value) == 0x000010, "Member 'ModioUICommonFunctionLibrary_MapValueIntoRangeIndex::Value' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_MapValueIntoRangeIndex, OutIndex) == 0x000014, "Member 'ModioUICommonFunctionLibrary_MapValueIntoRangeIndex::OutIndex' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_MapValueIntoRangeIndex, ReturnValue) == 0x000018, "Member 'ModioUICommonFunctionLibrary_MapValueIntoRangeIndex::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUICommonFunctionLibrary.ValidateWidget
// 0x0018 (0x0018 - 0x0000)
struct ModioUICommonFunctionLibrary_ValidateWidget final
{
public:
	TScriptInterface<class IInterface>            TargetWidget;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUICommonFunctionLibrary_ValidateWidget) == 0x000008, "Wrong alignment on ModioUICommonFunctionLibrary_ValidateWidget");
static_assert(sizeof(ModioUICommonFunctionLibrary_ValidateWidget) == 0x000018, "Wrong size on ModioUICommonFunctionLibrary_ValidateWidget");
static_assert(offsetof(ModioUICommonFunctionLibrary_ValidateWidget, TargetWidget) == 0x000000, "Member 'ModioUICommonFunctionLibrary_ValidateWidget::TargetWidget' has a wrong offset!");
static_assert(offsetof(ModioUICommonFunctionLibrary_ValidateWidget, ReturnValue) == 0x000010, "Member 'ModioUICommonFunctionLibrary_ValidateWidget::ReturnValue' has a wrong offset!");

// Function ModioUICore.ModioUIDisplayFilteredModsCommand.SetDisplayStringKey
// 0x0008 (0x0008 - 0x0000)
struct ModioUIDisplayFilteredModsCommand_SetDisplayStringKey final
{
public:
	class FName                                   InDisplayStringKey;                                // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDisplayFilteredModsCommand_SetDisplayStringKey) == 0x000004, "Wrong alignment on ModioUIDisplayFilteredModsCommand_SetDisplayStringKey");
static_assert(sizeof(ModioUIDisplayFilteredModsCommand_SetDisplayStringKey) == 0x000008, "Wrong size on ModioUIDisplayFilteredModsCommand_SetDisplayStringKey");
static_assert(offsetof(ModioUIDisplayFilteredModsCommand_SetDisplayStringKey, InDisplayStringKey) == 0x000000, "Member 'ModioUIDisplayFilteredModsCommand_SetDisplayStringKey::InDisplayStringKey' has a wrong offset!");

// Function ModioUICore.ModioUIDisplayFilteredModsCommand.SetFilterParams
// 0x00B8 (0x00B8 - 0x0000)
struct ModioUIDisplayFilteredModsCommand_SetFilterParams final
{
public:
	struct FModioFilterParams                     FilterParams;                                      // 0x0000(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUIDisplayFilteredModsCommand_SetFilterParams) == 0x000008, "Wrong alignment on ModioUIDisplayFilteredModsCommand_SetFilterParams");
static_assert(sizeof(ModioUIDisplayFilteredModsCommand_SetFilterParams) == 0x0000B8, "Wrong size on ModioUIDisplayFilteredModsCommand_SetFilterParams");
static_assert(offsetof(ModioUIDisplayFilteredModsCommand_SetFilterParams, FilterParams) == 0x000000, "Member 'ModioUIDisplayFilteredModsCommand_SetFilterParams::FilterParams' has a wrong offset!");

}

