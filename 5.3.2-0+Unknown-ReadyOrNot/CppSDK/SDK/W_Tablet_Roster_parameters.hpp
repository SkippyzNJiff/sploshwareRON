#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Tablet_Roster

#include "Basic.hpp"

#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function W_Tablet_Roster.W_Tablet_Roster_C.AudioPlayerVisible
// 0x0010 (0x0010 - 0x0000)
struct W_Tablet_Roster_C_AudioPlayerVisible final
{
public:
	class UW_AudioPlayer_C*                       PlayerWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerVisible;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_AudioPlayerVisible) == 0x000008, "Wrong alignment on W_Tablet_Roster_C_AudioPlayerVisible");
static_assert(sizeof(W_Tablet_Roster_C_AudioPlayerVisible) == 0x000010, "Wrong size on W_Tablet_Roster_C_AudioPlayerVisible");
static_assert(offsetof(W_Tablet_Roster_C_AudioPlayerVisible, PlayerWidget) == 0x000000, "Member 'W_Tablet_Roster_C_AudioPlayerVisible::PlayerWidget' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_AudioPlayerVisible, PlayerVisible) == 0x000008, "Member 'W_Tablet_Roster_C_AudioPlayerVisible::PlayerVisible' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Tablet_Roster_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_BackPage) == 0x000001, "Wrong alignment on W_Tablet_Roster_C_BackPage");
static_assert(sizeof(W_Tablet_Roster_C_BackPage) == 0x000001, "Wrong size on W_Tablet_Roster_C_BackPage");
static_assert(offsetof(W_Tablet_Roster_C_BackPage, Handled) == 0x000000, "Member 'W_Tablet_Roster_C_BackPage::Handled' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Tablet_Roster_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_ChangePage) == 0x000004, "Wrong alignment on W_Tablet_Roster_C_ChangePage");
static_assert(sizeof(W_Tablet_Roster_C_ChangePage) == 0x000008, "Wrong size on W_Tablet_Roster_C_ChangePage");
static_assert(offsetof(W_Tablet_Roster_C_ChangePage, PageName) == 0x000000, "Member 'W_Tablet_Roster_C_ChangePage::PageName' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.ExecuteUbergraph_W_Tablet_Roster
// 0x0090 (0x0090 - 0x0000)
struct W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_UseDarkTheme;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_AudioPlayer_C*                       K2Node_Event_PlayerWidget;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PlayerVisible;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_ReturnValue;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCommanderMode_ReturnValue;              // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PreMission_Tablet_RosterManager_C*   CallFunc_BP_AddWidget_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_Roster_Status_C*                     CallFunc_BP_AddWidget_ReturnValue_1;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsAwake;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatableWidget*               CallFunc_GetActiveWidget_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITabletUI_C>           K2Node_DynamicCast_AsTablet_UI;                    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster) == 0x000008, "Wrong alignment on W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster");
static_assert(sizeof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster) == 0x000090, "Wrong size on W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, EntryPoint) == 0x000000, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_Event_UseDarkTheme) == 0x000010, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_Event_UseDarkTheme' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_Event_PlayerWidget) == 0x000018, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_Event_PlayerWidget' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_Event_PlayerVisible) == 0x000020, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_Event_PlayerVisible' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_Event_Delay_1) == 0x000028, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_Event_Delay) == 0x000030, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_Event_Collapse) == 0x000038, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_Event_IsGamepad) == 0x000039, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_Event_PageName) == 0x00003C, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_Event_IsDesignTime) == 0x000044, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, CallFunc_IsInLobby_ReturnValue) == 0x000045, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::CallFunc_IsInLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, CallFunc_IsCommanderMode_ReturnValue) == 0x000046, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::CallFunc_IsCommanderMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, CallFunc_BP_AddWidget_ReturnValue) == 0x000048, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::CallFunc_BP_AddWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, CallFunc_BP_AddWidget_ReturnValue_1) == 0x000050, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::CallFunc_BP_AddWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_Event_IsAwake) == 0x000058, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_Event_IsAwake' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, CallFunc_GetActiveWidget_ReturnValue) == 0x000060, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_DynamicCast_AsTablet_UI) == 0x000068, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_DynamicCast_AsTablet_UI' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_CreateDelegate_OutputDelegate) == 0x00007C, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_CustomEvent_bNewInputType) == 0x00008C, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster, K2Node_SwitchEnum_CmpSuccess) == 0x00008D, "Member 'W_Tablet_Roster_C_ExecuteUbergraph_W_Tablet_Roster::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Tablet_Roster_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_Hide) == 0x000008, "Wrong alignment on W_Tablet_Roster_C_Hide");
static_assert(sizeof(W_Tablet_Roster_C_Hide) == 0x000010, "Wrong size on W_Tablet_Roster_C_Hide");
static_assert(offsetof(W_Tablet_Roster_C_Hide, Delay) == 0x000000, "Member 'W_Tablet_Roster_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Tablet_Roster_C_Hide, Collapse) == 0x000008, "Member 'W_Tablet_Roster_C_Hide::Collapse' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct W_Tablet_Roster_C_OnInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_OnInputMethodChanged) == 0x000001, "Wrong alignment on W_Tablet_Roster_C_OnInputMethodChanged");
static_assert(sizeof(W_Tablet_Roster_C_OnInputMethodChanged) == 0x000001, "Wrong size on W_Tablet_Roster_C_OnInputMethodChanged");
static_assert(offsetof(W_Tablet_Roster_C_OnInputMethodChanged, bNewInputType) == 0x000000, "Member 'W_Tablet_Roster_C_OnInputMethodChanged::bNewInputType' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Tablet_Roster_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_PreConstruct) == 0x000001, "Wrong alignment on W_Tablet_Roster_C_PreConstruct");
static_assert(sizeof(W_Tablet_Roster_C_PreConstruct) == 0x000001, "Wrong size on W_Tablet_Roster_C_PreConstruct");
static_assert(offsetof(W_Tablet_Roster_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Tablet_Roster_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Tablet_Roster_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_Reveal) == 0x000008, "Wrong alignment on W_Tablet_Roster_C_Reveal");
static_assert(sizeof(W_Tablet_Roster_C_Reveal) == 0x000008, "Wrong size on W_Tablet_Roster_C_Reveal");
static_assert(offsetof(W_Tablet_Roster_C_Reveal, Delay) == 0x000000, "Member 'W_Tablet_Roster_C_Reveal::Delay' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Tablet_Roster_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_SetInputMode) == 0x000001, "Wrong alignment on W_Tablet_Roster_C_SetInputMode");
static_assert(sizeof(W_Tablet_Roster_C_SetInputMode) == 0x000001, "Wrong size on W_Tablet_Roster_C_SetInputMode");
static_assert(offsetof(W_Tablet_Roster_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Tablet_Roster_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.SetTabletState
// 0x0001 (0x0001 - 0x0000)
struct W_Tablet_Roster_C_SetTabletState final
{
public:
	bool                                          IsAwake;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_SetTabletState) == 0x000001, "Wrong alignment on W_Tablet_Roster_C_SetTabletState");
static_assert(sizeof(W_Tablet_Roster_C_SetTabletState) == 0x000001, "Wrong size on W_Tablet_Roster_C_SetTabletState");
static_assert(offsetof(W_Tablet_Roster_C_SetTabletState, IsAwake) == 0x000000, "Member 'W_Tablet_Roster_C_SetTabletState::IsAwake' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.SetVisualTheme
// 0x0001 (0x0001 - 0x0000)
struct W_Tablet_Roster_C_SetVisualTheme final
{
public:
	bool                                          UseDarkTheme;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_SetVisualTheme) == 0x000001, "Wrong alignment on W_Tablet_Roster_C_SetVisualTheme");
static_assert(sizeof(W_Tablet_Roster_C_SetVisualTheme) == 0x000001, "Wrong size on W_Tablet_Roster_C_SetVisualTheme");
static_assert(offsetof(W_Tablet_Roster_C_SetVisualTheme, UseDarkTheme) == 0x000000, "Member 'W_Tablet_Roster_C_SetVisualTheme::UseDarkTheme' has a wrong offset!");

// Function W_Tablet_Roster.W_Tablet_Roster_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Tablet_Roster_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Tablet_Roster_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Tablet_Roster_C_GetFocusTarget");
static_assert(sizeof(W_Tablet_Roster_C_GetFocusTarget) == 0x000008, "Wrong size on W_Tablet_Roster_C_GetFocusTarget");
static_assert(offsetof(W_Tablet_Roster_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Tablet_Roster_C_GetFocusTarget::Focus' has a wrong offset!");

}

