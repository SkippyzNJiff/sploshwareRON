#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Loadout_Page_ItemList

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Loadout_Page_ItemList.W_Loadout_Page_ItemList_C
// 0x00E8 (0x04F8 - 0x0410)
class UW_Loadout_Page_ItemList_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UScrollBox*                             ItemScrollBox;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ELoadoutCategory                              LoadoutCategory;                                   // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              NewItem;                                           // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_LoadoutSlot_v2_C*                    NewLoadoutSlot;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EWeaponAttachmentType                         Attachment_Type;                                   // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> OnSlotClicked;         // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UW_LoadoutSlot_v2_C* TriggeringSlot)> OnSlotHovered;         // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnSlotUnhovered;                                   // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(TSubclassOf<class UWeaponAttachment> AttachmentClass, EWeaponAttachmentType AttachmentType)> OnAttachmentClicked; // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWeaponAttachment* Attachment, EWeaponAttachmentType AttachmentType, class UW_LoadoutSlot_v2_C* TriggeringSlot)> OnAttachmentHovered; // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnAttachmentUnhovered;                             // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(TSubclassOf<class ABaseWeapon> Weapon)> OnWeaponClicked;           // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ABaseWeapon* Weapon, class UW_LoadoutSlot_v2_C* TriggeringSlot)> OnWeaponHovered; // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnWeaponUnhovered;                                 // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Secondary;                                         // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                LastHovered;                                       // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_LoadoutSlot_v2_C*>            ItemSlots;                                         // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	EItemClass                                    ItemClass;                                         // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFilterByItemClass;                                // 0x04F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddAttachmentItem(EWeaponAttachmentType AttachmentType, class UClass* Attachment, bool Secondary_0);
	void AddItem(class ABaseItem* BaseItem);
	void AttachmentClicked(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void AttachmentHovered(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void AttachmentUnhovered();
	void BackPage(bool* Handled);
	void ChangePage(class FName PageName);
	void CheckIfEquippedAttachment(bool Secondary_0, class UClass* Attachment, bool* IsEquipped);
	void CheckItemEquipped(class ABaseItem* Item, bool* IsEquipped);
	void Clear();
	void Construct();
	void ExecuteUbergraph_W_Loadout_Page_ItemList(int32 EntryPoint);
	class UWidget* GetFirst(bool* Valid);
	TSoftObjectPtr<class UTexture2D> GetWeaponImage(class ABaseItem* NewItem_0);
	void HeaderSubpageNavigation(class FName OptionNameID);
	void Hide(double Delay, bool Collapse);
	void InitializeFacewear();
	void InitializeHeadwear();
	void InitializeHelmetMounts();
	void InitializeWeapons(ELoadoutCategory LoadoutCategory_0, EItemClass ItemClass_0, bool bFilterByItemClass_0);
	void InputMethodChanged(ECommonInputType bNewInputType);
	void ItemClicked(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void ItemHovered(class UW_LoadoutSlot_v2_C* TriggeringSlot);
	void ItemUnhovered();
	void RefreshAttachments();
	void RefreshListItems();
	void Reveal(double Delay);
	void SetInputMode(bool IsGamepad);
	void UpdateActiveLoadout(const struct FSavedLoadout& ActiveLoadout);
	void UpdateCurrentItemMap(const TMap<EItemCategory, class UClass*>& ItemCategory);

	class UWidget* BP_GetDesiredFocusTarget() const;
	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loadout_Page_ItemList_C">();
	}
	static class UW_Loadout_Page_ItemList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loadout_Page_ItemList_C>();
	}
};
static_assert(alignof(UW_Loadout_Page_ItemList_C) == 0x000008, "Wrong alignment on UW_Loadout_Page_ItemList_C");
static_assert(sizeof(UW_Loadout_Page_ItemList_C) == 0x0004F8, "Wrong size on UW_Loadout_Page_ItemList_C");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, UberGraphFrame) == 0x000410, "Member 'UW_Loadout_Page_ItemList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, ItemScrollBox) == 0x000418, "Member 'UW_Loadout_Page_ItemList_C::ItemScrollBox' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, LoadoutCategory) == 0x000420, "Member 'UW_Loadout_Page_ItemList_C::LoadoutCategory' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, NewItem) == 0x000428, "Member 'UW_Loadout_Page_ItemList_C::NewItem' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, NewLoadoutSlot) == 0x000430, "Member 'UW_Loadout_Page_ItemList_C::NewLoadoutSlot' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, Attachment_Type) == 0x000438, "Member 'UW_Loadout_Page_ItemList_C::Attachment_Type' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, OnSlotClicked) == 0x000440, "Member 'UW_Loadout_Page_ItemList_C::OnSlotClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, OnSlotHovered) == 0x000450, "Member 'UW_Loadout_Page_ItemList_C::OnSlotHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, OnSlotUnhovered) == 0x000460, "Member 'UW_Loadout_Page_ItemList_C::OnSlotUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, OnAttachmentClicked) == 0x000470, "Member 'UW_Loadout_Page_ItemList_C::OnAttachmentClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, OnAttachmentHovered) == 0x000480, "Member 'UW_Loadout_Page_ItemList_C::OnAttachmentHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, OnAttachmentUnhovered) == 0x000490, "Member 'UW_Loadout_Page_ItemList_C::OnAttachmentUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, OnWeaponClicked) == 0x0004A0, "Member 'UW_Loadout_Page_ItemList_C::OnWeaponClicked' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, OnWeaponHovered) == 0x0004B0, "Member 'UW_Loadout_Page_ItemList_C::OnWeaponHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, OnWeaponUnhovered) == 0x0004C0, "Member 'UW_Loadout_Page_ItemList_C::OnWeaponUnhovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, Secondary) == 0x0004D0, "Member 'UW_Loadout_Page_ItemList_C::Secondary' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, LastHovered) == 0x0004D8, "Member 'UW_Loadout_Page_ItemList_C::LastHovered' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, ItemSlots) == 0x0004E0, "Member 'UW_Loadout_Page_ItemList_C::ItemSlots' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, ItemClass) == 0x0004F0, "Member 'UW_Loadout_Page_ItemList_C::ItemClass' has a wrong offset!");
static_assert(offsetof(UW_Loadout_Page_ItemList_C, bFilterByItemClass) == 0x0004F1, "Member 'UW_Loadout_Page_ItemList_C::bFilterByItemClass' has a wrong offset!");

}

