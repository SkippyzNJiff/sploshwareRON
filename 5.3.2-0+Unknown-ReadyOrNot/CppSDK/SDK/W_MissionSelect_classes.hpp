#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MissionSelect

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "CommonInput_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MissionSelect.W_MissionSelect_C
// 0x00E8 (0x0518 - 0x0430)
class UW_MissionSelect_C final : public UMissionSelectWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animFadeIn;                                        // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           ContentCanvas;                                     // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              DLCWarning;                                        // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_29;                                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_36;                                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_71;                                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_LeftFade;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 img_RightCornerFade;                               // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             scroll_Levels;                                     // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   txt_DLCWarning;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_ViewLevelLocation;                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_ViewLevelName;                                 // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_DifficultySelect_C*                  W_DifficultySelect;                                // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       W_PageWrapper;                                     // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FMargin                                LevelListPadding;                                  // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UW_MissionSelect_Level_C*>       MissionWidgets;                                    // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UMissionSelectLevel*                    CurrentMission;                                    // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_MissionSelect_Level_C*               LastMissionButton;                                 // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_MissionSelect_EntryPoint_C*>  EntryPointWidgets;                                 // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UW_MissionSelect_Level_C*               CurrentSelection;                                  // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bUsingGamepad;                                     // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x3];                                      // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentNav;                                        // 0x050C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Increment_Option;                                  // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AcceptMission(class FName SelectedEntryPoint);
	class UWidget* AcceptMissionNavigate(EUINavigation Navigation_0);
	void BndEvt__W_MissionSelect_W_PageWrapper_K2Node_ComponentBoundEvent_0_OnNavOptionPrevious__DelegateSignature(class FName Option_ID);
	void BndEvt__W_MissionSelect_W_PageWrapper_K2Node_ComponentBoundEvent_1_OnNavOptionSelected__DelegateSignature(class FName OptionNameID);
	void BndEvt__W_MissionSelect_W_PageWrapper_K2Node_ComponentBoundEvent_2_OnNavOptionNext__DelegateSignature(class FName Option_ID);
	void BndEvt__W_MissionSelect_W_PageWrapper_K2Node_ComponentBoundEvent_3_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonId);
	void BP_OnActivated();
	void BP_OnDeactivated();
	bool BP_OnHandleBackAction();
	void CloseNoCommanderModeNotice(class UW_StandardModal_C* CallingModal, const class FText& TextEntry);
	void Construct();
	class UWidget* DifficultySelectToMissionListNavigate(EUINavigation Navigation_0);
	void DoCustomNavigation(EUINavigation Navigation_0);
	class UWidget* EscapeMissionListNavigate(EUINavigation Navigation_0);
	void ExecuteUbergraph_W_MissionSelect(int32 EntryPoint);
	void Get_Focus_Target(class UWidget** Focus);
	void GetCampaignByOptionID(class FName OptionID, bool* CampaignDataFound, class UMissionSelectCampaign** CampaignData);
	void Input_Changed(ECommonInputType bNewInputType);
	class UWidget* MissionListToDifficultySelectNavigate(EUINavigation Navigation_0);
	void NoCommanderModeNotice(class UMissionSelectCampaign* Campaign);
	void OnMissionClicked(class UW_MissionSelect_Level_C* Button, class UMissionSelectLevel* LevelData);
	void OnMissionHovered(class UW_MissionSelect_Level_C* Button);
	void OnMissionSelectAnimationFinished();
	void OnMissionSelectAnimationStarted();
	void PopulateLevelList(class UMissionSelectCampaign* Campaign);
	void ScrollToSelection(class UW_MissionSelect_Level_C* LevelButton);
	void SelectLevelButton(class UW_MissionSelect_Level_C* ButtonToSelect);
	void SequenceEvent__ENTRYPOINTW_MissionSelect(class UW_PageWrapper_C* W_PageWrapper_0);
	void SetMissionDetails(class UMissionSelectLevel* LevelData);
	void SetNavigation();
	void UpdateFooter();
	void W_PageWrapper_Event_0(class UW_PageWrapper_C* W_PageWrapper_0);

	class UWidget* BP_GetDesiredFocusTarget() const;
	void GetDesiredMissionSelectButton(class UWidget** Widget) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MissionSelect_C">();
	}
	static class UW_MissionSelect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MissionSelect_C>();
	}
};
static_assert(alignof(UW_MissionSelect_C) == 0x000008, "Wrong alignment on UW_MissionSelect_C");
static_assert(sizeof(UW_MissionSelect_C) == 0x000518, "Wrong size on UW_MissionSelect_C");
static_assert(offsetof(UW_MissionSelect_C, UberGraphFrame) == 0x000430, "Member 'UW_MissionSelect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, animFadeIn) == 0x000438, "Member 'UW_MissionSelect_C::animFadeIn' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, ContentCanvas) == 0x000440, "Member 'UW_MissionSelect_C::ContentCanvas' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, DLCWarning) == 0x000448, "Member 'UW_MissionSelect_C::DLCWarning' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, Image) == 0x000450, "Member 'UW_MissionSelect_C::Image' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, Image_1) == 0x000458, "Member 'UW_MissionSelect_C::Image_1' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, Image_2) == 0x000460, "Member 'UW_MissionSelect_C::Image_2' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, Image_29) == 0x000468, "Member 'UW_MissionSelect_C::Image_29' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, Image_36) == 0x000470, "Member 'UW_MissionSelect_C::Image_36' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, Image_71) == 0x000478, "Member 'UW_MissionSelect_C::Image_71' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, img_LeftFade) == 0x000480, "Member 'UW_MissionSelect_C::img_LeftFade' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, img_RightCornerFade) == 0x000488, "Member 'UW_MissionSelect_C::img_RightCornerFade' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, scroll_Levels) == 0x000490, "Member 'UW_MissionSelect_C::scroll_Levels' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, txt_DLCWarning) == 0x000498, "Member 'UW_MissionSelect_C::txt_DLCWarning' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, txt_ViewLevelLocation) == 0x0004A0, "Member 'UW_MissionSelect_C::txt_ViewLevelLocation' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, txt_ViewLevelName) == 0x0004A8, "Member 'UW_MissionSelect_C::txt_ViewLevelName' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, W_DifficultySelect) == 0x0004B0, "Member 'UW_MissionSelect_C::W_DifficultySelect' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, W_PageWrapper) == 0x0004B8, "Member 'UW_MissionSelect_C::W_PageWrapper' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, LevelListPadding) == 0x0004C0, "Member 'UW_MissionSelect_C::LevelListPadding' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, MissionWidgets) == 0x0004D0, "Member 'UW_MissionSelect_C::MissionWidgets' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, CurrentMission) == 0x0004E0, "Member 'UW_MissionSelect_C::CurrentMission' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, LastMissionButton) == 0x0004E8, "Member 'UW_MissionSelect_C::LastMissionButton' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, EntryPointWidgets) == 0x0004F0, "Member 'UW_MissionSelect_C::EntryPointWidgets' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, CurrentSelection) == 0x000500, "Member 'UW_MissionSelect_C::CurrentSelection' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, bUsingGamepad) == 0x000508, "Member 'UW_MissionSelect_C::bUsingGamepad' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, CurrentNav) == 0x00050C, "Member 'UW_MissionSelect_C::CurrentNav' has a wrong offset!");
static_assert(offsetof(UW_MissionSelect_C, Increment_Option) == 0x000510, "Member 'UW_MissionSelect_C::Increment_Option' has a wrong offset!");

}

