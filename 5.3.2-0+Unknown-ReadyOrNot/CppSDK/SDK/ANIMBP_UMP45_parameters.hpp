#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_UMP45

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ANIMBP_UMP45.ANIMBP_UMP45_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ANIMBP_UMP45_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ANIMBP_UMP45_C_AnimGraph) == 0x000008, "Wrong alignment on ANIMBP_UMP45_C_AnimGraph");
static_assert(sizeof(ANIMBP_UMP45_C_AnimGraph) == 0x000010, "Wrong size on ANIMBP_UMP45_C_AnimGraph");
static_assert(offsetof(ANIMBP_UMP45_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ANIMBP_UMP45_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ANIMBP_UMP45.ANIMBP_UMP45_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ANIMBP_UMP45_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ANIMBP_UMP45_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ANIMBP_UMP45_C_BlueprintUpdateAnimation");
static_assert(sizeof(ANIMBP_UMP45_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ANIMBP_UMP45_C_BlueprintUpdateAnimation");
static_assert(offsetof(ANIMBP_UMP45_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ANIMBP_UMP45_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ANIMBP_UMP45.ANIMBP_UMP45_C.ExecuteUbergraph_ANIMBP_UMP45
// 0x0050 (0x0050 - 0x0000)
struct ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseMagazineWeapon*                    K2Node_DynamicCast_AsBase_Magazine_Weapon;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetItemMesh_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45) == 0x000008, "Wrong alignment on ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45");
static_assert(sizeof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45) == 0x000050, "Wrong size on ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, EntryPoint) == 0x000000, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::EntryPoint' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_Round_ReturnValue) == 0x000008, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_GetOwningActor_ReturnValue) == 0x000010, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, K2Node_DynamicCast_AsBase_Magazine_Weapon) == 0x000020, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::K2Node_DynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_IsValid_ReturnValue_2) == 0x000029, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_IsValid_ReturnValue_3) == 0x00002A, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_GetItemMesh_ReturnValue) == 0x000030, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_GetItemMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, K2Node_SwitchInteger_CmpSuccess) == 0x00003C, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_Round_A_ImplicitCast) == 0x000040, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_Round_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45, CallFunc_FTrunc_A_ImplicitCast) == 0x000048, "Member 'ANIMBP_UMP45_C_ExecuteUbergraph_ANIMBP_UMP45::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

}

