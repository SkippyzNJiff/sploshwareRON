#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ItemSelectionMenu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ItemSelectionMenu.W_ItemSelectionMenu_C
// 0x0118 (0x0400 - 0x02E8)
class UW_ItemSelectionMenu_C final : public UBaseWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SlideIn;                                           // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut;                                           // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_DebugInfoContainer_C*                DebugInfoContainer_Menu;                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ItemSelection_ItemGroupList_C*       ItemGroupList;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        MouseWheelDelta;                                   // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   OpeningMenuKey;                                    // 0x0318(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FKey                                   PreviousMenuTriggerKey;                            // 0x0330(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FKey>                           MenuOpenKeyTriggers;                               // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FItemSelectionGroup>            ItemGroups;                                        // 0x0358(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          bInitialized;                                      // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectedColumn;                                    // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFadedOut;                                         // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsActive;                                         // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TH_FadeOut;                                        // 0x0388(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<struct FKey, int32>                      QueuedSelections;                                  // 0x0390(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         OpenMenuTriggerCount;                              // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TH_FadeOutSelected;                                // 0x03E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnMenuOpened;                                      // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void CanNavigate(bool* Return_Value);
	void CloseMenu();
	void CustomEvent_0();
	void ExecuteSelection(int32 Index_0);
	void ExecuteUbergraph_W_ItemSelectionMenu(int32 EntryPoint);
	void FadeOutSelectedColumn();
	void HideMenu();
	void Initialize(bool bForce, const TArray<struct FItemSelectionGroup>& InItemSelectionGroups);
	void IsOpen(bool* Return_Value);
	void OnFadeOutFinished();
	void OnInitialized();
	void OnWeaponMagCheck_Event_0(class ABaseMagazineWeapon* MagazineWeapon);
	void OpenMenu(const struct FKey& TriggerKey);
	void PreConstruct(bool IsDesignTime);
	void QueuedExecuteSelection();
	void RemoveItemFromMenu(class ABaseItem* ItemToRemove, int32 List_Index);
	void ResetAnimationFadeOutState();
	void SetMouseWheelDelta(double NewMouseWheelDelta);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	bool UpdateDebugInfo();

	void CanQueueSelection(bool* Return_Value) const;
	void FindColumnIndexFromItem(class ABaseItem* InItem, int32* Return_Value) const;
	void FindItemFromColumnIndex(class UW_ItemSelection_ItemList_C** Return_Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ItemSelectionMenu_C">();
	}
	static class UW_ItemSelectionMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ItemSelectionMenu_C>();
	}
};
static_assert(alignof(UW_ItemSelectionMenu_C) == 0x000008, "Wrong alignment on UW_ItemSelectionMenu_C");
static_assert(sizeof(UW_ItemSelectionMenu_C) == 0x000400, "Wrong size on UW_ItemSelectionMenu_C");
static_assert(offsetof(UW_ItemSelectionMenu_C, UberGraphFrame) == 0x0002E8, "Member 'UW_ItemSelectionMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, SlideIn) == 0x0002F0, "Member 'UW_ItemSelectionMenu_C::SlideIn' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, FadeOut) == 0x0002F8, "Member 'UW_ItemSelectionMenu_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, DebugInfoContainer_Menu) == 0x000300, "Member 'UW_ItemSelectionMenu_C::DebugInfoContainer_Menu' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, ItemGroupList) == 0x000308, "Member 'UW_ItemSelectionMenu_C::ItemGroupList' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, MouseWheelDelta) == 0x000310, "Member 'UW_ItemSelectionMenu_C::MouseWheelDelta' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, OpeningMenuKey) == 0x000318, "Member 'UW_ItemSelectionMenu_C::OpeningMenuKey' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, PreviousMenuTriggerKey) == 0x000330, "Member 'UW_ItemSelectionMenu_C::PreviousMenuTriggerKey' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, MenuOpenKeyTriggers) == 0x000348, "Member 'UW_ItemSelectionMenu_C::MenuOpenKeyTriggers' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, ItemGroups) == 0x000358, "Member 'UW_ItemSelectionMenu_C::ItemGroups' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, bInitialized) == 0x000368, "Member 'UW_ItemSelectionMenu_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, SelectedColumn) == 0x00036C, "Member 'UW_ItemSelectionMenu_C::SelectedColumn' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, bFadedOut) == 0x000370, "Member 'UW_ItemSelectionMenu_C::bFadedOut' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, PlayerCharacter) == 0x000378, "Member 'UW_ItemSelectionMenu_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, bIsActive) == 0x000380, "Member 'UW_ItemSelectionMenu_C::bIsActive' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, TH_FadeOut) == 0x000388, "Member 'UW_ItemSelectionMenu_C::TH_FadeOut' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, QueuedSelections) == 0x000390, "Member 'UW_ItemSelectionMenu_C::QueuedSelections' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, OpenMenuTriggerCount) == 0x0003E0, "Member 'UW_ItemSelectionMenu_C::OpenMenuTriggerCount' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, TH_FadeOutSelected) == 0x0003E8, "Member 'UW_ItemSelectionMenu_C::TH_FadeOutSelected' has a wrong offset!");
static_assert(offsetof(UW_ItemSelectionMenu_C, OnMenuOpened) == 0x0003F0, "Member 'UW_ItemSelectionMenu_C::OnMenuOpened' has a wrong offset!");

}

