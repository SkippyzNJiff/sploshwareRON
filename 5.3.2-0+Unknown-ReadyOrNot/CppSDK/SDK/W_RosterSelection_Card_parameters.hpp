#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RosterSelection_Card

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_RosterSelection_Card_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_BackPage) == 0x000001, "Wrong alignment on W_RosterSelection_Card_C_BackPage");
static_assert(sizeof(W_RosterSelection_Card_C_BackPage) == 0x000001, "Wrong size on W_RosterSelection_Card_C_BackPage");
static_assert(offsetof(W_RosterSelection_Card_C_BackPage, Handled) == 0x000000, "Member 'W_RosterSelection_Card_C_BackPage::Handled' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.BlankDetails
// 0x0018 (0x0018 - 0x0000)
struct W_RosterSelection_Card_C_BlankDetails final
{
public:
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0000(0x0018)()
};
static_assert(alignof(W_RosterSelection_Card_C_BlankDetails) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_BlankDetails");
static_assert(sizeof(W_RosterSelection_Card_C_BlankDetails) == 0x000018, "Wrong size on W_RosterSelection_Card_C_BlankDetails");
static_assert(offsetof(W_RosterSelection_Card_C_BlankDetails, CallFunc_MakeLiteralText_ReturnValue) == 0x000000, "Member 'W_RosterSelection_Card_C_BlankDetails::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_RosterSelection_Card_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_ChangePage) == 0x000004, "Wrong alignment on W_RosterSelection_Card_C_ChangePage");
static_assert(sizeof(W_RosterSelection_Card_C_ChangePage) == 0x000008, "Wrong size on W_RosterSelection_Card_C_ChangePage");
static_assert(offsetof(W_RosterSelection_Card_C_ChangePage, PageName) == 0x000000, "Member 'W_RosterSelection_Card_C_ChangePage::PageName' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.ExecuteUbergraph_W_RosterSelection_Card
// 0x0398 (0x0398 - 0x0000)
struct W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_1;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_2;    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_1;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_2;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_3;    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue_4;    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_3;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue_4;        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0060(0x0014)()
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URosterCharacter*                       K2Node_CustomEvent_Character;                      // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowDetails;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Compare;                        // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_StressPercentageAsStatus_StatusText;      // 0x00B0(0x0018)()
	struct FSlateColor                            CallFunc_StressPercentageAsStatus_StatusColor;     // 0x00C8(0x0014)()
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00E0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00F8(0x0018)()
	class FText                                   CallFunc_FormatBio_OutText;                        // 0x0110(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0128(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0140(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0158(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_StressPercentageAsStatus_StatusText_1;    // 0x01A8(0x0018)()
	struct FSlateColor                            CallFunc_StressPercentageAsStatus_StatusColor_1;   // 0x01C0(0x0014)()
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01E8(0x0018)()
	struct FLinearColor                           CallFunc_SquadPositionToColor_OutColor;            // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0210(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0228(0x0014)()
	class FName                                   K2Node_Event_PageName;                             // 0x023C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27B[0x5];                                      // 0x027B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0280(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_ReturnValue;                    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInLobby_ReturnValue_1;                  // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x02A0(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x02C0(0x0018)()
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x02D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x02E8(0x0008)(NoDestructor)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x02F0(0x0008)(NoDestructor)
	class FText                                   Temp_text_Variable_3;                              // 0x02F8(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0310(0x0018)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0328(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          Temp_byte_Variable_10;                             // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPressed_ReturnValue;                    // 0x0366(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0367(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_5;                           // 0x0368(0x0018)()
	bool                                          CallFunc_IsPressed_ReturnValue_1;                  // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AReadyOrNotPlayerController*            CallFunc_GetReadyOrNotPlayerController_ReturnValue; // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WidgetOrChildHasFocus_HasFocus;           // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card");
static_assert(sizeof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card) == 0x000398, "Wrong size on W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, EntryPoint) == 0x000000, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable) == 0x000004, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable_1) == 0x000005, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_bool_Variable) == 0x000006, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable_2) == 0x000007, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable_3) == 0x000008, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_bool_Variable_1) == 0x000009, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable_4) == 0x00000A, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable_5) == 0x00000B, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_CustomEvent_Loaded) == 0x000010, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_object_Variable) == 0x000018, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000020, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetCurrentInputType_ReturnValue) == 0x000029, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_SwitchEnum_CmpSuccess) == 0x00002A, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetLocalPlayerSubsystem_ReturnValue_1) == 0x000030, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetLocalPlayerSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetLocalPlayerSubsystem_ReturnValue_2) == 0x000038, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetLocalPlayerSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetCurrentInputType_ReturnValue_1) == 0x000040, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetCurrentInputType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetCurrentInputType_ReturnValue_2) == 0x000041, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetCurrentInputType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_SwitchEnum_CmpSuccess_1) == 0x000042, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_SwitchEnum_CmpSuccess_2) == 0x000043, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetLocalPlayerSubsystem_ReturnValue_3) == 0x000048, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetLocalPlayerSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetLocalPlayerSubsystem_ReturnValue_4) == 0x000050, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetLocalPlayerSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetCurrentInputType_ReturnValue_3) == 0x000058, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetCurrentInputType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetCurrentInputType_ReturnValue_4) == 0x000059, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetCurrentInputType_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_SwitchEnum_CmpSuccess_3) == 0x00005A, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_SwitchEnum_CmpSuccess_4) == 0x00005B, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_bool_Variable_2) == 0x00005C, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_MakeStruct_SlateColor) == 0x000060, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable_6) == 0x000074, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable_7) == 0x000075, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_bool_Variable_3) == 0x000076, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Event_IsDesignTime) == 0x000098, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_CustomEvent_Character) == 0x0000A0, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_CustomEvent_ShowDetails) == 0x0000A8, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_CustomEvent_ShowDetails' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_CustomEvent_Compare) == 0x0000A9, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_CustomEvent_Compare' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Select_Default) == 0x0000AA, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Select_Default_1) == 0x0000AB, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_StressPercentageAsStatus_StatusText) == 0x0000B0, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_StressPercentageAsStatus_StatusText' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_StressPercentageAsStatus_StatusColor) == 0x0000C8, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_StressPercentageAsStatus_StatusColor' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_Conv_IntToText_ReturnValue) == 0x0000E0, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000F8, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_FormatBio_OutText) == 0x000110, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_FormatBio_OutText' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_Conv_StringToText_ReturnValue) == 0x000128, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000140, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_MakeStruct_FormatArgumentData) == 0x000158, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_StressPercentageAsStatus_StatusText_1) == 0x0001A8, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_StressPercentageAsStatus_StatusText_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_StressPercentageAsStatus_StatusColor_1) == 0x0001C0, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_StressPercentageAsStatus_StatusColor_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_MakeArray_Array) == 0x0001D8, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_Format_ReturnValue) == 0x0001E8, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_SquadPositionToColor_OutColor) == 0x000200, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_SquadPositionToColor_OutColor' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000210, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_MakeStruct_SlateColor_1) == 0x000228, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Event_PageName) == 0x00023C, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Event_Delay_1) == 0x000248, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_PlayAnimationForward_ReturnValue) == 0x000250, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable_8) == 0x000258, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Event_Delay) == 0x000260, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Event_Collapse) == 0x000268, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000270, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Event_IsGamepad) == 0x000278, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable_9) == 0x000279, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_bool_Variable_4) == 0x00027A, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_text_Variable) == 0x000280, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Select_Default_2) == 0x000298, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_IsInLobby_ReturnValue) == 0x000299, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_IsInLobby_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Select_Default_3) == 0x00029A, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_IsInLobby_ReturnValue_1) == 0x00029B, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_IsInLobby_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_text_Variable_1) == 0x0002A0, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Select_Default_4) == 0x0002B8, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_text_Variable_2) == 0x0002C0, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002D8, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Event_InFocusEvent_1) == 0x0002E8, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Event_InFocusEvent) == 0x0002F0, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_text_Variable_3) == 0x0002F8, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_text_Variable_4) == 0x000310, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Event_MyGeometry) == 0x000328, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Event_InDeltaTime) == 0x000360, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_IsHovered_ReturnValue) == 0x000364, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, Temp_byte_Variable_10) == 0x000365, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_IsPressed_ReturnValue) == 0x000366, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_IsPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_BooleanAND_ReturnValue) == 0x000367, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, K2Node_Select_Default_5) == 0x000368, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_IsPressed_ReturnValue_1) == 0x000380, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_IsPressed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_GetReadyOrNotPlayerController_ReturnValue) == 0x000388, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_GetReadyOrNotPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_WidgetOrChildHasFocus_HasFocus) == 0x000390, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_WidgetOrChildHasFocus_HasFocus' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card, CallFunc_BooleanAND_ReturnValue_1) == 0x000391, "Member 'W_RosterSelection_Card_C_ExecuteUbergraph_W_RosterSelection_Card::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.GetLongTacticalIcon
// 0x0078 (0x0078 - 0x0000)
struct W_RosterSelection_Card_C_GetLongTacticalIcon final
{
public:
	class UClass*                                 LongTacticalItemClass;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Image_0;                                           // 0x0008(0x0028)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              OutImage;                                          // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class UItemData*                              GameItemData;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_GetLongTacticalIcon) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_GetLongTacticalIcon");
static_assert(sizeof(W_RosterSelection_Card_C_GetLongTacticalIcon) == 0x000078, "Wrong size on W_RosterSelection_Card_C_GetLongTacticalIcon");
static_assert(offsetof(W_RosterSelection_Card_C_GetLongTacticalIcon, LongTacticalItemClass) == 0x000000, "Member 'W_RosterSelection_Card_C_GetLongTacticalIcon::LongTacticalItemClass' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetLongTacticalIcon, Image_0) == 0x000008, "Member 'W_RosterSelection_Card_C_GetLongTacticalIcon::Image_0' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetLongTacticalIcon, OutImage) == 0x000030, "Member 'W_RosterSelection_Card_C_GetLongTacticalIcon::OutImage' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetLongTacticalIcon, GameItemData) == 0x000058, "Member 'W_RosterSelection_Card_C_GetLongTacticalIcon::GameItemData' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetLongTacticalIcon, CallFunc_IsValidClass_ReturnValue) == 0x000060, "Member 'W_RosterSelection_Card_C_GetLongTacticalIcon::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetLongTacticalIcon, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000068, "Member 'W_RosterSelection_Card_C_GetLongTacticalIcon::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetLongTacticalIcon, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'W_RosterSelection_Card_C_GetLongTacticalIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.GetPrimaryIcon
// 0x0078 (0x0078 - 0x0000)
struct W_RosterSelection_Card_C_GetPrimaryIcon final
{
public:
	class UClass*                                 PrimaryItemClass;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Image_0;                                           // 0x0008(0x0028)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              OutImage;                                          // 0x0030(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class UItemData*                              GameItemData;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseItem*                              CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_GetPrimaryIcon) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_GetPrimaryIcon");
static_assert(sizeof(W_RosterSelection_Card_C_GetPrimaryIcon) == 0x000078, "Wrong size on W_RosterSelection_Card_C_GetPrimaryIcon");
static_assert(offsetof(W_RosterSelection_Card_C_GetPrimaryIcon, PrimaryItemClass) == 0x000000, "Member 'W_RosterSelection_Card_C_GetPrimaryIcon::PrimaryItemClass' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetPrimaryIcon, Image_0) == 0x000008, "Member 'W_RosterSelection_Card_C_GetPrimaryIcon::Image_0' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetPrimaryIcon, OutImage) == 0x000030, "Member 'W_RosterSelection_Card_C_GetPrimaryIcon::OutImage' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetPrimaryIcon, GameItemData) == 0x000058, "Member 'W_RosterSelection_Card_C_GetPrimaryIcon::GameItemData' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetPrimaryIcon, CallFunc_IsValidClass_ReturnValue) == 0x000060, "Member 'W_RosterSelection_Card_C_GetPrimaryIcon::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetPrimaryIcon, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000068, "Member 'W_RosterSelection_Card_C_GetPrimaryIcon::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_GetPrimaryIcon, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'W_RosterSelection_Card_C_GetPrimaryIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_RosterSelection_Card_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_Hide) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_Hide");
static_assert(sizeof(W_RosterSelection_Card_C_Hide) == 0x000010, "Wrong size on W_RosterSelection_Card_C_Hide");
static_assert(offsetof(W_RosterSelection_Card_C_Hide, Delay) == 0x000000, "Member 'W_RosterSelection_Card_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_Hide, Collapse) == 0x000008, "Member 'W_RosterSelection_Card_C_Hide::Collapse' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.HideLoadout
// 0x0005 (0x0005 - 0x0000)
struct W_RosterSelection_Card_C_HideLoadout final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_HideLoadout) == 0x000001, "Wrong alignment on W_RosterSelection_Card_C_HideLoadout");
static_assert(sizeof(W_RosterSelection_Card_C_HideLoadout) == 0x000005, "Wrong size on W_RosterSelection_Card_C_HideLoadout");
static_assert(offsetof(W_RosterSelection_Card_C_HideLoadout, Hide) == 0x000000, "Member 'W_RosterSelection_Card_C_HideLoadout::Hide' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_HideLoadout, Temp_bool_Variable) == 0x000001, "Member 'W_RosterSelection_Card_C_HideLoadout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_HideLoadout, Temp_byte_Variable) == 0x000002, "Member 'W_RosterSelection_Card_C_HideLoadout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_HideLoadout, Temp_byte_Variable_1) == 0x000003, "Member 'W_RosterSelection_Card_C_HideLoadout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_HideLoadout, K2Node_Select_Default) == 0x000004, "Member 'W_RosterSelection_Card_C_HideLoadout::K2Node_Select_Default' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.InitLayout
// 0x0014 (0x0014 - 0x0000)
struct W_RosterSelection_Card_C_InitLayout final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_InitLayout) == 0x000004, "Wrong alignment on W_RosterSelection_Card_C_InitLayout");
static_assert(sizeof(W_RosterSelection_Card_C_InitLayout) == 0x000014, "Wrong size on W_RosterSelection_Card_C_InitLayout");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_bool_Variable) == 0x000000, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_byte_Variable) == 0x000001, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_byte_Variable_1) == 0x000002, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_bool_Variable_1) == 0x000003, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_byte_Variable_2) == 0x000004, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_byte_Variable_3) == 0x000005, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_bool_Variable_2) == 0x000006, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_byte_Variable_4) == 0x000007, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_byte_Variable_5) == 0x000008, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_bool_Variable_3) == 0x000009, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_byte_Variable_6) == 0x00000A, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, Temp_byte_Variable_7) == 0x00000B, "Member 'W_RosterSelection_Card_C_InitLayout::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, K2Node_Select_Default) == 0x00000C, "Member 'W_RosterSelection_Card_C_InitLayout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, K2Node_Select_Default_1) == 0x00000D, "Member 'W_RosterSelection_Card_C_InitLayout::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, K2Node_Select_Default_2) == 0x00000E, "Member 'W_RosterSelection_Card_C_InitLayout::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, K2Node_Select_Default_3) == 0x00000F, "Member 'W_RosterSelection_Card_C_InitLayout::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_InitLayout, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000010, "Member 'W_RosterSelection_Card_C_InitLayout::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_RosterSelection_Card_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_RosterSelection_Card_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on W_RosterSelection_Card_C_OnAddedToFocusPath");
static_assert(sizeof(W_RosterSelection_Card_C_OnAddedToFocusPath) == 0x000008, "Wrong size on W_RosterSelection_Card_C_OnAddedToFocusPath");
static_assert(offsetof(W_RosterSelection_Card_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'W_RosterSelection_Card_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.OnLoaded_30A4DB04400864656FB7D9A5A7B21DAF
// 0x0008 (0x0008 - 0x0000)
struct W_RosterSelection_Card_C_OnLoaded_30A4DB04400864656FB7D9A5A7B21DAF final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_OnLoaded_30A4DB04400864656FB7D9A5A7B21DAF) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_OnLoaded_30A4DB04400864656FB7D9A5A7B21DAF");
static_assert(sizeof(W_RosterSelection_Card_C_OnLoaded_30A4DB04400864656FB7D9A5A7B21DAF) == 0x000008, "Wrong size on W_RosterSelection_Card_C_OnLoaded_30A4DB04400864656FB7D9A5A7B21DAF");
static_assert(offsetof(W_RosterSelection_Card_C_OnLoaded_30A4DB04400864656FB7D9A5A7B21DAF, Loaded) == 0x000000, "Member 'W_RosterSelection_Card_C_OnLoaded_30A4DB04400864656FB7D9A5A7B21DAF::Loaded' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct W_RosterSelection_Card_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(W_RosterSelection_Card_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on W_RosterSelection_Card_C_OnRemovedFromFocusPath");
static_assert(sizeof(W_RosterSelection_Card_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on W_RosterSelection_Card_C_OnRemovedFromFocusPath");
static_assert(offsetof(W_RosterSelection_Card_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'W_RosterSelection_Card_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_RosterSelection_Card_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_PreConstruct) == 0x000001, "Wrong alignment on W_RosterSelection_Card_C_PreConstruct");
static_assert(sizeof(W_RosterSelection_Card_C_PreConstruct) == 0x000001, "Wrong size on W_RosterSelection_Card_C_PreConstruct");
static_assert(offsetof(W_RosterSelection_Card_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_RosterSelection_Card_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_RosterSelection_Card_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_Reveal) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_Reveal");
static_assert(sizeof(W_RosterSelection_Card_C_Reveal) == 0x000008, "Wrong size on W_RosterSelection_Card_C_Reveal");
static_assert(offsetof(W_RosterSelection_Card_C_Reveal, Delay) == 0x000000, "Member 'W_RosterSelection_Card_C_Reveal::Delay' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.SetCharacter
// 0x0010 (0x0010 - 0x0000)
struct W_RosterSelection_Card_C_SetCharacter final
{
public:
	class URosterCharacter*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDetails;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Compare;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_SetCharacter) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_SetCharacter");
static_assert(sizeof(W_RosterSelection_Card_C_SetCharacter) == 0x000010, "Wrong size on W_RosterSelection_Card_C_SetCharacter");
static_assert(offsetof(W_RosterSelection_Card_C_SetCharacter, Character) == 0x000000, "Member 'W_RosterSelection_Card_C_SetCharacter::Character' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetCharacter, ShowDetails) == 0x000008, "Member 'W_RosterSelection_Card_C_SetCharacter::ShowDetails' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetCharacter, Compare) == 0x000009, "Member 'W_RosterSelection_Card_C_SetCharacter::Compare' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.SetDeployables
// 0x0138 (0x0138 - 0x0000)
struct W_RosterSelection_Card_C_SetDeployables final
{
public:
	TArray<class UClass*>                         Grenades;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UClass*>                         Tactical;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<class UClass*, int32>                    DeployablesSorted;                                 // 0x0020(0x0050)(Edit, BlueprintVisible)
	TArray<TSubclassOf<class ABaseItem>>          Deployables;                                       // 0x0070(0x0010)(Edit, BlueprintVisible)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0080(0x0008)(NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize_1;                // 0x008C(0x0008)(NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_Create_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize_2;                // 0x00C0(0x0008)(NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_1;    // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x00D8(0x0010)(ReferenceParm)
	class UW_Loadout_Munition_SummaryEntry_C*     CallFunc_Create_ReturnValue_1;                     // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_2;    // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0118(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_SetDeployables) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_SetDeployables");
static_assert(sizeof(W_RosterSelection_Card_C_SetDeployables) == 0x000138, "Wrong size on W_RosterSelection_Card_C_SetDeployables");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, Grenades) == 0x000000, "Member 'W_RosterSelection_Card_C_SetDeployables::Grenades' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, Tactical) == 0x000010, "Member 'W_RosterSelection_Card_C_SetDeployables::Tactical' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, DeployablesSorted) == 0x000020, "Member 'W_RosterSelection_Card_C_SetDeployables::DeployablesSorted' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, Deployables) == 0x000070, "Member 'W_RosterSelection_Card_C_SetDeployables::Deployables' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, K2Node_MakeStruct_SlateChildSize) == 0x000080, "Member 'W_RosterSelection_Card_C_SetDeployables::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, Temp_int_Array_Index_Variable) == 0x000088, "Member 'W_RosterSelection_Card_C_SetDeployables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, K2Node_MakeStruct_SlateChildSize_1) == 0x00008C, "Member 'W_RosterSelection_Card_C_SetDeployables::K2Node_MakeStruct_SlateChildSize_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, Temp_int_Variable) == 0x000094, "Member 'W_RosterSelection_Card_C_SetDeployables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'W_RosterSelection_Card_C_SetDeployables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Create_ReturnValue) == 0x0000A0, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, Temp_int_Loop_Counter_Variable_1) == 0x0000AC, "Member 'W_RosterSelection_Card_C_SetDeployables::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, Temp_int_Array_Index_Variable_1) == 0x0000B4, "Member 'W_RosterSelection_Card_C_SetDeployables::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000B8, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, K2Node_MakeStruct_SlateChildSize_2) == 0x0000C0, "Member 'W_RosterSelection_Card_C_SetDeployables::K2Node_MakeStruct_SlateChildSize_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000C8, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_AddChildToHorizontalBox_ReturnValue_1) == 0x0000D0, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_AddChildToHorizontalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Map_Keys_Keys) == 0x0000D8, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Create_ReturnValue_1) == 0x0000E8, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_AddChildToHorizontalBox_ReturnValue_2) == 0x0000F8, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_AddChildToHorizontalBox_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Map_Find_Value) == 0x000100, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Map_Find_ReturnValue) == 0x000104, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Array_LastIndex_ReturnValue) == 0x000110, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000114, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, Temp_int_Variable_1) == 0x000118, "Member 'W_RosterSelection_Card_C_SetDeployables::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Array_Length_ReturnValue_1) == 0x00011C, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Less_IntInt_ReturnValue_1) == 0x000128, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Map_Remove_ReturnValue) == 0x000129, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Map_Find_Value_1) == 0x00012C, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Map_Find_ReturnValue_1) == 0x000130, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetDeployables, CallFunc_Add_IntInt_ReturnValue_2) == 0x000134, "Member 'W_RosterSelection_Card_C_SetDeployables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_RosterSelection_Card_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_SetInputMode) == 0x000001, "Wrong alignment on W_RosterSelection_Card_C_SetInputMode");
static_assert(sizeof(W_RosterSelection_Card_C_SetInputMode) == 0x000001, "Wrong size on W_RosterSelection_Card_C_SetInputMode");
static_assert(offsetof(W_RosterSelection_Card_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_RosterSelection_Card_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.SetLongTacticalInfo
// 0x0018 (0x0018 - 0x0000)
struct W_RosterSelection_Card_C_SetLongTacticalInfo final
{
public:
	class UClass*                                 LongTacticalItemData;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_SetLongTacticalInfo) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_SetLongTacticalInfo");
static_assert(sizeof(W_RosterSelection_Card_C_SetLongTacticalInfo) == 0x000018, "Wrong size on W_RosterSelection_Card_C_SetLongTacticalInfo");
static_assert(offsetof(W_RosterSelection_Card_C_SetLongTacticalInfo, LongTacticalItemData) == 0x000000, "Member 'W_RosterSelection_Card_C_SetLongTacticalInfo::LongTacticalItemData' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetLongTacticalInfo, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000008, "Member 'W_RosterSelection_Card_C_SetLongTacticalInfo::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetLongTacticalInfo, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'W_RosterSelection_Card_C_SetLongTacticalInfo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.SetPosition
// 0x0158 (0x0158 - 0x0000)
struct W_RosterSelection_Card_C_SetPosition final
{
public:
	ERosterSquadPosition                          Position_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          Temp_byte_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          Temp_byte_Variable_4;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_5;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_6;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_7;                              // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_8;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_9;                              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERosterSquadPosition                          Temp_byte_Variable_10;                             // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x00D0(0x0018)()
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default_2;                           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_4;                           // 0x0128(0x0018)()
	struct FLinearColor                           CallFunc_SquadPositionToColor_OutColor;            // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_SetPosition) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_SetPosition");
static_assert(sizeof(W_RosterSelection_Card_C_SetPosition) == 0x000158, "Wrong size on W_RosterSelection_Card_C_SetPosition");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Position_0) == 0x000000, "Member 'W_RosterSelection_Card_C_SetPosition::Position_0' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_bool_Variable) == 0x000001, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'W_RosterSelection_Card_C_SetPosition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable) == 0x000003, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable_1) == 0x000004, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable_2) == 0x000005, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_real_Variable) == 0x000008, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, K2Node_Select_Default) == 0x000010, "Member 'W_RosterSelection_Card_C_SetPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_real_Variable_1) == 0x000018, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_real_Variable_2) == 0x000020, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_real_Variable_3) == 0x000028, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_real_Variable_4) == 0x000030, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable_3) == 0x000038, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_real_Variable_5) == 0x000040, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_real_Variable_6) == 0x000048, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_real_Variable_7) == 0x000050, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_real_Variable_8) == 0x000058, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_real_Variable_9) == 0x000060, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable_4) == 0x000068, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable_5) == 0x000069, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable_6) == 0x00006A, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable_7) == 0x00006B, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable_8) == 0x00006C, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable_9) == 0x00006D, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_byte_Variable_10) == 0x00006E, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_text_Variable) == 0x000070, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_text_Variable_1) == 0x000088, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_text_Variable_2) == 0x0000A0, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_text_Variable_3) == 0x0000B8, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, Temp_text_Variable_4) == 0x0000D0, "Member 'W_RosterSelection_Card_C_SetPosition::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000E8, "Member 'W_RosterSelection_Card_C_SetPosition::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, K2Node_Select_Default_1) == 0x0000F0, "Member 'W_RosterSelection_Card_C_SetPosition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, K2Node_Select_Default_2) == 0x0000F8, "Member 'W_RosterSelection_Card_C_SetPosition::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000100, "Member 'W_RosterSelection_Card_C_SetPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, K2Node_Select_Default_3) == 0x000110, "Member 'W_RosterSelection_Card_C_SetPosition::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000118, "Member 'W_RosterSelection_Card_C_SetPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, K2Node_Select_Default_4) == 0x000128, "Member 'W_RosterSelection_Card_C_SetPosition::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, CallFunc_SquadPositionToColor_OutColor) == 0x000140, "Member 'W_RosterSelection_Card_C_SetPosition::CallFunc_SquadPositionToColor_OutColor' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPosition, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000150, "Member 'W_RosterSelection_Card_C_SetPosition::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.SetPrimaryInfo
// 0x0018 (0x0018 - 0x0000)
struct W_RosterSelection_Card_C_SetPrimaryInfo final
{
public:
	class UClass*                                 PrimaryItemData;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseItem*                              CallFunc_GetClassDefaultObject_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_SetPrimaryInfo) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_SetPrimaryInfo");
static_assert(sizeof(W_RosterSelection_Card_C_SetPrimaryInfo) == 0x000018, "Wrong size on W_RosterSelection_Card_C_SetPrimaryInfo");
static_assert(offsetof(W_RosterSelection_Card_C_SetPrimaryInfo, PrimaryItemData) == 0x000000, "Member 'W_RosterSelection_Card_C_SetPrimaryInfo::PrimaryItemData' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPrimaryInfo, CallFunc_GetClassDefaultObject_ReturnValue) == 0x000008, "Member 'W_RosterSelection_Card_C_SetPrimaryInfo::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetPrimaryInfo, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'W_RosterSelection_Card_C_SetPrimaryInfo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.SetupAptitude
// 0x0048 (0x0048 - 0x0000)
struct W_RosterSelection_Card_C_SetupAptitude final
{
public:
	class UProgressBar*                           ProgressBar;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Percent;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_SetupAptitude) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_SetupAptitude");
static_assert(sizeof(W_RosterSelection_Card_C_SetupAptitude) == 0x000048, "Wrong size on W_RosterSelection_Card_C_SetupAptitude");
static_assert(offsetof(W_RosterSelection_Card_C_SetupAptitude, ProgressBar) == 0x000000, "Member 'W_RosterSelection_Card_C_SetupAptitude::ProgressBar' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetupAptitude, TextBlock) == 0x000008, "Member 'W_RosterSelection_Card_C_SetupAptitude::TextBlock' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetupAptitude, Percent) == 0x000010, "Member 'W_RosterSelection_Card_C_SetupAptitude::Percent' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetupAptitude, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'W_RosterSelection_Card_C_SetupAptitude::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetupAptitude, CallFunc_Round_ReturnValue) == 0x000020, "Member 'W_RosterSelection_Card_C_SetupAptitude::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetupAptitude, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'W_RosterSelection_Card_C_SetupAptitude::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetupAptitude, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000040, "Member 'W_RosterSelection_Card_C_SetupAptitude::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.SetVisualState
// 0x0002 (0x0002 - 0x0000)
struct W_RosterSelection_Card_C_SetVisualState final
{
public:
	bool                                          Hovered;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pressed;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_SetVisualState) == 0x000001, "Wrong alignment on W_RosterSelection_Card_C_SetVisualState");
static_assert(sizeof(W_RosterSelection_Card_C_SetVisualState) == 0x000002, "Wrong size on W_RosterSelection_Card_C_SetVisualState");
static_assert(offsetof(W_RosterSelection_Card_C_SetVisualState, Hovered) == 0x000000, "Member 'W_RosterSelection_Card_C_SetVisualState::Hovered' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_SetVisualState, Pressed) == 0x000001, "Member 'W_RosterSelection_Card_C_SetVisualState::Pressed' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_RosterSelection_Card_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_Tick) == 0x000004, "Wrong alignment on W_RosterSelection_Card_C_Tick");
static_assert(sizeof(W_RosterSelection_Card_C_Tick) == 0x00003C, "Wrong size on W_RosterSelection_Card_C_Tick");
static_assert(offsetof(W_RosterSelection_Card_C_Tick, MyGeometry) == 0x000000, "Member 'W_RosterSelection_Card_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_Tick, InDeltaTime) == 0x000038, "Member 'W_RosterSelection_Card_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.UpdateLoadout
// 0x00C8 (0x00C8 - 0x0000)
struct W_RosterSelection_Card_C_UpdateLoadout final
{
public:
	TMap<class UClass*, int32>                    DeployablesSorted;                                 // 0x0000(0x0050)(Edit, BlueprintVisible)
	TArray<TSubclassOf<class ABaseItem>>          Deployables;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<class UClass*>                         Temp_class_Variable;                               // 0x0060(0x0010)(ReferenceParm)
	class UWorld*                                 CallFunc_GetWorldStatic_ReturnValue;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRosterLoadout                         CallFunc_GetRosterCharacterLoadout_ReturnValue;    // 0x0080(0x0038)()
	TArray<class UClass*>                         Temp_class_Variable_1;                             // 0x00B8(0x0010)(ReferenceParm)
};
static_assert(alignof(W_RosterSelection_Card_C_UpdateLoadout) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_UpdateLoadout");
static_assert(sizeof(W_RosterSelection_Card_C_UpdateLoadout) == 0x0000C8, "Wrong size on W_RosterSelection_Card_C_UpdateLoadout");
static_assert(offsetof(W_RosterSelection_Card_C_UpdateLoadout, DeployablesSorted) == 0x000000, "Member 'W_RosterSelection_Card_C_UpdateLoadout::DeployablesSorted' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_UpdateLoadout, Deployables) == 0x000050, "Member 'W_RosterSelection_Card_C_UpdateLoadout::Deployables' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_UpdateLoadout, Temp_class_Variable) == 0x000060, "Member 'W_RosterSelection_Card_C_UpdateLoadout::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_UpdateLoadout, CallFunc_GetWorldStatic_ReturnValue) == 0x000070, "Member 'W_RosterSelection_Card_C_UpdateLoadout::CallFunc_GetWorldStatic_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_UpdateLoadout, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'W_RosterSelection_Card_C_UpdateLoadout::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_UpdateLoadout, CallFunc_GetRosterCharacterLoadout_ReturnValue) == 0x000080, "Member 'W_RosterSelection_Card_C_UpdateLoadout::CallFunc_GetRosterCharacterLoadout_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_RosterSelection_Card_C_UpdateLoadout, Temp_class_Variable_1) == 0x0000B8, "Member 'W_RosterSelection_Card_C_UpdateLoadout::Temp_class_Variable_1' has a wrong offset!");

// Function W_RosterSelection_Card.W_RosterSelection_Card_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_RosterSelection_Card_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_RosterSelection_Card_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_RosterSelection_Card_C_GetFocusTarget");
static_assert(sizeof(W_RosterSelection_Card_C_GetFocusTarget) == 0x000008, "Wrong size on W_RosterSelection_Card_C_GetFocusTarget");
static_assert(offsetof(W_RosterSelection_Card_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_RosterSelection_Card_C_GetFocusTarget::Focus' has a wrong offset!");

}

