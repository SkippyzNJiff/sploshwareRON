#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ItemWheel

#include "Basic.hpp"

#include "ReadyOrNot_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_ItemWheel.W_ItemWheel_C.CreateItemWheelIcon
// 0x0150 (0x0150 - 0x0000)
struct W_ItemWheel_C_CreateItemWheelIcon final
{
public:
	struct FItemWheelOption                       ItemWheelOption;                                   // 0x0000(0x0110)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         OptionIndex;                                       // 0x0110(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedIndex;                                     // 0x0114(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WheelIcon_C*                         WheelIcon;                                         // 0x0118(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumSubOptions_ReturnValue;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetBrushResourceAsTexture2D_ReturnValue;  // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemAmount_ItemAmount;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowCounter_ShowCounter;               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_WheelIcon_C*                         CallFunc_Create_ReturnValue;                       // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_CreateItemWheelIcon) == 0x000010, "Wrong alignment on W_ItemWheel_C_CreateItemWheelIcon");
static_assert(sizeof(W_ItemWheel_C_CreateItemWheelIcon) == 0x000150, "Wrong size on W_ItemWheel_C_CreateItemWheelIcon");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, ItemWheelOption) == 0x000000, "Member 'W_ItemWheel_C_CreateItemWheelIcon::ItemWheelOption' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, OptionIndex) == 0x000110, "Member 'W_ItemWheel_C_CreateItemWheelIcon::OptionIndex' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, SelectedIndex) == 0x000114, "Member 'W_ItemWheel_C_CreateItemWheelIcon::SelectedIndex' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, WheelIcon) == 0x000118, "Member 'W_ItemWheel_C_CreateItemWheelIcon::WheelIcon' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000120, "Member 'W_ItemWheel_C_CreateItemWheelIcon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, CallFunc_GetNumSubOptions_ReturnValue) == 0x000124, "Member 'W_ItemWheel_C_CreateItemWheelIcon::CallFunc_GetNumSubOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, CallFunc_GetBrushResourceAsTexture2D_ReturnValue) == 0x000128, "Member 'W_ItemWheel_C_CreateItemWheelIcon::CallFunc_GetBrushResourceAsTexture2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, CallFunc_GetItemAmount_ItemAmount) == 0x000130, "Member 'W_ItemWheel_C_CreateItemWheelIcon::CallFunc_GetItemAmount_ItemAmount' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, CallFunc_GetShowCounter_ShowCounter) == 0x000134, "Member 'W_ItemWheel_C_CreateItemWheelIcon::CallFunc_GetShowCounter_ShowCounter' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, CallFunc_GetOwningPlayer_ReturnValue) == 0x000138, "Member 'W_ItemWheel_C_CreateItemWheelIcon::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_CreateItemWheelIcon, CallFunc_Create_ReturnValue) == 0x000140, "Member 'W_ItemWheel_C_CreateItemWheelIcon::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.ExecuteUbergraph_W_ItemWheel
// 0x00D0 (0x00D0 - 0x0000)
struct W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UUserWidget*                      K2Node_Event_ItemWheel_2;                          // 0x0010(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemWheelOption>               K2Node_Event_ItemWheelOptions;                     // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_Event_SelectedIndex;                        // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UUserWidget*                      K2Node_Event_ItemWheel_1;                          // 0x0030(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Direction;                            // 0x0038(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUserWidget*                      K2Node_Event_ItemWheel;                            // 0x0050(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_Amount;                               // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInDeadzone;                          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WheelIcon_C*                         CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel) == 0x000008, "Wrong alignment on W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel");
static_assert(sizeof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel) == 0x0000D0, "Wrong size on W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, EntryPoint) == 0x000000, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_GetRenderOpacity_ReturnValue) == 0x000004, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, Temp_int_Array_Index_Variable) == 0x000008, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00000C, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_ItemWheel_2) == 0x000010, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_ItemWheel_2' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_ItemWheelOptions) == 0x000018, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_ItemWheelOptions' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_SelectedIndex) == 0x000028, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_SelectedIndex' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_ItemWheel_1) == 0x000030, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_ItemWheel_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_Direction) == 0x000038, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_Direction' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_ItemWheel) == 0x000050, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_ItemWheel' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_Amount) == 0x000058, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_Amount' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00005C, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_DynamicCast_AsUMG_Radial_Menu) == 0x000060, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_DynamicCast_AsUMG_Radial_Menu' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_PlayAnimation_ReturnValue_1) == 0x000078, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_PlayAnimation_ReturnValue_2) == 0x000088, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_PlayAnimation_ReturnValue_3) == 0x000098, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, K2Node_Event_bInDeadzone) == 0x0000A0, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::K2Node_Event_bInDeadzone' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_PlayAnimation_ReturnValue_4) == 0x0000B8, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_PlayAnimation_ReturnValue_5) == 0x0000C0, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0000C8, "Member 'W_ItemWheel_C_ExecuteUbergraph_W_ItemWheel::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.ForceSetInDeadzone
// 0x0001 (0x0001 - 0x0000)
struct W_ItemWheel_C_ForceSetInDeadzone final
{
public:
	bool                                          bInDeadzone;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_ForceSetInDeadzone) == 0x000001, "Wrong alignment on W_ItemWheel_C_ForceSetInDeadzone");
static_assert(sizeof(W_ItemWheel_C_ForceSetInDeadzone) == 0x000001, "Wrong size on W_ItemWheel_C_ForceSetInDeadzone");
static_assert(offsetof(W_ItemWheel_C_ForceSetInDeadzone, bInDeadzone) == 0x000000, "Member 'W_ItemWheel_C_ForceSetInDeadzone::bInDeadzone' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.GetItemAmount
// 0x0040 (0x0040 - 0x0000)
struct W_ItemWheel_C_GetItemAmount final
{
public:
	EItemCategory                                 ItemID;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemAmount;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AReadyOrNotCharacter*                   K2Node_DynamicCast_AsReady_or_Not_Character;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABaseItem*>                      CallFunc_GetInventoryItemsOfType_ReturnValue;      // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_GetItemAmount) == 0x000008, "Wrong alignment on W_ItemWheel_C_GetItemAmount");
static_assert(sizeof(W_ItemWheel_C_GetItemAmount) == 0x000040, "Wrong size on W_ItemWheel_C_GetItemAmount");
static_assert(offsetof(W_ItemWheel_C_GetItemAmount, ItemID) == 0x000000, "Member 'W_ItemWheel_C_GetItemAmount::ItemID' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetItemAmount, ItemAmount) == 0x000004, "Member 'W_ItemWheel_C_GetItemAmount::ItemAmount' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetItemAmount, Amount) == 0x000008, "Member 'W_ItemWheel_C_GetItemAmount::Amount' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetItemAmount, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'W_ItemWheel_C_GetItemAmount::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetItemAmount, K2Node_DynamicCast_AsReady_or_Not_Character) == 0x000018, "Member 'W_ItemWheel_C_GetItemAmount::K2Node_DynamicCast_AsReady_or_Not_Character' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetItemAmount, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_ItemWheel_C_GetItemAmount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetItemAmount, CallFunc_GetInventoryItemsOfType_ReturnValue) == 0x000028, "Member 'W_ItemWheel_C_GetItemAmount::CallFunc_GetInventoryItemsOfType_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetItemAmount, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'W_ItemWheel_C_GetItemAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.GetShowCounter
// 0x000B (0x000B - 0x0000)
struct W_ItemWheel_C_GetShowCounter final
{
public:
	EItemCategory                                 ItemID;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowCounter;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_GetShowCounter) == 0x000001, "Wrong alignment on W_ItemWheel_C_GetShowCounter");
static_assert(sizeof(W_ItemWheel_C_GetShowCounter) == 0x00000B, "Wrong size on W_ItemWheel_C_GetShowCounter");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, ItemID) == 0x000000, "Member 'W_ItemWheel_C_GetShowCounter::ItemID' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, ShowCounter) == 0x000001, "Member 'W_ItemWheel_C_GetShowCounter::ShowCounter' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'W_ItemWheel_C_GetShowCounter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'W_ItemWheel_C_GetShowCounter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000004, "Member 'W_ItemWheel_C_GetShowCounter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000005, "Member 'W_ItemWheel_C_GetShowCounter::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000006, "Member 'W_ItemWheel_C_GetShowCounter::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, CallFunc_BooleanOR_ReturnValue) == 0x000007, "Member 'W_ItemWheel_C_GetShowCounter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, CallFunc_BooleanOR_ReturnValue_1) == 0x000008, "Member 'W_ItemWheel_C_GetShowCounter::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, CallFunc_BooleanOR_ReturnValue_2) == 0x000009, "Member 'W_ItemWheel_C_GetShowCounter::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_GetShowCounter, CallFunc_BooleanOR_ReturnValue_3) == 0x00000A, "Member 'W_ItemWheel_C_GetShowCounter::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.SetCurrentIndex
// 0x0020 (0x0020 - 0x0000)
struct W_ItemWheel_C_SetCurrentIndex final
{
public:
	class UUMG_RadialMenu_C*                      RadialMenu;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentIndex_Index;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentIndex_Valid;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_SetCurrentIndex) == 0x000008, "Wrong alignment on W_ItemWheel_C_SetCurrentIndex");
static_assert(sizeof(W_ItemWheel_C_SetCurrentIndex) == 0x000020, "Wrong size on W_ItemWheel_C_SetCurrentIndex");
static_assert(offsetof(W_ItemWheel_C_SetCurrentIndex, RadialMenu) == 0x000000, "Member 'W_ItemWheel_C_SetCurrentIndex::RadialMenu' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_SetCurrentIndex, Temp_int_Variable) == 0x000008, "Member 'W_ItemWheel_C_SetCurrentIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_SetCurrentIndex, CallFunc_GetCurrentIndex_Index) == 0x00000C, "Member 'W_ItemWheel_C_SetCurrentIndex::CallFunc_GetCurrentIndex_Index' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_SetCurrentIndex, CallFunc_GetCurrentIndex_Valid) == 0x000010, "Member 'W_ItemWheel_C_SetCurrentIndex::CallFunc_GetCurrentIndex_Valid' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_SetCurrentIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000011, "Member 'W_ItemWheel_C_SetCurrentIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_SetCurrentIndex, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'W_ItemWheel_C_SetCurrentIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_SetCurrentIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'W_ItemWheel_C_SetCurrentIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.SetWheelOptions
// 0x0020 (0x0020 - 0x0000)
struct W_ItemWheel_C_SetWheelOptions final
{
public:
	const class UUserWidget*                      ItemWheel;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemWheelOption>               ItemWheelOptions;                                  // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         SelectedIndex;                                     // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_SetWheelOptions) == 0x000008, "Wrong alignment on W_ItemWheel_C_SetWheelOptions");
static_assert(sizeof(W_ItemWheel_C_SetWheelOptions) == 0x000020, "Wrong size on W_ItemWheel_C_SetWheelOptions");
static_assert(offsetof(W_ItemWheel_C_SetWheelOptions, ItemWheel) == 0x000000, "Member 'W_ItemWheel_C_SetWheelOptions::ItemWheel' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_SetWheelOptions, ItemWheelOptions) == 0x000008, "Member 'W_ItemWheel_C_SetWheelOptions::ItemWheelOptions' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_SetWheelOptions, SelectedIndex) == 0x000018, "Member 'W_ItemWheel_C_SetWheelOptions::SelectedIndex' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.SetWheelSegments
// 0x0010 (0x0010 - 0x0000)
struct W_ItemWheel_C_SetWheelSegments final
{
public:
	const class UUserWidget*                      ItemWheel;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Amount;                                            // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_SetWheelSegments) == 0x000008, "Wrong alignment on W_ItemWheel_C_SetWheelSegments");
static_assert(sizeof(W_ItemWheel_C_SetWheelSegments) == 0x000010, "Wrong size on W_ItemWheel_C_SetWheelSegments");
static_assert(offsetof(W_ItemWheel_C_SetWheelSegments, ItemWheel) == 0x000000, "Member 'W_ItemWheel_C_SetWheelSegments::ItemWheel' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_SetWheelSegments, Amount) == 0x000008, "Member 'W_ItemWheel_C_SetWheelSegments::Amount' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.SetWheelSelection
// 0x0020 (0x0020 - 0x0000)
struct W_ItemWheel_C_SetWheelSelection final
{
public:
	const class UUserWidget*                      ItemWheel;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_SetWheelSelection) == 0x000008, "Wrong alignment on W_ItemWheel_C_SetWheelSelection");
static_assert(sizeof(W_ItemWheel_C_SetWheelSelection) == 0x000020, "Wrong size on W_ItemWheel_C_SetWheelSelection");
static_assert(offsetof(W_ItemWheel_C_SetWheelSelection, ItemWheel) == 0x000000, "Member 'W_ItemWheel_C_SetWheelSelection::ItemWheel' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_SetWheelSelection, Direction) == 0x000008, "Member 'W_ItemWheel_C_SetWheelSelection::Direction' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.Update Cursor Visibility
// 0x0010 (0x0010 - 0x0000)
struct W_ItemWheel_C_Update_Cursor_Visibility final
{
public:
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_Update_Cursor_Visibility) == 0x000008, "Wrong alignment on W_ItemWheel_C_Update_Cursor_Visibility");
static_assert(sizeof(W_ItemWheel_C_Update_Cursor_Visibility) == 0x000010, "Wrong size on W_ItemWheel_C_Update_Cursor_Visibility");
static_assert(offsetof(W_ItemWheel_C_Update_Cursor_Visibility, K2Node_DynamicCast_AsUMG_Radial_Menu) == 0x000000, "Member 'W_ItemWheel_C_Update_Cursor_Visibility::K2Node_DynamicCast_AsUMG_Radial_Menu' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_Update_Cursor_Visibility, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'W_ItemWheel_C_Update_Cursor_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_Update_Cursor_Visibility, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'W_ItemWheel_C_Update_Cursor_Visibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.UpdateRadialMenu
// 0x01A0 (0x01A0 - 0x0000)
struct W_ItemWheel_C_UpdateRadialMenu final
{
public:
	int32                                         SelectedIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ItemWheel;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemWheelOption>               ItemWheelOptions;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                InItemWheel;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         InSelectedIndex;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_RadialMenu_C*                      InRadialMenu;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMainWheel;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemWheelOption                       CallFunc_Array_Get_Item;                           // 0x0050(0x0110)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WheelIcon_C*                         CallFunc_CreateItemWheelIcon_WheelIcon;            // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddChildToRadialMenu_Success;             // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_UpdateRadialMenu) == 0x000010, "Wrong alignment on W_ItemWheel_C_UpdateRadialMenu");
static_assert(sizeof(W_ItemWheel_C_UpdateRadialMenu) == 0x0001A0, "Wrong size on W_ItemWheel_C_UpdateRadialMenu");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, SelectedIndex) == 0x000000, "Member 'W_ItemWheel_C_UpdateRadialMenu::SelectedIndex' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, ItemWheel) == 0x000008, "Member 'W_ItemWheel_C_UpdateRadialMenu::ItemWheel' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, ItemWheelOptions) == 0x000010, "Member 'W_ItemWheel_C_UpdateRadialMenu::ItemWheelOptions' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, InItemWheel) == 0x000020, "Member 'W_ItemWheel_C_UpdateRadialMenu::InItemWheel' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, InSelectedIndex) == 0x000028, "Member 'W_ItemWheel_C_UpdateRadialMenu::InSelectedIndex' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, InRadialMenu) == 0x000030, "Member 'W_ItemWheel_C_UpdateRadialMenu::InRadialMenu' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, IsMainWheel) == 0x000038, "Member 'W_ItemWheel_C_UpdateRadialMenu::IsMainWheel' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'W_ItemWheel_C_UpdateRadialMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_Array_Get_Item) == 0x000050, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_Array_Length_ReturnValue_1) == 0x000160, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, Temp_int_Loop_Counter_Variable) == 0x000164, "Member 'W_ItemWheel_C_UpdateRadialMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000168, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_CreateItemWheelIcon_WheelIcon) == 0x000170, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_CreateItemWheelIcon_WheelIcon' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000178, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_Array_Add_ReturnValue) == 0x00017C, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_Array_Add_ReturnValue_1) == 0x000180, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000184, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_Not_PreBool_ReturnValue) == 0x000188, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_BooleanAND_ReturnValue) == 0x000189, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_AddChildToRadialMenu_Success) == 0x00018A, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_AddChildToRadialMenu_Success' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00018B, "Member 'W_ItemWheel_C_UpdateRadialMenu::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, K2Node_DynamicCast_AsUMG_Radial_Menu) == 0x000190, "Member 'W_ItemWheel_C_UpdateRadialMenu::K2Node_DynamicCast_AsUMG_Radial_Menu' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateRadialMenu, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'W_ItemWheel_C_UpdateRadialMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_ItemWheel.W_ItemWheel_C.UpdateWheelSelection
// 0x0098 (0x0098 - 0x0000)
struct W_ItemWheel_C_UpdateWheelSelection final
{
public:
	class UObject*                                ItemWheel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_RadialMenu_C*                      RadialMenu;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMainWheel;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMG_RadialMenu_C*                      K2Node_DynamicCast_AsUMG_Radial_Menu;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_WheelIcon_C*                         CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidWithoutSubOptions_ReturnValue;       // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentIndex_Index;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentIndex_Valid;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSegmentEnabled_ReturnValue;             // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_WheelIcon_C*                         CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ItemWheel_C_UpdateWheelSelection) == 0x000008, "Wrong alignment on W_ItemWheel_C_UpdateWheelSelection");
static_assert(sizeof(W_ItemWheel_C_UpdateWheelSelection) == 0x000098, "Wrong size on W_ItemWheel_C_UpdateWheelSelection");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, ItemWheel) == 0x000000, "Member 'W_ItemWheel_C_UpdateWheelSelection::ItemWheel' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, Direction) == 0x000008, "Member 'W_ItemWheel_C_UpdateWheelSelection::Direction' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, RadialMenu) == 0x000020, "Member 'W_ItemWheel_C_UpdateWheelSelection::RadialMenu' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, IsMainWheel) == 0x000028, "Member 'W_ItemWheel_C_UpdateWheelSelection::IsMainWheel' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'W_ItemWheel_C_UpdateWheelSelection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000040, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, K2Node_DynamicCast_AsUMG_Radial_Menu) == 0x000050, "Member 'W_ItemWheel_C_UpdateWheelSelection::K2Node_DynamicCast_AsUMG_Radial_Menu' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'W_ItemWheel_C_UpdateWheelSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_Array_Get_Item) == 0x000060, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_ValidWithoutSubOptions_ReturnValue) == 0x00006C, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_ValidWithoutSubOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_Not_PreBool_ReturnValue) == 0x00006D, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00006E, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_GetCurrentIndex_Index) == 0x000070, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_GetCurrentIndex_Index' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_GetCurrentIndex_Valid) == 0x000074, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_GetCurrentIndex_Valid' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_IsSegmentEnabled_ReturnValue) == 0x000075, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_IsSegmentEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_Not_PreBool_ReturnValue_1) == 0x000076, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_BooleanOR_ReturnValue) == 0x000077, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'W_ItemWheel_C_UpdateWheelSelection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_ItemWheel_C_UpdateWheelSelection, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000090, "Member 'W_ItemWheel_C_UpdateWheelSelection::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

}

