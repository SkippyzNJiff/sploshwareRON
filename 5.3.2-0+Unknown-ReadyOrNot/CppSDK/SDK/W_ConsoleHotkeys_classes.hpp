#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ConsoleHotkeys

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ConsoleHotkeys.W_ConsoleHotkeys_C
// 0x00D0 (0x1E10 - 0x1D40)
class UW_ConsoleHotkeys_C final : public UConsoleHotkeys
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1D40(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       anim_Dpad_Right;                                   // 0x1D48(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       anim_Dpad_Left;                                    // 0x1D50(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       anim_Dpad_Down;                                    // 0x1D58(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       anim_Dpad_Up;                                      // 0x1D60(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 PS_Down_Icon;                                      // 0x1D68(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS_Dpad_Down_Icon;                                 // 0x1D70(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS_Dpad_Left_Icon;                                 // 0x1D78(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS_Dpad_Outline_Icon;                              // 0x1D80(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS_Dpad_Right_Icon;                                // 0x1D88(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS_Dpad_Up_Icon;                                   // 0x1D90(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS_Left_Icon;                                      // 0x1D98(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS_Outline_Icon;                                   // 0x1DA0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS_Right_Icon;                                     // 0x1DA8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PS_Up_Icon;                                        // 0x1DB0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XBox_Down_Icon;                                    // 0x1DB8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XBox_Dpad_Down_Icon;                               // 0x1DC0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XBox_Dpad_Left_Icon;                               // 0x1DC8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XBox_Dpad_Outline_Icon;                            // 0x1DD0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XBox_Dpad_Right_Icon;                              // 0x1DD8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XBox_Dpad_Up_Icon;                                 // 0x1DE0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Xbox_Left_Icon;                                    // 0x1DE8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XBox_Outline_Icon;                                 // 0x1DF0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XBox_Right_Icon;                                   // 0x1DF8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 XBox_Up_Icon;                                      // 0x1E00(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BoolToVisibility(bool Visible, ESlateVisibility* Visibility_0);
	void Construct();
	void DPadDownPressed(bool Pressed);
	void DPadLeftPressed(bool Pressed);
	void DpadPressedChange(bool Visible, class UImage* DpadImage);
	void DPadRightPressed(bool Pressed);
	void DPadUpPressed(bool Pressed);
	void ExecuteUbergraph_W_ConsoleHotkeys(int32 EntryPoint);
	void SetIconActive(class UImage* Icon, bool Active);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ConsoleHotkeys_C">();
	}
	static class UW_ConsoleHotkeys_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ConsoleHotkeys_C>();
	}
};
static_assert(alignof(UW_ConsoleHotkeys_C) == 0x000010, "Wrong alignment on UW_ConsoleHotkeys_C");
static_assert(sizeof(UW_ConsoleHotkeys_C) == 0x001E10, "Wrong size on UW_ConsoleHotkeys_C");
static_assert(offsetof(UW_ConsoleHotkeys_C, UberGraphFrame) == 0x001D40, "Member 'UW_ConsoleHotkeys_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, anim_Dpad_Right) == 0x001D48, "Member 'UW_ConsoleHotkeys_C::anim_Dpad_Right' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, anim_Dpad_Left) == 0x001D50, "Member 'UW_ConsoleHotkeys_C::anim_Dpad_Left' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, anim_Dpad_Down) == 0x001D58, "Member 'UW_ConsoleHotkeys_C::anim_Dpad_Down' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, anim_Dpad_Up) == 0x001D60, "Member 'UW_ConsoleHotkeys_C::anim_Dpad_Up' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, PS_Down_Icon) == 0x001D68, "Member 'UW_ConsoleHotkeys_C::PS_Down_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, PS_Dpad_Down_Icon) == 0x001D70, "Member 'UW_ConsoleHotkeys_C::PS_Dpad_Down_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, PS_Dpad_Left_Icon) == 0x001D78, "Member 'UW_ConsoleHotkeys_C::PS_Dpad_Left_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, PS_Dpad_Outline_Icon) == 0x001D80, "Member 'UW_ConsoleHotkeys_C::PS_Dpad_Outline_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, PS_Dpad_Right_Icon) == 0x001D88, "Member 'UW_ConsoleHotkeys_C::PS_Dpad_Right_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, PS_Dpad_Up_Icon) == 0x001D90, "Member 'UW_ConsoleHotkeys_C::PS_Dpad_Up_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, PS_Left_Icon) == 0x001D98, "Member 'UW_ConsoleHotkeys_C::PS_Left_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, PS_Outline_Icon) == 0x001DA0, "Member 'UW_ConsoleHotkeys_C::PS_Outline_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, PS_Right_Icon) == 0x001DA8, "Member 'UW_ConsoleHotkeys_C::PS_Right_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, PS_Up_Icon) == 0x001DB0, "Member 'UW_ConsoleHotkeys_C::PS_Up_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, XBox_Down_Icon) == 0x001DB8, "Member 'UW_ConsoleHotkeys_C::XBox_Down_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, XBox_Dpad_Down_Icon) == 0x001DC0, "Member 'UW_ConsoleHotkeys_C::XBox_Dpad_Down_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, XBox_Dpad_Left_Icon) == 0x001DC8, "Member 'UW_ConsoleHotkeys_C::XBox_Dpad_Left_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, XBox_Dpad_Outline_Icon) == 0x001DD0, "Member 'UW_ConsoleHotkeys_C::XBox_Dpad_Outline_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, XBox_Dpad_Right_Icon) == 0x001DD8, "Member 'UW_ConsoleHotkeys_C::XBox_Dpad_Right_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, XBox_Dpad_Up_Icon) == 0x001DE0, "Member 'UW_ConsoleHotkeys_C::XBox_Dpad_Up_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, Xbox_Left_Icon) == 0x001DE8, "Member 'UW_ConsoleHotkeys_C::Xbox_Left_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, XBox_Outline_Icon) == 0x001DF0, "Member 'UW_ConsoleHotkeys_C::XBox_Outline_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, XBox_Right_Icon) == 0x001DF8, "Member 'UW_ConsoleHotkeys_C::XBox_Right_Icon' has a wrong offset!");
static_assert(offsetof(UW_ConsoleHotkeys_C, XBox_Up_Icon) == 0x001E00, "Member 'UW_ConsoleHotkeys_C::XBox_Up_Icon' has a wrong offset!");

}

