#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Memorial

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Memorial.W_Memorial_C
// 0x0078 (0x0498 - 0x0420)
class UW_Memorial_C final : public UMemorialWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HB_MemorialCards;                                  // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                LeadingSpacer;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             MemorialScrollBox;                                 // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NoDeathsText;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerMemorial;                                  // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                TrailingSpacer;                                    // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MemorialCard_C*                      W_MemorialCard;                                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MemorialCard_C*                      W_MemorialCard_1;                                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MemorialCard_C*                      W_MemorialCard_2;                                  // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MemorialCard_C*                      W_MemorialCard_3;                                  // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MemorialCard_C*                      W_MemorialCard_4;                                  // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_PageWrapper_C*                       W_PageHeader;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        CardSpacing;                                       // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CardRevealDelay;                                   // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BackPage(bool* Handled);
	void BndEvt__W_Memorial_W_PageHeader_K2Node_ComponentBoundEvent_2_OnFooterButtonClicked__DelegateSignature(const class FString& ButtonId);
	void BP_OnActivated();
	bool BP_OnHandleBackAction();
	void ChangePage(class FName PageName);
	void Construct();
	void ExecuteUbergraph_W_Memorial(int32 EntryPoint);
	ESlateVisibility GetSpacerVisibility();
	void Hide(double Delay, bool Collapse);
	void PopulateMemorial();
	void Reveal(double Delay);
	void SetInputMode(bool IsGamepad);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Memorial_C">();
	}
	static class UW_Memorial_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Memorial_C>();
	}
};
static_assert(alignof(UW_Memorial_C) == 0x000008, "Wrong alignment on UW_Memorial_C");
static_assert(sizeof(UW_Memorial_C) == 0x000498, "Wrong size on UW_Memorial_C");
static_assert(offsetof(UW_Memorial_C, UberGraphFrame) == 0x000420, "Member 'UW_Memorial_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, HB_MemorialCards) == 0x000428, "Member 'UW_Memorial_C::HB_MemorialCards' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, LeadingSpacer) == 0x000430, "Member 'UW_Memorial_C::LeadingSpacer' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, MemorialScrollBox) == 0x000438, "Member 'UW_Memorial_C::MemorialScrollBox' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, NoDeathsText) == 0x000440, "Member 'UW_Memorial_C::NoDeathsText' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, RetainerMemorial) == 0x000448, "Member 'UW_Memorial_C::RetainerMemorial' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, TrailingSpacer) == 0x000450, "Member 'UW_Memorial_C::TrailingSpacer' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_MemorialCard) == 0x000458, "Member 'UW_Memorial_C::W_MemorialCard' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_MemorialCard_1) == 0x000460, "Member 'UW_Memorial_C::W_MemorialCard_1' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_MemorialCard_2) == 0x000468, "Member 'UW_Memorial_C::W_MemorialCard_2' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_MemorialCard_3) == 0x000470, "Member 'UW_Memorial_C::W_MemorialCard_3' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_MemorialCard_4) == 0x000478, "Member 'UW_Memorial_C::W_MemorialCard_4' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, W_PageHeader) == 0x000480, "Member 'UW_Memorial_C::W_PageHeader' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, CardSpacing) == 0x000488, "Member 'UW_Memorial_C::CardSpacing' has a wrong offset!");
static_assert(offsetof(UW_Memorial_C, CardRevealDelay) == 0x000490, "Member 'UW_Memorial_C::CardRevealDelay' has a wrong offset!");

}

