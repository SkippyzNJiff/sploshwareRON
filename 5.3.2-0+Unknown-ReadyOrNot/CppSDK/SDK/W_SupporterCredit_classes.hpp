#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SupporterCredit

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_SupporterCredit.W_SupporterCredit_C
// 0x00A8 (0x0370 - 0x02C8)
class UW_SupporterCredit_C final : public UBaseCredit
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animSupportName;                                   // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_SupportName;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SupportName;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SupportName_1;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SupportName_2;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_SupportName;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_SupportName_1;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_SupportName_2;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SupporterCredit_1;                                 // 0x0310(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   SupporterCredit_2;                                 // 0x0328(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   SupporterCredit_3;                                 // 0x0340(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	double                                        PlaybackSpeed;                                     // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VisibleMin;                                        // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        VisibleMax;                                        // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BackPage(bool* Handled);
	void ChangePage(class FName PageName);
	void Construct();
	void ExecuteUbergraph_W_SupporterCredit(int32 EntryPoint);
	void Hide(double Delay, bool Collapse);
	void IsAnimating(bool* Animating);
	void IsInBotMargin(bool* IsInBotMargin_0);
	void IsInTopMargin(bool* InView);
	void PreConstruct(bool IsDesignTime);
	void Reveal(double Delay);
	void SetInputMode(bool IsGamepad);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

	void GetFocusTarget(class UWidget** Focus) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_SupporterCredit_C">();
	}
	static class UW_SupporterCredit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_SupporterCredit_C>();
	}
};
static_assert(alignof(UW_SupporterCredit_C) == 0x000008, "Wrong alignment on UW_SupporterCredit_C");
static_assert(sizeof(UW_SupporterCredit_C) == 0x000370, "Wrong size on UW_SupporterCredit_C");
static_assert(offsetof(UW_SupporterCredit_C, UberGraphFrame) == 0x0002C8, "Member 'UW_SupporterCredit_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, animSupportName) == 0x0002D0, "Member 'UW_SupporterCredit_C::animSupportName' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, HB_SupportName) == 0x0002D8, "Member 'UW_SupporterCredit_C::HB_SupportName' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, SupportName) == 0x0002E0, "Member 'UW_SupporterCredit_C::SupportName' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, SupportName_1) == 0x0002E8, "Member 'UW_SupporterCredit_C::SupportName_1' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, SupportName_2) == 0x0002F0, "Member 'UW_SupporterCredit_C::SupportName_2' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, txt_SupportName) == 0x0002F8, "Member 'UW_SupporterCredit_C::txt_SupportName' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, txt_SupportName_1) == 0x000300, "Member 'UW_SupporterCredit_C::txt_SupportName_1' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, txt_SupportName_2) == 0x000308, "Member 'UW_SupporterCredit_C::txt_SupportName_2' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, SupporterCredit_1) == 0x000310, "Member 'UW_SupporterCredit_C::SupporterCredit_1' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, SupporterCredit_2) == 0x000328, "Member 'UW_SupporterCredit_C::SupporterCredit_2' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, SupporterCredit_3) == 0x000340, "Member 'UW_SupporterCredit_C::SupporterCredit_3' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, PlaybackSpeed) == 0x000358, "Member 'UW_SupporterCredit_C::PlaybackSpeed' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, VisibleMin) == 0x000360, "Member 'UW_SupporterCredit_C::VisibleMin' has a wrong offset!");
static_assert(offsetof(UW_SupporterCredit_C, VisibleMax) == 0x000368, "Member 'UW_SupporterCredit_C::VisibleMax' has a wrong offset!");

}

