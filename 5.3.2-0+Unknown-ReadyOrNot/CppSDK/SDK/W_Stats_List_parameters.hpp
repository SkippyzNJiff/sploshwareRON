#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Stats_List

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function W_Stats_List.W_Stats_List_C.AddDiv
// 0x0030 (0x0030 - 0x0000)
struct W_Stats_List_C_AddDiv final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_AddDiv) == 0x000008, "Wrong alignment on W_Stats_List_C_AddDiv");
static_assert(sizeof(W_Stats_List_C_AddDiv) == 0x000030, "Wrong size on W_Stats_List_C_AddDiv");
static_assert(offsetof(W_Stats_List_C_AddDiv, Temp_int_Variable) == 0x000000, "Member 'W_Stats_List_C_AddDiv::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_AddDiv, Temp_int_Variable_1) == 0x000004, "Member 'W_Stats_List_C_AddDiv::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_AddDiv, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'W_Stats_List_C_AddDiv::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_AddDiv, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'W_Stats_List_C_AddDiv::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_AddDiv, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'W_Stats_List_C_AddDiv::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_AddDiv, K2Node_MakeStruct_Margin) == 0x000018, "Member 'W_Stats_List_C_AddDiv::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_AddDiv, CallFunc_AddChildToGrid_ReturnValue) == 0x000028, "Member 'W_Stats_List_C_AddDiv::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.BackPage
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_List_C_BackPage final
{
public:
	bool                                          Handled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_BackPage) == 0x000001, "Wrong alignment on W_Stats_List_C_BackPage");
static_assert(sizeof(W_Stats_List_C_BackPage) == 0x000001, "Wrong size on W_Stats_List_C_BackPage");
static_assert(offsetof(W_Stats_List_C_BackPage, Handled) == 0x000000, "Member 'W_Stats_List_C_BackPage::Handled' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.ChangePage
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_List_C_ChangePage final
{
public:
	class FName                                   PageName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_ChangePage) == 0x000004, "Wrong alignment on W_Stats_List_C_ChangePage");
static_assert(sizeof(W_Stats_List_C_ChangePage) == 0x000008, "Wrong size on W_Stats_List_C_ChangePage");
static_assert(offsetof(W_Stats_List_C_ChangePage, PageName) == 0x000000, "Member 'W_Stats_List_C_ChangePage::PageName' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.CompareStats
// 0x0028 (0x0028 - 0x0000)
struct W_Stats_List_C_CompareStats final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_CompareStats) == 0x000008, "Wrong alignment on W_Stats_List_C_CompareStats");
static_assert(sizeof(W_Stats_List_C_CompareStats) == 0x000028, "Wrong size on W_Stats_List_C_CompareStats");
static_assert(offsetof(W_Stats_List_C_CompareStats, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_Stats_List_C_CompareStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CompareStats, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_Stats_List_C_CompareStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CompareStats, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_Stats_List_C_CompareStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CompareStats, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'W_Stats_List_C_CompareStats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CompareStats, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_Stats_List_C_CompareStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CompareStats, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'W_Stats_List_C_CompareStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.CompareWithFriend
// 0x01C8 (0x01C8 - 0x0000)
struct W_Stats_List_C_CompareWithFriend final
{
public:
	struct FFriend                                Friend;                                            // 0x0000(0x01C8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_Stats_List_C_CompareWithFriend) == 0x000008, "Wrong alignment on W_Stats_List_C_CompareWithFriend");
static_assert(sizeof(W_Stats_List_C_CompareWithFriend) == 0x0001C8, "Wrong size on W_Stats_List_C_CompareWithFriend");
static_assert(offsetof(W_Stats_List_C_CompareWithFriend, Friend) == 0x000000, "Member 'W_Stats_List_C_CompareWithFriend::Friend' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.CopyTextObject
// 0x0018 (0x0018 - 0x0000)
struct W_Stats_List_C_CopyTextObject final
{
public:
	class UCommonTextBlock*                       CommonTextToCopy;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       NewCommonTextBlock;                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_CopyTextObject) == 0x000008, "Wrong alignment on W_Stats_List_C_CopyTextObject");
static_assert(sizeof(W_Stats_List_C_CopyTextObject) == 0x000018, "Wrong size on W_Stats_List_C_CopyTextObject");
static_assert(offsetof(W_Stats_List_C_CopyTextObject, CommonTextToCopy) == 0x000000, "Member 'W_Stats_List_C_CopyTextObject::CommonTextToCopy' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CopyTextObject, NewCommonTextBlock) == 0x000008, "Member 'W_Stats_List_C_CopyTextObject::NewCommonTextBlock' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CopyTextObject, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'W_Stats_List_C_CopyTextObject::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.CreateComparisonValueEntry
// 0x0298 (0x0298 - 0x0000)
struct W_Stats_List_C_CreateComparisonValueEntry final
{
public:
	struct FDataTableRowHandle                    StatRowHandle;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         InRow;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InColumn;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       ValueTextWidget;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTime;                                            // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StatID;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       NewComparisonValueText;                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FStatDefinition                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERONStatType                                  Temp_wildcard_Variable;                            // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)()
	class FString                                 Temp_string_Variable_1;                            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x00D8(0x0018)()
	int64                                         Temp_int64_Variable;                               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F[0x1];                                      // 0x010F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0110(0x0018)()
	bool                                          Temp_bool_Variable_6;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_RandomInteger64InRange_ReturnValue;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0138(0x0018)()
	class FText                                   CallFunc_FormatPlaytime_Result;                    // 0x0150(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0168(0x0018)()
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0188(0x0018)()
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue_1;           // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue_2;           // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       CallFunc_CopyTextObject_NewCommonTextBlock;        // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStatNumeric_ReturnValue;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetFriendStatValue_ReturnValue;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetFriendStatString_ReturnValue;          // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue_1;           // 0x01E8(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0208(0x0018)()
	class FText                                   CallFunc_FormatPlaytime_Result_1;                  // 0x0220(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0238(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0250(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x0268(0x0018)()
	class FText                                   K2Node_Select_Default_5;                           // 0x0280(0x0018)()
};
static_assert(alignof(W_Stats_List_C_CreateComparisonValueEntry) == 0x000008, "Wrong alignment on W_Stats_List_C_CreateComparisonValueEntry");
static_assert(sizeof(W_Stats_List_C_CreateComparisonValueEntry) == 0x000298, "Wrong size on W_Stats_List_C_CreateComparisonValueEntry");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, StatRowHandle) == 0x000000, "Member 'W_Stats_List_C_CreateComparisonValueEntry::StatRowHandle' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, InRow) == 0x000010, "Member 'W_Stats_List_C_CreateComparisonValueEntry::InRow' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, InColumn) == 0x000014, "Member 'W_Stats_List_C_CreateComparisonValueEntry::InColumn' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, ValueTextWidget) == 0x000018, "Member 'W_Stats_List_C_CreateComparisonValueEntry::ValueTextWidget' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, IsTime) == 0x000020, "Member 'W_Stats_List_C_CreateComparisonValueEntry::IsTime' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, StatID) == 0x000028, "Member 'W_Stats_List_C_CreateComparisonValueEntry::StatID' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, NewComparisonValueText) == 0x000038, "Member 'W_Stats_List_C_CreateComparisonValueEntry::NewComparisonValueText' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_string_Variable) == 0x000040, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_wildcard_Variable) == 0x0000AA, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_bool_Variable) == 0x0000AB, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_bool_Variable_1) == 0x0000AC, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_text_Variable) == 0x0000B0, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_string_Variable_1) == 0x0000C8, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_text_Variable_1) == 0x0000D8, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_int64_Variable) == 0x0000F0, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_int64_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_bool_Variable_2) == 0x0000F8, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, K2Node_MakeStruct_Margin) == 0x0000FC, "Member 'W_Stats_List_C_CreateComparisonValueEntry::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_bool_Variable_3) == 0x00010C, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_bool_Variable_4) == 0x00010D, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_bool_Variable_5) == 0x00010E, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_text_Variable_2) == 0x000110, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, Temp_bool_Variable_6) == 0x000128, "Member 'W_Stats_List_C_CreateComparisonValueEntry::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_MakeLiteralByte_ReturnValue) == 0x000129, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_Array_Add_ReturnValue) == 0x00012C, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_RandomInteger64InRange_ReturnValue) == 0x000130, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_RandomInteger64InRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000138, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_FormatPlaytime_Result) == 0x000150, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_FormatPlaytime_Result' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, K2Node_Select_Default) == 0x000168, "Member 'W_Stats_List_C_CreateComparisonValueEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_AddChildToGrid_ReturnValue) == 0x000180, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, K2Node_Select_Default_1) == 0x000188, "Member 'W_Stats_List_C_CreateComparisonValueEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_GetStatSubsystem_ReturnValue) == 0x0001A0, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_GetStatSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_GetStatSubsystem_ReturnValue_1) == 0x0001A8, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_GetStatSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_GetStatSubsystem_ReturnValue_2) == 0x0001B0, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_GetStatSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_IsValid_ReturnValue_1) == 0x0001B8, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_BooleanAND_ReturnValue) == 0x0001B9, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_CopyTextObject_NewCommonTextBlock) == 0x0001C0, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_CopyTextObject_NewCommonTextBlock' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_IsStatNumeric_ReturnValue) == 0x0001C8, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_IsStatNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_GetFriendStatValue_ReturnValue) == 0x0001D0, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_GetFriendStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_GetFriendStatString_ReturnValue) == 0x0001D8, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_GetFriendStatString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_Conv_Int64ToText_ReturnValue_1) == 0x0001E8, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_Conv_Int64ToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_IsEmpty_ReturnValue) == 0x000200, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_Conv_StringToText_ReturnValue) == 0x000208, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, CallFunc_FormatPlaytime_Result_1) == 0x000220, "Member 'W_Stats_List_C_CreateComparisonValueEntry::CallFunc_FormatPlaytime_Result_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, K2Node_Select_Default_2) == 0x000238, "Member 'W_Stats_List_C_CreateComparisonValueEntry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, K2Node_Select_Default_3) == 0x000250, "Member 'W_Stats_List_C_CreateComparisonValueEntry::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, K2Node_Select_Default_4) == 0x000268, "Member 'W_Stats_List_C_CreateComparisonValueEntry::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateComparisonValueEntry, K2Node_Select_Default_5) == 0x000280, "Member 'W_Stats_List_C_CreateComparisonValueEntry::K2Node_Select_Default_5' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.CreateLabel
// 0x0150 (0x0150 - 0x0000)
struct W_Stats_List_C_CreateLabel final
{
public:
	struct FDataTableRowHandle                    StatRowHandle;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         Row;                                               // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Column;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               LabelOverlay;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   DisplayName;                                       // 0x0020(0x0018)(Edit, BlueprintVisible)
	class FString                                 StatID;                                            // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       NewDiffText;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               NewLabelOverlay;                                   // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       NewStatLabel;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ERONStatType                                  Temp_wildcard_Variable;                            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FStatDefinition                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00D8(0x0018)()
	class FString                                 Temp_string_Variable_1;                            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Temp_int64_Variable;                               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               CallFunc_SpawnObject_ReturnValue;                  // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default;                             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       CallFunc_CopyTextObject_NewCommonTextBlock;        // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue_1;          // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       CallFunc_CopyTextObject_NewCommonTextBlock_1;      // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_CreateLabel) == 0x000008, "Wrong alignment on W_Stats_List_C_CreateLabel");
static_assert(sizeof(W_Stats_List_C_CreateLabel) == 0x000150, "Wrong size on W_Stats_List_C_CreateLabel");
static_assert(offsetof(W_Stats_List_C_CreateLabel, StatRowHandle) == 0x000000, "Member 'W_Stats_List_C_CreateLabel::StatRowHandle' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Row) == 0x000010, "Member 'W_Stats_List_C_CreateLabel::Row' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Column) == 0x000014, "Member 'W_Stats_List_C_CreateLabel::Column' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, LabelOverlay) == 0x000018, "Member 'W_Stats_List_C_CreateLabel::LabelOverlay' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, DisplayName) == 0x000020, "Member 'W_Stats_List_C_CreateLabel::DisplayName' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, StatID) == 0x000038, "Member 'W_Stats_List_C_CreateLabel::StatID' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, NewDiffText) == 0x000048, "Member 'W_Stats_List_C_CreateLabel::NewDiffText' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, NewLabelOverlay) == 0x000050, "Member 'W_Stats_List_C_CreateLabel::NewLabelOverlay' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, NewStatLabel) == 0x000058, "Member 'W_Stats_List_C_CreateLabel::NewStatLabel' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Temp_wildcard_Variable) == 0x000060, "Member 'W_Stats_List_C_CreateLabel::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Temp_string_Variable) == 0x000068, "Member 'W_Stats_List_C_CreateLabel::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'W_Stats_List_C_CreateLabel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D0, "Member 'W_Stats_List_C_CreateLabel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'W_Stats_List_C_CreateLabel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Temp_text_Variable) == 0x0000D8, "Member 'W_Stats_List_C_CreateLabel::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Temp_string_Variable_1) == 0x0000F0, "Member 'W_Stats_List_C_CreateLabel::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, CallFunc_MakeLiteralByte_ReturnValue) == 0x000100, "Member 'W_Stats_List_C_CreateLabel::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Temp_int64_Variable) == 0x000108, "Member 'W_Stats_List_C_CreateLabel::Temp_int64_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, CallFunc_SpawnObject_ReturnValue) == 0x000110, "Member 'W_Stats_List_C_CreateLabel::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Temp_byte_Variable) == 0x000118, "Member 'W_Stats_List_C_CreateLabel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Temp_bool_Variable) == 0x000119, "Member 'W_Stats_List_C_CreateLabel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Temp_byte_Variable_1) == 0x00011A, "Member 'W_Stats_List_C_CreateLabel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, Temp_bool_Variable_1) == 0x00011B, "Member 'W_Stats_List_C_CreateLabel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, CallFunc_AddChildToGrid_ReturnValue) == 0x000120, "Member 'W_Stats_List_C_CreateLabel::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, K2Node_Select_Default) == 0x000128, "Member 'W_Stats_List_C_CreateLabel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, CallFunc_AddChildToOverlay_ReturnValue) == 0x000130, "Member 'W_Stats_List_C_CreateLabel::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, CallFunc_CopyTextObject_NewCommonTextBlock) == 0x000138, "Member 'W_Stats_List_C_CreateLabel::CallFunc_CopyTextObject_NewCommonTextBlock' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, CallFunc_AddChildToOverlay_ReturnValue_1) == 0x000140, "Member 'W_Stats_List_C_CreateLabel::CallFunc_AddChildToOverlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateLabel, CallFunc_CopyTextObject_NewCommonTextBlock_1) == 0x000148, "Member 'W_Stats_List_C_CreateLabel::CallFunc_CopyTextObject_NewCommonTextBlock_1' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.CreateValueEntry
// 0x0320 (0x0320 - 0x0000)
struct W_Stats_List_C_CreateValueEntry final
{
public:
	struct FDataTableRowHandle                    StatRowHandle;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         InRow;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InColumn;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       ValueTextWidget;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTime;                                            // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         DebugValue;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugString;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	ERONStatType                                  StatType;                                          // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StatID;                                            // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       NewValueText;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FStatDefinition                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0070(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERONStatType                                  Temp_wildcard_Variable;                            // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERONStatType                                  Temp_byte_Variable;                                // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00D0(0x0018)()
	class FString                                 Temp_string_Variable_1;                            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Temp_int64_Variable;                               // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0120(0x0018)()
	bool                                          Temp_bool_Variable_7;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_RandomInteger64InRange_ReturnValue;       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0148(0x0018)()
	class FText                                   CallFunc_FormatPlaytime_Result;                    // 0x0160(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0178(0x0018)()
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue;             // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue_1;           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue_2;           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue_1;           // 0x01B8(0x0018)()
	class FText                                   CallFunc_FormatPlaytime_Result_1;                  // 0x01D0(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x01E8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0200(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0218(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0230(0x0018)()
	bool                                          CallFunc_IsStatNumeric_ReturnValue;                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStatValue_ReturnValue;                 // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue_2;           // 0x0258(0x0018)()
	class FText                                   CallFunc_FormatPlaytime_Result_2;                  // 0x0270(0x0018)()
	class FString                                 CallFunc_GetStatString_ReturnValue;                // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_4;                           // 0x0298(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x02B8(0x0018)()
	class FText                                   K2Node_Select_Default_5;                           // 0x02D0(0x0018)()
	class FText                                   K2Node_Select_Default_6;                           // 0x02E8(0x0018)()
	class UCommonTextBlock*                       CallFunc_CopyTextObject_NewCommonTextBlock;        // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_7;                           // 0x0308(0x0018)()
};
static_assert(alignof(W_Stats_List_C_CreateValueEntry) == 0x000008, "Wrong alignment on W_Stats_List_C_CreateValueEntry");
static_assert(sizeof(W_Stats_List_C_CreateValueEntry) == 0x000320, "Wrong size on W_Stats_List_C_CreateValueEntry");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, StatRowHandle) == 0x000000, "Member 'W_Stats_List_C_CreateValueEntry::StatRowHandle' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, InRow) == 0x000010, "Member 'W_Stats_List_C_CreateValueEntry::InRow' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, InColumn) == 0x000014, "Member 'W_Stats_List_C_CreateValueEntry::InColumn' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, ValueTextWidget) == 0x000018, "Member 'W_Stats_List_C_CreateValueEntry::ValueTextWidget' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, IsTime) == 0x000020, "Member 'W_Stats_List_C_CreateValueEntry::IsTime' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, DebugValue) == 0x000028, "Member 'W_Stats_List_C_CreateValueEntry::DebugValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, DebugString) == 0x000030, "Member 'W_Stats_List_C_CreateValueEntry::DebugString' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, StatType) == 0x000040, "Member 'W_Stats_List_C_CreateValueEntry::StatType' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, StatID) == 0x000048, "Member 'W_Stats_List_C_CreateValueEntry::StatID' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, NewValueText) == 0x000058, "Member 'W_Stats_List_C_CreateValueEntry::NewValueText' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_string_Variable) == 0x000060, "Member 'W_Stats_List_C_CreateValueEntry::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_GetDataTableRowFromName_OutRow) == 0x000070, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C8, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_wildcard_Variable) == 0x0000CA, "Member 'W_Stats_List_C_CreateValueEntry::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_bool_Variable) == 0x0000CB, "Member 'W_Stats_List_C_CreateValueEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_bool_Variable_1) == 0x0000CC, "Member 'W_Stats_List_C_CreateValueEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_byte_Variable) == 0x0000CD, "Member 'W_Stats_List_C_CreateValueEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_text_Variable) == 0x0000D0, "Member 'W_Stats_List_C_CreateValueEntry::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_string_Variable_1) == 0x0000E8, "Member 'W_Stats_List_C_CreateValueEntry::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, K2Node_MakeStruct_Margin) == 0x0000F8, "Member 'W_Stats_List_C_CreateValueEntry::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_bool_Variable_2) == 0x000108, "Member 'W_Stats_List_C_CreateValueEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_int64_Variable) == 0x000110, "Member 'W_Stats_List_C_CreateValueEntry::Temp_int64_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_bool_Variable_3) == 0x000118, "Member 'W_Stats_List_C_CreateValueEntry::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_bool_Variable_4) == 0x000119, "Member 'W_Stats_List_C_CreateValueEntry::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_bool_Variable_5) == 0x00011A, "Member 'W_Stats_List_C_CreateValueEntry::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_bool_Variable_6) == 0x00011B, "Member 'W_Stats_List_C_CreateValueEntry::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_text_Variable_1) == 0x000120, "Member 'W_Stats_List_C_CreateValueEntry::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, Temp_bool_Variable_7) == 0x000138, "Member 'W_Stats_List_C_CreateValueEntry::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_MakeLiteralByte_ReturnValue) == 0x000139, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_Array_Add_ReturnValue) == 0x00013C, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_RandomInteger64InRange_ReturnValue) == 0x000140, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_RandomInteger64InRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000148, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_FormatPlaytime_Result) == 0x000160, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_FormatPlaytime_Result' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, K2Node_Select_Default) == 0x000178, "Member 'W_Stats_List_C_CreateValueEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_GetStatSubsystem_ReturnValue) == 0x000190, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_GetStatSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_GetStatSubsystem_ReturnValue_1) == 0x000198, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_GetStatSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_GetStatSubsystem_ReturnValue_2) == 0x0001A0, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_GetStatSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_IsValid_ReturnValue_1) == 0x0001A8, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_AddChildToGrid_ReturnValue) == 0x0001B0, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_Conv_Int64ToText_ReturnValue_1) == 0x0001B8, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_Conv_Int64ToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_FormatPlaytime_Result_1) == 0x0001D0, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_FormatPlaytime_Result_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, K2Node_Select_Default_1) == 0x0001E8, "Member 'W_Stats_List_C_CreateValueEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_Conv_StringToText_ReturnValue) == 0x000200, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, K2Node_Select_Default_2) == 0x000218, "Member 'W_Stats_List_C_CreateValueEntry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, K2Node_Select_Default_3) == 0x000230, "Member 'W_Stats_List_C_CreateValueEntry::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_IsStatNumeric_ReturnValue) == 0x000248, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_IsStatNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_GetStatValue_ReturnValue) == 0x000250, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_Conv_Int64ToText_ReturnValue_2) == 0x000258, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_Conv_Int64ToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_FormatPlaytime_Result_2) == 0x000270, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_FormatPlaytime_Result_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_GetStatString_ReturnValue) == 0x000288, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_GetStatString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, K2Node_Select_Default_4) == 0x000298, "Member 'W_Stats_List_C_CreateValueEntry::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_IsEmpty_ReturnValue) == 0x0002B0, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0002B8, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, K2Node_Select_Default_5) == 0x0002D0, "Member 'W_Stats_List_C_CreateValueEntry::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, K2Node_Select_Default_6) == 0x0002E8, "Member 'W_Stats_List_C_CreateValueEntry::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, CallFunc_CopyTextObject_NewCommonTextBlock) == 0x000300, "Member 'W_Stats_List_C_CreateValueEntry::CallFunc_CopyTextObject_NewCommonTextBlock' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_CreateValueEntry, K2Node_Select_Default_7) == 0x000308, "Member 'W_Stats_List_C_CreateValueEntry::K2Node_Select_Default_7' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.ExecuteUbergraph_W_Stats_List
// 0x0230 (0x0230 - 0x0000)
struct W_Stats_List_C_ExecuteUbergraph_W_Stats_List final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Collapse;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsGamepad;                            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PageName;                             // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatSubsystem*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_StatID;                               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFriend                                K2Node_Event_Friend;                               // 0x0048(0x01C8)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0210(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInitialized_ReturnValue;                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List) == 0x000008, "Wrong alignment on W_Stats_List_C_ExecuteUbergraph_W_Stats_List");
static_assert(sizeof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List) == 0x000230, "Wrong size on W_Stats_List_C_ExecuteUbergraph_W_Stats_List");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, EntryPoint) == 0x000000, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, K2Node_Event_Delay_1) == 0x000008, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::K2Node_Event_Delay_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, K2Node_Event_Delay) == 0x000010, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, K2Node_Event_Collapse) == 0x000018, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::K2Node_Event_Collapse' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, K2Node_Event_IsGamepad) == 0x000019, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::K2Node_Event_IsGamepad' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, K2Node_Event_PageName) == 0x00001C, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::K2Node_Event_PageName' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, K2Node_Event_IsDesignTime) == 0x000024, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, K2Node_Event_StatID) == 0x000038, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::K2Node_Event_StatID' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, K2Node_Event_Friend) == 0x000048, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::K2Node_Event_Friend' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, K2Node_CreateDelegate_OutputDelegate) == 0x000210, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, CallFunc_GetStatSubsystem_ReturnValue) == 0x000220, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::CallFunc_GetStatSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, CallFunc_IsInitialized_ReturnValue) == 0x000228, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::CallFunc_IsInitialized_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_ExecuteUbergraph_W_Stats_List, CallFunc_IsValid_ReturnValue_1) == 0x000229, "Member 'W_Stats_List_C_ExecuteUbergraph_W_Stats_List::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.FormatPlaytime
// 0x0130 (0x0130 - 0x0000)
struct W_Stats_List_C_FormatPlaytime final
{
public:
	int64                                         Time__in_seconds_;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0018)()
	float                                         CallFunc_FromSeconds_Seconds_ImplicitCast;         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_FormatPlaytime) == 0x000008, "Wrong alignment on W_Stats_List_C_FormatPlaytime");
static_assert(sizeof(W_Stats_List_C_FormatPlaytime) == 0x000130, "Wrong size on W_Stats_List_C_FormatPlaytime");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, Time__in_seconds_) == 0x000000, "Member 'W_Stats_List_C_FormatPlaytime::Time__in_seconds_' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, Result) == 0x000008, "Member 'W_Stats_List_C_FormatPlaytime::Result' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_Conv_Int64ToDouble_ReturnValue) == 0x000020, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_Conv_Int64ToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_FromSeconds_ReturnValue) == 0x000028, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_BreakTimespan_Days) == 0x000030, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_BreakTimespan_Hours) == 0x000034, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_BreakTimespan_Minutes) == 0x000038, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_BreakTimespan_Seconds) == 0x00003C, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_BreakTimespan_Milliseconds) == 0x000040, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_Multiply_IntInt_ReturnValue) == 0x000044, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000048, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'W_Stats_List_C_FormatPlaytime::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000A8, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'W_Stats_List_C_FormatPlaytime::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, K2Node_MakeArray_Array) == 0x000100, "Member 'W_Stats_List_C_FormatPlaytime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_Format_ReturnValue) == 0x000110, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_FormatPlaytime, CallFunc_FromSeconds_Seconds_ImplicitCast) == 0x000128, "Member 'W_Stats_List_C_FormatPlaytime::CallFunc_FromSeconds_Seconds_ImplicitCast' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.Hide
// 0x0010 (0x0010 - 0x0000)
struct W_Stats_List_C_Hide final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Collapse;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_Hide) == 0x000008, "Wrong alignment on W_Stats_List_C_Hide");
static_assert(sizeof(W_Stats_List_C_Hide) == 0x000010, "Wrong size on W_Stats_List_C_Hide");
static_assert(offsetof(W_Stats_List_C_Hide, Delay) == 0x000000, "Member 'W_Stats_List_C_Hide::Delay' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_Hide, Collapse) == 0x000008, "Member 'W_Stats_List_C_Hide::Collapse' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.OnStatChanged
// 0x0010 (0x0010 - 0x0000)
struct W_Stats_List_C_OnStatChanged final
{
public:
	class FString                                 StatID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_OnStatChanged) == 0x000008, "Wrong alignment on W_Stats_List_C_OnStatChanged");
static_assert(sizeof(W_Stats_List_C_OnStatChanged) == 0x000010, "Wrong size on W_Stats_List_C_OnStatChanged");
static_assert(offsetof(W_Stats_List_C_OnStatChanged, StatID) == 0x000000, "Member 'W_Stats_List_C_OnStatChanged::StatID' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.PopulateStats
// 0x0078 (0x0078 - 0x0000)
struct W_Stats_List_C_PopulateStats final
{
public:
	struct FDataTableRowHandle                    StatRow;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, NoDestructor)
	class FString                                 CurrentStatID;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ColumnCount;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       CallFunc_CreateComparisonValueEntry_ValueTextWidget; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               CallFunc_CreateLabel_LabelOverlay;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       CallFunc_CreateValueEntry_ValueTextWidget;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0060(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_PopulateStats) == 0x000008, "Wrong alignment on W_Stats_List_C_PopulateStats");
static_assert(sizeof(W_Stats_List_C_PopulateStats) == 0x000078, "Wrong size on W_Stats_List_C_PopulateStats");
static_assert(offsetof(W_Stats_List_C_PopulateStats, StatRow) == 0x000000, "Member 'W_Stats_List_C_PopulateStats::StatRow' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, CurrentStatID) == 0x000010, "Member 'W_Stats_List_C_PopulateStats::CurrentStatID' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, ColumnCount) == 0x000020, "Member 'W_Stats_List_C_PopulateStats::ColumnCount' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, Temp_byte_Variable) == 0x000024, "Member 'W_Stats_List_C_PopulateStats::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, Temp_byte_Variable_1) == 0x000025, "Member 'W_Stats_List_C_PopulateStats::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, Temp_bool_Variable) == 0x000026, "Member 'W_Stats_List_C_PopulateStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, Temp_int_Array_Index_Variable) == 0x000028, "Member 'W_Stats_List_C_PopulateStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, CallFunc_CreateComparisonValueEntry_ValueTextWidget) == 0x000030, "Member 'W_Stats_List_C_PopulateStats::CallFunc_CreateComparisonValueEntry_ValueTextWidget' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, K2Node_Select_Default) == 0x000038, "Member 'W_Stats_List_C_PopulateStats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, CallFunc_CreateLabel_LabelOverlay) == 0x000040, "Member 'W_Stats_List_C_PopulateStats::CallFunc_CreateLabel_LabelOverlay' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'W_Stats_List_C_PopulateStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, CallFunc_CreateValueEntry_ValueTextWidget) == 0x000050, "Member 'W_Stats_List_C_PopulateStats::CallFunc_CreateValueEntry_ValueTextWidget' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'W_Stats_List_C_PopulateStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'W_Stats_List_C_PopulateStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, CallFunc_Array_Get_Item) == 0x000060, "Member 'W_Stats_List_C_PopulateStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'W_Stats_List_C_PopulateStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_PopulateStats, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000071, "Member 'W_Stats_List_C_PopulateStats::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_List_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_PreConstruct) == 0x000001, "Wrong alignment on W_Stats_List_C_PreConstruct");
static_assert(sizeof(W_Stats_List_C_PreConstruct) == 0x000001, "Wrong size on W_Stats_List_C_PreConstruct");
static_assert(offsetof(W_Stats_List_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_Stats_List_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.Reveal
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_List_C_Reveal final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_Reveal) == 0x000008, "Wrong alignment on W_Stats_List_C_Reveal");
static_assert(sizeof(W_Stats_List_C_Reveal) == 0x000008, "Wrong size on W_Stats_List_C_Reveal");
static_assert(offsetof(W_Stats_List_C_Reveal, Delay) == 0x000000, "Member 'W_Stats_List_C_Reveal::Delay' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct W_Stats_List_C_SetInputMode final
{
public:
	bool                                          IsGamepad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_SetInputMode) == 0x000001, "Wrong alignment on W_Stats_List_C_SetInputMode");
static_assert(sizeof(W_Stats_List_C_SetInputMode) == 0x000001, "Wrong size on W_Stats_List_C_SetInputMode");
static_assert(offsetof(W_Stats_List_C_SetInputMode, IsGamepad) == 0x000000, "Member 'W_Stats_List_C_SetInputMode::IsGamepad' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.UpdateCompareValueEntry
// 0x0158 (0x0158 - 0x0000)
struct W_Stats_List_C_UpdateCompareValueEntry final
{
public:
	class FString                                 StatID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       UpdatedText;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue_2;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStatNumeric_ReturnValue;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFriendStatString_ReturnValue;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       CallFunc_Map_Find_Value;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A8(0x0018)()
	int64                                         CallFunc_GetFriendStatValue_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0018)()
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x00E0(0x0018)()
	class FText                                   CallFunc_FormatPlaytime_Result;                    // 0x00F8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0110(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0128(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0140(0x0018)()
};
static_assert(alignof(W_Stats_List_C_UpdateCompareValueEntry) == 0x000008, "Wrong alignment on W_Stats_List_C_UpdateCompareValueEntry");
static_assert(sizeof(W_Stats_List_C_UpdateCompareValueEntry) == 0x000158, "Wrong size on W_Stats_List_C_UpdateCompareValueEntry");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, StatID) == 0x000000, "Member 'W_Stats_List_C_UpdateCompareValueEntry::StatID' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, UpdatedText) == 0x000010, "Member 'W_Stats_List_C_UpdateCompareValueEntry::UpdatedText' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, Temp_bool_Variable) == 0x000018, "Member 'W_Stats_List_C_UpdateCompareValueEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, Temp_text_Variable) == 0x000020, "Member 'W_Stats_List_C_UpdateCompareValueEntry::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, Temp_bool_Variable_1) == 0x000038, "Member 'W_Stats_List_C_UpdateCompareValueEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, Temp_bool_Variable_2) == 0x000039, "Member 'W_Stats_List_C_UpdateCompareValueEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, Temp_text_Variable_1) == 0x000040, "Member 'W_Stats_List_C_UpdateCompareValueEntry::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, Temp_bool_Variable_3) == 0x000058, "Member 'W_Stats_List_C_UpdateCompareValueEntry::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_GetStatSubsystem_ReturnValue) == 0x000060, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_GetStatSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_Array_Contains_ReturnValue) == 0x000068, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_GetStatSubsystem_ReturnValue_1) == 0x000070, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_GetStatSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_GetStatSubsystem_ReturnValue_2) == 0x000078, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_GetStatSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_IsStatNumeric_ReturnValue) == 0x000081, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_IsStatNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_GetFriendStatString_ReturnValue) == 0x000088, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_GetFriendStatString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_Map_Find_Value) == 0x000098, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_Map_Find_ReturnValue) == 0x0000A0, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_IsEmpty_ReturnValue) == 0x0000A1, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A8, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_GetFriendStatValue_ReturnValue) == 0x0000C0, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_GetFriendStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, K2Node_Select_Default) == 0x0000C8, "Member 'W_Stats_List_C_UpdateCompareValueEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_Conv_Int64ToText_ReturnValue) == 0x0000E0, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, CallFunc_FormatPlaytime_Result) == 0x0000F8, "Member 'W_Stats_List_C_UpdateCompareValueEntry::CallFunc_FormatPlaytime_Result' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, K2Node_Select_Default_1) == 0x000110, "Member 'W_Stats_List_C_UpdateCompareValueEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, K2Node_Select_Default_2) == 0x000128, "Member 'W_Stats_List_C_UpdateCompareValueEntry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateCompareValueEntry, K2Node_Select_Default_3) == 0x000140, "Member 'W_Stats_List_C_UpdateCompareValueEntry::K2Node_Select_Default_3' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.UpdateValueEntry
// 0x0160 (0x0160 - 0x0000)
struct W_Stats_List_C_UpdateValueEntry final
{
public:
	class FString                                 StatID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       UpdatedText;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStatSubsystem*                         CallFunc_GetStatSubsystem_ReturnValue_2;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStatNumeric_ReturnValue;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStatValue_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       CallFunc_Map_Find_Value;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x00A0(0x0018)()
	class FText                                   CallFunc_FormatPlaytime_Result;                    // 0x00B8(0x0018)()
	class FString                                 CallFunc_GetStatString_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0100(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0118(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0130(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0148(0x0018)()
};
static_assert(alignof(W_Stats_List_C_UpdateValueEntry) == 0x000008, "Wrong alignment on W_Stats_List_C_UpdateValueEntry");
static_assert(sizeof(W_Stats_List_C_UpdateValueEntry) == 0x000160, "Wrong size on W_Stats_List_C_UpdateValueEntry");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, StatID) == 0x000000, "Member 'W_Stats_List_C_UpdateValueEntry::StatID' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, UpdatedText) == 0x000010, "Member 'W_Stats_List_C_UpdateValueEntry::UpdatedText' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, Temp_bool_Variable) == 0x000018, "Member 'W_Stats_List_C_UpdateValueEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, Temp_text_Variable) == 0x000020, "Member 'W_Stats_List_C_UpdateValueEntry::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, Temp_bool_Variable_1) == 0x000038, "Member 'W_Stats_List_C_UpdateValueEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, Temp_bool_Variable_2) == 0x000039, "Member 'W_Stats_List_C_UpdateValueEntry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, Temp_text_Variable_1) == 0x000040, "Member 'W_Stats_List_C_UpdateValueEntry::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, Temp_bool_Variable_3) == 0x000058, "Member 'W_Stats_List_C_UpdateValueEntry::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_GetStatSubsystem_ReturnValue) == 0x000060, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_GetStatSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_Array_Contains_ReturnValue) == 0x000068, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_GetStatSubsystem_ReturnValue_1) == 0x000070, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_GetStatSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_GetStatSubsystem_ReturnValue_2) == 0x000078, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_GetStatSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_IsStatNumeric_ReturnValue) == 0x000081, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_IsStatNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_GetStatValue_ReturnValue) == 0x000088, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_Map_Find_Value) == 0x000090, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_Conv_Int64ToText_ReturnValue) == 0x0000A0, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_FormatPlaytime_Result) == 0x0000B8, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_FormatPlaytime_Result' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_GetStatString_ReturnValue) == 0x0000D0, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_GetStatString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, K2Node_Select_Default) == 0x0000E0, "Member 'W_Stats_List_C_UpdateValueEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_IsEmpty_ReturnValue) == 0x0000F8, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, CallFunc_Conv_StringToText_ReturnValue) == 0x000100, "Member 'W_Stats_List_C_UpdateValueEntry::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, K2Node_Select_Default_1) == 0x000118, "Member 'W_Stats_List_C_UpdateValueEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, K2Node_Select_Default_2) == 0x000130, "Member 'W_Stats_List_C_UpdateValueEntry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_Stats_List_C_UpdateValueEntry, K2Node_Select_Default_3) == 0x000148, "Member 'W_Stats_List_C_UpdateValueEntry::K2Node_Select_Default_3' has a wrong offset!");

// Function W_Stats_List.W_Stats_List_C.GetFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct W_Stats_List_C_GetFocusTarget final
{
public:
	class UWidget*                                Focus;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Stats_List_C_GetFocusTarget) == 0x000008, "Wrong alignment on W_Stats_List_C_GetFocusTarget");
static_assert(sizeof(W_Stats_List_C_GetFocusTarget) == 0x000008, "Wrong size on W_Stats_List_C_GetFocusTarget");
static_assert(offsetof(W_Stats_List_C_GetFocusTarget, Focus) == 0x000000, "Member 'W_Stats_List_C_GetFocusTarget::Focus' has a wrong offset!");

}

