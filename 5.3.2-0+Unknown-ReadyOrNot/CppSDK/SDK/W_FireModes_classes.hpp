#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FireModes

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_FireModes.W_FireModes_C
// 0x0068 (0x0328 - 0x02C0)
class UW_FireModes_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_FadeOut;                                      // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_FireMode_C*                          FireMode_Auto;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_FireMode_C*                          FireMode_Burst;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_FireMode_C*                          FireMode_Safe;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_FireMode_C*                          FireMode_Single;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        FireMode_StyleSwitcher;                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FireMode_Text;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           FireModeStates_Container;                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EFireMode                                     CurrentFireMode;                                   // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FadeOutTime;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TH_FadeOut;                                        // 0x0320(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Deselect(class UW_FireMode_C* FireModeWidget);
	void DeselectAll();
	void DeselectAllExpect(class UW_FireMode_C* FireModeWidget);
	void ExecuteUbergraph_W_FireModes(int32 EntryPoint);
	void FadeOut();
	void OnWeaponEquipped(class ABaseWeapon* NewWeapon);
	void Select(class UW_FireMode_C* FireModeWidget);
	void SetFireMode(EFireMode newFireMode);
	void SetStyle(int32 Option);
	void UpdateAvailableFireModes(class ABaseWeapon* Weapon);

	void IsFadeOutTimerActive(bool* Return_Value) const;
	void IsFadingOut(bool* Return_Value) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_FireModes_C">();
	}
	static class UW_FireModes_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_FireModes_C>();
	}
};
static_assert(alignof(UW_FireModes_C) == 0x000008, "Wrong alignment on UW_FireModes_C");
static_assert(sizeof(UW_FireModes_C) == 0x000328, "Wrong size on UW_FireModes_C");
static_assert(offsetof(UW_FireModes_C, UberGraphFrame) == 0x0002C0, "Member 'UW_FireModes_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, Anim_FadeOut) == 0x0002C8, "Member 'UW_FireModes_C::Anim_FadeOut' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, FireMode_Auto) == 0x0002D0, "Member 'UW_FireModes_C::FireMode_Auto' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, FireMode_Burst) == 0x0002D8, "Member 'UW_FireModes_C::FireMode_Burst' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, FireMode_Safe) == 0x0002E0, "Member 'UW_FireModes_C::FireMode_Safe' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, FireMode_Single) == 0x0002E8, "Member 'UW_FireModes_C::FireMode_Single' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, FireMode_StyleSwitcher) == 0x0002F0, "Member 'UW_FireModes_C::FireMode_StyleSwitcher' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, FireMode_Text) == 0x0002F8, "Member 'UW_FireModes_C::FireMode_Text' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, FireModeStates_Container) == 0x000300, "Member 'UW_FireModes_C::FireModeStates_Container' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, InvalidationBox_0) == 0x000308, "Member 'UW_FireModes_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, CurrentFireMode) == 0x000310, "Member 'UW_FireModes_C::CurrentFireMode' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, FadeOutTime) == 0x000318, "Member 'UW_FireModes_C::FadeOutTime' has a wrong offset!");
static_assert(offsetof(UW_FireModes_C, TH_FadeOut) == 0x000320, "Member 'UW_FireModes_C::TH_FadeOut' has a wrong offset!");

}

