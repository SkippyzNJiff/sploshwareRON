#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Messenger

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet_Messenger.W_PreMission_Tablet_Messenger_C
// 0x01C0 (0x05D0 - 0x0410)
class UW_PreMission_Tablet_Messenger_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animToast;                                         // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       animClose;                                         // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Button_C*                            btn_Messenger;                                     // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            btn_SendMessage;                                   // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ChatEntry;                                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMultiLineEditableTextBox*              ChatEntryBox;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Button_C*                            GamepadMessengerButton;                            // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 icn_messenger;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 icn_Send;                                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                MessageButton;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             scroll_Messages;                                   // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Message;                                       // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_MessageCount;                                  // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_SenderName;                                    // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Messages;                                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         MessageCount;                                      // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MessengerOpen;                                     // 0x049C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRChatMessage                          Message;                                           // 0x04A0(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         UnreadMessageCount;                                // 0x0518(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasUnreadMessages;                                 // 0x051C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToastHidden;                                       // 0x051D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51E[0x2];                                      // 0x051E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnMessengerClose;                                  // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnMessengerOpen;                                   // 0x0530(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        MessageSpacing;                                    // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_PreMission_Tablet_MessengerMessage_C* LastMessage;                                      // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SameSender;                                        // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstMessage;                                      // 0x0551(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552[0x6];                                      // 0x0552(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             MessageIcon;                                       // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             UnreadMessageIcon;                                 // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnreadMessageButtonColor;                          // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           MessageButtonColor;                                // 0x0578(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OpenButtonColor;                                   // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UserScrolled;                                      // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ToastTimer;                                        // 0x05A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreNextTextChange;                              // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CachedText;                                        // 0x05B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsUsingGamepad;                                    // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddChatMessage(const struct FRChatMessage& Message_0);
	void BndEvt__W_PreMission_Tablet_Messenger_btn_Messenger_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_PreMission_Tablet_Messenger_btn_Messenger_K2Node_ComponentBoundEvent_4_Hovered__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_PreMission_Tablet_Messenger_btn_SendMessage_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature(class UW_Button_C* Button);
	void BndEvt__W_PreMission_Tablet_Messenger_ChatEntryBox_K2Node_ComponentBoundEvent_1_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__W_PreMission_Tablet_Messenger_ChatEntryBox_K2Node_ComponentBoundEvent_3_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void CloseMessenger();
	void Construct();
	void ExecuteUbergraph_W_PreMission_Tablet_Messenger(int32 EntryPoint);
	void GetIsSelf(class AReadyOrNotPlayerState* PlayerState, bool* IsSelf);
	void HideToast();
	void NewMessage(const struct FRChatMessage& Message_0);
	struct FEventReply OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent);
	void OnInputChange(ECommonInputType bNewInputType);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OpenMessenger(bool FocusChatBox);
	void PopulateChatHistory();
	void PreConstruct(bool IsDesignTime);
	void SendMessage(const class FText& MessageText);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ToggleMessenger();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_Messenger_C">();
	}
	static class UW_PreMission_Tablet_Messenger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_Messenger_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_Messenger_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_Messenger_C");
static_assert(sizeof(UW_PreMission_Tablet_Messenger_C) == 0x0005D0, "Wrong size on UW_PreMission_Tablet_Messenger_C");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, UberGraphFrame) == 0x000410, "Member 'UW_PreMission_Tablet_Messenger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, animToast) == 0x000418, "Member 'UW_PreMission_Tablet_Messenger_C::animToast' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, animClose) == 0x000420, "Member 'UW_PreMission_Tablet_Messenger_C::animClose' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, btn_Messenger) == 0x000428, "Member 'UW_PreMission_Tablet_Messenger_C::btn_Messenger' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, btn_SendMessage) == 0x000430, "Member 'UW_PreMission_Tablet_Messenger_C::btn_SendMessage' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, ChatEntry) == 0x000438, "Member 'UW_PreMission_Tablet_Messenger_C::ChatEntry' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, ChatEntryBox) == 0x000440, "Member 'UW_PreMission_Tablet_Messenger_C::ChatEntryBox' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, CommonActionWidget) == 0x000448, "Member 'UW_PreMission_Tablet_Messenger_C::CommonActionWidget' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, GamepadMessengerButton) == 0x000450, "Member 'UW_PreMission_Tablet_Messenger_C::GamepadMessengerButton' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, icn_messenger) == 0x000458, "Member 'UW_PreMission_Tablet_Messenger_C::icn_messenger' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, icn_Send) == 0x000460, "Member 'UW_PreMission_Tablet_Messenger_C::icn_Send' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, MessageButton) == 0x000468, "Member 'UW_PreMission_Tablet_Messenger_C::MessageButton' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, scroll_Messages) == 0x000470, "Member 'UW_PreMission_Tablet_Messenger_C::scroll_Messages' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, txt_Message) == 0x000478, "Member 'UW_PreMission_Tablet_Messenger_C::txt_Message' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, txt_MessageCount) == 0x000480, "Member 'UW_PreMission_Tablet_Messenger_C::txt_MessageCount' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, txt_SenderName) == 0x000488, "Member 'UW_PreMission_Tablet_Messenger_C::txt_SenderName' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, VB_Messages) == 0x000490, "Member 'UW_PreMission_Tablet_Messenger_C::VB_Messages' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, MessageCount) == 0x000498, "Member 'UW_PreMission_Tablet_Messenger_C::MessageCount' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, MessengerOpen) == 0x00049C, "Member 'UW_PreMission_Tablet_Messenger_C::MessengerOpen' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, Message) == 0x0004A0, "Member 'UW_PreMission_Tablet_Messenger_C::Message' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, UnreadMessageCount) == 0x000518, "Member 'UW_PreMission_Tablet_Messenger_C::UnreadMessageCount' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, HasUnreadMessages) == 0x00051C, "Member 'UW_PreMission_Tablet_Messenger_C::HasUnreadMessages' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, ToastHidden) == 0x00051D, "Member 'UW_PreMission_Tablet_Messenger_C::ToastHidden' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, OnMessengerClose) == 0x000520, "Member 'UW_PreMission_Tablet_Messenger_C::OnMessengerClose' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, OnMessengerOpen) == 0x000530, "Member 'UW_PreMission_Tablet_Messenger_C::OnMessengerOpen' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, MessageSpacing) == 0x000540, "Member 'UW_PreMission_Tablet_Messenger_C::MessageSpacing' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, LastMessage) == 0x000548, "Member 'UW_PreMission_Tablet_Messenger_C::LastMessage' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, SameSender) == 0x000550, "Member 'UW_PreMission_Tablet_Messenger_C::SameSender' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, FirstMessage) == 0x000551, "Member 'UW_PreMission_Tablet_Messenger_C::FirstMessage' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, MessageIcon) == 0x000558, "Member 'UW_PreMission_Tablet_Messenger_C::MessageIcon' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, UnreadMessageIcon) == 0x000560, "Member 'UW_PreMission_Tablet_Messenger_C::UnreadMessageIcon' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, UnreadMessageButtonColor) == 0x000568, "Member 'UW_PreMission_Tablet_Messenger_C::UnreadMessageButtonColor' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, MessageButtonColor) == 0x000578, "Member 'UW_PreMission_Tablet_Messenger_C::MessageButtonColor' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, OpenButtonColor) == 0x000588, "Member 'UW_PreMission_Tablet_Messenger_C::OpenButtonColor' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, UserScrolled) == 0x000598, "Member 'UW_PreMission_Tablet_Messenger_C::UserScrolled' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, ToastTimer) == 0x0005A0, "Member 'UW_PreMission_Tablet_Messenger_C::ToastTimer' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, IgnoreNextTextChange) == 0x0005A8, "Member 'UW_PreMission_Tablet_Messenger_C::IgnoreNextTextChange' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, CachedText) == 0x0005B0, "Member 'UW_PreMission_Tablet_Messenger_C::CachedText' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Messenger_C, IsUsingGamepad) == 0x0005C8, "Member 'UW_PreMission_Tablet_Messenger_C::IsUsingGamepad' has a wrong offset!");

}

