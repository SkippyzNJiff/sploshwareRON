#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PreMission_Tablet_Objectives_Entry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PreMission_Tablet_Objectives_Entry.W_PreMission_Tablet_Objectives_Entry_C
// 0x0088 (0x0348 - 0x02C0)
class UW_PreMission_Tablet_Objectives_Entry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCheckBox*                              CheckBox_14;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Description;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Objective;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Text_C*                              txt_Objective_Count;                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_TabletText_C*                        W_TabletText_Description;                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_TabletText_C*                        W_TabletText_Objective;                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_TabletText_C*                        W_TabletText_ObjectiveCount;                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AObjective*                             Objective;                                         // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UClass*                                 ObjectiveClass;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   ObjectiveName;                                     // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ObjectiveDescription;                              // 0x0328(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	EObjectiveStatus                              ObjectiveStatus;                                   // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsBombDefusal;                                    // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_PreMission_Tablet_Objectives_Entry(int32 EntryPoint);
	void OnObjectiveUpdated(class AObjective* Objective_0);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateObjectiveInfo();
	void UpdateObjectiveState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PreMission_Tablet_Objectives_Entry_C">();
	}
	static class UW_PreMission_Tablet_Objectives_Entry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PreMission_Tablet_Objectives_Entry_C>();
	}
};
static_assert(alignof(UW_PreMission_Tablet_Objectives_Entry_C) == 0x000008, "Wrong alignment on UW_PreMission_Tablet_Objectives_Entry_C");
static_assert(sizeof(UW_PreMission_Tablet_Objectives_Entry_C) == 0x000348, "Wrong size on UW_PreMission_Tablet_Objectives_Entry_C");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, UberGraphFrame) == 0x0002C0, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, CheckBox_14) == 0x0002C8, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::CheckBox_14' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, txt_Description) == 0x0002D0, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::txt_Description' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, txt_Objective) == 0x0002D8, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::txt_Objective' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, txt_Objective_Count) == 0x0002E0, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::txt_Objective_Count' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, W_TabletText_Description) == 0x0002E8, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::W_TabletText_Description' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, W_TabletText_Objective) == 0x0002F0, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::W_TabletText_Objective' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, W_TabletText_ObjectiveCount) == 0x0002F8, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::W_TabletText_ObjectiveCount' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, Objective) == 0x000300, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::Objective' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, ObjectiveClass) == 0x000308, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::ObjectiveClass' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, ObjectiveName) == 0x000310, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::ObjectiveName' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, ObjectiveDescription) == 0x000328, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::ObjectiveDescription' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, ObjectiveStatus) == 0x000340, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::ObjectiveStatus' has a wrong offset!");
static_assert(offsetof(UW_PreMission_Tablet_Objectives_Entry_C, bIsBombDefusal) == 0x000341, "Member 'UW_PreMission_Tablet_Objectives_Entry_C::bIsBombDefusal' has a wrong offset!");

}

