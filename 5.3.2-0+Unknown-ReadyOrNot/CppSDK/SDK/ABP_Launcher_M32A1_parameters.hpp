#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Launcher_M32A1

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_Launcher_M32A1.ABP_Launcher_M32A1_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Launcher_M32A1_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Launcher_M32A1_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Launcher_M32A1_C_AnimGraph");
static_assert(sizeof(ABP_Launcher_M32A1_C_AnimGraph) == 0x000010, "Wrong size on ABP_Launcher_M32A1_C_AnimGraph");
static_assert(offsetof(ABP_Launcher_M32A1_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Launcher_M32A1_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_Launcher_M32A1.ABP_Launcher_M32A1_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Launcher_M32A1_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Launcher_M32A1_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Launcher_M32A1_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Launcher_M32A1_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Launcher_M32A1_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Launcher_M32A1_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Launcher_M32A1_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Launcher_M32A1.ABP_Launcher_M32A1_C.ExecuteUbergraph_ABP_Launcher_M32A1
// 0x0068 (0x0068 - 0x0000)
struct ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseMagazineWeapon*                    K2Node_DynamicCast_AsBase_Magazine_Weapon;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1) == 0x000008, "Wrong alignment on ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1");
static_assert(sizeof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1) == 0x000068, "Wrong size on ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, EntryPoint) == 0x000000, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, CallFunc_FInterpTo_ReturnValue) == 0x000010, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, CallFunc_MakeRotator_ReturnValue) == 0x000020, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, Temp_int_Variable) == 0x000038, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, CallFunc_GetOwningActor_ReturnValue) == 0x000040, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, K2Node_DynamicCast_AsBase_Magazine_Weapon) == 0x000048, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::K2Node_DynamicCast_AsBase_Magazine_Weapon' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x000058, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000060, "Member 'ABP_Launcher_M32A1_C_ExecuteUbergraph_ABP_Launcher_M32A1::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function ABP_Launcher_M32A1.ABP_Launcher_M32A1_C.SpawnStaticShellWorld
// 0x00A0 (0x00A0 - 0x0000)
struct ABP_Launcher_M32A1_C_SpawnStaticShellWorld final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsEmptyShell;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSmokeShell_0;                                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CurrentShellSpawnClass;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ShellActor_C*                       K2Node_DynamicCast_AsBP_Shell_Actor;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld) == 0x000010, "Wrong alignment on ABP_Launcher_M32A1_C_SpawnStaticShellWorld");
static_assert(sizeof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld) == 0x0000A0, "Wrong size on ABP_Launcher_M32A1_C_SpawnStaticShellWorld");
static_assert(offsetof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld, BoneName) == 0x000000, "Member 'ABP_Launcher_M32A1_C_SpawnStaticShellWorld::BoneName' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld, bIsEmptyShell) == 0x000008, "Member 'ABP_Launcher_M32A1_C_SpawnStaticShellWorld::bIsEmptyShell' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld, bIsSmokeShell_0) == 0x000009, "Member 'ABP_Launcher_M32A1_C_SpawnStaticShellWorld::bIsSmokeShell_0' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld, CurrentShellSpawnClass) == 0x000010, "Member 'ABP_Launcher_M32A1_C_SpawnStaticShellWorld::CurrentShellSpawnClass' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld, CallFunc_GetSocketTransform_ReturnValue) == 0x000020, "Member 'ABP_Launcher_M32A1_C_SpawnStaticShellWorld::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'ABP_Launcher_M32A1_C_SpawnStaticShellWorld::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'ABP_Launcher_M32A1_C_SpawnStaticShellWorld::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld, K2Node_DynamicCast_AsBP_Shell_Actor) == 0x000090, "Member 'ABP_Launcher_M32A1_C_SpawnStaticShellWorld::K2Node_DynamicCast_AsBP_Shell_Actor' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_SpawnStaticShellWorld, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'ABP_Launcher_M32A1_C_SpawnStaticShellWorld::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_Launcher_M32A1.ABP_Launcher_M32A1_C.UpdateShellStatus
// 0x0008 (0x0008 - 0x0000)
struct ABP_Launcher_M32A1_C_UpdateShellStatus final
{
public:
	int32                                         ShellIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Launcher_M32A1_C_UpdateShellStatus) == 0x000004, "Wrong alignment on ABP_Launcher_M32A1_C_UpdateShellStatus");
static_assert(sizeof(ABP_Launcher_M32A1_C_UpdateShellStatus) == 0x000008, "Wrong size on ABP_Launcher_M32A1_C_UpdateShellStatus");
static_assert(offsetof(ABP_Launcher_M32A1_C_UpdateShellStatus, ShellIndex) == 0x000000, "Member 'ABP_Launcher_M32A1_C_UpdateShellStatus::ShellIndex' has a wrong offset!");
static_assert(offsetof(ABP_Launcher_M32A1_C_UpdateShellStatus, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'ABP_Launcher_M32A1_C_UpdateShellStatus::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}

