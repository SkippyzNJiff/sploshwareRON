#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Briefing_Media_AudioEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ReadyOrNot_structs.hpp"
#include "ReadyOrNot_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Briefing_Media_AudioEntry.W_Briefing_Media_AudioEntry_C
// 0x0110 (0x16F0 - 0x15E0)
class UW_Briefing_Media_AudioEntry_C final : public UCommonButtonImplementation
{
public:
	uint8                                         Pad_15D8[0x8];                                     // 0x15D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x15E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       animPlaying;                                       // 0x15E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 img_icon;                                          // 0x15F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   rtxt_Transcript;                                   // 0x15F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UReadyOrNotCommonRichTextBlock*         rtxt_Transcript2;                                  // 0x1600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Description;                                   // 0x1608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       txt_Name;                                          // 0x1610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x1618(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Description;                                       // 0x1630(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Transcript;                                        // 0x1648(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFMODEvent*                             FMODEvent;                                         // 0x1660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlaying;                                          // 0x1668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1669[0x7];                                     // 0x1669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionAudio                          MissionAudioData;                                  // 0x1670(0x0060)(Edit, BlueprintVisible, ExposeOnSpawn)
	TMulticastInlineDelegate<void(class UW_Briefing_Media_AudioEntry_C* AudioEntry)> OnClick;        // 0x16D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bHovered;                                          // 0x16E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPressed;                                          // 0x16E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelected;                                         // 0x16E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnClicked();
	void BP_OnHovered();
	void BP_OnPressed();
	void BP_OnReleased();
	void BP_OnUnhovered();
	void Construct();
	void Deselect();
	void ExecuteUbergraph_W_Briefing_Media_AudioEntry(int32 EntryPoint);
	void GetIconColor(struct FLinearColor* Color);
	void GetTextColor(struct FSlateColor* Color);
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void PreConstruct(bool IsDesignTime);
	void Select();
	void SetHoverState(bool Hovered);
	void SetIsPlaying(bool IsPlaying);
	void SetPressedState(bool Pressed);
	void UpdateText();
	void UpdateVisualState(bool Hovered, bool Pressed, bool Selected, bool Playing);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Briefing_Media_AudioEntry_C">();
	}
	static class UW_Briefing_Media_AudioEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Briefing_Media_AudioEntry_C>();
	}
};
static_assert(alignof(UW_Briefing_Media_AudioEntry_C) == 0x000010, "Wrong alignment on UW_Briefing_Media_AudioEntry_C");
static_assert(sizeof(UW_Briefing_Media_AudioEntry_C) == 0x0016F0, "Wrong size on UW_Briefing_Media_AudioEntry_C");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, UberGraphFrame) == 0x0015E0, "Member 'UW_Briefing_Media_AudioEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, animPlaying) == 0x0015E8, "Member 'UW_Briefing_Media_AudioEntry_C::animPlaying' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, img_icon) == 0x0015F0, "Member 'UW_Briefing_Media_AudioEntry_C::img_icon' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, rtxt_Transcript) == 0x0015F8, "Member 'UW_Briefing_Media_AudioEntry_C::rtxt_Transcript' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, rtxt_Transcript2) == 0x001600, "Member 'UW_Briefing_Media_AudioEntry_C::rtxt_Transcript2' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, txt_Description) == 0x001608, "Member 'UW_Briefing_Media_AudioEntry_C::txt_Description' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, txt_Name) == 0x001610, "Member 'UW_Briefing_Media_AudioEntry_C::txt_Name' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, Title) == 0x001618, "Member 'UW_Briefing_Media_AudioEntry_C::Title' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, Description) == 0x001630, "Member 'UW_Briefing_Media_AudioEntry_C::Description' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, Transcript) == 0x001648, "Member 'UW_Briefing_Media_AudioEntry_C::Transcript' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, FMODEvent) == 0x001660, "Member 'UW_Briefing_Media_AudioEntry_C::FMODEvent' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, bPlaying) == 0x001668, "Member 'UW_Briefing_Media_AudioEntry_C::bPlaying' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, MissionAudioData) == 0x001670, "Member 'UW_Briefing_Media_AudioEntry_C::MissionAudioData' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, OnClick) == 0x0016D0, "Member 'UW_Briefing_Media_AudioEntry_C::OnClick' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, bHovered) == 0x0016E0, "Member 'UW_Briefing_Media_AudioEntry_C::bHovered' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, bPressed) == 0x0016E1, "Member 'UW_Briefing_Media_AudioEntry_C::bPressed' has a wrong offset!");
static_assert(offsetof(UW_Briefing_Media_AudioEntry_C, bSelected) == 0x0016E2, "Member 'UW_Briefing_Media_AudioEntry_C::bSelected' has a wrong offset!");

}

